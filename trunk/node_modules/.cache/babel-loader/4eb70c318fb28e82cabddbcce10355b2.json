{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\orders\\business\\purchase\\joinLibraryOrder_list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\orders\\business\\purchase\\joinLibraryOrder_list.vue","mtime":1576511796649},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { formatTimestamp } from \"@/utils/date\";\n/**\r\n * 基本管理\r\n */\n\nexport default {\n  data: function data() {\n    return {\n      //得到权限数据Code\n      codeData: [],\n      filtersData: {\n        cateId: \"\",\n        //产品分类ID\n        pageIndex: 1,\n        //当前页码\n        pageSize: 10,\n        //每页数量\n        valid: null,\n        //有效状态\n        filter: \"\",\n        //搜索关键字\n        startDate: \"\",\n        endDate: \"\",\n        arrivalStatus: \"\",\n        //到货状态\n        joinLibraryStatus: \"\",\n        //入库状态\n        receivingLibrary: \"\",\n        //收货仓库\n        supplier: \"\",\n        //供应商\n        startTime: \"\",\n        endTime: \"\"\n      },\n      //     NOT_COMPLETE(0,\"未完成\"),\n      // ARRIVAL(1,\"到货中\"),\n      //     COMPLETE(2,\"已完成\"),\n      //     DELETE(3,\"已作废\"),\n      options1: [{\n        value: \"0\",\n        label: \"未完成\"\n      }, {\n        value: \"1\",\n        label: \"到货中\"\n      }, {\n        value: \"2\",\n        label: \"已完成\"\n      }, {\n        value: \"3\",\n        label: \"已作废\"\n      }],\n      // NOT_WAREHOUSE(0,\"未入库\"),\n      //     PARTIAL_WAREHOUSE(1,\"部分入库\"),\n      // WAREHOUSED(2,\"全部入库\"),\n      //     OVERDUE_WAREHOUSE(3,\"入库超收\");\n      options2: [{\n        value: \"0\",\n        label: \"未入库\"\n      }, {\n        value: \"1\",\n        label: \"部分入库\"\n      }, {\n        value: \"2\",\n        label: \"全部入库\"\n      }, {\n        value: \"3\",\n        label: \"入库超收\"\n      }],\n      tableListData: [],\n      total: null,\n      //创建时间数组\n      datefilter: [],\n      //table中checkBox的状态\n      multipleSelection: [],\n      receivingLibraries: [],\n      //收货仓库集合\n      suppliers: [] //供应商集合\n\n    };\n  },\n  // 过滤器\n  filters: {\n    //过滤入库状态\n    fiterWarehouseType: function fiterWarehouseType(val) {\n      switch (val) {\n        case 501:\n          return '未入库';\n          break;\n\n        case 502:\n          return '部分入库';\n          break;\n\n        case 503:\n          return '全部入库';\n          break;\n\n        case 504:\n          return '超收入库';\n          break;\n      }\n    }\n  },\n  created: function created() {\n    this.getTableList();\n    this.findReceivingLibraries();\n    this.findSuppliers();\n    this.getCodeLimitToBtnStatus(this.$route.meta.currentid);\n  },\n  methods: {\n    // 得到code码，用来限制是否显示按钮\n    getCodeLimitToBtnStatus: function getCodeLimitToBtnStatus(codeId) {\n      var _this = this;\n\n      this.request(this.api.user.crm_userCompany_authList, {\n        menuId: codeId\n      }).then(function (res) {\n        console.log(res);\n        _this.codeData = res;\n      });\n    },\n    //获取列表\n    getTableList: function getTableList() {\n      var _this2 = this;\n\n      this.request(this.api.order.channelPurchaseWarehouseOrder_list, this.filtersData).then(function (res) {\n        console.log(res);\n        _this2.total = res.totalCount;\n        _this2.tableListData = res.data;\n      });\n    },\n    //判断是否可以选中\n    isSelectCheck: function isSelectCheck(row, index) {\n      if (row.orderStatus == 2) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    //选中checkBox的状态\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.multipleSelection = val;\n    },\n    //查看\n    openShowDetails: function openShowDetails(id) {\n      this.$router.push({\n        path: \"/OS/business/purchase/joinLibraryOrder_check\",\n        query: {\n          id: id,\n          type: \"show\"\n        }\n      });\n    },\n    //查询仓库列表\n    findReceivingLibraries: function findReceivingLibraries() {},\n    //查询供应商列表\n    findSuppliers: function findSuppliers() {},\n    //导出\n    exportExcel: function exportExcel() {\n      var _this3 = this;\n\n      console.log(\"导出Excel表格...+++++++++++++++++++\");\n\n      require.ensure([], function () {\n        var _require = require(\"@/vendor/Export2Excel\"),\n            export_json_to_excel = _require.export_json_to_excel;\n\n        var tHeader = [\"入库单号\", \"入库总数\", \"关联到货单\", \"入库仓库\", \"入库类型\", \"入库人\", \"备注\", \"入库时间\"]; // 上面设置Excel的表格第一行的标题\n\n        var filterVal = [\"arrivalNum\", \"arrivalStatus\", \"procureNum\", \"joinLibraryStatus\", \"receivablesTotal\", \"collectTotal\", \"remarks\", \"createTime\"]; // 上面的index、nickName、name是tableData里对象的属性\n\n        var list = _this3.tableListData; //把data里的tableData存到list\n\n        var data = _this3.formatJson(filterVal, list);\n\n        export_json_to_excel(tHeader, data, \"入库表单\");\n      });\n    },\n    formatJson: function formatJson(filterVal, jsonData) {\n      return jsonData.map(function (v) {\n        return filterVal.map(function (j) {\n          return v[j];\n        });\n      });\n    },\n    //查看质检报告\n    findQuality: function findQuality(id) {},\n    //作废\n    deleteItem: function deleteItem(val) {\n      var _this4 = this;\n\n      if (confirm(\"确定作废？\")) {\n        this.postAxios(this.$base.api.arrivalOrder_logicDelete, val).then(function (data) {\n          _this4.getTableList();\n        });\n      }\n    },\n    //搜索\n    handleSearch: function handleSearch() {\n      this.filtersData.pageIndex = 1;\n      this.getTableList();\n    },\n    //清空重置\n    handleResetFilters: function handleResetFilters(formName) {// this.$refs[formName].resetFields();\n      // this.getTableList();\n    },\n    //当前页数修改时发生改变\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.filtersData.pageIndex = val;\n      this.getTableList();\n    },\n    // 每页显示多少条时发生改变\n    handleSizeChange: function handleSizeChange(val) {\n      this.filtersData.pageSize = val;\n      this.getTableList();\n    }\n  }\n};",{"version":3,"sources":["joinLibraryOrder_list.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <!--到货单-->\r\n  <div>\r\n    <div class=\"item-margin\">\r\n      <el-form\r\n        class=\"item-form\"\r\n        :model=\"filtersData\"\r\n        label-width=\"90px\"\r\n        size=\"small\"\r\n        ref=\"filtersForm\"\r\n        inline\r\n      >\r\n        <el-row>\r\n          <el-col>\r\n            <el-form-item prop=\"filter\" label=\"模糊查询：\">\r\n              <el-input class=\"input-w\" placeholder=\"到货单号/采购订单号\" v-model=\"filtersData.filter\"></el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item prop label=\"入库状态：\">\r\n              <el-select class=\"input-w\" placeholder=\"请选择\" v-model=\"filtersData.joinLibraryStatus\">\r\n                <el-option\r\n                  v-for=\"item in options2\"\r\n                  :key=\"item.value\"\r\n                  :label=\"item.label\"\r\n                  :value=\"item.value\"\r\n                ></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n\r\n            <el-form-item prop=\"dateTime\" label=\"创建时间：\">\r\n              <el-date-picker\r\n                class=\"date-picker-div\"\r\n                v-model=\"filtersData.startTime\"\r\n                type=\"date\"\r\n                placeholder=\"开始时间\"\r\n              ></el-date-picker>\r\n              <el-date-picker v-model=\"filtersData.endTime\" type=\"date\" placeholder=\"结束时间\"></el-date-picker>\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button @click=\"handleSearch\" type=\"primary\" plain size=\"small\">搜索</el-button>\r\n              <el-button @click=\"handleResetFilters('filtersForm')\" size=\"small\">重置</el-button>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n      </el-form>\r\n    </div>\r\n    <!--table  -->\r\n    <div class=\"item-margin\">\r\n      <div class=\"item-cont\">\r\n        <el-button-group>\r\n          <el-button size=\"small\" @click=\"exportExcel()\" v-auth=\"codeData\" data-code=\"WRM_EXPORT\">导出</el-button>\r\n        </el-button-group>\r\n      </div>\r\n      <div class=\"item-table\">\r\n        <el-table\r\n          :data=\"tableListData\"\r\n          stripe\r\n          empty-text=\"暂无数据\"\r\n          header-align=\"center\"\r\n          header-row-class-name=\"item-table-header\"\r\n          :highlight-current-row=\"true\"\r\n          @selection-change=\"handleSelectionChange\"\r\n        >\r\n          <el-table-column prop=\"warehouseSn\" align=\"center\" label=\"入库单号\" width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"warehouseQuantity\" align=\"center\" label=\"入库总数\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"arrivalSn\" align=\"center\" label=\"关联到货单\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"warehouse\" align=\"center\" label=\"入库仓库\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"warehouseType\" align=\"center\" label=\"入库类型\" min-width=\"100\">\r\n            <template slot-scope=\"scope\">{{ scope.row.warehouseType | fiterWarehouseType}}</template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"operator\" align=\"center\" label=\"入库人\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"remarks\" align=\"center\" label=\"备注\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"createTime\" align=\"center\" label=\"入库时间\" min-width=\"100\">\r\n            <template slot-scope=\"scope\">{{ scope.row.createTime | timestampToTime}}</template>\r\n          </el-table-column>\r\n          <el-table-column\r\n            fixed=\"right\"\r\n            label-class-name=\"text-center\"\r\n            class-name=\"text-center\"\r\n            align=\"center\"\r\n            label=\"操作\"\r\n            width=\"140\"\r\n          >\r\n            <template slot-scope=\"scope\">\r\n              <el-button\r\n                @click=\"openShowDetails(scope.row.id)\"\r\n                type=\"text\"\r\n                size=\"small\"\r\n                v-auth=\"codeData\"\r\n                data-code=\"WRM_VIEW\"\r\n              >查看</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n        <div class=\"pagination mt-10 mb-20\">\r\n          <el-pagination\r\n            class=\"mr-20\"\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"filtersData.pageIndex\"\r\n            :page-sizes=\"[10,20,30,40,50]\"\r\n            :page-size=\"filtersData.pageSize\"\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=\"total\"\r\n          ></el-pagination>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!--table END  -->\r\n    <!--<tp-class-details :itemParam=\"itemStautsParam\"  @refreshItem=\"refreshList\" ref=\"positionDetailsCpt\"></tp-class-details>-->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { formatTimestamp } from \"@/utils/date\";\r\n/**\r\n * 基本管理\r\n */\r\nexport default {\r\n  data() {\r\n    return {\r\n      //得到权限数据Code\r\n      codeData: [],\r\n      filtersData: {\r\n        cateId: \"\", //产品分类ID\r\n        pageIndex: 1, //当前页码\r\n        pageSize: 10, //每页数量\r\n        valid: null, //有效状态\r\n        filter: \"\", //搜索关键字\r\n        startDate: \"\",\r\n        endDate: \"\",\r\n        arrivalStatus: \"\", //到货状态\r\n        joinLibraryStatus: \"\", //入库状态\r\n        receivingLibrary: \"\", //收货仓库\r\n        supplier: \"\", //供应商\r\n        startTime: \"\",\r\n        endTime: \"\"\r\n      },\r\n      //     NOT_COMPLETE(0,\"未完成\"),\r\n      // ARRIVAL(1,\"到货中\"),\r\n      //     COMPLETE(2,\"已完成\"),\r\n      //     DELETE(3,\"已作废\"),\r\n      options1: [\r\n        {\r\n          value: \"0\",\r\n          label: \"未完成\"\r\n        },\r\n        {\r\n          value: \"1\",\r\n          label: \"到货中\"\r\n        },\r\n        {\r\n          value: \"2\",\r\n          label: \"已完成\"\r\n        },\r\n        {\r\n          value: \"3\",\r\n          label: \"已作废\"\r\n        }\r\n      ],\r\n      // NOT_WAREHOUSE(0,\"未入库\"),\r\n      //     PARTIAL_WAREHOUSE(1,\"部分入库\"),\r\n      // WAREHOUSED(2,\"全部入库\"),\r\n      //     OVERDUE_WAREHOUSE(3,\"入库超收\");\r\n      options2: [\r\n        {\r\n          value: \"0\",\r\n          label: \"未入库\"\r\n        },\r\n        {\r\n          value: \"1\",\r\n          label: \"部分入库\"\r\n        },\r\n        {\r\n          value: \"2\",\r\n          label: \"全部入库\"\r\n        },\r\n        {\r\n          value: \"3\",\r\n          label: \"入库超收\"\r\n        }\r\n      ],\r\n      tableListData: [],\r\n      total: null,\r\n      //创建时间数组\r\n      datefilter: [],\r\n      //table中checkBox的状态\r\n      multipleSelection: [],\r\n      receivingLibraries: [], //收货仓库集合\r\n      suppliers: [] //供应商集合\r\n    };\r\n  },\r\n   // 过滤器\r\n  filters: {\r\n    //过滤入库状态\r\n    fiterWarehouseType(val) {\r\n       switch (val) {\r\n        case 501:\r\n          return '未入库'\r\n          break;\r\n        case 502:\r\n          return '部分入库'\r\n          break;\r\n        case 503:\r\n          return '全部入库'\r\n          break;\r\n        case 504:\r\n          return '超收入库'\r\n          break;\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.getTableList();\r\n    this.findReceivingLibraries();\r\n    this.findSuppliers();\r\n\r\n    this.getCodeLimitToBtnStatus(this.$route.meta.currentid);\r\n  },\r\n  methods: {\r\n    // 得到code码，用来限制是否显示按钮\r\n    getCodeLimitToBtnStatus(codeId) {\r\n      this.request(this.api.user.crm_userCompany_authList, {\r\n        menuId: codeId\r\n      }).then(res => {\r\n        console.log(res);\r\n        this.codeData = res;\r\n      });\r\n    },\r\n    //获取列表\r\n    getTableList() {\r\n      this.request(this.api.order.channelPurchaseWarehouseOrder_list,this.filtersData).then(res=>{\r\n          console.log(res)\r\n        this.total=res.totalCount\r\n        this.tableListData=res.data\r\n      \r\n      })\r\n    },\r\n    //判断是否可以选中\r\n    isSelectCheck(row, index) {\r\n      if (row.orderStatus == 2) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n    //选中checkBox的状态\r\n    handleSelectionChange(val) {\r\n      this.multipleSelection = val;\r\n    },\r\n    //查看\r\n    openShowDetails(id) {\r\n      this.$router.push({\r\n        path: \"/OS/business/purchase/joinLibraryOrder_check\",\r\n        query: {\r\n          id: id,\r\n          type: \"show\"\r\n        }\r\n      });\r\n    },\r\n    //查询仓库列表\r\n    findReceivingLibraries() {},\r\n    //查询供应商列表\r\n    findSuppliers() {},\r\n    //导出\r\n    exportExcel() {\r\n      console.log(\"导出Excel表格...+++++++++++++++++++\");\r\n      require.ensure([], () => {\r\n        let { export_json_to_excel } = require(\"@/vendor/Export2Excel\");\r\n        let tHeader = [\r\n          \"入库单号\",\r\n          \"入库总数\",\r\n          \"关联到货单\",\r\n          \"入库仓库\",\r\n          \"入库类型\",\r\n          \"入库人\",\r\n          \"备注\",\r\n          \"入库时间\"\r\n        ];\r\n        // 上面设置Excel的表格第一行的标题\r\n        let filterVal = [\r\n          \"arrivalNum\",\r\n          \"arrivalStatus\",\r\n          \"procureNum\",\r\n          \"joinLibraryStatus\",\r\n          \"receivablesTotal\",\r\n          \"collectTotal\",\r\n          \"remarks\",\r\n          \"createTime\"\r\n        ];\r\n        // 上面的index、nickName、name是tableData里对象的属性\r\n        let list = this.tableListData; //把data里的tableData存到list\r\n        let data = this.formatJson(filterVal, list);\r\n        export_json_to_excel(tHeader, data, \"入库表单\");\r\n      });\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => v[j]));\r\n    },\r\n    //查看质检报告\r\n    findQuality(id) {},\r\n    //作废\r\n    deleteItem(val) {\r\n      if (confirm(\"确定作废？\")) {\r\n        this.postAxios(this.$base.api.arrivalOrder_logicDelete, val).then(\r\n          data => {\r\n            this.getTableList();\r\n          }\r\n        );\r\n      }\r\n    },\r\n    //搜索\r\n    handleSearch() {\r\n      this.filtersData.pageIndex = 1;\r\n      this.getTableList();\r\n    },\r\n\r\n    //清空重置\r\n    handleResetFilters(formName) {\r\n      // this.$refs[formName].resetFields();\r\n      // this.getTableList();\r\n    },\r\n    //当前页数修改时发生改变\r\n    handleCurrentChange(val) {\r\n      this.filtersData.pageIndex = val;\r\n      this.getTableList();\r\n    },\r\n    // 每页显示多少条时发生改变\r\n    handleSizeChange(val) {\r\n      this.filtersData.pageSize = val;\r\n      this.getTableList();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.date-picker-div {\r\n  margin-right: 10px;\r\n}\r\n</style>"],"sourceRoot":"src/views/orders/business/purchase"}]}