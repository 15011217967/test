{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\store\\modules\\permission.js","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\store\\modules\\permission.js","mtime":1574160264407},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\EDZ\\\\Desktop\\\\\\u7814\\u53D1\\u9879\\u76EE\\\\vue-project\\\\trunk\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport Vue from 'vue'; // 子路由列表\n\nvar authModuleRoutes = []; // 菜单的按钮权限 Object  key值为该页面对应的Id\n\nvar authPageBtns = {};\n/**\r\n * 初始化路由\r\n * @param data 数据 tree\r\n */\n// 模块转路由\n\nfunction authModuleToRoutes(data, menuId) {\n  if (data && data.length) {\n    data.forEach(function (item) {\n      if (item.sublist && item.sublist.length) {\n        authModuleToRoutes(item.sublist, menuId);\n      } else {\n        if (item.modulePath && item.routePath) {\n          // 添加菜单路由\n          addItemRoute(item, menuId, false); // 添加按钮路由及权限数据\n\n          authPageBtns[item.id] = [];\n\n          if (item.authlist && item.authlist.length) {\n            item.authlist.forEach(function (authListItem) {\n              // 添加按钮权限code\n              if (!authPageBtns[item.id].includes(authListItem.code)) {\n                authPageBtns[item.id].push(authListItem.code);\n              }\n\n              if (authListItem.modulePath && authListItem.routePath) {\n                addItemRoute(authListItem, menuId, true, item.id);\n              }\n            });\n          }\n        }\n      }\n    });\n  }\n}\n\nfunction addItemRoute(data, menuId, backBtnFlag) {\n  // 判断按钮路由是否是对应多个\n  if (data.modulePath.indexOf('&') > -1) {\n    var modulePaths = data.modulePath.split('&');\n    var routePaths = data.routePath.split('&');\n    var metas = [];\n\n    if (data.meta) {\n      metas = data.meta.split('&');\n    }\n\n    modulePaths.forEach(function (modulePathItem, modulePathIndex) {\n      var routeItem = JSON.parse(JSON.stringify(data));\n      routeItem.modulePath = modulePathItem;\n      routeItem.routePath = routePaths[modulePathIndex] || routePaths[0];\n      routeItem.meta = metas[modulePathIndex] || metas[0] || {};\n      addItemRoute(routeItem, menuId, backBtnFlag);\n    });\n  } else {\n    // 提取模块name及meta信息\n    var routeName = data.routePath.split('/').pop(),\n        meta = {};\n\n    if (data.meta) {\n      meta = JSON.parse(data.meta);\n    } // 判断是否添加过\n\n\n    var flag = authModuleRoutes.every(function (routeItem) {\n      return routeItem.name !== routeName;\n    });\n\n    if (flag) {\n      authModuleRoutes.push({\n        path: data.routePath,\n        name: routeName,\n        component: function component(resolve) {\n          return require([\"@/views\".concat(data.modulePath, \".vue\")], resolve);\n        },\n        meta: {\n          keepAlive: meta.keepAlive,\n          topBar: meta.topBar === undefined ? true : meta.topBar,\n          backBtn: backBtnFlag,\n          icon: meta.icon,\n          title: data.name,\n          currentid: data.id,\n          appId: data.appId,\n          parentId: menuId\n        }\n      });\n    }\n  }\n}\n/**\r\n * 获取模块下的所有路由\r\n * @param moduleInfo 模块信息\r\n */\n\n\nfunction getAuthModuleMenus(moduleInfo) {\n  return new Promise(\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(resolve) {\n      var moduleMenus, moduleRoutes;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return Vue.prototype.request(Vue.prototype.api.system.menu_getRouteByUser, {\n                appId: moduleInfo.id\n              });\n\n            case 2:\n              moduleMenus = _context.sent;\n\n              if (moduleMenus && moduleMenus.length) {\n                authModuleRoutes = [];\n                moduleMenus.forEach(function (item) {\n                  // 获取左侧模块需要路由上绑定最顶级menu的id\n                  authModuleToRoutes(item.sublist, item.id);\n                });\n                moduleRoutes = [{\n                  path: moduleInfo.routePath,\n                  name: 'index',\n                  component: function component(resolve) {\n                    return require([\"@/views/index\"], resolve);\n                  },\n                  children: authModuleRoutes\n                }];\n                state.authPageBtns = authPageBtns;\n                resolve({\n                  moduleRoutes: moduleRoutes,\n                  moduleMenus: moduleMenus\n                });\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n}\n\nvar state = {\n  // 路由\n  routes: [],\n  // 模块\n  menus: [],\n  // header选中的\n  menuId: '',\n  // 左侧菜单\n  subMenu: [],\n  // 菜单的按钮权限 Object  key值为该页面对应的Id\n  authPageBtns: {}\n};\nvar mutations = {\n  // 新增模块路由\n  SET_ROUTES: function SET_ROUTES(state, _ref2) {\n    var moduleRoutes = _ref2.moduleRoutes,\n        moduleMenus = _ref2.moduleMenus;\n    state.routes = moduleRoutes;\n    state.menus = moduleMenus;\n  },\n  // 设置顶部模块id及左侧菜单\n  SET_SUB_MENU_INFO: function SET_SUB_MENU_INFO(state, _ref3) {\n    var menuId = _ref3.menuId,\n        subMenu = _ref3.subMenu;\n    state.menuId = menuId;\n    state.subMenu = subMenu;\n  },\n  // 设置菜单的按钮权限\n  SET_AUTH_PAGE_BTNS: function SET_AUTH_PAGE_BTNS(state, authPageBtns) {\n    state.authPageBtns = authPageBtns;\n  }\n};\nvar actions = {\n  // 获取模块路由\n  getModuleRoutes: function getModuleRoutes(_ref4, moduleInfo) {\n    var commit = _ref4.commit;\n    return new Promise(\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(resolve) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                getAuthModuleMenus(moduleInfo).then(function (_ref6) {\n                  var moduleRoutes = _ref6.moduleRoutes,\n                      moduleMenus = _ref6.moduleMenus;\n                  commit('SET_ROUTES', {\n                    moduleRoutes: moduleRoutes,\n                    moduleMenus: moduleMenus\n                  });\n                  resolve(moduleRoutes);\n                });\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n  },\n  // 清除所有的路由及模块\n  clearModuleRoutes: function clearModuleRoutes(_ref7) {\n    var commit = _ref7.commit;\n    var moduleRoutes = [],\n        moduleMenus = [];\n    commit('SET_ROUTES', {\n      moduleRoutes: moduleRoutes,\n      moduleMenus: moduleMenus\n    });\n  },\n  // 设置顶部模块id及左侧菜单\n  setSubMenuInfo: function setSubMenuInfo(_ref8, _ref9) {\n    var commit = _ref8.commit;\n    var menuId = _ref9.menuId,\n        subMenu = _ref9.subMenu;\n    commit('SET_SUB_MENU_INFO', {\n      menuId: menuId,\n      subMenu: subMenu\n    });\n  },\n  // 设置菜单的按钮权限\n  setAuthPageBtns: function setAuthPageBtns(_ref10, authPageBtns) {\n    var commit = _ref10.commit;\n    commit('SET_AUTH_PAGE_BTNS', authPageBtns);\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};",{"version":3,"sources":["C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\store\\modules\\permission.js"],"names":["Vue","authModuleRoutes","authPageBtns","authModuleToRoutes","data","menuId","length","forEach","item","sublist","modulePath","routePath","addItemRoute","id","authlist","authListItem","includes","code","push","backBtnFlag","indexOf","modulePaths","split","routePaths","metas","meta","modulePathItem","modulePathIndex","routeItem","JSON","parse","stringify","routeName","pop","flag","every","name","path","component","resolve","require","keepAlive","topBar","undefined","backBtn","icon","title","currentid","appId","parentId","getAuthModuleMenus","moduleInfo","Promise","prototype","request","api","system","menu_getRouteByUser","moduleMenus","moduleRoutes","children","state","routes","menus","subMenu","mutations","SET_ROUTES","SET_SUB_MENU_INFO","SET_AUTH_PAGE_BTNS","actions","getModuleRoutes","commit","then","clearModuleRoutes","setSubMenuInfo","setAuthPageBtns","namespaced"],"mappings":"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","sourcesContent":["\r\nimport Vue from 'vue'\r\n// 子路由列表\r\nlet authModuleRoutes = [];\r\n// 菜单的按钮权限 Object  key值为该页面对应的Id\r\nlet authPageBtns = {\r\n\r\n};\r\n/**\r\n * 初始化路由\r\n * @param data 数据 tree\r\n */\r\n// 模块转路由\r\nfunction authModuleToRoutes(data, menuId){\r\n  if(data && data.length){\r\n    data.forEach(item =>{\r\n      if(item.sublist && item.sublist.length){\r\n        authModuleToRoutes(item.sublist, menuId)\r\n      }else {\r\n        if(item.modulePath && item.routePath){\r\n          // 添加菜单路由\r\n          addItemRoute(item, menuId, false);\r\n          // 添加按钮路由及权限数据\r\n          authPageBtns[item.id] = [];\r\n          if(item.authlist && item.authlist.length) {\r\n            item.authlist.forEach(authListItem => {\r\n              // 添加按钮权限code\r\n              if(!authPageBtns[item.id].includes(authListItem.code)) {\r\n                authPageBtns[item.id].push(authListItem.code);\r\n              }\r\n              if(authListItem.modulePath && authListItem.routePath){\r\n                addItemRoute(authListItem, menuId, true, item.id);\r\n              }\r\n            })\r\n          }\r\n        }\r\n      }\r\n    })\r\n  }\r\n}\r\nfunction addItemRoute(data, menuId, backBtnFlag) {\r\n  // 判断按钮路由是否是对应多个\r\n  if(data.modulePath.indexOf('&') > -1){\r\n    let modulePaths = data.modulePath.split('&');\r\n    let routePaths = data.routePath.split('&');\r\n    let metas = [];\r\n    if(data.meta) {\r\n      metas = data.meta.split('&');\r\n    }\r\n    modulePaths.forEach((modulePathItem, modulePathIndex) => {\r\n      let routeItem = JSON.parse(JSON.stringify(data));\r\n      routeItem.modulePath = modulePathItem;\r\n      routeItem.routePath = routePaths[modulePathIndex] || routePaths[0];\r\n      routeItem.meta = metas[modulePathIndex] || metas[0] || {};\r\n      addItemRoute(routeItem, menuId, backBtnFlag);\r\n    })\r\n  }else {\r\n    // 提取模块name及meta信息\r\n    let routeName = data.routePath.split('/').pop(), meta = {};\r\n    if(data.meta){\r\n      meta = JSON.parse(data.meta);\r\n    }\r\n    // 判断是否添加过\r\n    let flag = authModuleRoutes.every(routeItem => {\r\n      return routeItem.name !== routeName;\r\n    });\r\n    if(flag){\r\n      authModuleRoutes.push({\r\n        path: data.routePath,\r\n        name: routeName,\r\n        component: resolve => require([`@/views${data.modulePath}.vue`], resolve),\r\n        meta: {\r\n          keepAlive: meta.keepAlive,\r\n          topBar: meta.topBar === undefined ? true : meta.topBar,\r\n          backBtn: backBtnFlag,\r\n          icon: meta.icon,\r\n          title: data.name,\r\n          currentid: data.id,\r\n          appId: data.appId,\r\n          parentId: menuId\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n/**\r\n * 获取模块下的所有路由\r\n * @param moduleInfo 模块信息\r\n */\r\nfunction getAuthModuleMenus(moduleInfo){\r\n  return new Promise(async (resolve) => {\r\n    let moduleMenus = await Vue.prototype.request(Vue.prototype.api.system.menu_getRouteByUser, {appId: moduleInfo.id});\r\n    if(moduleMenus && moduleMenus.length){\r\n      authModuleRoutes = [];\r\n      moduleMenus.forEach(item => {\r\n        // 获取左侧模块需要路由上绑定最顶级menu的id\r\n        authModuleToRoutes(item.sublist, item.id);\r\n      })\r\n\r\n      let moduleRoutes = [\r\n        {\r\n          path: moduleInfo.routePath,\r\n          name: 'index',\r\n          component: resolve => require([\"@/views/index\"], resolve),\r\n          children: authModuleRoutes\r\n        }\r\n      ];\r\n      state.authPageBtns = authPageBtns;\r\n      resolve({moduleRoutes, moduleMenus});\r\n    }\r\n  })\r\n\r\n}\r\n\r\n\r\nconst state = {\r\n  // 路由\r\n  routes: [],\r\n  // 模块\r\n  menus: [],\r\n  // header选中的\r\n  menuId: '',\r\n  // 左侧菜单\r\n  subMenu: [],\r\n  // 菜单的按钮权限 Object  key值为该页面对应的Id\r\n  authPageBtns: {}\r\n};\r\n\r\nconst mutations = {\r\n  // 新增模块路由\r\n  SET_ROUTES: (state, {moduleRoutes, moduleMenus}) => {\r\n    state.routes = moduleRoutes;\r\n    state.menus = moduleMenus;\r\n  },\r\n  // 设置顶部模块id及左侧菜单\r\n  SET_SUB_MENU_INFO: (state, {menuId, subMenu}) => {\r\n    state.menuId = menuId;\r\n    state.subMenu = subMenu;\r\n  },\r\n  // 设置菜单的按钮权限\r\n  SET_AUTH_PAGE_BTNS: (state, authPageBtns) => {\r\n    state.authPageBtns = authPageBtns;\r\n  },\r\n};\r\n\r\nconst actions = {\r\n  // 获取模块路由\r\n  getModuleRoutes({ commit }, moduleInfo) {\r\n    return new Promise(async (resolve) => {\r\n      getAuthModuleMenus(moduleInfo).then(({moduleRoutes, moduleMenus}) => {\r\n        commit('SET_ROUTES', {moduleRoutes, moduleMenus});\r\n        resolve(moduleRoutes)\r\n      });\r\n    })\r\n  },\r\n  // 清除所有的路由及模块\r\n  clearModuleRoutes({ commit }){\r\n    let moduleRoutes = [], moduleMenus = [];\r\n    commit('SET_ROUTES', {moduleRoutes, moduleMenus})\r\n  },\r\n  // 设置顶部模块id及左侧菜单\r\n  setSubMenuInfo: ({ commit }, {menuId, subMenu}) => {\r\n    commit('SET_SUB_MENU_INFO', {menuId, subMenu})\r\n  },\r\n  // 设置菜单的按钮权限\r\n  setAuthPageBtns: ({ commit }, authPageBtns) => {\r\n    commit('SET_AUTH_PAGE_BTNS', authPageBtns)\r\n  }\r\n};\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  mutations,\r\n  actions\r\n}\r\n"]}]}