{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\scb\\goods\\classify_list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\scb\\goods\\classify_list.vue","mtime":1578973431474},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ElUploadImg from \"../components/el_upload_img_multi\";\nimport codeSet from \"@/components/codeSet\";\nimport Sortable from 'sortablejs';\nimport dragTreeTable from \"./lib/dragTreeTable.vue\";\nimport demoDataList from \"./lib/data\";\nexport default {\n  data: function data() {\n    return {\n      treeData: {\n        columns: [],\n        lists: []\n      },\n      dialogForm: false,\n      categories_categoriesTreeList_data: [],\n      // 创建分类所用-分类下拉（一二级）\n      // 上传图片路径\n      imgApi: this.api.content.aLiYun_upload,\n      LssUpimgLimit: 1,\n      // 上传图片描述\n      describe: \"图片尺寸为200×200，大小不超过200KB；\",\n      ruleForm: {\n        \"merchantId\": null,\n        \"merchantName\": null,\n        \"name\": \"\",\n        \"parentId\": null,\n        \"parentName\": null,\n        storeImgs_list: []\n      },\n      isEdit: false,\n      checkId: null,\n      getList_data: [],\n      filtersData: {\n        pageIndex: 1,\n        // 当前页码\n        pageSize: 10,\n        // 每页数量\n        orderBy: \"\",\n        \"merchantId\": \"\"\n      },\n      rules: {\n        name: [{\n          required: true,\n          validator: function validator(rule, value, callback) {\n            if (!value) {\n              callback(new Error('请输入分类名称！'));\n            }\n\n            ;\n            var len = 0;\n\n            for (var i = 0; i < value.length; i++) {\n              if (value.charCodeAt(i) > 127 || value.charCodeAt(i) == 94) {\n                len += 2;\n              } else {\n                len++;\n              }\n            }\n\n            if (len > 10) {\n              callback(new Error('限制5个中文、10个字符！'));\n            } else {\n              callback();\n            }\n\n            ;\n          },\n          trigger: 'change'\n        }],\n        storeImgs_list: [{\n          type: 'array',\n          required: true,\n          message: '缩略图未上传!',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  created: function created() {\n    this.categories_categoriesTreeList(); // 创建分类所用-分类下拉（一二级）\n    // this.categories_sort();\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      _this.categories_getListDTO(); // 获取分类\n\n    });\n  },\n  computed: {\n    storeImgs_list: function storeImgs_list() {\n      return this.ruleForm.storeImgs_list;\n    }\n  },\n  watch: {\n    /**\r\n     * 监听门店图片\r\n     */\n    storeImgs_list: function storeImgs_list(value) {\n      if (value && value.length > 0) {\n        this.$refs.ruleForm.clearValidate('storeImgs_list');\n      } else {\n        this.$refs.ruleForm.validateField('storeImgs_list');\n      }\n    }\n  },\n  methods: {\n    onTreeDataChange: function onTreeDataChange(list) {\n      console.log(list);\n      this.treeData.lists = list;\n    },\n\n    /**\r\n     * 弹框取消\r\n     */\n    handleClose: function handleClose() {\n      this.dialogForm = false;\n      this.isEdit = false;\n      this.checkId = null;\n      Object.assign(this.ruleForm, {\n        \"merchantId\": null,\n        \"merchantName\": null,\n        \"name\": \"\",\n        \"parentId\": null,\n        \"parentName\": null,\n        storeImgs_list: []\n      });\n    },\n\n    /**\r\n     * 修改\r\n     */\n    edit: function edit(row) {\n      Object.assign(this.ruleForm, row);\n      this.isEdit = true;\n      this.checkId = row.id;\n      row.image && this.ruleForm.storeImgs_list.push({\n        url: row.image\n      });\n      this.dialogForm = true;\n    },\n\n    /**\r\n     * 获取分类\r\n     */\n    categories_getListDTO: function categories_getListDTO() {\n      var _this2 = this;\n\n      var that = this;\n      this.request(this.api.scb.categories_getListDTO, this.filtersData, true).then(function (res) {\n        var columns = [{\n          type: \"selection\",\n          title: \"分类名称\",\n          field: \"name\",\n          flex: 1,\n          align: \"left\",\n          titleAlign: \"left\",\n          formatter: function formatter(item) {\n            return \"<span>\" + item.name + \"</span>\";\n          }\n        }, {\n          type: 'image',\n          title: \"父分图片\",\n          field: \"image\",\n          flex: 1,\n          align: \"center\"\n        }, {\n          title: \"父分类\",\n          field: \"parentName\",\n          flex: 1,\n          align: \"center\"\n        }, {\n          title: \"商品数量\",\n          field: \"allQty\",\n          flex: 1,\n          align: \"center\"\n        }, {\n          title: \"操作\",\n          type: \"action\",\n          flex: 1,\n          align: \"center\",\n          actions: [{\n            text: \"修改\",\n            onclick: _this2.edit,\n            formatter: function formatter(item) {\n              return \"<i>修改 </i>\";\n            }\n          }, {\n            text: \"查看商品\",\n            onclick: _this2.showGoods,\n            formatter: function formatter(item) {\n              return \"<i>查看商品</i>\";\n            }\n          }, {\n            text: \"删除\",\n            onclick: _this2.categories_recursionDelete,\n            formatter: function formatter(item) {\n              return \"<i>删除</i>\";\n            }\n          }]\n        }];\n        res = JSON.parse(JSON.stringify(res).replace(/children/g, 'lists'));\n        that.getList_data = res;\n        that.treeData = {\n          columns: columns,\n          lists: res\n        };\n      });\n    },\n\n    /**\r\n     * 查看商品\r\n     */\n    showGoods: function showGoods(row) {\n      this.href('/goods/goods_list', {\n        id: row.id\n      });\n    },\n\n    /**\r\n     * 拖拽同级切换位置\r\n     */\n    categories_sort: function categories_sort() {\n      var that = this;\n      this.request(this.api.scb.categories_sort, {\n        sortVO: [{\n          id: 'b5aa0bcc-58db-4f08-9211-7120449a20ae',\n          sort: 1\n        }, {\n          id: '739c39f8-8692-45d7-8517-d182d08728d2',\n          sort: 2\n        }, {\n          id: '35fdc669-482e-4cce-9103-08ee9cbaca4c',\n          sort: 3\n        }]\n      }, true).then(function (res) {});\n    },\n\n    /**\r\n     * 保存分类\r\n     */\n    save: function save() {\n      var _this3 = this;\n\n      var that = this;\n      this.$refs.ruleForm.validate(function (valid) {\n        if (valid) {\n          var cascader = that.$refs.cascader;\n          var cascaderValue = cascader.inputValue;\n\n          if (cascaderValue) {\n            var isHave = cascaderValue.indexOf('/');\n            that.ruleForm.parentName = isHave != -1 ? cascaderValue.split('/')[1] : cascaderValue;\n            that.ruleForm.parentName = that.ruleForm.parentName.replace(/^\\s*|\\s*$/g, '');\n          }\n\n          that.ruleForm.image = that.ruleForm.storeImgs_list[0].url;\n\n          if (_this3.checkId) {\n            Object.assign(_this3.ruleForm, {\n              id: _this3.checkId\n            });\n          }\n\n          ;\n          var url = _this3.checkId ? that.api.scb.categories_updateSelective : that.api.scb.categories_create;\n          that.request(url, that.ruleForm, true).then(function (res) {\n            Object.assign(_this3.ruleForm, {\n              \"merchantId\": null,\n              \"merchantName\": null,\n              \"name\": \"\",\n              \"parentId\": null,\n              \"parentName\": null,\n              storeImgs_list: []\n            });\n            that.warn('新建成功!');\n            that.categories_categoriesTreeList();\n            that.categories_getListDTO();\n            that.dialogForm = false;\n            _this3.isEdit = false;\n            _this3.checkId = null;\n          });\n        }\n      });\n    },\n\n    /**\r\n     * 创建分类所用-分类下拉（一二级）\r\n     */\n    categories_categoriesTreeList: function categories_categoriesTreeList() {\n      var that = this;\n      this.request(this.api.scb.categories_categoriesTreeList, this.filtersData, true).then(function (res) {\n        that.categories_categoriesTreeList_data = res;\n      });\n    },\n\n    /**\r\n     * 删除分类\r\n     */\n    categories_recursionDelete: function categories_recursionDelete(obj) {\n      var _this4 = this;\n\n      var that = this;\n      this.$confirm('删除后会解除商品与该分类的关系，本操作不可恢复，确认删除分类吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        that.request(that.api.scb.categories_recursionDelete, {\n          id: obj.id\n        }, true).then(function (res) {\n          that.warn('删除成功！');\n          that.categories_getListDTO();\n          that.categories_categoriesTreeList();\n        });\n      }).catch(function () {\n        _this4.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n\n    /**\r\n     * 提示\r\n     * @param { String } message 提示文案\r\n     * @param { String } type 提示类型\r\n     */\n    warn: function warn(message, type) {\n      this.$message({\n        message: message,\n        type: type || \"success\"\n      });\n    },\n\n    /**\r\n      * 路由跳转\r\n      * @param { String } routeName 路由路径\r\n      * @param { Object } param 路由参数\r\n      */\n    href: function href(routeName, param) {\n      var module = '/' + this.$route.path.split('/')[1];\n      this.$router.push({\n        path: module + routeName,\n        query: param\n      });\n    },\n\n    /**\r\n     * 模糊搜索\r\n     */\n    handleSearch: function handleSearch() {\n      this.filtersData.pageIndex = 1;\n      this.getData();\n    },\n\n    /**\r\n     * 搜索重置\r\n     */\n    handleResetFilters: function handleResetFilters() {\n      Object.assign(this.filtersData, {\n        pageIndex: 1,\n        // 当前页码\n        pageSize: 10 // 每页数量\n\n      });\n    },\n\n    /**\r\n     * 点击页数\r\n     * @param { Number } pageIndex 当前页\r\n     */\n    handleCurrentChange: function handleCurrentChange(pageIndex) {\n      this.filtersData.pageIndex = pageIndex;\n      this.getData();\n    },\n\n    /**\r\n     *  选择每页多少条数\r\n     *  @param { Number } pageSize 每页条数\r\n     */\n    handleSizeChange: function handleSizeChange(pageSize) {\n      this.filtersData.pageSize = pageSize;\n      this.getData();\n    }\n  },\n  components: {\n    ElUploadImg: ElUploadImg,\n    codeSet: codeSet,\n    dragTreeTable: dragTreeTable\n  }\n};",{"version":3,"sources":["classify_list.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"box\">\r\n    <el-dialog :before-close=\"handleClose\" title=\"分类管理\" width=\"520px\" :visible.sync=\"dialogForm\" v-if=\"dialogForm\">\r\n      <el-form :model=\"ruleForm\"  :rules=\"rules\" ref=\"ruleForm\" label-width=\"120px\">\r\n        <el-form-item label=\"分类名称：\" prop=\"name\">\r\n          <el-input placeholder=\"请填写分类名称，不能超过5个中文\" v-model=\"ruleForm.name\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"父级分类：\">\r\n          <el-cascader :disabled=\"isEdit\" ref=\"cascader\" v-model=\"ruleForm.parentId\" :options=\"categories_categoriesTreeList_data\" :props=\"{ checkStrictly: true, label: 'name', value: 'id', emitPath: false }\" clearable></el-cascader>\r\n        </el-form-item>\r\n        <el-form-item label=\"缩略图：\" prop=\"storeImgs_list\" res=\"uploadElement\">\r\n          <el-upload-img\r\n            v-model=\"ruleForm.storeImgs_list\"\r\n            :EchoDisplayImages=\"ruleForm.storeImgs_list\"\r\n            CatalogName=\"store\"\r\n            :imgApi=\"imgApi\"\r\n            :describe=\"describe\"\r\n            :LssUpimgLimit=\"LssUpimgLimit\"\r\n          ></el-upload-img>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"handleClose\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">保存</el-button>\r\n      </span>\r\n    </el-dialog>\r\n    <el-button size=\"small\" type=\"primary\" @click=\"dialogForm = true\">新增分类</el-button>\r\n    <dragTreeTable\r\n      ref=\"table\"\r\n      :data=\"treeData\"\r\n      :onDrag=\"onTreeDataChange\"\r\n      resize\r\n      fixed\r\n      :isdraggable=\"true\">\r\n    </dragTreeTable>\r\n  </div>\r\n  <!-- 列表 -->\r\n</template>\r\n\r\n<script>\r\nimport ElUploadImg from \"../components/el_upload_img_multi\";\r\nimport codeSet from \"@/components/codeSet\";\r\nimport Sortable from 'sortablejs';\r\nimport dragTreeTable from \"./lib/dragTreeTable.vue\";\r\nimport demoDataList from './lib/data';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      treeData: {\r\n        columns: [],\r\n        lists: []\r\n      },\r\n      dialogForm: false,\r\n      categories_categoriesTreeList_data:[],// 创建分类所用-分类下拉（一二级）\r\n      // 上传图片路径\r\n      imgApi: this.api.content.aLiYun_upload,\r\n      LssUpimgLimit: 1,\r\n      // 上传图片描述\r\n      describe: \"图片尺寸为200×200，大小不超过200KB；\",\r\n      ruleForm: {\r\n        \"merchantId\": null,\r\n        \"merchantName\":null,\r\n        \"name\": \"\",\r\n        \"parentId\":null,\r\n        \"parentName\":null,\r\n        storeImgs_list:[]\r\n      },\r\n      isEdit:false,\r\n      checkId:null,\r\n      getList_data: [],\r\n      filtersData: {\r\n        pageIndex: 1, // 当前页码\r\n        pageSize: 10, // 每页数量\r\n        orderBy: \"\",\r\n        \"merchantId\": \"\"\r\n      },\r\n      rules:{\r\n        name:[{required:true, validator: (rule, value, callback) => {\r\n          if(!value) {\r\n            callback(new Error('请输入分类名称！'));\r\n          };\r\n          var len = 0;    \r\n          for (var i=0; i< value.length; i++) {    \r\n            if (value.charCodeAt(i)>127 || value.charCodeAt(i)==94) {    \r\n              len += 2;    \r\n            } else {    \r\n              len ++;    \r\n            }    \r\n          }    \r\n          if(len > 10) {\r\n            callback(new Error('限制5个中文、10个字符！'));\r\n          }else{\r\n            callback();\r\n          };\r\n        }, trigger:'change'}],\r\n        storeImgs_list:[{type:'array',required:true,message:'缩略图未上传!',trigger:'change'}]\r\n      }\r\n    };\r\n  },\r\n  created() {\r\n    this.categories_categoriesTreeList();// 创建分类所用-分类下拉（一二级）\r\n    // this.categories_sort();\r\n  },\r\n  mounted(){\r\n      this.$nextTick(() => {\r\n       \r\n      this.categories_getListDTO();// 获取分类\r\n    })\r\n  },\r\n  computed: {\r\n    storeImgs_list() {\r\n      return this.ruleForm.storeImgs_list;\r\n    },\r\n  },\r\n  watch:{\r\n    /**\r\n     * 监听门店图片\r\n     */\r\n    storeImgs_list(value) {\r\n      if(value && value.length > 0) {\r\n        this.$refs.ruleForm.clearValidate('storeImgs_list');\r\n      }else{\r\n        this.$refs.ruleForm.validateField('storeImgs_list');\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    onTreeDataChange(list) {\r\n      console.log(list);\r\n      this.treeData.lists = list;\r\n    },\r\n    /**\r\n     * 弹框取消\r\n     */\r\n    handleClose() {\r\n      this.dialogForm = false;\r\n      this.isEdit = false;\r\n      this.checkId = null;\r\n      Object.assign(this.ruleForm, {\r\n        \"merchantId\": null,\r\n        \"merchantName\":null,\r\n        \"name\": \"\",\r\n        \"parentId\":null,\r\n        \"parentName\":null,\r\n        storeImgs_list:[]\r\n      });\r\n    },\r\n    /**\r\n     * 修改\r\n     */\r\n    edit(row) {\r\n      Object.assign(this.ruleForm, row);\r\n      this.isEdit = true;\r\n      this.checkId = row.id;\r\n      row.image && this.ruleForm.storeImgs_list.push({url:row.image});\r\n      this.dialogForm = true;\r\n    },\r\n    /**\r\n     * 获取分类\r\n     */\r\n    categories_getListDTO() {\r\n      const that = this;\r\n    \r\n      this.request(\r\n        this.api.scb.categories_getListDTO,\r\n        this.filtersData,\r\n        true\r\n      ).then(res => {\r\n        var columns = [\r\n          {\r\n            type: \"selection\",\r\n            title: \"分类名称\",\r\n            field: \"name\",\r\n            flex: 1,\r\n            align: \"left\",\r\n            titleAlign: \"left\",\r\n            formatter: item => {\r\n              return \"<span>\" + item.name + \"</span>\";\r\n            }\r\n          },\r\n          {\r\n            type:'image',\r\n            title: \"父分图片\",\r\n            field: \"image\",\r\n            flex: 1,\r\n            align: \"center\"\r\n          },\r\n          {\r\n            title: \"父分类\",\r\n            field: \"parentName\",\r\n            flex: 1,\r\n            align: \"center\"\r\n          },\r\n          {\r\n            title: \"商品数量\",\r\n            field: \"allQty\",\r\n            flex: 1,\r\n            align: \"center\"\r\n          },\r\n          {\r\n            title: \"操作\",\r\n            type: \"action\",\r\n            flex: 1,\r\n            align: \"center\",\r\n            actions: [\r\n              {\r\n                text: \"修改\",\r\n                onclick: this.edit,\r\n                formatter: item => {\r\n                  return \"<i>修改 </i>\";\r\n                }\r\n              },\r\n              {\r\n                text: \"查看商品\",\r\n                onclick: this.showGoods,\r\n                formatter: item => {\r\n                  return \"<i>查看商品</i>\";\r\n                }\r\n              },\r\n              {\r\n                text: \"删除\",\r\n                onclick: this.categories_recursionDelete,\r\n                formatter: item => {\r\n                  return \"<i>删除</i>\";\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        ];\r\n        res = JSON.parse(JSON.stringify(res).replace(/children/g, 'lists'));\r\n        that.getList_data = res;\r\n        that.treeData = {\r\n          columns: columns,\r\n          lists:res\r\n        };\r\n      });\r\n    },\r\n    /**\r\n     * 查看商品\r\n     */\r\n    showGoods(row) {\r\n      this.href('/goods/goods_list',{ id: row.id });\r\n    },\r\n    /**\r\n     * 拖拽同级切换位置\r\n     */\r\n    categories_sort() {\r\n      const that = this;\r\n\r\n      this.request(\r\n        this.api.scb.categories_sort,\r\n        {\r\n          sortVO:[{\r\n            id:'b5aa0bcc-58db-4f08-9211-7120449a20ae',\r\n            sort:1\r\n          },{\r\n            id:'739c39f8-8692-45d7-8517-d182d08728d2',\r\n            sort:2\r\n          },{\r\n            id:'35fdc669-482e-4cce-9103-08ee9cbaca4c',\r\n            sort:3\r\n          }]\r\n        },\r\n        true\r\n      ).then(res => {\r\n        \r\n      });\r\n    },\r\n    /**\r\n     * 保存分类\r\n     */\r\n    save() {\r\n      const that = this;\r\n      this.$refs.ruleForm.validate((valid) => {\r\n        if (valid) {\r\n          let cascader = that.$refs.cascader;\r\n          let cascaderValue = cascader.inputValue;\r\n          if(cascaderValue){\r\n            let isHave = cascaderValue.indexOf('/');\r\n            that.ruleForm.parentName = isHave != -1 ? cascaderValue.split('/')[1] : cascaderValue;\r\n            that.ruleForm.parentName = that.ruleForm.parentName.replace(/^\\s*|\\s*$/g,'');\r\n          }\r\n          that.ruleForm.image = that.ruleForm.storeImgs_list[0].url;\r\n\r\n          if(this.checkId) {\r\n            Object.assign(this.ruleForm, {\r\n              id:this.checkId\r\n            });\r\n          };\r\n          let url = this.checkId ? that.api.scb.categories_updateSelective : that.api.scb.categories_create;\r\n\r\n          that.request(\r\n            url,\r\n            that.ruleForm,\r\n            true\r\n          ).then(res => {\r\n            Object.assign(this.ruleForm, {\r\n              \"merchantId\": null,\r\n              \"merchantName\":null,\r\n              \"name\": \"\",\r\n              \"parentId\":null,\r\n              \"parentName\":null,\r\n              storeImgs_list:[]\r\n            });\r\n            that.warn('新建成功!');\r\n            that.categories_categoriesTreeList();\r\n            that.categories_getListDTO();\r\n            that.dialogForm = false;\r\n            this.isEdit = false;\r\n            this.checkId = null;\r\n          });\r\n        }\r\n      });\r\n    },\r\n    /**\r\n     * 创建分类所用-分类下拉（一二级）\r\n     */\r\n    categories_categoriesTreeList() {\r\n      const that = this;\r\n\r\n      this.request(\r\n        this.api.scb.categories_categoriesTreeList,\r\n        this.filtersData,\r\n        true\r\n      ).then(res => {\r\n        that.categories_categoriesTreeList_data = res;\r\n      });\r\n    },\r\n    /**\r\n     * 删除分类\r\n     */\r\n    categories_recursionDelete(obj) {\r\n      var that = this;\r\n      this.$confirm('删除后会解除商品与该分类的关系，本操作不可恢复，确认删除分类吗？', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n      }).then(() => {\r\n        that.request(\r\n          that.api.scb.categories_recursionDelete,\r\n          {\r\n            id:obj.id\r\n          },\r\n          true\r\n        ).then(res => {\r\n          that.warn('删除成功！');\r\n          that.categories_getListDTO();\r\n          that.categories_categoriesTreeList();\r\n        });\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消删除'\r\n        });          \r\n      });\r\n    },\r\n    /**\r\n     * 提示\r\n     * @param { String } message 提示文案\r\n     * @param { String } type 提示类型\r\n     */\r\n    warn(message, type) {\r\n      this.$message({\r\n        message: message,\r\n        type: type || \"success\"\r\n      });\r\n    },\r\n   /**\r\n     * 路由跳转\r\n     * @param { String } routeName 路由路径\r\n     * @param { Object } param 路由参数\r\n     */\r\n    href(routeName, param) {\r\n      let module = '/' + this.$route.path.split('/')[1];\r\n      this.$router.push({\r\n        path: module + routeName,\r\n        query: param\r\n      });\r\n    },\r\n    /**\r\n     * 模糊搜索\r\n     */\r\n    handleSearch() {\r\n      this.filtersData.pageIndex = 1;\r\n      this.getData();\r\n    },\r\n    /**\r\n     * 搜索重置\r\n     */\r\n    handleResetFilters() {\r\n      Object.assign(this.filtersData, {\r\n        pageIndex: 1, // 当前页码\r\n        pageSize: 10 // 每页数量\r\n      });\r\n    },\r\n    /**\r\n     * 点击页数\r\n     * @param { Number } pageIndex 当前页\r\n     */\r\n    handleCurrentChange(pageIndex) {\r\n      this.filtersData.pageIndex = pageIndex;\r\n      this.getData();\r\n    },\r\n    /**\r\n     *  选择每页多少条数\r\n     *  @param { Number } pageSize 每页条数\r\n     */\r\n    handleSizeChange(pageSize) {\r\n      this.filtersData.pageSize = pageSize;\r\n      this.getData();\r\n    }\r\n  },\r\n  components: {\r\n    ElUploadImg,\r\n    codeSet,\r\n    dragTreeTable\r\n  }\r\n};\r\n</script>\r\n<style  lang=\"less\" scoped>\r\n.box {\r\n  padding: 20px;\r\n  margin: 8px 8px 20px 8px;\r\n  background: #fff;\r\n}\r\n.el-input /deep/ .el-input__inner {\r\n  width: 198px;\r\n}\r\n.image{\r\n  width: 45px;\r\n  height: 45px;\r\n}\r\n.drag-tree-table-body /deep/.action-item{\r\n  margin-left: 10px;\r\n}\r\n</style>"],"sourceRoot":"src/views/scb/goods"}]}