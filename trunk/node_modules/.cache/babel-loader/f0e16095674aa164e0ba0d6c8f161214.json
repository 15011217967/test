{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\components\\treeDeptReturnObj.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\components\\treeDeptReturnObj.vue","mtime":1572415127968},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\EDZ\\\\Desktop\\\\\\u7814\\u53D1\\u9879\\u76EE\\\\vue-project\\\\trunk\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"tree-dept\",\n  props: {\n    // 接收绑定参数\n    value: null,\n    valType: {\n      default: \"code\",\n      type: String\n    },\n    defaultExpandAll: {\n      default: false,\n      type: Boolean\n    },\n    // 输入框宽度\n    width: String,\n    type: {\n      type: String,\n      default: null\n    },\n    // 输入框占位符\n    placeholder: {\n      type: String,\n      default: \"请选择\"\n    },\n    selType: {\n      type: Number,\n      default: null\n    },\n    // 是否禁用\n    disabled: {\n      type: Boolean\n    }\n  },\n  watch: {\n    value: function value(val) {\n      this.valueModel = val;\n    },\n    valueModel: function valueModel(val) {\n      if (!val) {\n        this.labelModel = \"\";\n      }\n    }\n  },\n  data: function data() {\n    return {\n      options: [],\n      // 菜单宽度\n      treeWidth: \"auto\",\n      // 输入框显示值\n      labelModel: \"\",\n      // 实际请求传值\n      valueModel: this.value,\n      props: {\n        value: this.valType,\n        label: \"name\",\n        children: \"sublist\"\n      },\n      defaultExpandedKeys: []\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    if (this.valueModel != undefined) this.defaultExpandedKeys = [this.valueModel];\n    this.getList(); // 获取输入框宽度同步至树状菜单宽度\n\n    this.$nextTick(function () {\n      _this.treeWidth = \"\".concat((_this.width || _this.$refs.input.$refs.input.clientWidth) - 24, \"px\");\n    });\n  },\n  updated: function updated() {\n    var defaultNode = this.$refs.tree.getNode(this.valueModel);\n\n    if (defaultNode) {\n      this.labelModel = defaultNode.data[this.props.label];\n    }\n  },\n  methods: {\n    getList: function () {\n      var _getList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var self, requestParam, list;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                self = this;\n\n                if (self.type) {\n                  requestParam = {\n                    type: self.type,\n                    used: true\n                  };\n                } else {\n                  requestParam = {\n                    used: true\n                  };\n                }\n\n                _context.next = 4;\n                return this.request(this.api.user.DEPART_LIST_POST, requestParam);\n\n              case 4:\n                list = _context.sent;\n                this.options = list;\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getList() {\n        return _getList.apply(this, arguments);\n      }\n\n      return getList;\n    }(),\n    filterNode: function filterNode(val, data) {\n      if (!val) return true;\n      var isCur = data[this.props.value] == val;\n\n      if (isCur) {\n        this.labelModel = data[this.props.label];\n      }\n\n      return isCur;\n    },\n    // 单击节点\n    onClickNode: function onClickNode(node) {\n      if (this.selType == null || this.selType != null && this.selType == node.type) {\n        this.labelModel = node[this.props.label];\n        this.valueModel = node;\n        this.onCloseTree();\n      }\n    },\n    // 隐藏树状菜单\n    onCloseTree: function onCloseTree() {\n      this.$refs.popover.showPopper = false;\n    },\n    // 显示时触发\n    onShowPopover: function onShowPopover() {\n      this.$refs.tree.filter(false);\n    },\n    // 隐藏时触发\n    onHidePopover: function onHidePopover() {\n      this.$emit(\"selected\", this.valueModel);\n      this.$emit(\"input\", this.valueModel);\n    }\n  }\n};",{"version":3,"sources":["treeDeptReturnObj.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- 树状选择器 -->\r\n<template>\r\n  <el-popover\r\n    ref=\"popover\"\r\n    placement=\"bottom-start\"\r\n    trigger=\"click\"\r\n    :disabled=\"disabled\"\r\n    @show=\"onShowPopover\"\r\n    @hide=\"onHidePopover\"\r\n  >\r\n    <el-tree\r\n      ref=\"tree\"\r\n      class=\"select-tree\"\r\n      :highlight-current=\"true\"\r\n      :style=\"`min-width: ${treeWidth}`\"\r\n      :data=\"options\"\r\n      :props=\"props\"\r\n      :node-key=\"valType\"\r\n      :expand-on-click-node=\"false\"\r\n      :check-on-click-node=\"true\"\r\n      :default-expand-all=\"defaultExpandAll\"\r\n      :default-expanded-keys=\"defaultExpandedKeys\"\r\n      :current-node-key=\"valueModel\"\r\n      :filter-node-method=\"filterNode\"\r\n      @node-click=\"onClickNode\"\r\n    >\r\n      <!-- <span class=\"custom-tree-node\" slot-scope=\"{ node, data }\">\r\n        <span>\r\n          <i :class=\"node.icon\"></i>\r\n          {{ node.label }}\r\n        </span>\r\n      </span>-->\r\n    </el-tree>\r\n    <el-input\r\n      slot=\"reference\"\r\n      ref=\"input\"\r\n      v-model=\"labelModel\"\r\n      clearable\r\n      :disabled=\"disabled\"\r\n      suffix-icon=\"el-icon-arrow-down\"\r\n      @change=\"valueModel=''\"\r\n      :placeholder=\"placeholder\"\r\n    ></el-input>\r\n  </el-popover>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"tree-dept\",\r\n  props: {\r\n    // 接收绑定参数\r\n    value: null,\r\n    valType: {\r\n      default: \"code\",\r\n      type: String\r\n    },\r\n    defaultExpandAll: {\r\n      default: false,\r\n      type: Boolean\r\n    },\r\n    // 输入框宽度\r\n    width: String,\r\n    type: {\r\n      type: String,\r\n      default: null\r\n    },\r\n    // 输入框占位符\r\n    placeholder: {\r\n      type: String,\r\n      default: \"请选择\"\r\n    },\r\n    selType: {\r\n      type: Number,\r\n      default: null\r\n    },\r\n    // 是否禁用\r\n    disabled: {\r\n      type: Boolean\r\n    }\r\n  },\r\n  watch: {\r\n    value(val) {\r\n      this.valueModel = val;\r\n    },\r\n    valueModel(val) {\r\n      if (!val) {\r\n        this.labelModel = \"\";\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      options: [],\r\n      // 菜单宽度\r\n      treeWidth: \"auto\",\r\n      // 输入框显示值\r\n      labelModel: \"\",\r\n      // 实际请求传值\r\n      valueModel: this.value,\r\n      props: {\r\n        value: this.valType,\r\n        label: \"name\",\r\n        children: \"sublist\"\r\n      },\r\n      defaultExpandedKeys: []\r\n    };\r\n  },\r\n  created() {\r\n    if (this.valueModel != undefined)\r\n      this.defaultExpandedKeys = [this.valueModel];\r\n\r\n    this.getList();\r\n    // 获取输入框宽度同步至树状菜单宽度\r\n    this.$nextTick(() => {\r\n      this.treeWidth = `${(this.width ||\r\n        this.$refs.input.$refs.input.clientWidth) - 24}px`;\r\n    });\r\n  },\r\n  updated() {\r\n    var defaultNode = this.$refs.tree.getNode(this.valueModel);\r\n    if (defaultNode) {\r\n      this.labelModel = defaultNode.data[this.props.label];\r\n    }\r\n  },\r\n  methods: {\r\n    async getList() {\r\n      var self = this;\r\n      var requestParam;\r\n      if (self.type) {\r\n        requestParam = {\r\n          type: self.type,\r\n          used: true\r\n        };\r\n      } else {\r\n        requestParam = {\r\n          used: true\r\n        };\r\n      }\r\n\r\n      var list = await this.request(this.api.user.DEPART_LIST_POST, requestParam);\r\n      this.options = list;\r\n    },\r\n    filterNode(val, data) {\r\n      if (!val) return true;\r\n      var isCur = data[this.props.value] == val;\r\n      if (isCur) {\r\n        this.labelModel = data[this.props.label];\r\n      }\r\n      return isCur;\r\n    },\r\n    // 单击节点\r\n    onClickNode(node) {\r\n      if (\r\n        this.selType == null ||\r\n        (this.selType != null && this.selType == node.type)\r\n      ) {\r\n        this.labelModel = node[this.props.label];\r\n        this.valueModel = node;\r\n        this.onCloseTree();\r\n      }\r\n    },\r\n    // 隐藏树状菜单\r\n    onCloseTree() {\r\n      this.$refs.popover.showPopper = false;\r\n    },\r\n    // 显示时触发\r\n    onShowPopover() {\r\n      this.$refs.tree.filter(false);\r\n    },\r\n    // 隐藏时触发\r\n    onHidePopover() {\r\n      this.$emit(\"selected\", this.valueModel);\r\n      this.$emit(\"input\", this.valueModel);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.el-input.el-input--suffix {\r\n  cursor: pointer;\r\n  overflow: hidden;\r\n}\r\n.el-input.el-input--suffix.rotate .el-input__suffix {\r\n  transform: rotate(180deg);\r\n}\r\n.select-tree {\r\n  max-height: 350px;\r\n  overflow-y: scroll;\r\n}\r\n/* 菜单滚动条 */\r\n.select-tree::-webkit-scrollbar {\r\n  z-index: 11;\r\n  width: 6px;\r\n}\r\n.select-tree::-webkit-scrollbar-track,\r\n.select-tree::-webkit-scrollbar-corner {\r\n  background: #fff;\r\n}\r\n.select-tree::-webkit-scrollbar-thumb {\r\n  border-radius: 5px;\r\n  width: 6px;\r\n  background: #b4bccc;\r\n}\r\n.select-tree::-webkit-scrollbar-track-piece {\r\n  background: #fff;\r\n  width: 6px;\r\n}\r\n</style>\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src/components"}]}