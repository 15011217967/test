{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\workorder\\config\\workOrder_time_add.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\workorder\\config\\workOrder_time_add.vue","mtime":1574160264949},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport _typeof from \"C:\\\\Users\\\\EDZ\\\\Desktop\\\\\\u7814\\u53D1\\u9879\\u76EE\\\\vue-project\\\\trunk\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/typeof\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.object.values\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.replace\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nimport { getToken } from \"@/utils/auth\";\nimport codeSet from \"@/components/codeSet\";\nimport treeDept from \"@/components/treeDept\";\nimport { filter } from \"minimatch\";\nimport { get } from \"http\";\nvar token = getToken();\nexport default {\n  data: function data() {\n    return {\n      // 预警类型列表\n      warningTypeList: [],\n      // 消息模板列表\n      messageTemplate_List: [],\n      // 适用工单列表\n      findAll_List: [],\n      // 预警设置列表备份，添加时候直接深拷贝使用\n      \"alarmSetsBck\": {},\n      // 新增工单时限对象集合\n      jobOrderTimeSaveObj: {\n        \"alarmSets\": [// 预警设置列表\n        {\n          // 预警结束时间\n          endTime: {\n            day: '00',\n            hour: '00',\n            minute: '00',\n            s: '00'\n          },\n          \"adminReceive\": \"\",\n          // 管理者接收\n          \"localRemind\": \"\",\n          // 站内提醒\n          \"signerReceive\": false,\n          // 工单签发人接收\n          \"warnType\": \"\",\n          // 预警类型\n          localRemindDisabled: false,\n          // 站内提醒状态\n          adminReceiveDisabled: false // 管理者状态\n\n        }],\n        // 处理时间时长\n        handleTime: {\n          day: '00',\n          hour: '00',\n          minute: '00',\n          s: '00'\n        },\n        // 流入工单池时间\n        jobPoolTime: {\n          day: '00',\n          hour: '00',\n          minute: '00',\n          s: '00'\n        },\n        \"applyWorkOrders\": [],\n        // 适用工单\n        \"isStart\": false,\n        // 启停状态\n        \"name\": \"\" // 时限管理名称\n\n      }\n    };\n  },\n  created: function created() {\n    // 拷贝预警设置\n    this.alarmSetsBck = JSON.parse(JSON.stringify(this.jobOrderTimeSaveObj.alarmSets[0]));\n    this.getWarningTypeList();\n    this.getMessageTemplate_List();\n    this.getFindAll_List();\n  },\n  methods: {\n    /**\r\n     * 获取预警类型\r\n     */\n    getWarningTypeList: function getWarningTypeList() {\n      var that = this;\n      this.request(that.api.job_order.getWarningType_List).then(function (res) {\n        that.warningTypeList = res;\n      });\n    },\n\n    /**\r\n     * 获取消息模板\r\n     */\n    getMessageTemplate_List: function getMessageTemplate_List() {\n      var that = this;\n      this.request(that.api.job_order.getMessageTemplate_List).then(function (res) {\n        that.messageTemplate_List = res;\n      });\n    },\n\n    /**\r\n     * 获取适用工单\r\n     */\n    getFindAll_List: function getFindAll_List() {\n      var that = this;\n      this.request(that.api.job_order.getFindAll_List, {}).then(function (res) {\n        that.findAll_List = res;\n      });\n    },\n\n    /**\r\n     * 补零函数\r\n     * @param { Nunber | String } item 数字或数字字符串 如： 1，'1'\r\n     * @return { String } 如：'01'\r\n     */\n    replenishZero: function replenishZero(item) {\n      item = parseInt(item);\n      return item < 10 ? \"0\".concat(item) : item;\n    },\n\n    /**\r\n     * 预防js注入攻击函数\r\n     * @param { String } str 输入的文本\r\n     */\n    preventGsImplantAttack: function preventGsImplantAttack(str) {\n      var res = /(<|>)/ig;\n      return str.replace(res, function (item) {\n        switch (item) {\n          case '<':\n            return '&lt;';\n            break;\n\n          case '>':\n            return '&gt;';\n            break;\n        }\n      });\n    },\n\n    /**\r\n     * 保存工单时间\r\n     */\n    saveJobTime: function saveJobTime() {\n      var _this = this;\n\n      var that = this,\n          nameReg = /^([\\w\\u4E00-\\u9FA5_\\-]+)+$/;\n\n      if (!that.jobOrderTimeSaveObj.name) {\n        this.warn('时限管理名称不能为空！');\n        return;\n      }\n\n      ;\n\n      if (!nameReg.test(that.jobOrderTimeSaveObj.name)) {\n        this.warn('时限管理名称不能含有特殊字符！');\n        return;\n      }\n\n      ;\n      var handleTimeEvery = Object.values(that.jobOrderTimeSaveObj.handleTime).every(function (item) {\n        return item == false;\n      });\n\n      if (handleTimeEvery) {\n        this.warn('处理时长不能为空！');\n        return;\n      }\n\n      ;\n\n      for (var _item in that.jobOrderTimeSaveObj.handleTime) {\n        if (that.jobOrderTimeSaveObj.handleTime[_item] < 0) {\n          this.warn('处理时长不能含有负数！');\n          return;\n        }\n      }\n\n      ;\n\n      for (var _item2 in that.jobOrderTimeSaveObj.jobPoolTime) {\n        if (that.jobOrderTimeSaveObj.jobPoolTime[_item2] < 0) {\n          this.warn('流入工单池时间不能含有负数！');\n          return;\n        }\n      }\n\n      ; // if(!that.jobOrderTimeSaveObj.applyWorkOrders.length) {\n      //     this.warn('请选择适用工单！');\n      //     return;\n      // };\n\n      if (!that.jobOrderTimeSaveObj.alarmSets.length) {\n        this.warn('请添加预警配置！');\n        return;\n      }\n\n      ;\n\n      var _loop = function _loop() {\n        item = that.jobOrderTimeSaveObj.alarmSets[i];\n        var endTimeEvery = Object.values(item.endTime).every(function (item) {\n          return item == false;\n        });\n\n        if (endTimeEvery) {\n          _this.warn('预警时间段不能为空！');\n\n          return {\n            v: void 0\n          };\n        }\n\n        ;\n\n        for (var _i in item.endTime) {\n          if (item.endTime[_i] < 0) {\n            _this.warn('预警时间段不能含有负数！');\n\n            return {\n              v: void 0\n            };\n          }\n        }\n\n        ; //\n\n        var endTimeArr = [];\n        that.jobOrderTimeSaveObj.alarmSets.forEach(function (items, indexs) {\n          for (name in items.endTime) {\n            items.endTime[name] = _this.replenishZero(items.endTime[name]);\n          }\n\n          ;\n\n          if (items !== item) {\n            endTimeArr.push({\n              endTime: items.endTime\n            });\n          }\n\n          ;\n        });\n        var isEndTimes = endTimeArr.find(function (isItem, IsIndex) {\n          var item_endTime = parseInt(Object.values(item.endTime).join(''));\n          var items_endTime = parseInt(Object.values(isItem.endTime).join(''));\n          return item_endTime === items_endTime;\n        });\n\n        if (isEndTimes) {\n          isEndTimes.endTime.isEndTime = true;\n\n          _this.warn('预警时间段不能重复设置！');\n\n          return {\n            v: void 0\n          };\n        }\n\n        ;\n\n        if (!item.warnType) {\n          _this.warn('请选择预警类型！');\n\n          return {\n            v: void 0\n          };\n        }\n\n        ;\n\n        if (item.localRemindDisabled && !item.localRemind) {\n          _this.warn('请选择预警提醒！');\n\n          return {\n            v: void 0\n          };\n        }\n\n        ;\n\n        if (item.localRemindDisabled && !item.signerReceive && !item.adminReceiveDisabled) {\n          _this.warn('请勾选接收人！');\n\n          return {\n            v: void 0\n          };\n        }\n\n        ;\n\n        if (item.adminReceiveDisabled && !item.adminReceive) {\n          _this.warn('请选择所属机构！');\n\n          return {\n            v: void 0\n          };\n        }\n\n        ;\n      };\n\n      for (var i = 0; i < that.jobOrderTimeSaveObj.alarmSets.length; i++) {\n        var item;\n\n        var _ret = _loop();\n\n        if (_typeof(_ret) === \"object\") return _ret.v;\n      }\n\n      ;\n      console.log(nameReg.test(that.jobOrderTimeSaveObj.name)); // 数据提交之前，最后一次深拷贝\n\n      var data = JSON.parse(JSON.stringify(that.jobOrderTimeSaveObj)); // 处理数据\n\n      data.handleTime = this.obj2Str(data.handleTime);\n      data.jobPoolTime = this.obj2Str(data.jobPoolTime);\n      data.isStart = data.isStart ? 1 : 0;\n      data.alarmSets.forEach(function (item, index) {\n        item.endTime = _this.obj2Str(item.endTime); // 如果站内消息没有勾选，清除站内提醒数据\n\n        item.localRemind = item.localRemindDisabled ? item.localRemind : ''; // 如果接收人没有勾选，清除管理者接收数据\n\n        item.adminReceive = item.adminReceiveDisabled || item.signerReceive ? item.adminReceive : '';\n      });\n      console.log(data); // return;\n\n      this.request(that.api.job_order.saveJobOrderTime, data).then(function (res) {\n        that.warn('新增工单时限成功！', 'success');\n        that.href('workorder/config/workOrder_time_list');\n      });\n    },\n\n    /**\r\n     * 提示\r\n     */\n    warn: function warn(message, type) {\n      this.$message({\n        message: message,\n        type: type || 'warning'\n      });\n    },\n\n    /**\r\n     * 对象拼接字符串\r\n     * @param { Object } timeObj 时间对象\r\n     */\n    obj2Str: function obj2Str(timeObj) {\n      var newTimeObj = '';\n\n      for (var item in timeObj) {\n        if (timeObj[item]) {\n          newTimeObj += \"\".concat(timeObj[item], \"-\");\n        } else {\n          newTimeObj += \"0-\";\n        }\n      }\n\n      ;\n      return newTimeObj.replace(/-$/g, '');\n    },\n\n    /**\r\n     * 添加预警\r\n     */\n    addAlarmSets: function addAlarmSets() {\n      var that = this;\n      that.jobOrderTimeSaveObj.alarmSets.push(JSON.parse(JSON.stringify(that.alarmSetsBck)));\n    },\n\n    /**\r\n     * 删除预警\r\n     */\n    closeAlarmSets: function closeAlarmSets(index) {\n      var that = this;\n      that.jobOrderTimeSaveObj.alarmSets.splice(index, 1);\n    },\n\n    /**\r\n     * 添加适用工单，且添加的工单不能重复\r\n     * @param { Object } item 选中的每一项\r\n     */\n    addApplyWorkOrder: function addApplyWorkOrder(item) {\n      var that = this;\n      var isHas = that.jobOrderTimeSaveObj.applyWorkOrders.every(function (i) {\n        return i.workOrderId != item.id;\n      });\n      if (!isHas) return;\n      that.jobOrderTimeSaveObj.applyWorkOrders.push({\n        workOrderId: item.id,\n        workOrderName: item.name\n      });\n    },\n\n    /**\r\n     * 删除适用工单\r\n     */\n    deleteTag: function deleteTag(index) {\n      var that = this;\n      that.jobOrderTimeSaveObj.applyWorkOrders.splice(index, 1);\n    },\n\n    /**\r\n     * 跳转\r\n     */\n    href: function href(routeName) {\n      this.$router.push({\n        path: \"/\".concat(routeName)\n      });\n    },\n\n    /**\r\n     * 领取工单\r\n     */\n    open2: function open2() {\n      this.$message({\n        message: \"工单领取成功！\",\n        type: \"success\"\n      });\n    }\n  },\n  components: {\n    codeSet: codeSet,\n    treeDept: treeDept\n  }\n};",{"version":3,"sources":["workOrder_time_add.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- 创建新工单 -->\r\n<template>\r\n  <div>\r\n    <!-- 新建工单 -->\r\n    <div class=\"item-margin\" style=\"height:100%;\">\r\n      <div class=\"item-form\">\r\n        <el-form ref=\"form\" :model=\"jobOrderTimeSaveObj\">\r\n          <div class=\"display-flex leftName\">\r\n            <span class=\"leftName-span\"><i class=\"colorRed\">*&nbsp;</i>时限管理名称：</span>\r\n            <el-form-item>\r\n              <el-input maxlength=\"30\"  v-model=\"jobOrderTimeSaveObj.name\" class=\"width350\"></el-input>\r\n            </el-form-item>\r\n          </div>\r\n          <div class=\"display-flex leftName\">\r\n            <span class=\"leftName-span\"><i class=\"colorRed\">*&nbsp;</i>设置处理时长：</span>\r\n            <el-form-item>\r\n              <el-input type=\"number\" v-model=\"jobOrderTimeSaveObj.handleTime.day\" class=\"width50\"></el-input>&nbsp;天&nbsp;\r\n              <el-input type=\"number\" v-model=\"jobOrderTimeSaveObj.handleTime.hour\" class=\"width50\"></el-input>&nbsp;时&nbsp;\r\n              <el-input type=\"number\" v-model=\"jobOrderTimeSaveObj.handleTime.minute\" class=\"width50\"></el-input>&nbsp;分&nbsp;\r\n              <el-input type=\"number\" v-model=\"jobOrderTimeSaveObj.handleTime.s\" class=\"width50\"></el-input>&nbsp;秒&nbsp;\r\n            </el-form-item>\r\n          </div>\r\n          <div class=\"display-flex leftName\">\r\n            <span class=\"leftName-span\"><i class=\"colorRed\">&nbsp;</i>设置流入工单池时间：</span>\r\n            <el-form-item>\r\n              <el-input type=\"number\" v-model=\"jobOrderTimeSaveObj.jobPoolTime.day\" class=\"width50\"></el-input>&nbsp;天&nbsp;\r\n              <el-input type=\"number\" v-model=\"jobOrderTimeSaveObj.jobPoolTime.hour\" class=\"width50\"></el-input>&nbsp;时&nbsp;\r\n              <el-input type=\"number\" v-model=\"jobOrderTimeSaveObj.jobPoolTime.minute\" class=\"width50\"></el-input>&nbsp;分&nbsp;\r\n              <el-input type=\"number\" v-model=\"jobOrderTimeSaveObj.jobPoolTime.s\" class=\"width50\"></el-input>&nbsp;秒&nbsp;\r\n            </el-form-item>\r\n          </div>\r\n          <div class=\"display-flex leftName\">\r\n            <span class=\"leftName-span\">适用工单：</span>\r\n            <el-form-item >\r\n                <div class=\"width600\">\r\n                  <el-tag\r\n                    class=\"mr-10\"\r\n                    v-for=\"(item, index) in jobOrderTimeSaveObj.applyWorkOrders\"\r\n                    :key=\"item.workOrderName\"\r\n                    closable\r\n                    :type=\"item.type\"\r\n                    @close=\"deleteTag(index)\"\r\n                  >{{item.workOrderName}}\r\n                  </el-tag>\r\n                </div>\r\n                <el-dropdown\r\n                  size=\"medium\"\r\n                  :split-button=\"true\"\r\n                  type=\"primary\"\r\n                  @command=\"addApplyWorkOrder\">\r\n                  添加\r\n                  <el-dropdown-menu slot=\"dropdown\">\r\n                    <el-dropdown-item :command=\"item\" :key=\"index\" v-for=\"(item, index) in findAll_List\">{{ item.name }}</el-dropdown-item>\r\n                  </el-dropdown-menu>\r\n                </el-dropdown>\r\n              </el-form-item>\r\n          </div>\r\n          <div class=\"display-flex leftName\">\r\n            <span class=\"leftName-span\"><i class=\"colorRed\">*&nbsp;</i>预警设置：</span>\r\n            <el-form-item>\r\n              <div class=\"set-warning mt-10\" :class=\"{isEndTime:alaItem.endTime.isEndTime}\" :key=\"alaIndex\" v-for=\"(alaItem, alaIndex) in jobOrderTimeSaveObj.alarmSets\">\r\n                <i class=\"el-icon-close\" @click=\"closeAlarmSets(alaIndex)\"></i>\r\n                <el-form ref=\"form\" :model=\"alaItem\">\r\n                  <div class=\"display-flex leftName2 mt-20\">\r\n                    <span class=\"leftName-span2\"><i class=\"colorRed\">*&nbsp;</i>预警时间段：</span>\r\n                    <el-form-item>\r\n                      <el-input type=\"number\" v-model=\"alaItem.endTime.day\" class=\"width50\"></el-input>&nbsp;天&nbsp;\r\n                      <el-input type=\"number\" v-model=\"alaItem.endTime.hour\" class=\"width50\"></el-input>&nbsp;时&nbsp;\r\n                      <el-input type=\"number\" v-model=\"alaItem.endTime.minute\" class=\"width50\"></el-input>&nbsp;分&nbsp;\r\n                      <el-input type=\"number\" v-model=\"alaItem.endTime.s\" class=\"width50\"></el-input>&nbsp;秒&nbsp;\r\n                    </el-form-item>\r\n                  </div>\r\n                  <div class=\"display-flex leftName2 mt-20\">\r\n                    <span class=\"leftName-span2\"><i class=\"colorRed\">*&nbsp;</i>预警类型：</span>\r\n                    <el-form-item>\r\n                      <el-select v-model=\"alaItem.warnType\" placeholder=\"请选择\">\r\n                        <el-option\r\n                          :value=\"wItem.id\"\r\n                          :label=\"wItem.tag\"\r\n                          :key=\"wItem.id\"\r\n                          :style=\"{background:wItem.color}\"\r\n                          class=\"warningTypeColor\"\r\n                          v-for=\"wItem in warningTypeList.data\">\r\n                        </el-option>\r\n                      </el-select>\r\n                    </el-form-item>\r\n                  </div>\r\n                  <el-form-item label=\"预警提醒：\" label-width=\"110px\">\r\n                    <div class=\"display-flex\">\r\n                      <template>\r\n                        <!-- `checked` 为 true 或 false -->\r\n                        <el-checkbox v-model=\"alaItem.localRemindDisabled\" hca>站内提醒</el-checkbox>\r\n                      </template>\r\n                      <el-select\r\n                        v-model=\"alaItem.localRemind\"\r\n                        :disabled=\"!alaItem.localRemindDisabled\"\r\n                        placeholder=\"请选择消息模板\">\r\n                        <el-option\r\n                          :value=\"mItem.id\"\r\n                          :label=\"mItem.name\"\r\n                          :key=\"mItem.id\"\r\n                          v-for=\"mItem in messageTemplate_List.data\">\r\n                        </el-option>\r\n                      </el-select>\r\n                    </div>\r\n                  </el-form-item>\r\n                  <el-form-item label=\"接收人：\" label-width=\"110px\" class=\" mt-10\">\r\n                    <div class=\"display-flex\">\r\n                      <template>\r\n                        <el-checkbox v-model=\"alaItem.signerReceive\">工单签发人</el-checkbox>\r\n                        <el-checkbox v-model=\"alaItem.adminReceiveDisabled\">管理者</el-checkbox>\r\n                      </template>\r\n                      所属机构：&nbsp;\r\n                      <tree-dept\r\n                        v-model=\"alaItem.adminReceive\"\r\n                        :disabled=\"!alaItem.adminReceiveDisabled\"\r\n                        val-type=\"id\"\r\n                        :sel-type=\"1\"\r\n                        :default-expand-all=\"true\"\r\n                      ></tree-dept>\r\n                    </div>\r\n                  </el-form-item>\r\n                </el-form>\r\n              </div>\r\n              <el-button class=\"mt-10\" @click=\"addAlarmSets\">添加</el-button>\r\n            </el-form-item>\r\n          </div>\r\n          <div class=\"display-flex leftName\">\r\n            <span class=\"leftName-span\">启停状态:</span>\r\n            <el-form-item>\r\n              <el-switch\r\n                active-color=\"#13ce66\"\r\n                inactive-color=\"#9d9d9d\"\r\n                v-model=\"jobOrderTimeSaveObj.isStart\">\r\n              </el-switch>\r\n            </el-form-item>\r\n          </div>\r\n          <el-form-item label-width=\"200px\">\r\n            <el-button type=\"primary\" v-no-more-click @click=\"saveJobTime\"  size=\"small\">确定</el-button>\r\n            <el-button @click=\"href('workorder/config/workOrder_time_list')\" size=\"small\">取消</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n    </div>\r\n    <!-- 新建工单 -->\r\n  </div>\r\n</template>\r\n<!-- 工单池 -->\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { getToken } from \"@/utils/auth\";\r\nimport codeSet from \"@/components/codeSet\";\r\nimport treeDept from \"@/components/treeDept\";\r\nimport { filter } from \"minimatch\";\r\nimport { get } from \"http\";\r\nlet token = getToken();\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 预警类型列表\r\n      warningTypeList:[],\r\n      // 消息模板列表\r\n      messageTemplate_List:[],\r\n      // 适用工单列表\r\n      findAll_List:[],\r\n\r\n      // 预警设置列表备份，添加时候直接深拷贝使用\r\n      \"alarmSetsBck\":{},\r\n      // 新增工单时限对象集合\r\n      jobOrderTimeSaveObj:{\r\n        \"alarmSets\": [// 预警设置列表\r\n          {\r\n            // 预警结束时间\r\n            endTime: {\r\n              day:'00',\r\n              hour:'00',\r\n              minute:'00',\r\n              s:'00'\r\n            },\r\n            \"adminReceive\": \"\",// 管理者接收\r\n            \"localRemind\": \"\",// 站内提醒\r\n            \"signerReceive\": false,// 工单签发人接收\r\n            \"warnType\": \"\",// 预警类型\r\n            localRemindDisabled:false,// 站内提醒状态\r\n            adminReceiveDisabled:false// 管理者状态\r\n          }\r\n        ],\r\n        // 处理时间时长\r\n        handleTime: {\r\n          day:'00',\r\n          hour:'00',\r\n          minute:'00',\r\n          s:'00'\r\n        },\r\n        // 流入工单池时间\r\n        jobPoolTime: {\r\n          day:'00',\r\n          hour:'00',\r\n          minute:'00',\r\n          s:'00'\r\n        },\r\n        \"applyWorkOrders\": [],// 适用工单\r\n        \"isStart\": false,// 启停状态\r\n        \"name\": \"\",// 时限管理名称\r\n      }\r\n    };\r\n  },\r\n  created() {\r\n    // 拷贝预警设置\r\n    this.alarmSetsBck = JSON.parse(JSON.stringify(this.jobOrderTimeSaveObj.alarmSets[0]));\r\n    this.getWarningTypeList();\r\n    this.getMessageTemplate_List();\r\n    this.getFindAll_List();\r\n  },\r\n  methods: {\r\n    /**\r\n     * 获取预警类型\r\n     */\r\n    getWarningTypeList() {\r\n      const that = this;\r\n\r\n      this.request(\r\n        that.api.job_order.getWarningType_List,\r\n      ).then(res => {\r\n        that.warningTypeList = res;\r\n      });\r\n    },\r\n    /**\r\n     * 获取消息模板\r\n     */\r\n    getMessageTemplate_List() {\r\n      const that = this;\r\n\r\n      this.request(\r\n        that.api.job_order.getMessageTemplate_List,\r\n      ).then(res => {\r\n        that.messageTemplate_List = res;\r\n      });\r\n    },\r\n    /**\r\n     * 获取适用工单\r\n     */\r\n    getFindAll_List() {\r\n      const that = this;\r\n\r\n      this.request(\r\n        that.api.job_order.getFindAll_List,{}\r\n      ).then(res => {\r\n        that.findAll_List = res;\r\n      });\r\n    },\r\n    /**\r\n     * 补零函数\r\n     * @param { Nunber | String } item 数字或数字字符串 如： 1，'1'\r\n     * @return { String } 如：'01'\r\n     */\r\n    replenishZero(item) {\r\n        item = parseInt(item);\r\n\r\n        return item < 10 ? `0${item}` : item;\r\n    },\r\n    /**\r\n     * 预防js注入攻击函数\r\n     * @param { String } str 输入的文本\r\n     */\r\n    preventGsImplantAttack(str) {\r\n      const res = /(<|>)/ig;\r\n\r\n      return str.replace(res ,item => {\r\n        switch(item) {\r\n          case '<':\r\n            return '&lt;';\r\n            break;\r\n          case '>':\r\n            return '&gt;';\r\n            break;\r\n        }\r\n      });\r\n    },\r\n    /**\r\n     * 保存工单时间\r\n     */\r\n    saveJobTime() {\r\n      const that = this,\r\n            nameReg = /^([\\w\\u4E00-\\u9FA5_\\-]+)+$/;\r\n\r\n      if(!that.jobOrderTimeSaveObj.name) {\r\n        this.warn('时限管理名称不能为空！');\r\n        return;\r\n      };\r\n      if(!nameReg.test(that.jobOrderTimeSaveObj.name)) {\r\n        this.warn('时限管理名称不能含有特殊字符！');\r\n        return;\r\n      };\r\n      let handleTimeEvery = Object.values(that.jobOrderTimeSaveObj.handleTime).every(item => {\r\n        return item == false;\r\n      });\r\n      if(handleTimeEvery) {\r\n          this.warn('处理时长不能为空！');\r\n          return;\r\n      };\r\n      for(let item in that.jobOrderTimeSaveObj.handleTime) {\r\n        if(that.jobOrderTimeSaveObj.handleTime[item] < 0) {\r\n          this.warn('处理时长不能含有负数！');\r\n          return;\r\n        }\r\n      };\r\n      for(let item in that.jobOrderTimeSaveObj.jobPoolTime) {\r\n        if(that.jobOrderTimeSaveObj.jobPoolTime[item] < 0) {\r\n          this.warn('流入工单池时间不能含有负数！');\r\n          return;\r\n        }\r\n      };\r\n      // if(!that.jobOrderTimeSaveObj.applyWorkOrders.length) {\r\n      //     this.warn('请选择适用工单！');\r\n      //     return;\r\n      // };\r\n      if(!that.jobOrderTimeSaveObj.alarmSets.length) {\r\n          this.warn('请添加预警配置！');\r\n          return;\r\n      };\r\n      for(var i = 0; i < that.jobOrderTimeSaveObj.alarmSets.length; i++){\r\n        var item = that.jobOrderTimeSaveObj.alarmSets[i];\r\n        let endTimeEvery = Object.values(item.endTime).every(item => {\r\n          return item == false;\r\n        });\r\n        if(endTimeEvery) {\r\n            this.warn('预警时间段不能为空！');\r\n            return;\r\n        };\r\n        for(let i in item.endTime) {\r\n          if(item.endTime[i] < 0) {\r\n            this.warn('预警时间段不能含有负数！');\r\n            return;\r\n          }\r\n        };\r\n        //\r\n        let endTimeArr = [];\r\n        that.jobOrderTimeSaveObj.alarmSets.forEach((items, indexs) => {\r\n          for(name in items.endTime) {\r\n            items.endTime[name] = this.replenishZero(items.endTime[name]);\r\n          };\r\n          if(items !== item) {\r\n            endTimeArr.push({endTime: items.endTime});\r\n          };\r\n        });\r\n        let isEndTimes = endTimeArr.find((isItem, IsIndex) => {\r\n          let item_endTime = parseInt(Object.values(item.endTime).join(''));\r\n          let items_endTime = parseInt(Object.values(isItem.endTime).join(''));\r\n          return item_endTime === items_endTime;\r\n        });\r\n        if(isEndTimes) {\r\n          isEndTimes.endTime.isEndTime = true;\r\n          this.warn('预警时间段不能重复设置！');\r\n          return;\r\n        };\r\n        if(!item.warnType) {\r\n          this.warn('请选择预警类型！');\r\n          return;\r\n        };\r\n        if(item.localRemindDisabled && !item.localRemind) {\r\n          this.warn('请选择预警提醒！');\r\n          return;\r\n        };\r\n        if(item.localRemindDisabled && !item.signerReceive  && !item.adminReceiveDisabled) {\r\n          this.warn('请勾选接收人！');\r\n          return;\r\n        };\r\n        if(item.adminReceiveDisabled && !item.adminReceive) {\r\n          this.warn('请选择所属机构！');\r\n          return;\r\n        };\r\n      };\r\n      console.log(nameReg.test(that.jobOrderTimeSaveObj.name))\r\n      // 数据提交之前，最后一次深拷贝\r\n      let data = JSON.parse(JSON.stringify(that.jobOrderTimeSaveObj));\r\n      // 处理数据\r\n      data.handleTime = this.obj2Str(data.handleTime);\r\n      data.jobPoolTime = this.obj2Str(data.jobPoolTime);\r\n      data.isStart = data.isStart ? 1 : 0;\r\n      data.alarmSets.forEach((item ,index) => {\r\n        item.endTime = this.obj2Str(item.endTime);\r\n        // 如果站内消息没有勾选，清除站内提醒数据\r\n        item.localRemind = item.localRemindDisabled ?  item.localRemind : '';\r\n        // 如果接收人没有勾选，清除管理者接收数据\r\n        item.adminReceive = (item.adminReceiveDisabled || item.signerReceive) ? item.adminReceive : '';\r\n      });\r\n      console.log(data)\r\n      // return;\r\n      this.request(\r\n        that.api.job_order.saveJobOrderTime,\r\n        data\r\n      ).then(res => {\r\n         that.warn('新增工单时限成功！','success');\r\n          that.href('workorder/config/workOrder_time_list');\r\n      });\r\n    },\r\n    /**\r\n     * 提示\r\n     */\r\n    warn(message, type) {\r\n      this.$message({\r\n        message: message,\r\n        type: type || 'warning'\r\n      });\r\n    },\r\n    /**\r\n     * 对象拼接字符串\r\n     * @param { Object } timeObj 时间对象\r\n     */\r\n    obj2Str(timeObj) {\r\n      let  newTimeObj ='';\r\n\r\n      for(var item in timeObj) {\r\n        if(timeObj[item]) {\r\n          newTimeObj += `${timeObj[item]}-`;\r\n        }else{\r\n          newTimeObj += `0-`;\r\n        }\r\n      };\r\n      return newTimeObj.replace(/-$/g,'');\r\n    },\r\n    /**\r\n     * 添加预警\r\n     */\r\n    addAlarmSets() {\r\n      const that = this;\r\n\r\n      that.jobOrderTimeSaveObj.alarmSets.push(JSON.parse(JSON.stringify(that.alarmSetsBck)));\r\n    },\r\n    /**\r\n     * 删除预警\r\n     */\r\n    closeAlarmSets(index) {\r\n      const that = this;\r\n\r\n      that.jobOrderTimeSaveObj.alarmSets.splice(index, 1);\r\n    },\r\n    /**\r\n     * 添加适用工单，且添加的工单不能重复\r\n     * @param { Object } item 选中的每一项\r\n     */\r\n    addApplyWorkOrder(item) {\r\n      const that = this;\r\n\r\n      let isHas = that.jobOrderTimeSaveObj.applyWorkOrders.every((i) => {\r\n        return i.workOrderId != item.id;\r\n      });\r\n      if(!isHas) return;\r\n      that.jobOrderTimeSaveObj.applyWorkOrders.push({\r\n        workOrderId:item.id,\r\n        workOrderName:item.name\r\n      });\r\n    },\r\n    /**\r\n     * 删除适用工单\r\n     */\r\n    deleteTag(index) {\r\n       const that = this;\r\n\r\n      that.jobOrderTimeSaveObj.applyWorkOrders.splice(index, 1);\r\n    },\r\n    /**\r\n     * 跳转\r\n     */\r\n    href(routeName) {\r\n      this.$router.push({\r\n        path: `/${routeName}`,\r\n      });\r\n    },\r\n    /**\r\n     * 领取工单\r\n     */\r\n    open2() {\r\n      this.$message({\r\n        message: \"工单领取成功！\",\r\n        type: \"success\"\r\n      });\r\n    },\r\n  },\r\n  components: {\r\n    codeSet,\r\n    treeDept\r\n  }\r\n};\r\n</script>\r\n<style  lang=\"less\" scoped>\r\n.warningTypeColor{\r\n  border-radius:5px;\r\n  color:#fff;\r\n  margin-bottom:1px;\r\n}\r\n.leftName{\r\n  .leftName-span{\r\n      width: 200px;\r\n      height: 40px;\r\n      line-height: 40px;\r\n      text-align: right;\r\n      padding-right: 10px;\r\n      .colorRed{\r\n        color: red;\r\n        line-height:30px;\r\n      }\r\n  }\r\n}\r\n.leftName2{\r\n  .leftName-span2{\r\n      width: 98px;\r\n      height: 40px;\r\n      line-height: 40px;\r\n      text-align: right;\r\n      padding-right: 10px;\r\n      .colorRed{\r\n        color: red;\r\n        line-height:30px;\r\n      }\r\n  }\r\n}\r\n.el-icon-close{\r\n  cursor:pointer;\r\n}\r\nh5 {\r\n  color: #222;\r\n  margin-left: -15px;\r\n}\r\n.set-warning {\r\n  width: 650px;\r\n  padding-bottom: 10px;\r\n  border: 1px solid #dcdfe6;\r\n  border-radius: 4px;\r\n  position: relative;\r\n  .el-icon-close {\r\n    position: absolute;\r\n    top: 15px;\r\n    right: 15px;\r\n  }\r\n}\r\n.isEndTime{\r\n  border: 1px solid #FFEC8B;\r\n  box-shadow: 0 2px 2px 2px #f5f5f5;\r\n}\r\n.width600{\r\n  width: 600px;\r\n}\r\n.width350 {\r\n  width: 350px;\r\n}\r\n.width50 {\r\n  width: 75px;\r\n}\r\n.test {\r\n  color: #9d9d9d;\r\n}\r\n.display-flex {\r\n  display: flex;\r\n}\r\n.justify-content {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n.content {\r\n  height: 50px;\r\n  line-height: 50px;\r\n}\r\n.text-index10 {\r\n  text-indent: 10px;\r\n}\r\n.tree {\r\n  width: 700px;\r\n  border-right: 1px solid #ccc;\r\n  border-top: 1px solid #ccc;\r\n  border-left: 1px solid #ccc;\r\n  span {\r\n    display: inline-block;\r\n    width: 50%;\r\n  }\r\n  span {\r\n    border-bottom: 1px solid #ccc;\r\n  }\r\n  .l {\r\n    border-right: 1px solid #ccc;\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/workorder/config"}]}