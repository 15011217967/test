{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\workorder\\config\\workOrder_add.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\workorder\\config\\workOrder_add.vue","mtime":1574160264951},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es7.object.values\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"C:\\\\Users\\\\EDZ\\\\Desktop\\\\\\u7814\\u53D1\\u9879\\u76EE\\\\vue-project\\\\trunk\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nimport { getToken } from \"@/utils/auth\";\nimport codeSet from \"@/components/codeSet\";\nimport treeDept from \"@/components/treeDeptReturnObj\";\nimport { filter } from \"minimatch\";\nimport { get } from \"http\";\nimport { constants } from 'crypto';\nvar token = getToken();\nexport default {\n  data: function data() {\n    var _ref;\n\n    return _ref = {\n      dept_obj: {},\n      // 具体单源默认value\n      TableSet_defalut: '请选择',\n      // 具体单源列表\n      TableSet_List: [],\n      // 源单编码列表\n      sourceOrderType_list: [{\n        id: 'measuringWorkOrder',\n        name: '量体工单'\n      }, {\n        id: 'returnWorkOrder',\n        name: '回访工单'\n      }, {\n        id: 'consumerCustomizedOrder',\n        name: '定制订单'\n      }, {\n        id: 'consumerReservationOrder',\n        name: '预约订单'\n      }, {\n        id: 'wideningWorkOrder',\n        name: '加宽量工单'\n      }, {\n        id: 'factoryWorkOrder',\n        name: '工厂下单工单'\n      }, {\n        id: 'factoryTrackingWorkOrder',\n        name: '工厂跟踪工单'\n      }, {\n        id: 'incrementWorkOrder',\n        name: '增值服务工单'\n      }],\n      // 新建表单提交数据\n      jobOrderExtendObj: {\n        busType: \"\",\n        // 业务类型\n        currentUser: \"\",\n        dept: \"\",\n        // 适用部门\n        layout: \"\",\n        // 工单排版\n        name: \"\",\n        // 工单名称\n        priority: '',\n        // 优先级\n        serveType: \"\",\n        // 服务类型\n        sourceOrderParams: {\n          sourceOrderChild: \"\",\n          sourceOrderType: \"\"\n        },\n        tableItems: [{\n          codeName: \"\",\n          currentUser: \"\",\n          id: \"\",\n          inputType: \"\",\n          isRead: 0,\n          itemAlias: \"\",\n          itemCode: \"\",\n          itemName: \"\",\n          itemType: 0,\n          jdbcType: \"\",\n          length: 0,\n          linkItemName: \"\",\n          linkTable: \"\",\n          nullAble: true,\n          precisions: 0,\n          primaryKey: true,\n          remarks: \"\",\n          sort: 0,\n          status: 0,\n          tableSetId: \"\",\n          visible: true\n        }],\n        tableSets: [{\n          alias: \"\",\n          code: \"\",\n          currentUser: \"\",\n          dataSourceId: \"\",\n          id: \"\",\n          linkType: 0,\n          orderExtendId: \"\",\n          remarks: \"\",\n          sort: 0,\n          sourceChileType: \"\",\n          sourceOrderType: \"\",\n          status: 0,\n          tableCn: \"\",\n          tableId: \"\",\n          tableName: \"\",\n          type: 0\n        }],\n        workOrderProcessItem: []\n      },\n      // 父类选择对象备份\n      tableSetsObj: {},\n      // 子类选择对象备份\n      tableItemsObj: {},\n      // 树形 start\n      listMapArr: [],\n      // 配置选项备份\n      listMapArr_backup: [],\n      defaultProps: {\n        children: \"children\",\n        label: \"label\"\n      },\n      // 树形 end\n      value2: true,\n      // 启用状态\n      formInline: {\n        user: \"\",\n        region: \"\"\n      },\n      filtersData: {\n        pageIndex: 1,\n        //当前页码\n        pageSize: 10,\n        //每页数量\n        used: null,\n        //有效状态\n        filter: \"\",\n        //搜索关键字\n        startDate: \"\",\n        endDate: \"\"\n      },\n      total: 130,\n      //总条目数\n      value: \"\",\n      storageValArr: '',\n      // 指派单选框\n      radio: \"1\",\n      // 栏目数\n      options: [{\n        value: '01',\n        label: '三栏'\n      }, {\n        value: '02',\n        label: '四栏'\n      }],\n      // 优先级\n      prioritys: [{\n        value: '01',\n        label: '高'\n      }, {\n        value: '02',\n        label: '中'\n      }, {\n        value: '03',\n        label: '低'\n      }]\n    }, _defineProperty(_ref, \"value\", ''), _defineProperty(_ref, \"dialogTableVisible\", false), _defineProperty(_ref, \"dialogFormVisible\", false), _defineProperty(_ref, \"form\", {\n      name: \"\",\n      region: \"\",\n      date1: \"\",\n      date2: \"\",\n      delivery: false,\n      type: [],\n      resource: \"\",\n      desc: \"\"\n    }), _defineProperty(_ref, \"formLabelWidth\", \"120px\"), _ref;\n  },\n  created: function created() {\n    this.getTableSet_List();\n  },\n  mounted: function mounted() {},\n  methods: {\n    /**\r\n     * 改变父单选框\r\n     * @param { Boolean } isRead 是否选中状态\r\n     * @param { Number } index 当前索引\r\n     */\n    changeRadioParent: function changeRadioParent(isRead, index) {\n      var that = this,\n          listMapArr = that.listMapArr;\n      listMapArr[index].sublist.forEach(function (items, index) {\n        items.isRead = isRead;\n      });\n      console.log(listMapArr[index].sublist);\n    },\n\n    /**\r\n     * 改变子单选框\r\n     * @param { Boolean } isRead 子选框选中状态\r\n     * @param { Number } index 当前索引\r\n     */\n    changeRadioChild: function changeRadioChild(isRead, index) {\n      var that = this,\n          listMapArr = that.listMapArr,\n          isRadioParent; // 如果选择的是左侧的选框，当全部子选框被选中时，父级选框被勾选，否则取消勾选\n\n      if (isRead) {\n        isRadioParent = listMapArr[index].sublist.every(function (item) {\n          return item.isRead === 1;\n        });\n        listMapArr[index].isRead = isRadioParent ? 1 : null;\n      } else {\n        isRadioParent = listMapArr[index].sublist.every(function (item) {\n          return item.isRead === 0;\n        });\n        listMapArr[index].isRead = isRadioParent ? 0 : null;\n      }\n\n      ;\n      console.log(listMapArr[index].sublist);\n      console.log(that.tableItemsObj);\n    },\n\n    /**\r\n     * 获取具体单源列表\r\n     */\n    getTableSet_List: function getTableSet_List() {\n      var that = this; // 请求数据\n\n      this.request(this.api.job_order.getTableSet_List, {\n        isSourceOrder: 1\n      }).then(function (res) {\n        that.TableSet_List = res.data;\n      });\n    },\n\n    /**\r\n     * 获取工单配置内容\r\n     * @param { String } selval.id 请求id\r\n     */\n    tableItemGetListMap: function tableItemGetListMap(selVal) {\n      var _this = this;\n\n      var that = this;\n      that.TableSet_defalut = selVal.tableCn;\n      that.jobOrderExtendObj.sourceOrderParams.sourceOrderChild = selVal.id; // 请求数据\n\n      this.request(this.api.job_order.tableItemGetListMap, {\n        tableSetId: selVal.id\n      }).then(function (res) {\n        // 数据初始化放在最前面做\n        res.forEach(function (item, index) {\n          item.checked = false; // json名称修改\n\n          item.sourceTableId = item.id;\n          delete item.id;\n          item.checkedLength = 0;\n          item.radioLength = 0;\n          item.isShow = false;\n          item.isRead = '';\n          item.sublist.forEach(function (items, indexs) {\n            items.checked = false;\n            items.request = false;\n            items.isRead = '';\n          });\n        });\n        /**\r\n         * 拷贝一份配置选项，为了删除sublist中visible为false的附加选，不然操作会出错\r\n         * 但是最后如果选择了子单，是需要把这个删除项带上的，所以要准备一个暂时备份\r\n         */\n\n        _this.listMapArr_backup = JSON.parse(JSON.stringify(res)); // 删除res下sublist中visible为false的项；\n\n        res.forEach(function (item, index) {\n          var find_Visible_false = item.sublist.findIndex(function (items, indexs) {\n            return items.visible == false;\n          });\n\n          if (find_Visible_false != -1) {\n            item.sublist.splice(find_Visible_false, 1);\n          }\n\n          ;\n        });\n        that.listMapArr = res;\n      });\n    },\n\n    /**\r\n     * 新建工单\r\n     */\n    saveJobOrder: function saveJobOrder() {\n      var that = this,\n          _tableSetsObj = Object.values(that.tableSetsObj) || [],\n          _tableItemsObj = Object.values(that.tableItemsObj) || [],\n          jobOrderExtendObj = that.jobOrderExtendObj;\n\n      Object.assign(that.jobOrderExtendObj, {\n        dept: this.dept_obj.id,\n        deptName: this.dept_obj.name\n      }); // console.log(that.jobOrderExtendObj)\n      // 文本框校验\n\n      if (!jobOrderExtendObj.busType) {\n        that.warn('请选择业务类型！');\n        return;\n      }\n\n      ;\n\n      if (!jobOrderExtendObj.serveType) {\n        that.warn('请选择服务类型！');\n        return;\n      }\n\n      ;\n\n      if (!jobOrderExtendObj.dept) {\n        that.warn('请选择适用部门！');\n        return;\n      }\n\n      ;\n\n      if (!jobOrderExtendObj.serveType) {\n        that.warn('请选择优先级！');\n        return;\n      }\n\n      ;\n\n      if (!jobOrderExtendObj.name) {\n        that.warn('工单名称不能为空！');\n        return;\n      }\n\n      ;\n\n      if (!jobOrderExtendObj.layout) {\n        that.warn('请选择工单排版！');\n        return;\n      }\n\n      ;\n\n      if (!jobOrderExtendObj.sourceOrderParams.sourceOrderType) {\n        that.warn('请选择源单编码！');\n        return;\n      }\n\n      ;\n\n      if (that.TableSet_defalut == '请选择') {\n        that.warn('请选择具体单源！');\n        return;\n      }\n\n      ;\n\n      if (_tableSetsObj.length === 0) {\n        that.warn('请配置流转数据！');\n        return;\n      }\n\n      ;\n\n      var detectionRadio = _tableItemsObj.find(function (item) {\n        return typeof item.isRead != 'number';\n      });\n\n      console.log(that.tableItemsObj);\n      console.log(_tableItemsObj);\n\n      if (detectionRadio) {\n        that.warn(\"\\u8BF7\\u8BBE\\u7F6E\".concat(detectionRadio.itemName, \"\\u662F\\u5426\\u53EF\\u8BFB\\u5199\\uFF01\"));\n        return;\n      }\n\n      ; // 提交之前深拷贝，删除无用子类\n\n      var tableSetsData = JSON.parse(JSON.stringify(_tableSetsObj));\n      var tableItemsData = JSON.parse(JSON.stringify(_tableItemsObj));\n      var sourceOrderItem = tableSetsData.find(function (item, index) {\n        return item.type == 0;\n      }); // 把隐藏项带入tableItemsData\n\n      this.listMapArr.forEach(function (item, index) {\n        // 如果是主数据则终止\n        if (item.type == 0) return;\n        var isChecked = item.sublist.some(function (x) {\n          return x.checked == true;\n        });\n\n        if (isChecked) {\n          var UUID = that.listMapArr_backup[index].sublist.find(function (x) {\n            return x.visible == false;\n          });\n          if (UUID) tableItemsData.push(UUID);\n        }\n      });\n      console.log(tableItemsData); // 删除无用子类\n\n      tableSetsData.forEach(function (item, index) {\n        delete item.sublist;\n      });\n      var data = Object.assign(JSON.parse(JSON.stringify(that.jobOrderExtendObj)), {\n        tableSets: tableSetsData,\n        tableItems: tableItemsData\n      }); // return;\n\n      this.request(this.api.job_order.saveJObOrder, data).then(function (res) {\n        that.warn('工单保存成功！', 'success');\n        that.href('workorder/config/workOrder_new_list');\n      });\n    },\n\n    /**\r\n     * 选择一级菜单\r\n     * @param { Boolean } isChecked 是否选中状态\r\n     * @param { Number } index 父级索引\r\n     * @param { Object } tableSetsObj 当前选中数据集合\r\n     */\n    selectParent: function selectParent(isChecked, index, tableSetsObj) {\n      var that = this,\n          listMapArr = that.listMapArr;\n\n      if (isChecked) {\n        // 全选视图逻辑\n        listMapArr[index].sublist.forEach(function (item, i) {\n          item.checked = true;\n        });\n        listMapArr[index].checkedLength = listMapArr[index].sublist.length; // 数据存入父类备份集合\n\n        that.tableSetsObj[index] = tableSetsObj; // 以对象形式存入父类\n        // 数据存入子类备份集合\n\n        tableSetsObj.sublist.forEach(function (subItem, subIndex) {\n          that.tableItemsObj[parseInt(\"\".concat(index).concat(subIndex))] = subItem; // 以他们的索引拼接为对象名如：00、01、10。为了删除时方便，注意得存入数字类型，下面提交要排序\n        });\n      } else {\n        // 全选视图逻辑\n        listMapArr[index].sublist.forEach(function (item, i) {\n          item.checked = false;\n        });\n        listMapArr[index].checkedLength = 0; // 删除父类备份集合数据\n\n        delete that.tableSetsObj[index]; // 删除子类备份集合数据\n\n        tableSetsObj.sublist.forEach(function (subitems, subIndexs) {\n          delete that.tableItemsObj[parseInt(\"\".concat(index).concat(subIndexs))];\n        });\n      }\n\n      console.log(that.tableSetsObj);\n      console.log(that.tableItemsObj);\n    },\n\n    /**\r\n     * 选择二级菜单\r\n     * @param { Boolean } isChecked 是否选中状态\r\n     * @param { Number } index 父级索引\r\n     * @param { Number } indexs 子级索引\r\n     * @param { Object } tableSetsObj 当前选中数据集合\r\n     */\n    selectChilder: function selectChilder(isChecked, index, indexs, tableSetsObj) {\n      var that = this,\n          listMapArr = that.listMapArr; // 子元素选中计数\n\n      if (isChecked) {\n        listMapArr[index].checkedLength++;\n        tableSetsObj.sublist[indexs].createTime = new Date().toISOString();\n        that.tableSetsObj[index] = tableSetsObj;\n        that.tableItemsObj[parseInt(\"\".concat(index).concat(indexs))] = tableSetsObj.sublist[indexs];\n      } else {\n        listMapArr[index].checkedLength--;\n\n        if (listMapArr[index].checkedLength == 0) {\n          delete that.tableSetsObj[index];\n        }\n\n        delete that.tableItemsObj[parseInt(\"\".concat(index).concat(indexs))];\n      } // 判断子元素是否全部选中\n\n\n      if (listMapArr[index].checkedLength === listMapArr[index].sublist.length) {\n        listMapArr[index].checked = true;\n      } else {\n        listMapArr[index].checked = false;\n      }\n\n      console.log(that.tableSetsObj);\n      console.log(that.tableItemsObj);\n    },\n\n    /**\r\n     * 控制二级分类显示或者隐藏\r\n     * @param { Number } index 当前索引\r\n     */\n    click_isShow: function click_isShow(index) {\n      var that = this,\n          listMapArr = that.listMapArr;\n      listMapArr[index].isShow = !listMapArr[index].isShow;\n    },\n\n    /**\r\n     * 跳转工单详情\r\n     * @param { String } routeName 路由名称\r\n     */\n    href: function href(routeName) {\n      this.$router.push({\n        path: \"/\".concat(routeName)\n      });\n    },\n\n    /**\r\n     * 提示\r\n     */\n    warn: function warn(message, type) {\n      this.$message({\n        message: message,\n        type: type || 'warning'\n      });\n    },\n\n    /**\r\n     * 模糊搜索\r\n     */\n    handleSearch: function handleSearch() {},\n\n    /**\r\n     * 搜索重置\r\n     */\n    handleResetFilters: function handleResetFilters() {}\n  },\n  components: {\n    codeSet: codeSet,\n    treeDept: treeDept\n  }\n};",{"version":3,"sources":["workOrder_add.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsLA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,QAAA,QAAA,cAAA;AACA,OAAA,OAAA,MAAA,sBAAA;AACA,OAAA,QAAA,MAAA,gCAAA;AACA,SAAA,MAAA,QAAA,WAAA;AACA,SAAA,GAAA,QAAA,MAAA;AACA,SAAA,SAAA,QAAA,QAAA;AACA,IAAA,KAAA,GAAA,QAAA,EAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AAAA;;AACA;AACA,MAAA,QAAA,EAAA,EADA;AAEA;AACA,MAAA,gBAAA,EAAA,KAHA;AAIA;AACA,MAAA,aAAA,EAAA,EALA;AAMA;AACA,MAAA,oBAAA,EAAA,CAAA;AACA,QAAA,EAAA,EAAA,oBADA;AAEA,QAAA,IAAA,EAAA;AAFA,OAAA,EAGA;AACA,QAAA,EAAA,EAAA,iBADA;AAEA,QAAA,IAAA,EAAA;AAFA,OAHA,EAMA;AACA,QAAA,EAAA,EAAA,yBADA;AAEA,QAAA,IAAA,EAAA;AAFA,OANA,EASA;AACA,QAAA,EAAA,EAAA,0BADA;AAEA,QAAA,IAAA,EAAA;AAFA,OATA,EAYA;AACA,QAAA,EAAA,EAAA,mBADA;AAEA,QAAA,IAAA,EAAA;AAFA,OAZA,EAeA;AACA,QAAA,EAAA,EAAA,kBADA;AAEA,QAAA,IAAA,EAAA;AAFA,OAfA,EAkBA;AACA,QAAA,EAAA,EAAA,0BADA;AAEA,QAAA,IAAA,EAAA;AAFA,OAlBA,EAqBA;AACA,QAAA,EAAA,EAAA,oBADA;AAEA,QAAA,IAAA,EAAA;AAFA,OArBA,CAPA;AAgCA;AACA,MAAA,iBAAA,EAAA;AACA,QAAA,OAAA,EAAA,EADA;AACA;AACA,QAAA,WAAA,EAAA,EAFA;AAGA,QAAA,IAAA,EAAA,EAHA;AAGA;AACA,QAAA,MAAA,EAAA,EAJA;AAIA;AACA,QAAA,IAAA,EAAA,EALA;AAKA;AACA,QAAA,QAAA,EAAA,EANA;AAMA;AACA,QAAA,SAAA,EAAA,EAPA;AAOA;AACA,QAAA,iBAAA,EAAA;AACA,UAAA,gBAAA,EAAA,EADA;AAEA,UAAA,eAAA,EAAA;AAFA,SARA;AAYA,QAAA,UAAA,EAAA,CACA;AACA,UAAA,QAAA,EAAA,EADA;AAEA,UAAA,WAAA,EAAA,EAFA;AAGA,UAAA,EAAA,EAAA,EAHA;AAIA,UAAA,SAAA,EAAA,EAJA;AAKA,UAAA,MAAA,EAAA,CALA;AAMA,UAAA,SAAA,EAAA,EANA;AAOA,UAAA,QAAA,EAAA,EAPA;AAQA,UAAA,QAAA,EAAA,EARA;AASA,UAAA,QAAA,EAAA,CATA;AAUA,UAAA,QAAA,EAAA,EAVA;AAWA,UAAA,MAAA,EAAA,CAXA;AAYA,UAAA,YAAA,EAAA,EAZA;AAaA,UAAA,SAAA,EAAA,EAbA;AAcA,UAAA,QAAA,EAAA,IAdA;AAeA,UAAA,UAAA,EAAA,CAfA;AAgBA,UAAA,UAAA,EAAA,IAhBA;AAiBA,UAAA,OAAA,EAAA,EAjBA;AAkBA,UAAA,IAAA,EAAA,CAlBA;AAmBA,UAAA,MAAA,EAAA,CAnBA;AAoBA,UAAA,UAAA,EAAA,EApBA;AAqBA,UAAA,OAAA,EAAA;AArBA,SADA,CAZA;AAqCA,QAAA,SAAA,EAAA,CACA;AACA,UAAA,KAAA,EAAA,EADA;AAEA,UAAA,IAAA,EAAA,EAFA;AAGA,UAAA,WAAA,EAAA,EAHA;AAIA,UAAA,YAAA,EAAA,EAJA;AAKA,UAAA,EAAA,EAAA,EALA;AAMA,UAAA,QAAA,EAAA,CANA;AAOA,UAAA,aAAA,EAAA,EAPA;AAQA,UAAA,OAAA,EAAA,EARA;AASA,UAAA,IAAA,EAAA,CATA;AAUA,UAAA,eAAA,EAAA,EAVA;AAWA,UAAA,eAAA,EAAA,EAXA;AAYA,UAAA,MAAA,EAAA,CAZA;AAaA,UAAA,OAAA,EAAA,EAbA;AAcA,UAAA,OAAA,EAAA,EAdA;AAeA,UAAA,SAAA,EAAA,EAfA;AAgBA,UAAA,IAAA,EAAA;AAhBA,SADA,CArCA;AAyDA,QAAA,oBAAA,EAAA;AAzDA,OAjCA;AA4FA;AACA,MAAA,YAAA,EAAA,EA7FA;AA8FA;AACA,MAAA,aAAA,EAAA,EA/FA;AAgGA;AACA,MAAA,UAAA,EAAA,EAjGA;AAkGA;AACA,MAAA,iBAAA,EAAA,EAnGA;AAoGA,MAAA,YAAA,EAAA;AACA,QAAA,QAAA,EAAA,UADA;AAEA,QAAA,KAAA,EAAA;AAFA,OApGA;AAwGA;AACA,MAAA,MAAA,EAAA,IAzGA;AAyGA;AACA,MAAA,UAAA,EAAA;AACA,QAAA,IAAA,EAAA,EADA;AAEA,QAAA,MAAA,EAAA;AAFA,OA1GA;AA8GA,MAAA,WAAA,EAAA;AACA,QAAA,SAAA,EAAA,CADA;AACA;AACA,QAAA,QAAA,EAAA,EAFA;AAEA;AACA,QAAA,IAAA,EAAA,IAHA;AAGA;AACA,QAAA,MAAA,EAAA,EAJA;AAIA;AACA,QAAA,SAAA,EAAA,EALA;AAMA,QAAA,OAAA,EAAA;AANA,OA9GA;AAsHA,MAAA,KAAA,EAAA,GAtHA;AAsHA;AACA,MAAA,KAAA,EAAA,EAvHA;AAwHA,MAAA,aAAA,EAAA,EAxHA;AAyHA;AACA,MAAA,KAAA,EAAA,GA1HA;AA2HA;AACA,MAAA,OAAA,EAAA,CAAA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAAA,EAGA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAHA,CA5HA;AAmIA;AACA,MAAA,SAAA,EAAA,CAAA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAAA,EAGA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAHA,EAMA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,KAAA,EAAA;AAFA,OANA;AApIA,sCA8IA,EA9IA,+CA+IA,KA/IA,8CAgJA,KAhJA,iCAiJA;AACA,MAAA,IAAA,EAAA,EADA;AAEA,MAAA,MAAA,EAAA,EAFA;AAGA,MAAA,KAAA,EAAA,EAHA;AAIA,MAAA,KAAA,EAAA,EAJA;AAKA,MAAA,QAAA,EAAA,KALA;AAMA,MAAA,IAAA,EAAA,EANA;AAOA,MAAA,QAAA,EAAA,EAPA;AAQA,MAAA,IAAA,EAAA;AARA,KAjJA,2CA2JA,OA3JA;AA6JA,GA/JA;AAgKA,EAAA,OAhKA,qBAgKA;AACA,SAAA,gBAAA;AACA,GAlKA;AAmKA,EAAA,OAnKA,qBAmKA,CAAA,CAnKA;AAoKA,EAAA,OAAA,EAAA;AACA;;;;;AAKA,IAAA,iBANA,6BAMA,MANA,EAMA,KANA,EAMA;AACA,UAAA,IAAA,GAAA,IAAA;AAAA,UACA,UAAA,GAAA,IAAA,CAAA,UADA;AAGA,MAAA,UAAA,CAAA,KAAA,CAAA,CAAA,OAAA,CAAA,OAAA,CAAA,UAAA,KAAA,EAAA,KAAA,EAAA;AACA,QAAA,KAAA,CAAA,MAAA,GAAA,MAAA;AACA,OAFA;AAGA,MAAA,OAAA,CAAA,GAAA,CAAA,UAAA,CAAA,KAAA,CAAA,CAAA,OAAA;AAEA,KAfA;;AAgBA;;;;;AAKA,IAAA,gBArBA,4BAqBA,MArBA,EAqBA,KArBA,EAqBA;AACA,UAAA,IAAA,GAAA,IAAA;AAAA,UACA,UAAA,GAAA,IAAA,CAAA,UADA;AAAA,UAEA,aAFA,CADA,CAIA;;AACA,UAAA,MAAA,EAAA;AACA,QAAA,aAAA,GAAA,UAAA,CAAA,KAAA,CAAA,CAAA,OAAA,CAAA,KAAA,CAAA,UAAA,IAAA,EAAA;AACA,iBAAA,IAAA,CAAA,MAAA,KAAA,CAAA;AACA,SAFA,CAAA;AAGA,QAAA,UAAA,CAAA,KAAA,CAAA,CAAA,MAAA,GAAA,aAAA,GAAA,CAAA,GAAA,IAAA;AACA,OALA,MAKA;AACA,QAAA,aAAA,GAAA,UAAA,CAAA,KAAA,CAAA,CAAA,OAAA,CAAA,KAAA,CAAA,UAAA,IAAA,EAAA;AACA,iBAAA,IAAA,CAAA,MAAA,KAAA,CAAA;AACA,SAFA,CAAA;AAGA,QAAA,UAAA,CAAA,KAAA,CAAA,CAAA,MAAA,GAAA,aAAA,GAAA,CAAA,GAAA,IAAA;AACA;;AAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,UAAA,CAAA,KAAA,CAAA,CAAA,OAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,IAAA,CAAA,aAAA;AACA,KAvCA;;AAwCA;;;AAGA,IAAA,gBA3CA,8BA2CA;AACA,UAAA,IAAA,GAAA,IAAA,CADA,CAEA;;AACA,WAAA,OAAA,CACA,KAAA,GAAA,CAAA,SAAA,CAAA,gBADA,EAEA;AACA,QAAA,aAAA,EAAA;AADA,OAFA,EAKA,IALA,CAKA,UAAA,GAAA,EAAA;AACA,QAAA,IAAA,CAAA,aAAA,GAAA,GAAA,CAAA,IAAA;AACA,OAPA;AAQA,KAtDA;;AAuDA;;;;AAIA,IAAA,mBA3DA,+BA2DA,MA3DA,EA2DA;AAAA;;AACA,UAAA,IAAA,GAAA,IAAA;AACA,MAAA,IAAA,CAAA,gBAAA,GAAA,MAAA,CAAA,OAAA;AACA,MAAA,IAAA,CAAA,iBAAA,CAAA,iBAAA,CAAA,gBAAA,GAAA,MAAA,CAAA,EAAA,CAHA,CAIA;;AACA,WAAA,OAAA,CACA,KAAA,GAAA,CAAA,SAAA,CAAA,mBADA,EAEA;AACA,QAAA,UAAA,EAAA,MAAA,CAAA;AADA,OAFA,EAKA,IALA,CAKA,UAAA,GAAA,EAAA;AACA;AACA,QAAA,GAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA,KAAA,EAAA;AACA,UAAA,IAAA,CAAA,OAAA,GAAA,KAAA,CADA,CAEA;;AACA,UAAA,IAAA,CAAA,aAAA,GAAA,IAAA,CAAA,EAAA;AACA,iBAAA,IAAA,CAAA,EAAA;AACA,UAAA,IAAA,CAAA,aAAA,GAAA,CAAA;AACA,UAAA,IAAA,CAAA,WAAA,GAAA,CAAA;AACA,UAAA,IAAA,CAAA,MAAA,GAAA,KAAA;AACA,UAAA,IAAA,CAAA,MAAA,GAAA,EAAA;AACA,UAAA,IAAA,CAAA,OAAA,CAAA,OAAA,CAAA,UAAA,KAAA,EAAA,MAAA,EAAA;AACA,YAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,YAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,YAAA,KAAA,CAAA,MAAA,GAAA,EAAA;AACA,WAJA;AAKA,SAdA;AAeA;;;;;AAIA,QAAA,KAAA,CAAA,iBAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,CArBA,CAsBA;;AACA,QAAA,GAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA,KAAA,EAAA;AACA,cAAA,kBAAA,GAAA,IAAA,CAAA,OAAA,CAAA,SAAA,CAAA,UAAA,KAAA,EAAA,MAAA,EAAA;AACA,mBAAA,KAAA,CAAA,OAAA,IAAA,KAAA;AACA,WAFA,CAAA;;AAGA,cAAA,kBAAA,IAAA,CAAA,CAAA,EAAA;AACA,YAAA,IAAA,CAAA,OAAA,CAAA,MAAA,CAAA,kBAAA,EAAA,CAAA;AACA;;AAAA;AACA,SAPA;AAQA,QAAA,IAAA,CAAA,UAAA,GAAA,GAAA;AACA,OArCA;AAsCA,KAtGA;;AAuGA;;;AAGA,IAAA,YA1GA,0BA0GA;AACA,UAAA,IAAA,GAAA,IAAA;AAAA,UACA,aAAA,GAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,YAAA,KAAA,EADA;AAAA,UAEA,cAAA,GAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,aAAA,KAAA,EAFA;AAAA,UAGA,iBAAA,GAAA,IAAA,CAAA,iBAHA;;AAKA,MAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,iBAAA,EAAA;AACA,QAAA,IAAA,EAAA,KAAA,QAAA,CAAA,EADA;AAEA,QAAA,QAAA,EAAA,KAAA,QAAA,CAAA;AAFA,OAAA,EANA,CAUA;AACA;;AACA,UAAA,CAAA,iBAAA,CAAA,OAAA,EAAA;AACA,QAAA,IAAA,CAAA,IAAA,CAAA,UAAA;AACA;AACA;;AAAA;;AACA,UAAA,CAAA,iBAAA,CAAA,SAAA,EAAA;AACA,QAAA,IAAA,CAAA,IAAA,CAAA,UAAA;AACA;AACA;;AAAA;;AACA,UAAA,CAAA,iBAAA,CAAA,IAAA,EAAA;AACA,QAAA,IAAA,CAAA,IAAA,CAAA,UAAA;AACA;AACA;;AAAA;;AACA,UAAA,CAAA,iBAAA,CAAA,SAAA,EAAA;AACA,QAAA,IAAA,CAAA,IAAA,CAAA,SAAA;AACA;AACA;;AAAA;;AACA,UAAA,CAAA,iBAAA,CAAA,IAAA,EAAA;AACA,QAAA,IAAA,CAAA,IAAA,CAAA,WAAA;AACA;AACA;;AAAA;;AACA,UAAA,CAAA,iBAAA,CAAA,MAAA,EAAA;AACA,QAAA,IAAA,CAAA,IAAA,CAAA,UAAA;AACA;AACA;;AAAA;;AACA,UAAA,CAAA,iBAAA,CAAA,iBAAA,CAAA,eAAA,EAAA;AACA,QAAA,IAAA,CAAA,IAAA,CAAA,UAAA;AACA;AACA;;AAAA;;AACA,UAAA,IAAA,CAAA,gBAAA,IAAA,KAAA,EAAA;AACA,QAAA,IAAA,CAAA,IAAA,CAAA,UAAA;AACA;AACA;;AAAA;;AACA,UAAA,aAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,QAAA,IAAA,CAAA,IAAA,CAAA,UAAA;AACA;AACA;;AAAA;;AACA,UAAA,cAAA,GAAA,cAAA,CAAA,IAAA,CAAA,UAAA,IAAA,EAAA;AACA,eAAA,OAAA,IAAA,CAAA,MAAA,IAAA,QAAA;AACA,OAFA,CAAA;;AAGA,MAAA,OAAA,CAAA,GAAA,CAAA,IAAA,CAAA,aAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,cAAA;;AACA,UAAA,cAAA,EAAA;AACA,QAAA,IAAA,CAAA,IAAA,6BAAA,cAAA,CAAA,QAAA;AACA;AACA;;AAAA,OAxDA,CAyDA;;AACA,UAAA,aAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,aAAA,CAAA,CAAA;AACA,UAAA,cAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,cAAA,CAAA,CAAA;AACA,UAAA,eAAA,GAAA,aAAA,CAAA,IAAA,CAAA,UAAA,IAAA,EAAA,KAAA,EAAA;AACA,eAAA,IAAA,CAAA,IAAA,IAAA,CAAA;AACA,OAFA,CAAA,CA5DA,CA+DA;;AACA,WAAA,UAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA,KAAA,EAAA;AACA;AACA,YAAA,IAAA,CAAA,IAAA,IAAA,CAAA,EAAA;AACA,YAAA,SAAA,GAAA,IAAA,CAAA,OAAA,CAAA,IAAA,CAAA,UAAA,CAAA,EAAA;AACA,iBAAA,CAAA,CAAA,OAAA,IAAA,IAAA;AACA,SAFA,CAAA;;AAGA,YAAA,SAAA,EAAA;AACA,cAAA,IAAA,GAAA,IAAA,CAAA,iBAAA,CAAA,KAAA,EAAA,OAAA,CAAA,IAAA,CAAA,UAAA,CAAA,EAAA;AACA,mBAAA,CAAA,CAAA,OAAA,IAAA,KAAA;AACA,WAFA,CAAA;AAGA,cAAA,IAAA,EAAA,cAAA,CAAA,IAAA,CAAA,IAAA;AACA;AACA,OAZA;AAaA,MAAA,OAAA,CAAA,GAAA,CAAA,cAAA,EA7EA,CA8EA;;AACA,MAAA,aAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA,KAAA,EAAA;AACA,eAAA,IAAA,CAAA,OAAA;AACA,OAFA;AAGA,UAAA,IAAA,GAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,IAAA,CAAA,iBAAA,CAAA,CAAA,EAAA;AACA,QAAA,SAAA,EAAA,aADA;AAEA,QAAA,UAAA,EAAA;AAFA,OAAA,CAAA,CAlFA,CAsFA;;AACA,WAAA,OAAA,CACA,KAAA,GAAA,CAAA,SAAA,CAAA,YADA,EAEA,IAFA,EAGA,IAHA,CAGA,UAAA,GAAA,EAAA;AACA,QAAA,IAAA,CAAA,IAAA,CAAA,SAAA,EAAA,SAAA;AACA,QAAA,IAAA,CAAA,IAAA,CAAA,qCAAA;AACA,OANA;AAOA,KAxMA;;AAyMA;;;;;;AAMA,IAAA,YA/MA,wBA+MA,SA/MA,EA+MA,KA/MA,EA+MA,YA/MA,EA+MA;AACA,UAAA,IAAA,GAAA,IAAA;AAAA,UACA,UAAA,GAAA,IAAA,CAAA,UADA;;AAGA,UAAA,SAAA,EAAA;AACA;AACA,QAAA,UAAA,CAAA,KAAA,CAAA,CAAA,OAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA,CAAA,EAAA;AACA,UAAA,IAAA,CAAA,OAAA,GAAA,IAAA;AACA,SAFA;AAGA,QAAA,UAAA,CAAA,KAAA,CAAA,CAAA,aAAA,GAAA,UAAA,CAAA,KAAA,CAAA,CAAA,OAAA,CAAA,MAAA,CALA,CAMA;;AACA,QAAA,IAAA,CAAA,YAAA,CAAA,KAAA,IAAA,YAAA,CAPA,CAOA;AACA;;AACA,QAAA,YAAA,CAAA,OAAA,CAAA,OAAA,CAAA,UAAA,OAAA,EAAA,QAAA,EAAA;AACA,UAAA,IAAA,CAAA,aAAA,CAAA,QAAA,WAAA,KAAA,SAAA,QAAA,EAAA,IAAA,OAAA,CADA,CACA;AACA,SAFA;AAGA,OAZA,MAYA;AACA;AACA,QAAA,UAAA,CAAA,KAAA,CAAA,CAAA,OAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA,CAAA,EAAA;AACA,UAAA,IAAA,CAAA,OAAA,GAAA,KAAA;AACA,SAFA;AAGA,QAAA,UAAA,CAAA,KAAA,CAAA,CAAA,aAAA,GAAA,CAAA,CALA,CAMA;;AACA,eAAA,IAAA,CAAA,YAAA,CAAA,KAAA,CAAA,CAPA,CAQA;;AACA,QAAA,YAAA,CAAA,OAAA,CAAA,OAAA,CAAA,UAAA,QAAA,EAAA,SAAA,EAAA;AACA,iBAAA,IAAA,CAAA,aAAA,CAAA,QAAA,WAAA,KAAA,SAAA,SAAA,EAAA,CAAA;AACA,SAFA;AAGA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,IAAA,CAAA,YAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,IAAA,CAAA,aAAA;AACA,KA9OA;;AA+OA;;;;;;;AAOA,IAAA,aAtPA,yBAsPA,SAtPA,EAsPA,KAtPA,EAsPA,MAtPA,EAsPA,YAtPA,EAsPA;AACA,UAAA,IAAA,GAAA,IAAA;AAAA,UACA,UAAA,GAAA,IAAA,CAAA,UADA,CADA,CAGA;;AACA,UAAA,SAAA,EAAA;AACA,QAAA,UAAA,CAAA,KAAA,CAAA,CAAA,aAAA;AACA,QAAA,YAAA,CAAA,OAAA,CAAA,MAAA,EAAA,UAAA,GAAA,IAAA,IAAA,GAAA,WAAA,EAAA;AACA,QAAA,IAAA,CAAA,YAAA,CAAA,KAAA,IAAA,YAAA;AACA,QAAA,IAAA,CAAA,aAAA,CAAA,QAAA,WAAA,KAAA,SAAA,MAAA,EAAA,IAAA,YAAA,CAAA,OAAA,CAAA,MAAA,CAAA;AACA,OALA,MAKA;AACA,QAAA,UAAA,CAAA,KAAA,CAAA,CAAA,aAAA;;AACA,YAAA,UAAA,CAAA,KAAA,CAAA,CAAA,aAAA,IAAA,CAAA,EAAA;AACA,iBAAA,IAAA,CAAA,YAAA,CAAA,KAAA,CAAA;AACA;;AACA,eAAA,IAAA,CAAA,aAAA,CAAA,QAAA,WAAA,KAAA,SAAA,MAAA,EAAA,CAAA;AACA,OAfA,CAgBA;;;AACA,UAAA,UAAA,CAAA,KAAA,CAAA,CAAA,aAAA,KAAA,UAAA,CAAA,KAAA,CAAA,CAAA,OAAA,CAAA,MAAA,EAAA;AACA,QAAA,UAAA,CAAA,KAAA,CAAA,CAAA,OAAA,GAAA,IAAA;AACA,OAFA,MAEA;AACA,QAAA,UAAA,CAAA,KAAA,CAAA,CAAA,OAAA,GAAA,KAAA;AACA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,IAAA,CAAA,YAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,IAAA,CAAA,aAAA;AACA,KA9QA;;AA+QA;;;;AAIA,IAAA,YAnRA,wBAmRA,KAnRA,EAmRA;AACA,UAAA,IAAA,GAAA,IAAA;AAAA,UACA,UAAA,GAAA,IAAA,CAAA,UADA;AAGA,MAAA,UAAA,CAAA,KAAA,CAAA,CAAA,MAAA,GAAA,CAAA,UAAA,CAAA,KAAA,CAAA,CAAA,MAAA;AACA,KAxRA;;AAyRA;;;;AAIA,IAAA,IA7RA,gBA6RA,SA7RA,EA6RA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AACA,QAAA,IAAA,aAAA,SAAA;AADA,OAAA;AAGA,KAjSA;;AAkSA;;;AAGA,IAAA,IArSA,gBAqSA,OArSA,EAqSA,IArSA,EAqSA;AACA,WAAA,QAAA,CAAA;AACA,QAAA,OAAA,EAAA,OADA;AAEA,QAAA,IAAA,EAAA,IAAA,IAAA;AAFA,OAAA;AAIA,KA1SA;;AA2SA;;;AAGA,IAAA,YA9SA,0BA8SA,CAAA,CA9SA;;AA+SA;;;AAGA,IAAA,kBAlTA,gCAkTA,CAAA;AAlTA,GApKA;AAwdA,EAAA,UAAA,EAAA;AACA,IAAA,OAAA,EAAA,OADA;AAEA,IAAA,QAAA,EAAA;AAFA;AAxdA,CAAA","sourcesContent":["<!-- 创建新工单 -->\r\n<template>\r\n  <div>\r\n    <!-- 指派 -->\r\n    <el-dialog title=\"预览\" :visible.sync=\"dialogTableVisible\">\r\n      <el-form class=\"item-form previewVisible-list\" size=\"small\" :inline=\"true\" :model=\"formInline\">\r\n        <!-- 模糊查询 -->\r\n        <el-form-item class=\"item\" :label=\"item.itemName\" width=\"200\" :key=\"item.id\" v-for=\"item in tableItemsObj\">\r\n          <el-input disabled value=\"--\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogTableVisible = false\" size=\"small\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"dialogTableVisible = false\" size=\"small\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n    <!-- 新建工单 -->\r\n    <div class=\"item-margin\" style=\"height:100%;\">\r\n      <div class=\"item-form\">\r\n        <div class=\"mt-30\">工单定义</div>\r\n        <el-form class=\"item-form\" size=\"small\" :inline=\"true\" :model=\"jobOrderExtendObj\">\r\n          <section class=\"extend-list\">\r\n            <!-- 业务类型 -->\r\n            <div class=\"item\">\r\n              <i class=\"colorRed\">*</i>\r\n              <el-form-item label=\"业务类型：\">\r\n                <code-set v-model=\"jobOrderExtendObj.busType\" code=\"CEN012\" :multiple=\"false\"/>\r\n              </el-form-item>\r\n            </div>\r\n            <!-- 服务类型 -->\r\n            <div class=\"item\">\r\n              <i class=\"colorRed\">*</i>\r\n              <el-form-item label=\"服务类型：\">\r\n                <code-set v-model=\"jobOrderExtendObj.serveType\" code=\"CEN013\" :multiple=\"false\"/>\r\n              </el-form-item>\r\n            </div>\r\n            <!-- 适用部门 -->\r\n            <div class=\"item\">\r\n              <i class=\"colorRed\">*</i>\r\n              <el-form-item label=\"适用部门：\">\r\n                <tree-dept\r\n                  v-model=\"dept_obj\"\r\n                  val-type=\"id\"\r\n                  :sel-type=\"1\"\r\n                  :default-expand-all=\"true\"\r\n                ></tree-dept>\r\n              </el-form-item>\r\n            </div>\r\n            <!-- 优先级 -->\r\n            <div class=\"item\">\r\n              <i class=\"colorRed\">*</i>\r\n              <el-form-item label=\"优先级：\">\r\n                <el-select  v-model=\"jobOrderExtendObj.priority\"  placeholder=\"请选择\">\r\n                  <el-option  v-for=\"item in prioritys\"  :label=\"item.label\" :key=\"item.value\" :value=\"item.value\"></el-option>\r\n                </el-select>\r\n              </el-form-item>\r\n            </div>\r\n            <!-- 工单名称 -->\r\n            <div class=\"item\">\r\n              <i class=\"colorRed\">*</i>\r\n              <el-form-item label=\"工单名称：\">\r\n                <el-input style=\"width:199px;\" v-model=\"jobOrderExtendObj.name\" placeholder=\"请输入内容\"></el-input>\r\n              </el-form-item>\r\n            </div>\r\n            <!-- 工单排版 -->\r\n            <div class=\"item\">\r\n              <i class=\"colorRed\">*</i>\r\n              <el-form-item label=\"工单排版：\">\r\n                <el-select v-model=\"jobOrderExtendObj.layout\" placeholder=\"请选择\">\r\n                  <el-option\r\n                    v-for=\"item in options\"\r\n                    :key=\"item.value\"\r\n                    :label=\"item.label\"\r\n                    :value=\"item.value\">\r\n                  </el-option>\r\n                </el-select>\r\n              </el-form-item>\r\n            </div>\r\n            <!-- 源单编码 -->\r\n            <div class=\"item\">\r\n              <i class=\"colorRed\">*</i>\r\n              <el-form-item label=\"源单编码：\">\r\n                <el-select v-model=\"jobOrderExtendObj.sourceOrderParams.sourceOrderType\">\r\n                  <el-option\r\n                    v-for=\"(item, index) in sourceOrderType_list\"\r\n                    :value=\"item.id\"\r\n                    :label=\"item.name\"\r\n                    :key=\"index\"></el-option>\r\n                </el-select>\r\n              </el-form-item>\r\n            </div>\r\n          </section>\r\n        </el-form>\r\n        <!-- 工单配置内容 -->\r\n        <div class=\"mt-30\">工单配置内容</div>\r\n        <el-form class=\"item-form\" size=\"small\" :inline=\"true\" :model=\"formInline\">\r\n          <i class=\"colorRed\">*</i>\r\n          <el-form-item prop=\"parentName\" label=\"具体源单：\">\r\n            <el-select v-model=\"TableSet_defalut\" value-key=\"id\" @change=\"tableItemGetListMap\">\r\n              <el-option v-for=\"(item, indexs) in TableSet_List\" :value=\"item\" :key=\"indexs\">{{ item.tableCn }}</el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n        </el-form>\r\n        <!-- 配置字段 -->\r\n        <div class=\"display-flex\" v-if=\"listMapArr.length\">\r\n          <i class=\"colorRed\" style=\"line-height:19px\">*</i>\r\n          <span>配置流转数据：</span>\r\n          <div class=\"tree\">\r\n            <div class=\"tree-title text-center\">\r\n              <span>源单数据</span>\r\n              <span>是否可读写</span>\r\n              <span>关联数据</span>\r\n            </div>\r\n            <!-- 一级分类 -->\r\n            <ul>\r\n              <li v-for=\"(item, index) in listMapArr\" :key=\"index\">\r\n                <div class=\"justify-content content\">\r\n                  <span class=\"l\">\r\n                    <el-checkbox\r\n                      class=\"ml-20\"\r\n                      @change=\"selectParent(item.checked, index, item)\"\r\n                      v-model=\"item.checked\">\r\n                    </el-checkbox>\r\n                    <i @click=\"click_isShow(index)\">\r\n                      <i :class=\"item.isShow ? 'el-icon-minus' : 'el-icon-plus'\"></i>\r\n                      {{ item.tableCn }}\r\n                    </i>\r\n                  </span>\r\n                  <span class=\"r\">\r\n                    <template>\r\n                      <el-radio-group v-model=\"item.isRead\" @change=\"changeRadioParent(item.isRead, index)\">\r\n                        <el-radio :disabled=\"!item.checked\" :label=\"1\">可读写</el-radio>\r\n                        <el-radio :disabled=\"!item.checked\" :label=\"0\">只读</el-radio>\r\n                      </el-radio-group>\r\n                    </template>\r\n                  </span>\r\n                  <span class=\"r\"></span>\r\n                </div>\r\n                <!-- 二级分类 -->\r\n                <ul v-if=\"item.sublist && item.sublist.length > 0 && item.isShow\">\r\n                  <li v-for=\"(items, indexs) in item.sublist\" v-if=\"items.visible\" :key=\"indexs\">\r\n                    <div class=\"justify-content content\">\r\n                      <span class=\"l text-index10\">\r\n                        <el-checkbox\r\n                          class=\"ml-20\"\r\n                          @change=\"selectChilder(items.checked, index, indexs, item)\"\r\n                          v-model=\"items.checked\"\r\n                        >{{ items.itemName }}</el-checkbox>\r\n                      </span>\r\n                      <span class=\"r\">\r\n                        <template>\r\n                          <el-radio-group v-model=\"items.isRead\" @change=\"changeRadioChild(items.isRead, index)\">\r\n                            <el-radio :disabled=\"!items.checked\"  :label=\"1\">可读写</el-radio>\r\n                            <el-radio :disabled=\"!items.checked\" :label=\"0\">只读</el-radio>\r\n                          </el-radio-group>\r\n                        </template>\r\n                      </span>\r\n                      <span class=\"r\">\r\n                        <template>\r\n                          <el-checkbox label=\"关联数据\" :disabled=\"!items.checked\" v-model=\"items.request\"></el-checkbox>\r\n                        </template>\r\n                      </span>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div class=\"mt-50 mb-50\">\r\n          <el-button type=\"primary\" v-no-more-click @click=\"saveJobOrder\" size=\"small\">确定</el-button>\r\n          <el-button @click=\"href('workorder/config/workOrder_new_list')\" size=\"small\">取消</el-button>\r\n          <el-button @click=\"dialogTableVisible = true\" size=\"small\" v-if=\"Object.values(tableItemsObj).length > 0\">预览</el-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- 新建工单 -->\r\n  </div>\r\n</template>\r\n<!-- 工单池 -->\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { getToken } from \"@/utils/auth\";\r\nimport codeSet from \"@/components/codeSet\";\r\nimport treeDept from \"@/components/treeDeptReturnObj\";\r\nimport { filter } from \"minimatch\";\r\nimport { get } from \"http\";\r\nimport { constants } from 'crypto';\r\nlet token = getToken();\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      dept_obj:{},\r\n      // 具体单源默认value\r\n      TableSet_defalut:'请选择',\r\n      // 具体单源列表\r\n      TableSet_List:[],\r\n      // 源单编码列表\r\n      sourceOrderType_list:[{\r\n        id:'measuringWorkOrder',\r\n        name:'量体工单'\r\n      },{\r\n        id:'returnWorkOrder',\r\n        name:'回访工单'\r\n      },{\r\n        id:'consumerCustomizedOrder',\r\n        name:'定制订单'\r\n      },{\r\n        id:'consumerReservationOrder',\r\n        name:'预约订单'\r\n      },{\r\n        id:'wideningWorkOrder',\r\n        name:'加宽量工单'\r\n      },{\r\n        id:'factoryWorkOrder',\r\n        name:'工厂下单工单'\r\n      },{\r\n        id:'factoryTrackingWorkOrder',\r\n        name:'工厂跟踪工单'\r\n      },{\r\n        id:'incrementWorkOrder',\r\n        name:'增值服务工单'\r\n      },],\r\n      // 新建表单提交数据\r\n      jobOrderExtendObj: {\r\n        busType: \"\", // 业务类型\r\n        currentUser: \"\",\r\n        dept: \"\",// 适用部门\r\n        layout: \"\",// 工单排版\r\n        name: \"\",// 工单名称\r\n        priority: '',// 优先级\r\n        serveType: \"\",// 服务类型\r\n        sourceOrderParams: {\r\n          sourceOrderChild: \"\",\r\n          sourceOrderType:\"\"\r\n        },\r\n        tableItems: [\r\n          {\r\n            codeName: \"\",\r\n            currentUser: \"\",\r\n            id: \"\",\r\n            inputType: \"\",\r\n            isRead: 0,\r\n            itemAlias: \"\",\r\n            itemCode: \"\",\r\n            itemName: \"\",\r\n            itemType: 0,\r\n            jdbcType: \"\",\r\n            length: 0,\r\n            linkItemName: \"\",\r\n            linkTable: \"\",\r\n            nullAble: true,\r\n            precisions: 0,\r\n            primaryKey: true,\r\n            remarks: \"\",\r\n            sort: 0,\r\n            status: 0,\r\n            tableSetId: \"\",\r\n            visible: true\r\n          }\r\n        ],\r\n        tableSets: [\r\n          {\r\n            alias: \"\",\r\n            code: \"\",\r\n            currentUser: \"\",\r\n            dataSourceId: \"\",\r\n            id: \"\",\r\n            linkType: 0,\r\n            orderExtendId: \"\",\r\n            remarks: \"\",\r\n            sort: 0,\r\n            sourceChileType: \"\",\r\n            sourceOrderType: \"\",\r\n            status: 0,\r\n            tableCn: \"\",\r\n            tableId: \"\",\r\n            tableName: \"\",\r\n            type: 0\r\n          }\r\n        ],\r\n        workOrderProcessItem: []\r\n      },\r\n      // 父类选择对象备份\r\n      tableSetsObj:{},\r\n      // 子类选择对象备份\r\n      tableItemsObj:{},\r\n      // 树形 start\r\n      listMapArr:[],\r\n      // 配置选项备份\r\n      listMapArr_backup:[],\r\n      defaultProps: {\r\n        children: \"children\",\r\n        label: \"label\"\r\n      },\r\n      // 树形 end\r\n      value2: true, // 启用状态\r\n      formInline: {\r\n        user: \"\",\r\n        region: \"\"\r\n      },\r\n      filtersData: {\r\n        pageIndex: 1, //当前页码\r\n        pageSize: 10, //每页数量\r\n        used: null, //有效状态\r\n        filter: \"\", //搜索关键字\r\n        startDate: \"\",\r\n        endDate: \"\"\r\n      },\r\n      total: 130, //总条目数\r\n      value: \"\",\r\n      storageValArr: '',\r\n      // 指派单选框\r\n      radio: \"1\",\r\n      // 栏目数\r\n      options: [{\r\n          value: '01',\r\n          label: '三栏'\r\n        }, {\r\n          value: '02',\r\n          label: '四栏'\r\n        }],\r\n      // 优先级\r\n      prioritys: [{\r\n          value: '01',\r\n          label: '高'\r\n        },{\r\n          value: '02',\r\n          label: '中'\r\n        },{\r\n          value: '03',\r\n          label: '低'\r\n        }],\r\n        value: '',\r\n      dialogTableVisible: false,\r\n      dialogFormVisible: false,\r\n      form: {\r\n        name: \"\",\r\n        region: \"\",\r\n        date1: \"\",\r\n        date2: \"\",\r\n        delivery: false,\r\n        type: [],\r\n        resource: \"\",\r\n        desc: \"\"\r\n      },\r\n      formLabelWidth: \"120px\"\r\n    };\r\n  },\r\n  created() {\r\n    this.getTableSet_List();\r\n  },\r\n  mounted() {},\r\n  methods: {\r\n    /**\r\n     * 改变父单选框\r\n     * @param { Boolean } isRead 是否选中状态\r\n     * @param { Number } index 当前索引\r\n     */\r\n    changeRadioParent(isRead, index) {\r\n      const that = this,\r\n            listMapArr = that.listMapArr;\r\n\r\n        listMapArr[index].sublist.forEach((items, index) => {\r\n          items.isRead = isRead;\r\n        })\r\n      console.log(listMapArr[index].sublist)\r\n\r\n    },\r\n    /**\r\n     * 改变子单选框\r\n     * @param { Boolean } isRead 子选框选中状态\r\n     * @param { Number } index 当前索引\r\n     */\r\n    changeRadioChild(isRead, index) {\r\n      var that = this,\r\n            listMapArr = that.listMapArr,\r\n            isRadioParent;\r\n      // 如果选择的是左侧的选框，当全部子选框被选中时，父级选框被勾选，否则取消勾选\r\n      if(isRead) {\r\n        isRadioParent = listMapArr[index].sublist.every((item) => {\r\n          return item.isRead === 1;\r\n        });\r\n        listMapArr[index].isRead = isRadioParent ?  1 : null;\r\n      }else{\r\n        isRadioParent = listMapArr[index].sublist.every((item) => {\r\n          return item.isRead === 0;\r\n        });\r\n        listMapArr[index].isRead = isRadioParent ? 0 : null;\r\n      };\r\n      console.log(listMapArr[index].sublist)\r\n      console.log(that.tableItemsObj)\r\n    },\r\n    /**\r\n     * 获取具体单源列表\r\n     */\r\n    getTableSet_List() {\r\n      const that = this;\r\n      // 请求数据\r\n      this.request(\r\n        this.api.job_order.getTableSet_List,\r\n        {\r\n          isSourceOrder:1\r\n        }\r\n      ).then(res=>{\r\n        that.TableSet_List = res.data;\r\n      });\r\n    },\r\n    /**\r\n     * 获取工单配置内容\r\n     * @param { String } selval.id 请求id\r\n     */\r\n    tableItemGetListMap(selVal) {\r\n      const that = this;\r\n      that.TableSet_defalut = selVal.tableCn;\r\n      that.jobOrderExtendObj.sourceOrderParams.sourceOrderChild = selVal.id;\r\n      // 请求数据\r\n      this.request(\r\n        this.api.job_order.tableItemGetListMap,\r\n        {\r\n          tableSetId: selVal.id\r\n        }\r\n      ).then(res=>{\r\n        // 数据初始化放在最前面做\r\n        res.forEach((item, index) => {\r\n          item.checked = false;\r\n          // json名称修改\r\n          item.sourceTableId = item.id;\r\n          delete item.id;\r\n          item.checkedLength = 0;\r\n          item.radioLength = 0;\r\n          item.isShow = false;\r\n          item.isRead = '';\r\n          item.sublist.forEach((items, indexs) => {\r\n            items.checked = false;\r\n            items.request = false;\r\n            items.isRead = '';\r\n          })\r\n        });\r\n        /**\r\n         * 拷贝一份配置选项，为了删除sublist中visible为false的附加选，不然操作会出错\r\n         * 但是最后如果选择了子单，是需要把这个删除项带上的，所以要准备一个暂时备份\r\n         */\r\n        this.listMapArr_backup = JSON.parse(JSON.stringify(res));\r\n        // 删除res下sublist中visible为false的项；\r\n        res.forEach((item, index) => {\r\n          let find_Visible_false = item.sublist.findIndex((items, indexs) => {\r\n            return items.visible == false;\r\n          });\r\n          if(find_Visible_false != -1) {\r\n            item.sublist.splice(find_Visible_false, 1);\r\n          };\r\n        });\r\n        that.listMapArr = res;\r\n      });\r\n    },\r\n    /**\r\n     * 新建工单\r\n     */\r\n    saveJobOrder() {\r\n      const that = this,\r\n            _tableSetsObj = Object.values(that.tableSetsObj) || [],\r\n            _tableItemsObj = Object.values(that.tableItemsObj) || [],\r\n            jobOrderExtendObj = that.jobOrderExtendObj;\r\n\r\n      Object.assign(that.jobOrderExtendObj, {\r\n        dept:this.dept_obj.id,\r\n        deptName:this.dept_obj.name\r\n      });\r\n      // console.log(that.jobOrderExtendObj)\r\n      // 文本框校验\r\n      if(!jobOrderExtendObj.busType) {\r\n        that.warn('请选择业务类型！');\r\n        return;\r\n      };\r\n      if(!jobOrderExtendObj.serveType) {\r\n        that.warn('请选择服务类型！');\r\n        return;\r\n      };\r\n      if(!jobOrderExtendObj.dept) {\r\n        that.warn('请选择适用部门！');\r\n        return;\r\n      };\r\n      if(!jobOrderExtendObj.serveType) {\r\n        that.warn('请选择优先级！');\r\n        return;\r\n      };\r\n      if(!jobOrderExtendObj.name) {\r\n        that.warn('工单名称不能为空！');\r\n        return;\r\n      };\r\n      if(!jobOrderExtendObj.layout) {\r\n        that.warn('请选择工单排版！');\r\n        return;\r\n      };\r\n      if(!jobOrderExtendObj.sourceOrderParams.sourceOrderType) {\r\n        that.warn('请选择源单编码！');\r\n        return;\r\n      };\r\n      if(that.TableSet_defalut=='请选择') {\r\n        that.warn('请选择具体单源！');\r\n        return;\r\n      };\r\n      if(_tableSetsObj.length === 0) {\r\n        that.warn('请配置流转数据！');\r\n        return;\r\n      };\r\n      let detectionRadio = _tableItemsObj.find(item => {\r\n        return typeof item.isRead != 'number';\r\n      })\r\n      console.log(that.tableItemsObj)\r\n      console.log(_tableItemsObj)\r\n      if(detectionRadio){\r\n          that.warn(`请设置${detectionRadio.itemName}是否可读写！`);\r\n          return;\r\n      };\r\n      // 提交之前深拷贝，删除无用子类\r\n      let tableSetsData = JSON.parse(JSON.stringify(_tableSetsObj));\r\n      let tableItemsData = JSON.parse(JSON.stringify(_tableItemsObj));\r\n      let sourceOrderItem = tableSetsData.find((item, index) => {\r\n        return item.type == 0;\r\n      })\r\n      // 把隐藏项带入tableItemsData\r\n      this.listMapArr.forEach((item, index) => {\r\n        // 如果是主数据则终止\r\n        if(item.type == 0) return;\r\n        let isChecked = item.sublist.some(x => {\r\n          return x.checked == true;\r\n        })\r\n        if(isChecked) {\r\n          let UUID = that.listMapArr_backup[index].sublist.find(x => {\r\n            return x.visible == false;\r\n          });\r\n          if(UUID) tableItemsData.push(UUID);\r\n        }\r\n      });\r\n      console.log(tableItemsData)\r\n      // 删除无用子类\r\n      tableSetsData.forEach((item, index) => {\r\n        delete item.sublist;\r\n      });\r\n      let data = Object.assign(JSON.parse(JSON.stringify(that.jobOrderExtendObj)), {\r\n        tableSets: tableSetsData,\r\n        tableItems: tableItemsData\r\n      });\r\n      // return;\r\n      this.request(\r\n        this.api.job_order.saveJObOrder,\r\n        data\r\n      ).then(res=>{\r\n          that.warn('工单保存成功！','success');\r\n          that.href('workorder/config/workOrder_new_list');\r\n      });\r\n    },\r\n    /**\r\n     * 选择一级菜单\r\n     * @param { Boolean } isChecked 是否选中状态\r\n     * @param { Number } index 父级索引\r\n     * @param { Object } tableSetsObj 当前选中数据集合\r\n     */\r\n    selectParent(isChecked, index, tableSetsObj) {\r\n      const that = this,\r\n            listMapArr = that.listMapArr;\r\n\r\n      if (isChecked) {\r\n        // 全选视图逻辑\r\n        listMapArr[index].sublist.forEach((item, i) => {\r\n          item.checked = true;\r\n        });\r\n        listMapArr[index].checkedLength = listMapArr[index].sublist.length;\r\n        // 数据存入父类备份集合\r\n        that.tableSetsObj[index] = tableSetsObj;// 以对象形式存入父类\r\n        // 数据存入子类备份集合\r\n        tableSetsObj.sublist.forEach((subItem, subIndex) => {\r\n          that.tableItemsObj[parseInt(`${index}${subIndex}`)] = subItem;// 以他们的索引拼接为对象名如：00、01、10。为了删除时方便，注意得存入数字类型，下面提交要排序\r\n        });\r\n      } else {\r\n        // 全选视图逻辑\r\n        listMapArr[index].sublist.forEach((item, i) => {\r\n          item.checked = false;\r\n        });\r\n        listMapArr[index].checkedLength = 0;\r\n        // 删除父类备份集合数据\r\n        delete that.tableSetsObj[index];\r\n        // 删除子类备份集合数据\r\n        tableSetsObj.sublist.forEach((subitems, subIndexs) => {\r\n          delete that.tableItemsObj[parseInt(`${index}${subIndexs}`)];\r\n        });\r\n      }\r\n        console.log(that.tableSetsObj);\r\n        console.log(that.tableItemsObj);\r\n    },\r\n    /**\r\n     * 选择二级菜单\r\n     * @param { Boolean } isChecked 是否选中状态\r\n     * @param { Number } index 父级索引\r\n     * @param { Number } indexs 子级索引\r\n     * @param { Object } tableSetsObj 当前选中数据集合\r\n     */\r\n    selectChilder(isChecked, index, indexs, tableSetsObj) {\r\n      const that = this,\r\n            listMapArr = that.listMapArr;\r\n      // 子元素选中计数\r\n      if (isChecked) {\r\n        listMapArr[index].checkedLength++;\r\n        tableSetsObj.sublist[indexs].createTime =new Date().toISOString();\r\n        that.tableSetsObj[index] = tableSetsObj;\r\n        that.tableItemsObj[parseInt(`${index}${indexs}`)] = tableSetsObj.sublist[indexs];\r\n      } else {\r\n        listMapArr[index].checkedLength--;\r\n        if(listMapArr[index].checkedLength == 0) {\r\n          delete that.tableSetsObj[index];\r\n        }\r\n        delete that.tableItemsObj[parseInt(`${index}${indexs}`)];\r\n      }\r\n      // 判断子元素是否全部选中\r\n      if (listMapArr[index].checkedLength === listMapArr[index].sublist.length) {\r\n        listMapArr[index].checked = true;\r\n      } else {\r\n        listMapArr[index].checked = false;\r\n      }\r\n      console.log(that.tableSetsObj);\r\n      console.log(that.tableItemsObj);\r\n    },\r\n    /**\r\n     * 控制二级分类显示或者隐藏\r\n     * @param { Number } index 当前索引\r\n     */\r\n    click_isShow(index) {\r\n      const that = this,\r\n            listMapArr = that.listMapArr;\r\n\r\n      listMapArr[index].isShow = !listMapArr[index].isShow;\r\n    },\r\n    /**\r\n     * 跳转工单详情\r\n     * @param { String } routeName 路由名称\r\n     */\r\n    href(routeName) {\r\n      this.$router.push({\r\n        path: `/${routeName}`\r\n      });\r\n    },\r\n    /**\r\n     * 提示\r\n     */\r\n    warn(message, type) {\r\n      this.$message({\r\n        message: message,\r\n        type: type || 'warning'\r\n      });\r\n    },\r\n    /**\r\n     * 模糊搜索\r\n     */\r\n    handleSearch() {},\r\n    /**\r\n     * 搜索重置\r\n     */\r\n    handleResetFilters() {}\r\n  },\r\n  components: {\r\n    codeSet,\r\n    treeDept\r\n  }\r\n};\r\n</script>\r\n<style  lang=\"less\" scoped>\r\n  .previewVisible-list{\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    .item{\r\n        width: 50%;\r\n        margin-right: 0;\r\n        text-align: right;\r\n    }\r\n  }\r\n.extend-list{\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 1150px;\r\n  .item{\r\n    width: 320px;\r\n    text-align: right;\r\n  }\r\n}\r\ni{\r\n  font-style:normal;\r\n}\r\n.colorRed{\r\n  color: red;\r\n  line-height:30px;\r\n}\r\nh5 {\r\n  color: #222;\r\n  margin-left: -15px;\r\n}\r\n.test {\r\n  color: #9d9d9d;\r\n}\r\n.display-flex {\r\n  display: flex;\r\n}\r\n.text-center{\r\n  text-align: center;\r\n}\r\n.justify-content {\r\n  display: flex;\r\n  // justify-content: space-between;\r\n}\r\n.content {\r\n  height: 50px;\r\n  line-height: 50px;\r\n}\r\n\r\n.tree {\r\n  width: 1000px;\r\n  border-right: 1px solid #ccc;\r\n  border-top: 1px solid #ccc;\r\n  border-left: 1px solid #ccc;\r\n  .tree-title{\r\n    height: 50px;\r\n    line-height: 50px;\r\n    font-weight: bold;\r\n    font-size:16px;\r\n  }\r\n  span {\r\n    display: inline-block;\r\n    width: 33%;\r\n    border-bottom: 1px solid #ccc;\r\n  }\r\n  .text-index10 {\r\n    text-indent: 10px;\r\n  }\r\n  .l {\r\n    border-right: 1px solid #ccc;\r\n  }\r\n  .r{\r\n    text-indent: 20px;\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/workorder/config"}]}