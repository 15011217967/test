{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\components\\uploadImg\\el_upload_img_multi.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\components\\uploadImg\\el_upload_img_multi.vue","mtime":1572415127733},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getToken } from \"@/utils/auth\";\nimport draggable from 'vuedraggable';\nimport Sortable from 'sortablejs';\nvar token = getToken();\nexport default {\n  props: {\n    // 请求参数\n    CatalogName: [String],\n    // 回显数据\n    EchoDisplayImages: [Array, String],\n    // 描述\n    describe: [String],\n    // 上传个数\n    LssUpimgLimit: [Number],\n    // 是否禁止\n    disabled: [Boolean],\n    // 上传图片路径\n    imgApi: [String, Object]\n  },\n  model: {\n    event: 'parentRef'\n  },\n  data: function data() {\n    return {\n      // 上传文件列表\n      imageArr: [],\n      // 头部请求token\n      tokenHeaders: {\n        accessToken: token\n      },\n      // 预览图片地址\n      dialogImageUrl: '',\n      // 预览图片是否显示\n      dialogVisible: false,\n      // 上传的参数\n      uploadData: {},\n      // 上传图标是否显示\n      isHideUpload: false\n    };\n  },\n  components: {\n    draggable: draggable\n  },\n  created: function created() {\n    this.uploadData = {\n      catalog: this.CatalogName\n    };\n    this.imageArr = this.EchoDisplayImages;\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.$nextTick(function () {\n      // 初始行拖拽\n      _this2.rowDrop();\n    });\n  },\n  watch: {\n    imageArr: function imageArr() {\n      this.isHideUpload = this.imageArr.length >= this.LssUpimgLimit;\n    }\n  },\n  methods: {\n    /**\r\n     * 表格行拖拽\r\n     */\n    rowDrop: function rowDrop() {\n      var tbody = this.$refs.dragTable.$el.querySelector('.el-upload-list');\n\n      var _this = this;\n\n      Sortable.create(tbody, {\n        onEnd: function onEnd(_ref) {\n          var newIndex = _ref.newIndex,\n              oldIndex = _ref.oldIndex;\n          if (newIndex === oldIndex) return;\n\n          var currRow = _this.imageArr.splice(oldIndex, 1)[0];\n\n          _this.imageArr.splice(newIndex, 0, currRow);\n\n          var listData = _this.imageArr.map(function (item, index) {\n            return {\n              id: item.id,\n              sort: ++index\n            };\n          });\n        }\n      });\n    },\n\n    /**\r\n     * 获取上传图片请求地址\r\n     * @return { String } 请求路径\r\n     */\n    imgAction: function imgAction() {\n      return this.api.FN_ALLPATH(this.imgApi);\n    },\n\n    /**\r\n     * 文件上传之前调用做一些拦截限制\r\n     * @param { Object } file 上传的文件信息\r\n     */\n    beforeAvatarUpload: function beforeAvatarUpload(file) {\n      var isJPG = true;\n      var isLtM = file.size / 1024 / 1024 < 1;\n\n      if (!isLtM) {\n        this.$message.error('上传图片大小不能超过1MB!');\n      }\n\n      return isJPG && isLtM;\n    },\n\n    /**\r\n     * 预览图片\r\n     * @param { Object } file 预览的文件信息\r\n     */\n    handlePictureCardPreview: function handlePictureCardPreview(file) {\n      this.dialogImageUrl = file.url;\n      this.dialogVisible = true;\n    },\n\n    /**\r\n     * 删除图片时调用\r\n     * @param { Object } file 删除的文件信息\r\n     * @param { Array } fileList 文件列表\r\n     */\n    handleRemove: function handleRemove(file, fileList) {\n      this.imageArr = fileList;\n      this.$emit('parentRef', this.imageArr);\n    },\n\n    /**\r\n     * 上传图片成功时调用\r\n     * @param { Object } res 上传图片成功消息体\r\n     * @param { Object } file 删除的文件信息\r\n     * @param { Array } fileList 文件列表\r\n     */\n    handleAvatarSuccess: function handleAvatarSuccess(res, file, fileList) {\n      file.url = res.data.URL || res.data.url;\n      this.imageArr = fileList;\n      this.$emit('parentRef', this.imageArr);\n    },\n\n    /**\r\n     * 上传图片失败时调用\r\n     */\n    imgUploadError: function imgUploadError() {\n      this.$message.error(\"上传图片失败!\");\n    }\n  }\n};",{"version":3,"sources":["el_upload_img_multi.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <el-upload\r\n      ref=\"dragTable\"\r\n      :class=\"{hide:isHideUpload}\"\r\n      :action=\"imgAction()\"\r\n      list-type=\"picture-card\"\r\n      accept=\"image/*\"\r\n      :limit=\"LssUpimgLimit\"\r\n      :headers=\"tokenHeaders\"\r\n      :file-list=\"imageArr\"\r\n      :on-preview=\"handlePictureCardPreview\"\r\n      :on-remove=\"handleRemove\"\r\n      :on-success=\"handleAvatarSuccess\"\r\n      :data=\"uploadData\"\r\n      :before-upload=\"beforeAvatarUpload\"\r\n      :on-error=\"imgUploadError\"\r\n      :disabled=\"disabled\"\r\n    >\r\n    <i class=\"el-icon-plus\"></i>\r\n    </el-upload>\r\n    <p class=\"img-tips\" v-if=\"describe\">{{ describe }}</p>\r\n    <el-dialog :visible.sync=\"dialogVisible\" append-to-body>\r\n      <img width=\"100%\" :src=\"dialogImageUrl\" alt>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\n\r\nimport { getToken } from \"@/utils/auth\";\r\nimport draggable from 'vuedraggable';\r\nimport Sortable from 'sortablejs';\r\nlet token = getToken();\r\n\r\nexport default {\r\n  props: {\r\n    // 请求参数\r\n    CatalogName:[String],\r\n    // 回显数据\r\n    EchoDisplayImages:[Array,String],\r\n    // 描述\r\n    describe:[String],\r\n    // 上传个数\r\n    LssUpimgLimit:[Number],\r\n    // 是否禁止\r\n    disabled:[Boolean],\r\n    // 上传图片路径\r\n    imgApi:[String, Object]\r\n  },\r\n  model:{\r\n    event:'parentRef'\r\n  },\r\n  data() {\r\n    return {\r\n      // 上传文件列表\r\n      imageArr: [],\r\n      // 头部请求token\r\n      tokenHeaders: {accessToken: token},\r\n      // 预览图片地址\r\n      dialogImageUrl: '',\r\n      // 预览图片是否显示\r\n      dialogVisible: false,\r\n      // 上传的参数\r\n      uploadData:{},\r\n      // 上传图标是否显示\r\n      isHideUpload:false\r\n    };\r\n  },\r\n  components: {\r\n    draggable\r\n  },\r\n  created() {\r\n    this.uploadData = {\r\n      catalog: this.CatalogName\r\n    };  \r\n    this.imageArr = this.EchoDisplayImages;\r\n  },\r\n  mounted(){\r\n  this.$nextTick(() => {\r\n      // 初始行拖拽\r\n      this.rowDrop()\r\n      })\r\n  },\r\n  watch: {\r\n    imageArr(){\r\n      this.isHideUpload = this.imageArr.length >= this.LssUpimgLimit;\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n     * 表格行拖拽\r\n     */ \r\n    rowDrop() {\r\n      const tbody = this.$refs.dragTable.$el.querySelector('.el-upload-list')\r\n      const _this = this\r\n      Sortable.create(tbody, {\r\n        onEnd({ newIndex, oldIndex }) {\r\n          if(newIndex === oldIndex) return\r\n          const currRow = _this.imageArr.splice(oldIndex, 1)[0]\r\n          _this.imageArr.splice(newIndex, 0, currRow)\r\n          let listData = _this.imageArr.map((item,index) => {\r\n            return {\r\n              id: item.id,\r\n              sort: ++index\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    /**\r\n     * 获取上传图片请求地址\r\n     * @return { String } 请求路径\r\n     */\r\n    imgAction() {\r\n      return this.api.FN_ALLPATH(this.imgApi);\r\n    },\r\n    /**\r\n     * 文件上传之前调用做一些拦截限制\r\n     * @param { Object } file 上传的文件信息\r\n     */\r\n    beforeAvatarUpload(file) {\r\n      const isJPG = true;\r\n      const isLtM = file.size / 1024 / 1024 < 1;\r\n      if (!isLtM) {\r\n        this.$message.error('上传图片大小不能超过1MB!');\r\n      }\r\n      return isJPG && isLtM;\r\n    },\r\n    /**\r\n     * 预览图片\r\n     * @param { Object } file 预览的文件信息\r\n     */\r\n    handlePictureCardPreview(file) {\r\n      this.dialogImageUrl = file.url;\r\n      this.dialogVisible = true;\r\n    },\r\n    /**\r\n     * 删除图片时调用\r\n     * @param { Object } file 删除的文件信息\r\n     * @param { Array } fileList 文件列表\r\n     */\r\n    handleRemove(file, fileList) {\r\n      this.imageArr = fileList;\r\n      this.$emit('parentRef',this.imageArr);\r\n    },\r\n    /**\r\n     * 上传图片成功时调用\r\n     * @param { Object } res 上传图片成功消息体\r\n     * @param { Object } file 删除的文件信息\r\n     * @param { Array } fileList 文件列表\r\n     */\r\n    handleAvatarSuccess(res, file, fileList) {\r\n      file.url = res.data.URL || res.data.url;\r\n      this.imageArr = fileList;\r\n      this.$emit('parentRef',this.imageArr);\r\n    },\r\n    /**\r\n     * 上传图片失败时调用\r\n     */\r\n    imgUploadError() {\r\n      this.$message.error(\"上传图片失败!\");\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n  .hide /deep/ .el-upload--picture-card {\r\n      display: none;\r\n  }\r\n  .imgdisabled /deep/ .el-upload-list__item-delete {\r\n      display: none !important;\r\n  }\r\n</style>\r\n\r\n"],"sourceRoot":"src/components/uploadImg"}]}