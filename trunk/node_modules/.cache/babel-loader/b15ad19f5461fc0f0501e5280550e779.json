{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\product\\components\\upload_video.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\product\\components\\upload_video.vue","mtime":1572415123952},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TcVod from \"vod-js-sdk-v6/lib/tc_vod\";\nimport VideoPlayView from \"./videoPlay.vue\";\nexport default {\n  name: \"upload-video\",\n  // 数据\n  data: function data() {\n    return {\n      isVideo: false,\n      isImg: false,\n      // 上传实例\n      tcVod: \"\",\n      videoInfoOld: null,\n      videoInfo: null,\n      // 最终后台参数\n      videoParams: null,\n      // 页面回显路径\n      videoUrl: \"\",\n      //图片回显路径\n      imgUrl: \"\",\n      // 签名\n      signature: null,\n      loading: false,\n      isEdit: false\n    };\n  },\n  created: function created() {\n    this.init();\n  },\n  // 初始化数据\n  mounted: function mounted() {\n    this.$nextTick(function () {});\n  },\n  // 方法\n  methods: {\n    // 初始化\n    init: function init() {\n      this.isEdit = false;\n      this.videoInfoOld = null;\n      this.videoInfo = null;\n      this.videoParams = {};\n      this.videoUrl = \"\";\n      this.tcVod = new TcVod({\n        getSignature: this.getSignature\n      });\n    },\n    //修改返回初始化\n    propInit: function propInit(params) {\n      this.videoUrl = params.url; //图片回显路径\n\n      this.imgUrl = params.cover;\n      this.isVideo = true;\n      this.isImg = true;\n      this.isEdit = true;\n    },\n    // 获取签名\n    getSignature: function getSignature() {\n      var _this = this;\n\n      if (this.signature) {\n        return this.signature;\n      } else {\n        this.request(this.api.contentCore.picture_get, {}).then(function (data) {\n          _this.signature = data.signature;\n          return data.signature;\n        });\n      }\n    },\n    // 添加视频\n    addVideo: function addVideo() {\n      if (this.loading) return;\n      this.$refs.videoInput.click();\n    },\n    // 判断上传文件是否是视频\n    checkVideoType: function checkVideoType(type) {\n      if (!type) {\n        this.$message.error(\"视频类型必须是,mp4中的一种\");\n        this.loading = false;\n        return false;\n      }\n\n      var str = type.split(\"/\")[1].toLowerCase();\n\n      if (!str.match(/mp4/)) {\n        this.loading = false;\n        this.$message.error(\"视频类型必须是,mp4中的一种\");\n        return false;\n      } else {\n        return true;\n      }\n    },\n    // 上传的视频信息\n    setVideoInfo: function setVideoInfo() {\n      var _file = this.$refs.videoInput.files[0];\n      var isLtM = _file.size / 1024 / 1024 < 20;\n\n      if (!isLtM) {\n        this.$message.error(\"上传视频大小不能超过\" + 20 + \"MB!\");\n        return false;\n      }\n\n      this.loading = true;\n      this.videoInfo = _file; // 解决 chrome input 上传取消bug\n\n      if (!this.videoInfo) {\n        this.videoInfo = this.videoInfoOld.get(\"imgInfo\");\n      } else {\n        this.videoInfoOld = new FormData();\n        this.videoInfoOld.set(\"imgInfo\", this.videoInfo);\n      }\n\n      var flag = this.checkVideoType(this.videoInfo.type);\n\n      if (flag) {\n        this.addUpload();\n      }\n    },\n    // 上传过程\n    addUpload: function addUpload() {\n      var self = this;\n      var uploader = this.tcVod.upload({\n        mediaFile: this.videoInfo\n      }); // 视频上传进度\n\n      uploader.on(\"media_progress\", function (info) {}); // 视频上传完成时\n\n      uploader.on(\"media_upload\", function (info) {}); // 完成回调\n\n      uploader.done().then(function (doneResult) {\n        self.videoSave(doneResult);\n      }).catch(function (err) {\n        this.loading = false;\n      });\n    },\n    // 保存视频\n    videoSave: function videoSave(params) {\n      var _this2 = this;\n\n      setTimeout(function () {\n        _this2.loading = false;\n        _this2.videoParams = {\n          fileId: params.fileId,\n          url: params.video.url\n        };\n        _this2.videoUrl = params.video.url;\n        _this2.isVideo = true;\n        _this2.isImg = false;\n\n        _this2.$emit(\"setVideoParams\", _this2.videoParams);\n      }, 500);\n    },\n    //删除当前视频\n    iconRemove: function iconRemove() {\n      var _this3 = this;\n\n      if (!this.isEdit) {\n        this.request(this.api.product.video_deleteMedia, {\n          fileId: this.videoParams.fileId\n        }).then(function (res) {\n          console.log(res);\n\n          _this3.$message.success(\"删除视频成功\");\n\n          _this3.videoParams = {\n            fileId: \"\",\n            url: \"\"\n          };\n          _this3.videoUrl = \"\";\n          _this3.isVideo = false;\n          _this3.isImg = true;\n        });\n      } else {\n        this.videoParams = {\n          fileId: \"\",\n          url: \"\"\n        };\n        this.videoUrl = \"\";\n        this.isVideo = false;\n        this.isImg = true;\n      }\n    },\n    //播放当前视频\n    iconPlay: function iconPlay() {\n      this.$refs.videoRef.videoInit(this.videoUrl);\n    },\n    getUploadVideoInfo: function getUploadVideoInfo() {\n      return this.videoParams;\n    }\n  },\n  components: {\n    VideoPlayView: VideoPlayView\n  }\n};",{"version":3,"sources":["upload_video.vue"],"names":[],"mappings":"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","sourcesContent":["<!--\r\n * @Description: 商品中心上传视频\r\n * @Author: elephant\r\n * @Date: 2019-08-20 14:03:36\r\n * @LastEditTime: 2019-08-20 17:32:44\r\n * @LastEditors: Please set LastEditors\r\n -->\r\n<template>\r\n  <div class=\"upload-video\">\r\n    <form ref=\"upLoadForm\">\r\n      <input\r\n        type=\"file\"\r\n        style=\"display: none;\"\r\n        accept=\"video/mp4\"\r\n        ref=\"videoInput\"\r\n        @change=\"setVideoInfo()\"\r\n      />\r\n    </form>\r\n    <div v-if=\"isVideo\" class=\"video-wrap\">\r\n      <img v-if=\"isImg\" :src=\"imgUrl\" />\r\n      <video v-else :src=\"videoUrl\"></video>\r\n      <div class=\"abs-cont\">\r\n        <i v-if=\"!isEdit\" @click.stop=\"iconRemove()\" class=\"remove el-icon-delete\"></i>\r\n        <i @click.stop=\"iconPlay()\" class=\"play el-icon-video-play\"></i>\r\n      </div>\r\n    </div>\r\n    <div v-else class=\"btn-wrap\" @click.stop=\"addVideo\" v-loading=\"loading\">\r\n      <i class=\"el-icon-plus\"></i>\r\n    </div>\r\n    <!-- 视频组件 -->\r\n    <video-play-view ref=\"videoRef\"></video-play-view>\r\n  </div>\r\n</template>\r\n<script>\r\nimport TcVod from \"vod-js-sdk-v6/lib/tc_vod\";\r\nimport VideoPlayView from \"./videoPlay.vue\";\r\nexport default {\r\n  name: \"upload-video\",\r\n  // 数据\r\n  data() {\r\n    return {\r\n      isVideo: false,\r\n      isImg: false,\r\n      // 上传实例\r\n      tcVod: \"\",\r\n      videoInfoOld: null,\r\n      videoInfo: null,\r\n      // 最终后台参数\r\n      videoParams: null,\r\n      // 页面回显路径\r\n      videoUrl: \"\",\r\n      //图片回显路径\r\n      imgUrl: \"\",\r\n      // 签名\r\n      signature: null,\r\n      loading: false,\r\n      isEdit: false\r\n    };\r\n  },\r\n  created() {\r\n    this.init();\r\n  },\r\n  // 初始化数据\r\n  mounted() {\r\n    this.$nextTick(() => {});\r\n  },\r\n  // 方法\r\n  methods: {\r\n    // 初始化\r\n    init() {\r\n      this.isEdit = false;\r\n      this.videoInfoOld = null;\r\n      this.videoInfo = null;\r\n      this.videoParams = {};\r\n      this.videoUrl = \"\";\r\n      this.tcVod = new TcVod({\r\n        getSignature: this.getSignature\r\n      });\r\n    },\r\n    //修改返回初始化\r\n    propInit(params) {\r\n      this.videoUrl = params.url;\r\n      //图片回显路径\r\n      this.imgUrl = params.cover;\r\n      this.isVideo = true;\r\n      this.isImg = true;\r\n      this.isEdit = true;\r\n    },\r\n    // 获取签名\r\n    getSignature() {\r\n      if (this.signature) {\r\n        return this.signature;\r\n      } else {\r\n        this.request(this.api.contentCore.picture_get, {}).then(data => {\r\n          this.signature = data.signature;\r\n          return data.signature;\r\n        });\r\n      }\r\n    },\r\n    // 添加视频\r\n    addVideo() {\r\n      if (this.loading) return;\r\n      this.$refs.videoInput.click();\r\n    },\r\n    // 判断上传文件是否是视频\r\n    checkVideoType(type) {\r\n      if (!type) {\r\n        this.$message.error(\"视频类型必须是,mp4中的一种\");\r\n        this.loading = false;\r\n        return false;\r\n      }\r\n      const str = type.split(\"/\")[1].toLowerCase();\r\n      if (!str.match(/mp4/)) {\r\n        this.loading = false;\r\n        this.$message.error(\"视频类型必须是,mp4中的一种\");\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    },\r\n    // 上传的视频信息\r\n    setVideoInfo() {\r\n      let _file = this.$refs.videoInput.files[0];\r\n      const isLtM = _file.size / 1024 / 1024 < 20;\r\n      if (!isLtM) {\r\n        this.$message.error(\"上传视频大小不能超过\" + 20 + \"MB!\");\r\n        return false;\r\n      }\r\n      this.loading = true;\r\n      this.videoInfo = _file;\r\n      // 解决 chrome input 上传取消bug\r\n      if (!this.videoInfo) {\r\n        this.videoInfo = this.videoInfoOld.get(\"imgInfo\");\r\n      } else {\r\n        this.videoInfoOld = new FormData();\r\n        this.videoInfoOld.set(\"imgInfo\", this.videoInfo);\r\n      }\r\n      const flag = this.checkVideoType(this.videoInfo.type);\r\n      if (flag) {\r\n        this.addUpload();\r\n      }\r\n    },\r\n    // 上传过程\r\n    addUpload() {\r\n      let self = this;\r\n      let uploader = this.tcVod.upload({\r\n        mediaFile: this.videoInfo\r\n      });\r\n      // 视频上传进度\r\n      uploader.on(\"media_progress\", function(info) {});\r\n      // 视频上传完成时\r\n      uploader.on(\"media_upload\", function(info) {});\r\n      // 完成回调\r\n      uploader\r\n        .done()\r\n        .then(function(doneResult) {\r\n          self.videoSave(doneResult);\r\n        })\r\n        .catch(function(err) {\r\n          this.loading = false;\r\n        });\r\n    },\r\n    // 保存视频\r\n    videoSave(params) {\r\n      setTimeout(() => {\r\n        this.loading = false;\r\n        this.videoParams = {\r\n          fileId: params.fileId,\r\n          url: params.video.url\r\n        };\r\n        this.videoUrl = params.video.url;\r\n        this.isVideo = true;\r\n        this.isImg = false;\r\n        this.$emit(\"setVideoParams\", this.videoParams);\r\n      }, 500);\r\n    },\r\n    //删除当前视频\r\n    iconRemove() {\r\n      if (!this.isEdit) {\r\n        this.request(this.api.product.video_deleteMedia, {\r\n          fileId: this.videoParams.fileId\r\n        }).then(res => {\r\n          console.log(res);\r\n          this.$message.success(\"删除视频成功\");\r\n          this.videoParams = {\r\n            fileId: \"\",\r\n            url: \"\"\r\n          };\r\n          this.videoUrl = \"\";\r\n          this.isVideo = false;\r\n          this.isImg = true;\r\n        });\r\n      } else {\r\n        this.videoParams = {\r\n          fileId: \"\",\r\n          url: \"\"\r\n        };\r\n        this.videoUrl = \"\";\r\n        this.isVideo = false;\r\n        this.isImg = true;\r\n      }\r\n    },\r\n    //播放当前视频\r\n    iconPlay() {\r\n      this.$refs.videoRef.videoInit(this.videoUrl);\r\n    },\r\n    getUploadVideoInfo() {\r\n      return this.videoParams;\r\n    }\r\n  },\r\n  components: {\r\n    VideoPlayView\r\n  }\r\n};\r\n</script>\r\n <style lang=\"less\" scoped>\r\n.upload-video {\r\n  width: 120px;\r\n  height: 150px;\r\n  .btn-wrap {\r\n    width: 120px;\r\n    height: 150px;\r\n    line-height: 150px;\r\n    border: 1px dashed #c0ccda;\r\n    border-radius: 6px;\r\n    text-align: center;\r\n    cursor: pointer;\r\n    i {\r\n      font-size: 28px;\r\n      color: #8c939d;\r\n    }\r\n  }\r\n  .video-wrap {\r\n    position: relative;\r\n    width: 120px;\r\n    height: 150px;\r\n    border: 1px solid #c0ccda;\r\n    border-radius: 6px;\r\n    text-align: center;\r\n\r\n    cursor: pointer;\r\n    img,\r\n    video {\r\n      width: 120px;\r\n      height: 150px;\r\n    }\r\n    .abs-cont {\r\n      width: 120px;\r\n      height: 150px;\r\n      position: absolute;\r\n      left: 0;\r\n      top: -1px;\r\n      font-size: 12px;\r\n      color: #ffffff;\r\n      padding: 4px 2px 4px 4px;\r\n      border-radius: 6px;\r\n      background-color: #000000;\r\n      opacity: 0.5;\r\n      display: none;\r\n      transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);\r\n      .remove {\r\n        position: absolute;\r\n        right: 10px;\r\n        bottom: 10px;\r\n        cursor: pointer;\r\n        font-size: 18px;\r\n      }\r\n      .play {\r\n        position: absolute;\r\n        left: 35%;\r\n        top: 35%;\r\n        cursor: pointer;\r\n        font-size: 40px;\r\n      }\r\n    }\r\n  }\r\n  .video-wrap:hover .abs-cont {\r\n    display: block;\r\n  }\r\n}\r\n.btn-wrap /deep/ .el-loading-spinner {\r\n  top: 0;\r\n  margin: 0;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/product/components"}]}