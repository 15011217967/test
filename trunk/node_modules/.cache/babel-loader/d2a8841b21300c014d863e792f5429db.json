{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\product\\components\\tag_list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\product\\components\\tag_list.vue","mtime":1572415123948},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"tag-group-list\",\n  data: function data() {\n    return {\n      commonGroups: [],\n      //常用分组\n      wholeGroups: [],\n      //全部分组\n      restaurants: [],\n      tagName: \"\",\n      timeout: null,\n      //全部标签分组\n      allTagGroups: []\n    };\n  },\n  created: function created() {\n    this.init();\n    this.getAllGroupData();\n  },\n  methods: {\n    init: function init() {},\n    //获取全部分组\n    getAllGroupData: function getAllGroupData() {\n      var _this = this;\n\n      this.request(this.api.collocation.collocationTagGroup_list, {\n        subset: true,\n        valid: true\n      }).then(function (res) {\n        console.log(res);\n        var _data = res.data; //拿到全部的 数组及标签 进行set 处理\n\n        for (var i = 0; i < _data.length; i++) {\n          _data[i]._active = false;\n          var items = _data[i].collocationTagItems;\n\n          for (var k = 0; k < items.length; k++) {\n            items[k]._active = false;\n          }\n        } //TODO 要删掉\n\n\n        var sss = _this.$common.deepCopy(_data);\n\n        var a = sss.splice(0, 1);\n        console.log(sss);\n        _this.commonGroups = sss; //常用\n\n        _this.wholeGroups = _data; //全部\n      });\n    },\n    //全部分组点击\n    checkItem: function checkItem(item) {\n      //未选改已选\n      if (!item._active) {\n        this.allChangeState(item.id, false, this.commonGroups);\n        this.allChangeState(item.id, false, this.wholeGroups);\n        this.allTagGroups.push(item);\n      } else {\n        this.allChangeState(item.id, true, this.commonGroups);\n        this.allChangeState(item.id, true, this.wholeGroups);\n        var index = this.allTagGroups.findIndex(function (elem) {\n          return elem.id == item.id;\n        });\n\n        if (index != -1) {\n          this.allTagGroups.splice(index, 1);\n        }\n      }\n    },\n    //改变全部状态\n    allChangeState: function allChangeState(_id, _type, arr) {\n      var cGroups = arr;\n\n      for (var i = 0; i < cGroups.length; i++) {\n        if (cGroups[i].id == _id) {\n          if (!_type) {\n            cGroups[i]._active = true;\n          } else {\n            cGroups[i]._active = false;\n          }\n\n          break;\n        }\n      }\n    },\n    //点击标签\n    tagCheckItem: function tagCheckItem(item) {\n      if (item._active === undefined) {\n        this.$set(item, '_active', '');\n      } //未选改已选\n\n\n      if (!item._active) {\n        item._active = true; //this.checkedData.push(item.id);\n      } else {\n        item._active = false; // let i = this.checkedData.findIndex(tab => {\n        //   return item.id === tab\n        // });\n        // this.checkedData.splice(i, 1);\n      }\n    },\n    getMoreTags: function getMoreTags() {},\n    querySearchAsync: function querySearchAsync(queryString, cb) {},\n    createStateFilter: function createStateFilter(queryString) {//   return state => {\n      //     return (\n      //       state.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0\n      //     );\n      //   };\n    },\n    handleSelect: function handleSelect(item) {\n      console.log(item);\n    }\n  }\n};",{"version":3,"sources":["tag_list.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <ul class=\"tag-wrap\">\r\n    <!-- 分组 -->\r\n    <li>\r\n      <div class=\"check-tabs common-wrap\">\r\n        <h6 class=\"label\">常用分组：</h6>\r\n        <ul class=\"clearfix\">\r\n          <li\r\n            v-for=\"(item, index) in commonGroups\"\r\n            :key=\"index\"\r\n            @click=\"checkItem(item)\"\r\n            :class=\"{active: item._active}\"\r\n          >{{ item.name }}</li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"check-tabs whole-wrap\">\r\n        <h6 class=\"label\">全部分组：</h6>\r\n        <ul class=\"clearfix\">\r\n          <li\r\n            v-for=\"(item, index) in wholeGroups\"\r\n            :key=\"index\"\r\n            @click=\"checkItem(item)\"\r\n            :class=\"{active: item._active}\"\r\n          >{{ item.name }}</li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"page-more\">\r\n        <div @click=\"getMoreTags\" class=\"btn\">\r\n          更多匹配标签\r\n          <i class=\"el-icon-arrow-down\"></i>\r\n        </div>\r\n      </div>\r\n    </li>\r\n    <!-- 录入标签 -->\r\n    <li>\r\n      <div class=\"check-tab\">\r\n        <span class=\"label\">录入标签：</span>\r\n        <el-autocomplete\r\n          class=\"input-w-2 mt-1\"\r\n          v-model=\"tagName\"\r\n          :fetch-suggestions=\"querySearchAsync\"\r\n          placeholder=\"请输入标签名称\"\r\n          @select=\"handleSelect\"\r\n        ></el-autocomplete>&nbsp;\r\n        <el-button type=\"primary\" plain size=\"small\">添加标签</el-button>\r\n      </div>\r\n      <div class=\"check-tabs all-wrap\" v-for=\"(elem,pIndex) in allTagGroups\" :key=\"pIndex\">\r\n        <h6 class=\"label\">{{elem.name}}：</h6>\r\n        <ul class=\"clearfix\">\r\n          <li\r\n            v-for=\"(item,index) in elem.collocationTagItems\"\r\n            :key=\"index\"\r\n            @click=\"tagCheckItem(item)\"\r\n            :class=\"{active: item._active}\"\r\n          >{{ item.tagName }}</li>\r\n        </ul>\r\n      </div>\r\n    </li>\r\n  </ul>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"tag-group-list\",\r\n  data() {\r\n    return {\r\n      commonGroups: [], //常用分组\r\n      wholeGroups: [], //全部分组\r\n      restaurants: [],\r\n      tagName: \"\",\r\n      timeout: null,\r\n      //全部标签分组\r\n      allTagGroups: []\r\n    };\r\n  },\r\n  created() {\r\n    this.init();\r\n    this.getAllGroupData();\r\n  },\r\n  methods: {\r\n    init() {},\r\n\r\n    //获取全部分组\r\n    getAllGroupData() {\r\n      this.request(this.api.collocation.collocationTagGroup_list, {\r\n        subset: true,\r\n        valid: true\r\n      }).then(res => {\r\n        console.log(res);\r\n        let _data = res.data;\r\n        //拿到全部的 数组及标签 进行set 处理\r\n        for (let i = 0; i < _data.length; i++) {\r\n          _data[i]._active = false;\r\n          let items=_data[i].collocationTagItems;\r\n          for (let k = 0; k < items.length; k++) {\r\n              items[k]._active = false;\r\n          }\r\n        }\r\n        //TODO 要删掉\r\n        let sss = this.$common.deepCopy(_data);\r\n        let a = sss.splice(0, 1);\r\n        console.log(sss);\r\n\r\n        this.commonGroups = sss; //常用\r\n        this.wholeGroups = _data; //全部\r\n      });\r\n    },\r\n\r\n    //全部分组点击\r\n    checkItem(item) {\r\n      //未选改已选\r\n      if (!item._active) {\r\n        this.allChangeState(item.id, false, this.commonGroups);\r\n        this.allChangeState(item.id, false, this.wholeGroups);\r\n        this.allTagGroups.push(item);\r\n      } else {\r\n        this.allChangeState(item.id, true, this.commonGroups);\r\n        this.allChangeState(item.id, true, this.wholeGroups);\r\n        let index = this.allTagGroups.findIndex((elem) =>(elem.id == item.id));\r\n        if(index != -1){\r\n            this.allTagGroups.splice(index, 1);\r\n        }\r\n      }\r\n    },\r\n    //改变全部状态\r\n    allChangeState(_id, _type, arr) {\r\n      let cGroups = arr;\r\n      for (let i = 0; i < cGroups.length; i++) {\r\n        if (cGroups[i].id == _id) {\r\n          if (!_type) {\r\n            cGroups[i]._active = true;\r\n          } else {\r\n            cGroups[i]._active = false;\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    },\r\n    //点击标签\r\n    tagCheckItem(item){\r\n        if(item._active === undefined){\r\n          this.$set(item, '_active', '');\r\n        }\r\n         //未选改已选\r\n        if(!item._active){\r\n          item._active = true;\r\n          //this.checkedData.push(item.id);\r\n        }else {\r\n          item._active = false;\r\n          // let i = this.checkedData.findIndex(tab => {\r\n          //   return item.id === tab\r\n          // });\r\n          // this.checkedData.splice(i, 1);\r\n        }\r\n    },\r\n    getMoreTags() {},\r\n    querySearchAsync(queryString, cb) {},\r\n    createStateFilter(queryString) {\r\n      //   return state => {\r\n      //     return (\r\n      //       state.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0\r\n      //     );\r\n      //   };\r\n    },\r\n    handleSelect(item) {\r\n      console.log(item);\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.tag-wrap {\r\n  > li {\r\n    background-color: #fafafa;\r\n    padding: 20px;\r\n    margin-bottom: 20px;\r\n  }\r\n}\r\n.whole-wrap {\r\n  padding: 15px 0 0;\r\n}\r\n.all-wrap{\r\n    padding: 10px 0 0 ;\r\n}\r\n.common-wrap {\r\n  border-bottom: 1px dashed #aaa;\r\n}\r\n.check-tabs {\r\n  display: flex;\r\n  .label {\r\n    display: inline-block;\r\n    width: 80px;\r\n    line-height: 24px;\r\n    text-align: right;\r\n  }\r\n  ul {\r\n    flex: 1;\r\n    li {\r\n      float: left;\r\n      height: 24px;\r\n      line-height: 24px;\r\n      padding: 0 10px;\r\n      border-radius: 12px;\r\n      margin: 0 8px 15px;\r\n      cursor: pointer;\r\n      font-size: 12px;\r\n      box-shadow: 0 0 5px rgba(153, 153, 153, 0.3);\r\n    }\r\n    li.active {\r\n      background-color: rgba(25, 158, 216, 1);\r\n      color: #fff;\r\n      box-shadow: 0 0 5px rgba(34, 144, 232, 1);\r\n    }\r\n  }\r\n}\r\n.page-more {\r\n  border-top: 1px solid #e6e8ed;\r\n  margin-top: 10px;\r\n  div.btn {\r\n    width: 120px;\r\n    border: 1px solid #e6e8ed;\r\n    border-top: 1px solid #fff;\r\n    margin: -1px auto 0;\r\n    text-align: center;\r\n    font-size: 12px;\r\n    cursor: pointer;\r\n    line-height: 30px;\r\n  }\r\n}\r\n.mt-1 {\r\n  margin-top: 2px;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/product/components"}]}