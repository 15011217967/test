{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\components\\classification\\class_details.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\components\\classification\\class_details.vue","mtime":1573714838197},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'tp-class-details',\n  props: {\n    itemParam: {\n      type: Object\n    }\n  },\n  data: function data() {\n    return {\n      classDialogVisible: false,\n      filtersData: {\n        code: \"\",\n        // 新增新增分类编码\n        name: \"\",\n        //分类名称\n        parentId: null,\n        //父级分类  已有分类选择 如果为1及分类则为NULL\n        parentName: null,\n        valid: true,\n        // 使用状态，\n        type: 1 //type 代表商品分类\n\n      },\n      cateArr: [],\n      props: {\n        value: 'id',\n        label: 'name',\n        children: 'children'\n      },\n      //验证\n      rules: {\n        name: [{\n          required: true,\n          message: \"请输入分类名称\",\n          trigger: \"blur\"\n        }],\n        code: [{\n          required: true,\n          message: \"请输入分类编码\",\n          trigger: \"blur\"\n        }]\n      },\n      editDisabled: true,\n      //可编辑状态  除使用状态其他都不可编辑\n      showDisabled: true,\n      //查看时 使用状态不可编辑\n      classData: [],\n      classList: [],\n      itemStatus: ''\n    };\n  },\n  watch: {},\n  created: function created() {\n    this.getListData();\n  },\n  methods: {\n    getListData: function getListData() {\n      var _this = this;\n\n      this.$common.getClassSelect(this, 1).then(function (res) {\n        _this.classData = res.ztree;\n        _this.classList = res.list;\n      });\n    },\n    cascaderGet: function cascaderGet(e) {\n      var _this2 = this;\n\n      this.filtersData.parentId = JSON.parse(JSON.stringify(e)).pop();\n      var obj = this.classList.find(function (item) {\n        return item.id == _this2.filtersData.parentId;\n      });\n      this.filtersData.parentName = obj.name;\n    },\n    //初始化\n    classDetailsPopupInit: function classDetailsPopupInit() {\n      this.cateArr = [];\n      this.filtersData = {\n        code: \"\",\n        name: \"\",\n        parentId: null,\n        parentName: null,\n        valid: true,\n        type: 1 //对象还需初始化\n\n      };\n      this.itemStatus = this.itemParam.type;\n\n      switch (this.itemStatus.toString()) {\n        case \"add\":\n          //新增\n          this.editDisabled = false;\n          this.showDisabled = false;\n          break;\n\n        case \"edit\":\n          //修改\n          this.editDisabled = true;\n          this.showDisabled = false;\n          this.getClassData();\n          break;\n\n        case \"show\":\n          //查看\n          this.editDisabled = true;\n          this.showDisabled = true;\n          this.getClassData();\n          break;\n      }\n\n      this.classDialogVisible = true;\n    },\n    //关闭\n    closeDialog: function closeDialog(formName) {\n      this.classDialogVisible = false;\n      this.$refs[formName].resetFields(); //重置选项\n    },\n    //保存表单\n    submitForm: function submitForm(formName) {\n      var _this3 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          _this3.request(_this3.api.product.categories_save, _this3.filtersData).then(function (data) {\n            _this3.$message.success('保存成功');\n\n            _this3.closeDialog(formName);\n\n            setTimeout(function () {\n              _this3.$emit(\"refreshItem\", \"刷新吧兄弟\");\n            }, 2000);\n          }).catch(function (err) {\n            _this3.$message.error(err.message);\n          });\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    },\n    // //获取列表数据\n    getClassData: function getClassData() {\n      var _this4 = this;\n\n      this.request(this.api.product.categories_get, {\n        id: this.itemParam.id\n      }).then(function (data) {\n        //console.log(data)\n        _this4.cateArr = [];\n\n        _this4.cateArr.push(data.parentId);\n\n        _this4.filtersData = data;\n      });\n    },\n    //修改表单\n    editForm: function editForm(formName) {\n      this.submitForm(formName);\n    }\n  }\n};",{"version":3,"sources":["class_details.vue"],"names":[],"mappings":"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","sourcesContent":[" <template>\r\n    <el-dialog\r\n    :title=\"itemParam.title\"\r\n    :visible.sync=\"classDialogVisible\"\r\n    class=\"alarmPopup\"\r\n    width=\"500px\"\r\n    >\r\n    <el-form :model=\"filtersData\" :rules=\"rules\" label-width=\"100px\" size=\"small\" ref=\"filtersForm\" inline>\r\n        <el-form-item  parentId=\"parentId\"  label=\"父级分类：\">\r\n           <el-cascader\r\n           class=\"input-w\"\r\n            v-if=\"itemStatus == 'add'\"\r\n           :disabled=\"editDisabled\"\r\n            :options=\"classData\"\r\n             v-model=\"cateArr\"\r\n             :value=\"cateArr\"\r\n             @change=\"cascaderGet\"\r\n             :show-all-levels=\"false\"\r\n             :props=\"props\"\r\n            change-on-select\r\n          ></el-cascader>\r\n          <el-select v-else placeholder=\"请选择\" class=\"input-w\" :disabled=\"editDisabled\" v-model=\"filtersData.parentId\">\r\n              <el-option\r\n              v-for=\"item in classList\"\r\n              :key=\"item.id\"\r\n              :label=\"item.name\"\r\n              :value=\"item.id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item  prop=\"name\"  label=\"分类名称：\">\r\n         <el-input placeholder=\"请输入内容\" class=\"input-w\" :disabled=\"editDisabled\" v-model=\"filtersData.name\"></el-input>\r\n        </el-form-item>\r\n         <el-form-item  prop=\"code\"   v-if=\"itemStatus != 'add'\"  label=\"分类编码：\">\r\n         <el-input placeholder=\"请输入内容\" class=\"input-w\" :disabled=\"editDisabled\" v-model=\"filtersData.code\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"valid\" label=\"使用状态：\">\r\n          <el-select  class=\"input-w\" placeholder=\"请选择\" :disabled=\"showDisabled\" v-model=\"filtersData.valid\">\r\n            <el-option\r\n              v-for=\"item in this.$common.getValidOptions()\"\r\n              :key=\"item.status_id\"\r\n              :label=\"item.status_name\"\r\n              :value=\"item.status_id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n    </el-form>\r\n    <div class=\"item-right\">\r\n        <el-button size=\"small\" @click=\"closeDialog('filtersForm')\">取消</el-button>\r\n        <el-button  v-if=\"this.itemParam.type == 'add'\" size=\"small\" @click=\"submitForm('filtersForm')\" type=\"primary\">确定</el-button>\r\n        <el-button  v-else-if=\"this.itemParam.type == 'edit'\" size=\"small\" @click=\"editForm('filtersForm')\" type=\"primary\">修改</el-button>\r\n    </div>\r\n  </el-dialog>\r\n</template>\r\n<script>\r\nexport default {\r\n    name:'tp-class-details',\r\n    props: {\r\n        itemParam: {\r\n          type:Object,\r\n        },\r\n\r\n    },\r\n    data(){\r\n        return{\r\n            classDialogVisible:false,\r\n            filtersData:{\r\n                code: \"\", // 新增新增分类编码\r\n                name: \"\", //分类名称\r\n                parentId: null, //父级分类  已有分类选择 如果为1及分类则为NULL\r\n                parentName:null,\r\n                valid: true, // 使用状态，\r\n                type:1, //type 代表商品分类\r\n            },\r\n            cateArr:[],\r\n            props:{\r\n              value: 'id',\r\n              label:'name',\r\n              children: 'children'\r\n            },\r\n            //验证\r\n            rules:{\r\n              name:[\r\n                { required: true, message: \"请输入分类名称\", trigger: \"blur\" }\r\n              ],\r\n              code:[\r\n                { required: true, message: \"请输入分类编码\", trigger: \"blur\" }\r\n              ]\r\n            },\r\n            editDisabled:true,//可编辑状态  除使用状态其他都不可编辑\r\n            showDisabled:true,//查看时 使用状态不可编辑\r\n            classData:[],\r\n            classList:[],\r\n            itemStatus:''\r\n       }\r\n    },\r\n    watch:{\r\n\r\n    },\r\n    created(){\r\n      this.getListData();\r\n    },\r\n    methods:{\r\n       getListData(){\r\n        this.$common.getClassSelect(this,1).then(res =>{\r\n           this.classData=res.ztree;\r\n           this.classList=res.list;\r\n        })\r\n     },\r\n      cascaderGet(e){\r\n        this.filtersData.parentId=JSON.parse(JSON.stringify(e)).pop();\r\n        let obj=this.classList.find((item) => (item.id ==  this.filtersData.parentId))\r\n        this.filtersData.parentName = obj.name;\r\n      },\r\n        //初始化\r\n        classDetailsPopupInit(){\r\n          this.cateArr=[];\r\n          this.filtersData = {\r\n            code: \"\",\r\n            name: \"\",\r\n            parentId: null,\r\n            parentName:null,\r\n            valid: true,\r\n            type:1\r\n          }\r\n          //对象还需初始化\r\n          this.itemStatus =this.itemParam.type;\r\n          switch (this.itemStatus.toString()) {\r\n            case \"add\": //新增\r\n              this.editDisabled = false;\r\n              this.showDisabled = false;\r\n              break;\r\n            case \"edit\": //修改\r\n              this.editDisabled = true;\r\n              this.showDisabled = false;\r\n              this.getClassData();\r\n              break;\r\n            case \"show\": //查看\r\n              this.editDisabled = true;\r\n              this.showDisabled = true;\r\n              this.getClassData();\r\n              break;\r\n          }\r\n            this.classDialogVisible=true;\r\n        },\r\n        //关闭\r\n        closeDialog(formName){\r\n            this.classDialogVisible=false;\r\n            this.$refs[formName].resetFields(); //重置选项\r\n        },\r\n        //保存表单\r\n        submitForm(formName){\r\n           this.$refs[formName].validate(valid => {\r\n              if (valid) {\r\n                  this.request(this.api.product.categories_save,this.filtersData)\r\n                  .then(data => {\r\n                  this.$message.success('保存成功');\r\n                  this.closeDialog(formName);\r\n                  setTimeout(() => {\r\n                       this.$emit(\"refreshItem\", \"刷新吧兄弟\");\r\n                  }, 2000);\r\n                }).catch(err=>{\r\n                  this.$message.error(err.message)\r\n                });\r\n              } else {\r\n                console.log(\"error submit!!\");\r\n                return false;\r\n              }\r\n            });\r\n        },\r\n        // //获取列表数据\r\n        getClassData(){\r\n          this.request(this.api.product.categories_get,{id:this.itemParam.id}).then(data=>{\r\n              //console.log(data)\r\n              this.cateArr=[];\r\n              this.cateArr.push(data.parentId)\r\n              this.filtersData=data;\r\n          })\r\n        },\r\n        //修改表单\r\n        editForm(formName){\r\n          this.submitForm(formName);\r\n        },\r\n    }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src/components/classification"}]}