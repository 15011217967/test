{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\product\\commodity\\index_list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\product\\commodity\\index_list.vue","mtime":1587347931178},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar PrintsDialog = function PrintsDialog(resolve) {\n  return require([\"@/components/Prints/PrintsDialog.vue\"], resolve);\n};\n\nvar csvExportData = {};\nexport default {\n  name: \"index_list\",\n  data: function data() {\n    var that = this;\n    return {\n      filtersData: {\n        colorCode: \"\",\n        colorSeriesCode: \"\",\n        ownerId: \"\",\n        //货主\n        brandId: \"\",\n        //品牌ID\n        brandOwnerId: \"\",\n        cateIdentifier: \"\",\n        // 分类标识码\n        pageIndex: 1,\n        //当前页码\n        pageSize: 10,\n        //每页数量\n        //季节字段\n        seasonalStyleCode: \"\",\n        searchWords: \"\",\n        //检索关键字\n        designCompanyId: \"\",\n        //设计商Id\n        // tenantId: \"\", //平台租户（所属机构）ID ,\n        valid: true //有效状态\n\n      },\n      colorProps: {\n        lazy: true,\n        lazyLoad: function lazyLoad(node, resolve) {\n          that.getColorList(node, resolve);\n        }\n      },\n      classData: [],\n      classList: [],\n      cateArr: [],\n      colorArr: [],\n      props: {\n        value: \"id\",\n        label: \"name\",\n        children: \"children\"\n      },\n      //商品有效状态\n      productOptions: [{\n        status: true,\n        name: \"上架\"\n      }, {\n        status: false,\n        name: \"下架\"\n      }],\n      total: 0,\n      searchStatus: {\n        cateActive: false,\n        brandActive: false,\n        brandLoading: true,\n        brandOwnerActive: false,\n        brandOwnerLoading: true,\n        DesignCompanyActive: false,\n        DesignCompanyLoading: true\n      },\n      //品类Data 以后可能使用VUx 读取看具体需求，当多处调用时存入VUX；\n      CategoryOptions: [],\n      //品牌\n      brandOptions: [],\n      //设计商\n      designCompanyOptions: [],\n      colorOptions: [],\n      colorList: [],\n      //品牌商\n      brandOwnerOptions: [],\n      //品牌商\n      //table列表数据\n      tableListData: [],\n      //货主\n      ownerOptions: []\n    };\n  },\n  components: {\n    PrintsDialog: PrintsDialog\n  },\n  created: function created() {\n    //获取列表\n    this.getTableList(); //颜色\n\n    this.getColorOptions(); //获取货主\n\n    this.getOwnerOptions();\n  },\n  activated: function activated() {\n    this.getTableList();\n  },\n  mounted: function mounted() {// var ssu = new window.SpeechSynthesisUtterance('你好我爱你亲爱的');\n    // window.speechSynthesis.speak(ssu);\n  },\n  methods: {\n    //处理搜索下拉显示\n    serchVisibleChange: function serchVisibleChange(type, active, str) {\n      if (!!type) {\n        if (!active) {\n          switch (str) {\n            //品类\n            case \"cate\":\n              this.searchStatus.cateActive = true;\n              this.getClassData();\n              break;\n            //品牌\n\n            case \"brand\":\n              this.searchStatus.brandActive = true;\n              this.searchStatus.brandLoading = false;\n              this.getBrandOptions();\n              break;\n            //品牌商\n\n            case \"brandOwner\":\n              this.searchStatus.brandOwnerActive = true;\n              this.searchStatus.brandOwnerLoading = false;\n              this.getBrandOwnerOption();\n              break;\n            //设计商\n\n            case \"designCompany\":\n              this.searchStatus.designCompanyActive = true;\n              this.searchStatus.designCompanyLoading = false;\n              this.getDesignCompanyOptions();\n              break;\n\n            default:\n              break;\n          }\n        }\n      }\n    },\n    //批量打印\n    openPrintsModal: function openPrintsModal() {\n      //需要打印逻辑\n      var arr = [];\n\n      for (var i = 0; i < this.tableListData.length; i++) {\n        if (this.tableListData[i].valid == true) {\n          arr.push(this.tableListData[i].code);\n        }\n      }\n\n      if (arr.length <= 0) {\n        this.$message.error(\"无可打印吊牌数据\");\n        return false;\n      } // 新需求 用当前页面的搜索条件 传入搜索项目\n\n\n      var params = this.$common.deepCopy(this.filtersData);\n      params.pageIndex = null;\n      params.pageSize = null;\n      this.$refs.printsRef.popupInit(params);\n    },\n    //导出分享\n    exportShare: function exportShare() {\n      var _this = this;\n\n      this.filtersData.pageIndex = 0;\n      this.filtersData.pageSize = 0;\n      var _self = this.filtersData;\n      console.log(_self);\n      var hasProp = false;\n      Object.keys(_self).forEach(function (key) {\n        // console.log(key + \"==\" + _self[key].length);\n        if (_self[key].length > 0) {\n          hasProp = true;\n        }\n      });\n\n      if (hasProp) {\n        console.log(\"istrue\");\n        this.request(this.api.product.productShare_share, this.filtersData).then(function (res) {\n          console.log(res);\n\n          var _this$$router$resolve = _this.$router.resolve({\n            path: \"/share/product_list\",\n            query: {\n              identifier: res\n            }\n          }),\n              href = _this$$router$resolve.href;\n\n          window.open(href, \"_blank\");\n        });\n      } else {\n        this.$notify({\n          title: \"提示\",\n          message: \"请至少选择一项商品筛选条件（商品状态条件除外）！\",\n          type: \"warning\",\n          duration: 2000\n        });\n      }\n    },\n    //颜色\n    getColorOptions: function getColorOptions() {\n      var _this2 = this;\n\n      this.request(this.api.product.colorSeries_list, {}, true).then(function (res) {\n        var _data = res.data;\n\n        var colorList = _data.map(function (item, i) {\n          return {\n            value: item.id,\n            label: item.name,\n            leaf: false\n          };\n        });\n\n        _this2.colorOptions = colorList;\n      });\n    },\n    //获取货主\n    getOwnerOptions: function getOwnerOptions() {\n      var _this3 = this;\n\n      this.request(this.api.warehouse.warehouseBase_goodsOwner_list, {\n        valid: true,\n        orderBy: \"create_time\"\n      }, true).then(function (res) {\n        _this3.ownerOptions = res.data;\n      });\n    },\n    getColorList: function getColorList(node, resolve) {\n      if (!node.value) return;\n      this.request(this.api.product.color_list, {\n        seriesId: node.value\n      }, true).then(function (res) {\n        var _data = res.data;\n\n        var colorList = _data.map(function (item, i) {\n          return {\n            value: item.code,\n            label: item.name,\n            leaf: true\n          };\n        });\n\n        resolve(colorList);\n      });\n    },\n    colorCodeGet: function colorCodeGet(e) {\n      var color = this.$common.deepCopy(e).pop();\n\n      if (e.length >= 2) {\n        this.filtersData.colorCode = color;\n        this.filtersData.colorSeriesId = \"\";\n      } else {\n        this.filtersData.colorCode = \"\";\n        this.filtersData.colorSeriesId = color;\n      }\n    },\n    //获取分类\n    getClassData: function getClassData() {\n      var _this4 = this;\n\n      //分类类型（1：标准分类，2：定制分类，3：原料分类或者称为属性分类）\n      this.$common.getClassSelect(this, 1).then(function (res) {\n        _this4.classData = res.ztree;\n        _this4.classList = res.list;\n      });\n    },\n    cascaderGet: function cascaderGet(e) {\n      var cateId = JSON.parse(JSON.stringify(e)).pop();\n      var obj = this.classList.find(function (item) {\n        return item.id == cateId;\n      });\n      this.filtersData.cateIdentifier = obj.identifier;\n    },\n    //获取品牌商\n    getBrandOwnerOption: function getBrandOwnerOption() {\n      var _this5 = this;\n\n      this.request(this.api.product.productBrandOwner_list, {}, true).then(function (data) {\n        var _data = data.data;\n        _this5.brandOwnerOptions = _data;\n      });\n    },\n\n    /**\r\n     * 用于点击table列表中某行 获取当前行下级子分类\r\n     * 1，在获取列表数据时给每个列表中添加字段 stratus ==1  表示当前行可展开；\r\n     * 2，点击某一行时，获取当前行的下标， 当数据返回后 把对象抽出，插入在已知下标后。\r\n     * 3，当点击关闭时，根据下标和唯一标识 删除已知 数据中的字段；\r\n     * */\n    //获取列表\n    getTableList: function getTableList() {\n      var _this6 = this;\n\n      this.request(this.api.product.product_listProduct, this.filtersData).then(function (data) {\n        var _data = data.data,\n            _dataLen = _data.length;\n\n        for (var i = 0; i < _dataLen; i++) {\n          _data[i].isShow = true;\n          _data[i].isType = 1;\n          _data[i]._cid = \"\";\n          _data[i].children = [];\n          _data[i].hasChildren = true;\n          _data[i].checked = false;\n        }\n\n        _this6.tableListData = _data;\n        _this6.total = data.totalCount;\n      });\n    },\n    //设计商\n    getDesignCompanyOptions: function getDesignCompanyOptions() {\n      var _this7 = this;\n\n      this.request(this.api.product.designCompany_list, {}, true).then(function (data) {\n        //  console.log(data);\n        _this7.designCompanyOptions = data.data;\n      });\n    },\n    //品牌\n    getBrandOptions: function getBrandOptions() {\n      var _this8 = this;\n\n      this.request(this.api.product.productBrand_list, {}, true).then(function (data) {\n        //console.log(data.data);\n        var _data = data.data;\n        _this8.brandOptions = _data;\n      });\n    },\n    //搜索\n    handleSearch: function handleSearch() {\n      this.filtersData.pageIndex = 1;\n      this.filtersData.pageSize = 10;\n      this.getTableList();\n    },\n    //清空重置\n    handleResetFilters: function handleResetFilters(formName) {\n      this.$refs[formName].resetFields();\n      this.cateArr = [];\n      this.colorArr = [];\n      this.filtersData.stockLE = \"\";\n      this.filtersData.colorSeriesId = \"\";\n    },\n    //滑块开关\n    switchValid: function switchValid(params) {\n      this.request(this.api.product.product_save, params);\n    },\n    //新增商品按钮\n    openAddCommodity: function openAddCommodity() {\n      this.$router.push({\n        path: \"/product/commodity/addCommodity\",\n        name: \"addCommodity\"\n      });\n    },\n    //查看商品\n    openShowDetails: function openShowDetails(params) {\n      this.$router.push({\n        path: \"/product/commodity/show_commodity\",\n        name: \"show_commodity\",\n        query: {\n          productId: params.id,\n          cateId: params.cateId,\n          _type: \"show\"\n        }\n      });\n    },\n    //修改商品\n    openEditDetails: function openEditDetails(params) {\n      this.$router.push({\n        path: \"/product/commodity/edit_commodity\",\n        name: \"edit_commodity\",\n        query: {\n          productId: params.id,\n          cateId: params.cateId,\n          _type: \"edit\"\n        }\n      });\n    },\n    //当前页数修改时发生改变\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.filtersData.pageIndex = val;\n      this.getTableList();\n    },\n    // 每页显示多少条时发生改变\n    handleSizeChange: function handleSizeChange(val) {\n      this.filtersData.pageSize = val;\n      this.getTableList();\n    },\n    // table树懒加载数据\n    load: function load(tree, treeNode, resolve) {\n      this.request(this.api.product.productGoods_listProductGoods, {\n        productId: tree.id,\n        colorCode: this.filtersData.colorCode,\n        colorSeriesCode: this.filtersData.colorSeriesCode\n      }).then(function (res) {\n        var _data = res.data;\n        var _dataLen = _data.length;\n\n        for (var i = 0; i < _dataLen; i++) {\n          _data[i].subCode = _data[i].code;\n          _data[i].code = null;\n\n          if (!!tree.checked) {\n            _data[i].checked = true;\n          }\n        }\n\n        tree.children = res.data;\n        resolve(res.data);\n      });\n    },\n    // 导出模板\n    exportDataPacket: function exportDataPacket() {\n      var csvData = csvExportData;\n\n      if (!csvData.spuList && !csvData.skuList) {\n        this.$message.error('请勾选导出的数据！');\n        return false;\n      }\n\n      this.util.exportExcelZip(this.api.FN_ALLPATH(this.api.product.productDataPackage_export_csv), csvData, '商品数据包.zip');\n    },\n    // 处理table 选中\n    handleCheckAllChange: function handleCheckAllChange(row) {\n      //父级\n      if (!row.productCode) {\n        for (var j = 0; j < row.children.length; j++) {\n          if (!!row.checked) {\n            row.children[j].checked = true;\n          } else {\n            row.children[j].checked = false;\n          }\n        }\n      } else {\n        // 子集\n        var tableObj = this.tableListData.find(function (item) {\n          return item.code == row.productCode;\n        });\n        var tableObjChildren = tableObj.children;\n        var flag = true;\n\n        for (var n = 0; n < tableObjChildren.length; n++) {\n          if (!tableObjChildren[n].checked) {\n            flag = false;\n          }\n        }\n\n        if (!!flag) {\n          tableObj.checked = true;\n        } else {\n          tableObj.checked = false;\n        }\n      } //简化 \n\n\n      var tableList = this.$common.deepCopy(this.tableListData);\n      var spu = [],\n          sku = [];\n\n      for (var i = 0; i < tableList.length; i++) {\n        //当父级等于true时放入进去\n        if (!!tableList[i].checked) {\n          spu.push(tableList[i].code);\n        } else {\n          var children = tableList[i].children;\n\n          for (var k = 0; k < children.length; k++) {\n            if (!!children[k].checked) {\n              sku.push(children[k].subCode);\n            }\n          }\n        }\n      }\n\n      var obj = {\n        spuList: spu,\n        skuList: sku\n      };\n      csvExportData = obj;\n    } //点击获取子元素插入数组\n    // childrenIsShow(row) {\n    //   let _id = row.id; //当前数据ID\n    //   let _type = row.isType; //状态 1 关闭 0 打开\n    //   if (_type == \"1\") {\n    //     //当前为关闭状态 需请求接口获取子元素\n    //     row.isType = 0;\n    //     this.getChildData(row, _id);\n    //   } else {\n    //     //当前为打开状态 需删除子元素\n    //     row.isType = 1;\n    //     this.removeChildData(row);\n    //   }\n    // },\n    // //获取子集\n    // getChildData(row, _id) {\n    //   let _index = this.tableListData.findIndex(item => item.id == _id);\n    //   if (!row._chilren) {\n    //     this.request(this.api.product.productGoods_listProductGoods, {\n    //       productId: _id,\n    //       colorCode: this.filtersData.colorCode,\n    //       colorSeriesCode: this.filtersData.colorSeriesCode\n    //     }).then(res => {\n    //       let _data = res.data;\n    //       let _dataLen = _data.length;\n    //       for (let i = 0; i < _dataLen; i++) {\n    //         _data[i].subCode = _data[i].code;\n    //         _data[i].code = null;\n    //       }\n    //       row._chilren = _data;\n    //       //根据下标插入进去 获取ID 在数组中的下标\n    //       this.tableListData.splice(_index + 1, 0, ..._data);\n    //       //获取子集id存入 元素属性\n    //       let arr = [];\n    //       for (let { id } of _data) {\n    //         arr.push(id);\n    //       }\n    //       row._cid = arr.join();\n    //     });\n    //   } else {\n    //     this.tableListData.splice(_index + 1, 0, ...row._chilren);\n    //   }\n    // },\n    // //删除子集\n    // removeChildData(row) {\n    //   let cid = row._cid;\n    //   let cidArr = cid.split(\",\");\n    //   let _table = this.tableListData,\n    //     tableLen = _table.length;\n    //   for (let i = 0; i < cidArr.length; i++) {\n    //     for (let j = 0; j < this.tableListData.length; j++) {\n    //       if (cidArr[i] == this.tableListData[j].id) {\n    //         this.tableListData.splice(j, 1);\n    //       }\n    //     }\n    //   }\n    // }\n\n  },\n  computed: {\n    //季节波段\n    seasonalStyleOptions: function seasonalStyleOptions() {\n      var codeSet = this.$store.getters.codeData;\n\n      if (codeSet.PRO001) {\n        return codeSet.PRO001.codeItemList;\n      }\n    }\n  }\n};",{"version":3,"sources":["index_list.vue"],"names":[],"mappings":"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","sourcesContent":["<!--\r\n * @Description: 商品中心 =>商品列表\r\n * @Author:elephant\r\n * @Date: 2019-07-01 15:20:22\r\n * @LastEditTime: 2020-04-14 17:28:08\r\n * @LastEditors: Please set LastEditors\r\n -->\r\n<template>\r\n  <div>\r\n    <div class=\"item-margin\">\r\n      <el-form\r\n        class=\"item-form\"\r\n        :model=\"filtersData\"\r\n        label-width=\"90px\"\r\n        size=\"small\"\r\n        ref=\"filtersForm\"\r\n        inline\r\n      >\r\n        <el-form-item prop=\"cateIdentifier\" label=\"品类：\">\r\n          <el-cascader\r\n            class=\"input-w\"\r\n            filterable\r\n            :options=\"classData\"\r\n            @visible-change=\"serchVisibleChange($event,searchStatus.cateActive,'cate')\"\r\n            v-model=\"cateArr\"\r\n            :value=\"cateArr\"\r\n            @change=\"cascaderGet\"\r\n            :show-all-levels=\"false\"\r\n            :props=\"props\"\r\n            change-on-select\r\n          ></el-cascader>\r\n        </el-form-item>\r\n        <el-form-item prop=\"valid\" label=\"商品状态：\">\r\n          <el-select class=\"input-w\" placeholder=\"请选择\" filterable v-model=\"filtersData.valid\">\r\n            <el-option\r\n              v-for=\"item in productOptions\"\r\n              :key=\"item.status\"\r\n              :label=\"item.name\"\r\n              :value=\"item.status\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item prop=\"brandId\" label=\"品牌：\">\r\n          <el-select\r\n            class=\"input-w\"\r\n            placeholder=\"请选择\"\r\n            :loading=\"searchStatus.brandLoading\"\r\n            @visible-change=\"serchVisibleChange($event,searchStatus.brandActive,'brand')\"\r\n            filterable\r\n            v-model=\"filtersData.brandId\"\r\n          >\r\n            <el-option\r\n              v-for=\"item in brandOptions\"\r\n              :key=\"item.id\"\r\n              :label=\"item.name\"\r\n              :value=\"item.id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <!-- <el-form-item prop=\"quantityGE\" label=\"库存数量：\">\r\n          <el-col :span=\"11\">\r\n            <el-input class=\"input-w\" placeholder=\"请输入最小值\" v-model=\"filtersData.quantityGE\"></el-input>\r\n          </el-col>\r\n          <el-col :span=\"2\">&nbsp;</el-col>\r\n          <el-col :span=\"11\">\r\n            <el-input class=\"input-w\" placeholder=\"请输入最大值\" v-model=\"filtersData.quantityLE\"></el-input>\r\n          </el-col>\r\n        </el-form-item>-->\r\n        <el-form-item prop=\"brandOwnerId\" label=\"品牌商：\">\r\n          <el-select\r\n            class=\"input-w\"\r\n            placeholder=\"请选择\"\r\n            :loading=\"searchStatus.brandOwnerLoading\"\r\n            filterable\r\n            @visible-change=\"serchVisibleChange($event,searchStatus.brandOwnerActive,'brandOwner')\"\r\n            v-model=\"filtersData.brandOwnerId\"\r\n          >\r\n            <el-option\r\n              v-for=\"(item,index) in brandOwnerOptions\"\r\n              :key=\"index.id\"\r\n              :label=\"item.name\"\r\n              :value=\"item.id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <!-- <el-form-item prop=\"designCompanyId\" label=\"设计商：\">\r\n          <el-select\r\n            class=\"input-w\"\r\n            placeholder=\"请选择\"\r\n            filterable\r\n            :loading=\"searchStatus.designCompanyLoading\"\r\n            @visible-change=\"serchVisibleChange($event,searchStatus.designCompanyActive,'designCompany')\"\r\n            v-model=\"filtersData.designCompanyId\"\r\n          >\r\n            <el-option\r\n              v-for=\"item in designCompanyOptions\"\r\n              :key=\"item.id\"\r\n              :label=\"item.name\"\r\n              :value=\"item.id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>-->\r\n        <el-form-item prop=\"ownerId\" label=\"货主：\">\r\n          <el-select class=\"input-w\" placeholder=\"请选择\" v-model=\"filtersData.ownerId\">\r\n            <el-option\r\n              v-for=\"(item,index) in ownerOptions\"\r\n              :key=\"index.id\"\r\n              :label=\"item.name\"\r\n              :value=\"item.code\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item prop=\"colorCode\" label=\"颜色：\">\r\n          <el-cascader\r\n            class=\"input-w\"\r\n            v-model=\"colorArr\"\r\n            :value=\"colorArr\"\r\n            :options=\"colorOptions\"\r\n            @change=\"colorCodeGet\"\r\n            :show-all-levels=\"false\"\r\n            :props=\"colorProps\"\r\n            :emitPath=\"false\"\r\n            change-on-select\r\n          ></el-cascader>\r\n        </el-form-item>\r\n        <el-form-item prop=\"seasonalStyleCode\" label=\"季节：\">\r\n          <el-select\r\n            filterable\r\n            class=\"input-w\"\r\n            placeholder=\"请选择\"\r\n            v-model=\"filtersData.seasonalStyleCode\"\r\n          >\r\n            <el-option\r\n              v-for=\"(item,index) in seasonalStyleOptions\"\r\n              :key=\"index.code\"\r\n              :label=\"item.name\"\r\n              :value=\"item.code\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item prop=\"searchWords\" label=\"综合搜索：\">\r\n          <el-input class=\"input-w\" placeholder=\"商品款号/货号/原始款号\" v-model=\"filtersData.searchWords\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button size=\"small\" @click=\"handleSearch\" type=\"primary\" plain>搜索</el-button>\r\n          <el-button size=\"small\" @click=\"handleResetFilters('filtersForm')\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n    <!--table  -->\r\n    <div class=\"item-margin\">\r\n      <div class=\"item-cont\">\r\n        <el-button size=\"small\" type=\"primary\" @click=\"openAddCommodity\">新增商品</el-button>\r\n        <el-button size=\"small\" type=\"primary\" plain @click=\"openPrintsModal\">打印吊牌</el-button>\r\n        <el-button size=\"small\" type=\"primary\" plain @click=\"exportShare\">导出分享</el-button>\r\n        <el-button size=\"small\" type=\"primary\" plain @click=\"exportDataPacket\">导出数据包</el-button>\r\n      </div>\r\n      <div class=\"item-table\">\r\n        <el-table\r\n          :data=\"tableListData\"\r\n          stripe\r\n          empty-text=\"暂无数据\"\r\n          header-align=\"center\"\r\n          header-row-class-name=\"item-table-header\"\r\n          :highlight-current-row=\"true\"\r\n          row-key=\"id\"\r\n          lazy\r\n          :load=\"load\"\r\n          :tree-props=\"{children: 'children', hasChildren: 'hasChildren'}\"\r\n        >\r\n          <el-table-column prop=\"code\" align=\"center\"   width=\"80\">\r\n            <template slot-scope=\"scope\">\r\n               <!-- <i\r\n                @click=\"childrenIsShow(scope.row)\"\r\n                :data-id=\"scope.row.id\"\r\n                v-if=\"scope.row.isShow\"\r\n                :class=\"scope.row.isType == 1 ?'el-icon-circle-plus-outline i-cursor' : 'el-icon-remove-outline i-cursor'\"\r\n              ></i> -->\r\n              <div :class=\"[!scope.row.children ? 'children-checked':'parent-checked']\" >\r\n              <el-checkbox\r\n                v-model=\"scope.row.checked\"\r\n                :key=\"scope.row.id\"\r\n                @change=\"handleCheckAllChange(scope.row)\"\r\n              ></el-checkbox>\r\n              </div>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"code\" align=\"center\" label=\"商品款号\" min-width=\"125\"></el-table-column>\r\n          <el-table-column prop=\"subCode\" align=\"center\" label=\"商品货号\" min-width=\"150\"></el-table-column>\r\n          <el-table-column prop=\"color\" align=\"center\" label=\"颜色\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"brandName\" align=\"center\" label=\"品牌\" min-width=\"80\"></el-table-column>\r\n          <el-table-column prop=\"ownerName\" align=\"center\" label=\"货主\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"fullCateName\" align=\"center\" label=\"品类\" min-width=\"120\"></el-table-column>\r\n          <el-table-column prop=\"name\" align=\"center\" label=\"商品名称\" min-width=\"120\"></el-table-column>\r\n          <el-table-column prop=\"originalCode\" align=\"center\" label=\"原始款号\" min-width=\"120\"></el-table-column>\r\n          <el-table-column prop=\"image\" align=\"center\" label=\"商品图片\" min-width=\"120\">\r\n            <template slot-scope=\"scope\">\r\n              <el-popover placement=\"left\" trigger=\"hover\">\r\n                <img class=\"poporer-img\" :src=\"scope.row.image\" />\r\n                <img slot=\"reference\" :src=\"scope.row.image\" class=\"table-img-wh\" />\r\n              </el-popover>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"retailPrice\" align=\"center\" label=\"吊牌价\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"valid\" align=\"center\" label=\"商品状态\" min-width=\"110\">\r\n            <template slot-scope=\"scope\">\r\n              <el-switch\r\n                v-model=\"scope.row.valid\"\r\n                v-if=\"scope.row.isShow\"\r\n                active-color=\"#13ce66\"\r\n                @change=\"switchValid(scope.row)\"\r\n                inactive-color=\"#9d9d9d\"\r\n              ></el-switch>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column\r\n            fixed=\"right\"\r\n            label-class-name=\"text-center\"\r\n            class-name=\"text-center\"\r\n            align=\"center\"\r\n            label=\"操作\"\r\n            width=\"100\"\r\n          >\r\n            <template slot-scope=\"scope\">\r\n              <el-button\r\n                @click=\"openShowDetails(scope.row)\"\r\n                v-if=\"scope.row.isShow\"\r\n                type=\"text\"\r\n                size=\"small\"\r\n              >查看</el-button>\r\n              <el-button\r\n                @click=\"openEditDetails(scope.row)\"\r\n                v-if=\"scope.row.isShow\"\r\n                type=\"text\"\r\n                size=\"small\"\r\n              >修改</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n        <div class=\"pagination mt-10 mb-20\">\r\n          <el-pagination\r\n            class=\"mr-20\"\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"filtersData.pageIndex\"\r\n            :page-sizes=\"[10,20,30,40,50]\"\r\n            :page-size=\"filtersData.pageSize\"\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=\"total\"\r\n          ></el-pagination>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!--table END  -->\r\n    <!-- 打印 -->\r\n    <prints-dialog ref=\"printsRef\"></prints-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\nconst PrintsDialog = resolve =>\r\n  require([\"@/components/Prints/PrintsDialog.vue\"], resolve);\r\nlet csvExportData = {};\r\nexport default {\r\n  name: \"index_list\",\r\n  data() {\r\n    let that = this;\r\n    return {\r\n      filtersData: {\r\n        colorCode: \"\",\r\n        colorSeriesCode: \"\",\r\n        ownerId: \"\", //货主\r\n        brandId: \"\", //品牌ID\r\n        brandOwnerId: \"\",\r\n        cateIdentifier: \"\", // 分类标识码\r\n        pageIndex: 1, //当前页码\r\n        pageSize: 10, //每页数量\r\n        //季节字段\r\n        seasonalStyleCode: \"\",\r\n        searchWords: \"\", //检索关键字\r\n        designCompanyId: \"\", //设计商Id\r\n        // tenantId: \"\", //平台租户（所属机构）ID ,\r\n        valid: true //有效状态\r\n      },\r\n      colorProps: {\r\n        lazy: true,\r\n        lazyLoad(node, resolve) {\r\n          that.getColorList(node, resolve);\r\n        }\r\n      },\r\n      classData: [],\r\n      classList: [],\r\n      cateArr: [],\r\n      colorArr: [],\r\n      props: {\r\n        value: \"id\",\r\n        label: \"name\",\r\n        children: \"children\"\r\n      },\r\n      //商品有效状态\r\n      productOptions: [\r\n        {\r\n          status: true,\r\n          name: \"上架\"\r\n        },\r\n        {\r\n          status: false,\r\n          name: \"下架\"\r\n        }\r\n      ],\r\n      total: 0,\r\n      searchStatus: {\r\n        cateActive: false,\r\n        brandActive: false,\r\n        brandLoading: true,\r\n        brandOwnerActive: false,\r\n        brandOwnerLoading: true,\r\n        DesignCompanyActive: false,\r\n        DesignCompanyLoading: true\r\n      },\r\n      //品类Data 以后可能使用VUx 读取看具体需求，当多处调用时存入VUX；\r\n      CategoryOptions: [],\r\n      //品牌\r\n      brandOptions: [],\r\n      //设计商\r\n      designCompanyOptions: [],\r\n      colorOptions: [],\r\n      colorList: [],\r\n      //品牌商\r\n      brandOwnerOptions: [], //品牌商\r\n      //table列表数据\r\n      tableListData: [],\r\n      //货主\r\n      ownerOptions: [],\r\n    };\r\n  },\r\n  components: {\r\n    PrintsDialog\r\n  },\r\n  created() {\r\n    //获取列表\r\n    this.getTableList();\r\n    //颜色\r\n    this.getColorOptions();\r\n    //获取货主\r\n    this.getOwnerOptions();\r\n  },\r\n  activated() {\r\n    this.getTableList();\r\n  },\r\n  mounted() {\r\n    // var ssu = new window.SpeechSynthesisUtterance('你好我爱你亲爱的');\r\n    // window.speechSynthesis.speak(ssu);\r\n  },\r\n  methods: {\r\n    //处理搜索下拉显示\r\n    serchVisibleChange(type, active, str) {\r\n      if (!!type) {\r\n        if (!active) {\r\n          switch (str) {\r\n            //品类\r\n            case \"cate\":\r\n              this.searchStatus.cateActive = true;\r\n              this.getClassData();\r\n              break;\r\n            //品牌\r\n            case \"brand\":\r\n              this.searchStatus.brandActive = true;\r\n              this.searchStatus.brandLoading = false;\r\n              this.getBrandOptions();\r\n              break;\r\n            //品牌商\r\n            case \"brandOwner\":\r\n              this.searchStatus.brandOwnerActive = true;\r\n              this.searchStatus.brandOwnerLoading = false;\r\n              this.getBrandOwnerOption();\r\n              break;\r\n            //设计商\r\n            case \"designCompany\":\r\n              this.searchStatus.designCompanyActive = true;\r\n              this.searchStatus.designCompanyLoading = false;\r\n              this.getDesignCompanyOptions();\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    //批量打印\r\n    openPrintsModal() {\r\n      //需要打印逻辑\r\n      let arr = [];\r\n      for (let i = 0; i < this.tableListData.length; i++) {\r\n        if (this.tableListData[i].valid == true) {\r\n          arr.push(this.tableListData[i].code);\r\n        }\r\n      }\r\n      if (arr.length <= 0) {\r\n        this.$message.error(\"无可打印吊牌数据\");\r\n        return false;\r\n      }\r\n      // 新需求 用当前页面的搜索条件 传入搜索项目\r\n      let params = this.$common.deepCopy(this.filtersData);\r\n      params.pageIndex = null;\r\n      params.pageSize = null;\r\n      this.$refs.printsRef.popupInit(params);\r\n    },\r\n    //导出分享\r\n    exportShare() {\r\n      this.filtersData.pageIndex = 0;\r\n      this.filtersData.pageSize = 0;\r\n      let _self = this.filtersData;\r\n      console.log(_self);\r\n      let hasProp = false;\r\n      Object.keys(_self).forEach(function(key) {\r\n        // console.log(key + \"==\" + _self[key].length);\r\n        if (_self[key].length > 0) {\r\n          hasProp = true;\r\n        }\r\n      });\r\n      if (hasProp) {\r\n        console.log(\"istrue\");\r\n        this.request(\r\n          this.api.product.productShare_share,\r\n          this.filtersData\r\n        ).then(res => {\r\n          console.log(res);\r\n          const { href } = this.$router.resolve({\r\n            path: \"/share/product_list\",\r\n            query: {\r\n              identifier: res\r\n            }\r\n          });\r\n          window.open(href, \"_blank\");\r\n        });\r\n      } else {\r\n        this.$notify({\r\n          title: \"提示\",\r\n          message: \"请至少选择一项商品筛选条件（商品状态条件除外）！\",\r\n          type: \"warning\",\r\n          duration: 2000\r\n        });\r\n      }\r\n    },\r\n    //颜色\r\n    getColorOptions() {\r\n      this.request(this.api.product.colorSeries_list, {}, true).then(res => {\r\n        let _data = res.data;\r\n        let colorList = _data.map((item, i) => ({\r\n          value: item.id,\r\n          label: item.name,\r\n          leaf: false\r\n        }));\r\n        this.colorOptions = colorList;\r\n      });\r\n    },\r\n    //获取货主\r\n    getOwnerOptions() {\r\n      this.request(\r\n        this.api.warehouse.warehouseBase_goodsOwner_list,\r\n        { valid: true, orderBy: \"create_time\" },\r\n        true\r\n      ).then(res => {\r\n        this.ownerOptions = res.data;\r\n      });\r\n    },\r\n    getColorList(node, resolve) {\r\n      if (!node.value) return;\r\n      this.request(\r\n        this.api.product.color_list,\r\n        { seriesId: node.value },\r\n        true\r\n      ).then(res => {\r\n        let _data = res.data;\r\n        let colorList = _data.map((item, i) => ({\r\n          value: item.code,\r\n          label: item.name,\r\n          leaf: true\r\n        }));\r\n        resolve(colorList);\r\n      });\r\n    },\r\n    colorCodeGet(e) {\r\n      let color = this.$common.deepCopy(e).pop();\r\n      if (e.length >= 2) {\r\n        this.filtersData.colorCode = color;\r\n        this.filtersData.colorSeriesId = \"\";\r\n      } else {\r\n        this.filtersData.colorCode = \"\";\r\n        this.filtersData.colorSeriesId = color;\r\n      }\r\n    },\r\n    //获取分类\r\n    getClassData() {\r\n      //分类类型（1：标准分类，2：定制分类，3：原料分类或者称为属性分类）\r\n      this.$common.getClassSelect(this, 1).then(res => {\r\n        this.classData = res.ztree;\r\n        this.classList = res.list;\r\n      });\r\n    },\r\n    cascaderGet(e) {\r\n      let cateId = JSON.parse(JSON.stringify(e)).pop();\r\n      let obj = this.classList.find(item => item.id == cateId);\r\n      this.filtersData.cateIdentifier = obj.identifier;\r\n    },\r\n    //获取品牌商\r\n    getBrandOwnerOption() {\r\n      this.request(this.api.product.productBrandOwner_list, {}, true).then(\r\n        data => {\r\n          let _data = data.data;\r\n          this.brandOwnerOptions = _data;\r\n        }\r\n      );\r\n    },\r\n    /**\r\n     * 用于点击table列表中某行 获取当前行下级子分类\r\n     * 1，在获取列表数据时给每个列表中添加字段 stratus ==1  表示当前行可展开；\r\n     * 2，点击某一行时，获取当前行的下标， 当数据返回后 把对象抽出，插入在已知下标后。\r\n     * 3，当点击关闭时，根据下标和唯一标识 删除已知 数据中的字段；\r\n     * */\r\n    //获取列表\r\n    getTableList() {\r\n      this.request(this.api.product.product_listProduct, this.filtersData).then(\r\n        data => {\r\n          let _data = data.data,\r\n            _dataLen = _data.length;\r\n          for (let i = 0; i < _dataLen; i++) {\r\n            _data[i].isShow = true;\r\n            _data[i].isType = 1;\r\n            _data[i]._cid = \"\";\r\n            _data[i].children = [];\r\n            _data[i].hasChildren = true;\r\n            _data[i].checked = false;\r\n          }\r\n          this.tableListData = _data;\r\n          this.total = data.totalCount;\r\n        }\r\n      );\r\n    },\r\n    //设计商\r\n    getDesignCompanyOptions() {\r\n      this.request(this.api.product.designCompany_list, {}, true).then(data => {\r\n        //  console.log(data);\r\n        this.designCompanyOptions = data.data;\r\n      });\r\n    }, //品牌\r\n    getBrandOptions() {\r\n      this.request(this.api.product.productBrand_list, {}, true).then(data => {\r\n        //console.log(data.data);\r\n        let _data = data.data;\r\n        this.brandOptions = _data;\r\n      });\r\n    },\r\n    //搜索\r\n    handleSearch() {\r\n      this.filtersData.pageIndex = 1;\r\n      this.filtersData.pageSize = 10;\r\n      this.getTableList();\r\n    },\r\n    //清空重置\r\n    handleResetFilters(formName) {\r\n      this.$refs[formName].resetFields();\r\n      this.cateArr = [];\r\n      this.colorArr = [];\r\n      this.filtersData.stockLE = \"\";\r\n      this.filtersData.colorSeriesId = \"\";\r\n    },\r\n    //滑块开关\r\n    switchValid(params) {\r\n      this.request(this.api.product.product_save, params);\r\n    },\r\n    //新增商品按钮\r\n    openAddCommodity() {\r\n      this.$router.push({\r\n        path: \"/product/commodity/addCommodity\",\r\n        name: \"addCommodity\"\r\n      });\r\n    },\r\n    //查看商品\r\n    openShowDetails(params) {\r\n      this.$router.push({\r\n        path: \"/product/commodity/show_commodity\",\r\n        name: \"show_commodity\",\r\n        query: {\r\n          productId: params.id,\r\n          cateId: params.cateId,\r\n          _type: \"show\"\r\n        }\r\n      });\r\n    },\r\n    //修改商品\r\n    openEditDetails(params) {\r\n      this.$router.push({\r\n        path: \"/product/commodity/edit_commodity\",\r\n        name: \"edit_commodity\",\r\n        query: {\r\n          productId: params.id,\r\n          cateId: params.cateId,\r\n          _type: \"edit\"\r\n        }\r\n      });\r\n    },\r\n    //当前页数修改时发生改变\r\n    handleCurrentChange(val) {\r\n      this.filtersData.pageIndex = val;\r\n      this.getTableList();\r\n    },\r\n    // 每页显示多少条时发生改变\r\n    handleSizeChange(val) {\r\n      this.filtersData.pageSize = val;\r\n      this.getTableList();\r\n    },\r\n    // table树懒加载数据\r\n    load(tree, treeNode, resolve) {\r\n      this.request(this.api.product.productGoods_listProductGoods, {\r\n        productId: tree.id,\r\n        colorCode: this.filtersData.colorCode,\r\n        colorSeriesCode: this.filtersData.colorSeriesCode\r\n      }).then(res => {\r\n        let _data = res.data;\r\n        let _dataLen = _data.length;\r\n        for (let i = 0; i < _dataLen; i++) {\r\n          _data[i].subCode = _data[i].code;\r\n          _data[i].code = null;\r\n          if(!!tree.checked){\r\n            _data[i].checked = true;\r\n          }\r\n        }\r\n        tree.children=res.data;\r\n        resolve(res.data);\r\n      });\r\n    },\r\n    // 导出模板\r\n    exportDataPacket(){\r\n      let csvData=csvExportData;\r\n      if(!csvData.spuList && !csvData.skuList){\r\n        this.$message.error('请勾选导出的数据！');\r\n        return false;\r\n      }\r\n      this.util.exportExcelZip(\r\n        this.api.FN_ALLPATH(this.api.product.productDataPackage_export_csv),\r\n        csvData,  \r\n        '商品数据包.zip'\r\n      );\r\n    },\r\n    // 处理table 选中\r\n    handleCheckAllChange(row) {\r\n      //父级\r\n      if (!row.productCode) {\r\n        for (let j = 0; j < row.children.length; j++) {\r\n          if(!!row.checked){\r\n            row.children[j].checked=true;\r\n          }else{\r\n            row.children[j].checked=false;\r\n          }\r\n        }\r\n      }else{\r\n        // 子集\r\n        let tableObj = this.tableListData.find((item) => (item.code == row.productCode));\r\n        let tableObjChildren = tableObj.children;\r\n        let flag = true;\r\n        for (let n = 0; n < tableObjChildren.length; n++) {\r\n          if(!tableObjChildren[n].checked){\r\n            flag = false;\r\n          }\r\n        }\r\n        if(!!flag){\r\n          tableObj.checked = true;\r\n        }else{\r\n          tableObj.checked = false;\r\n        }\r\n      }\r\n      //简化 \r\n      let tableList = this.$common.deepCopy(this.tableListData);\r\n      let spu = [],sku = [];\r\n      for (let i = 0; i < tableList.length; i++) {\r\n        //当父级等于true时放入进去\r\n        if(!!tableList[i].checked){\r\n          spu.push(tableList[i].code);\r\n        }else{\r\n          let children = tableList[i].children;\r\n          for (let k = 0; k < children.length; k++) {\r\n            if(!!children[k].checked){\r\n              sku.push(children[k].subCode);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      let obj = {\r\n        spuList :spu,\r\n        skuList :sku\r\n      }\r\n      csvExportData=obj;\r\n    }\r\n    //点击获取子元素插入数组\r\n    // childrenIsShow(row) {\r\n    //   let _id = row.id; //当前数据ID\r\n    //   let _type = row.isType; //状态 1 关闭 0 打开\r\n    //   if (_type == \"1\") {\r\n    //     //当前为关闭状态 需请求接口获取子元素\r\n    //     row.isType = 0;\r\n    //     this.getChildData(row, _id);\r\n    //   } else {\r\n    //     //当前为打开状态 需删除子元素\r\n    //     row.isType = 1;\r\n    //     this.removeChildData(row);\r\n    //   }\r\n    // },\r\n    // //获取子集\r\n    // getChildData(row, _id) {\r\n    //   let _index = this.tableListData.findIndex(item => item.id == _id);\r\n    //   if (!row._chilren) {\r\n    //     this.request(this.api.product.productGoods_listProductGoods, {\r\n    //       productId: _id,\r\n    //       colorCode: this.filtersData.colorCode,\r\n    //       colorSeriesCode: this.filtersData.colorSeriesCode\r\n    //     }).then(res => {\r\n    //       let _data = res.data;\r\n    //       let _dataLen = _data.length;\r\n    //       for (let i = 0; i < _dataLen; i++) {\r\n    //         _data[i].subCode = _data[i].code;\r\n    //         _data[i].code = null;\r\n    //       }\r\n    //       row._chilren = _data;\r\n    //       //根据下标插入进去 获取ID 在数组中的下标\r\n    //       this.tableListData.splice(_index + 1, 0, ..._data);\r\n    //       //获取子集id存入 元素属性\r\n    //       let arr = [];\r\n    //       for (let { id } of _data) {\r\n    //         arr.push(id);\r\n    //       }\r\n    //       row._cid = arr.join();\r\n    //     });\r\n    //   } else {\r\n    //     this.tableListData.splice(_index + 1, 0, ...row._chilren);\r\n    //   }\r\n    // },\r\n    // //删除子集\r\n    // removeChildData(row) {\r\n    //   let cid = row._cid;\r\n    //   let cidArr = cid.split(\",\");\r\n    //   let _table = this.tableListData,\r\n    //     tableLen = _table.length;\r\n    //   for (let i = 0; i < cidArr.length; i++) {\r\n    //     for (let j = 0; j < this.tableListData.length; j++) {\r\n    //       if (cidArr[i] == this.tableListData[j].id) {\r\n    //         this.tableListData.splice(j, 1);\r\n    //       }\r\n    //     }\r\n    //   }\r\n    // }\r\n  },\r\n\r\n  computed: {\r\n    //季节波段\r\n    seasonalStyleOptions() {\r\n      let codeSet = this.$store.getters.codeData;\r\n      if (codeSet.PRO001) {\r\n        return codeSet.PRO001.codeItemList;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n.poporer-img {\r\n  width: auto;\r\n  height: 320px;\r\n}\r\n.parent-checked{\r\n  display: inline-block;\r\n}\r\n.children-checked{\r\n  text-align: right;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/product/commodity"}]}