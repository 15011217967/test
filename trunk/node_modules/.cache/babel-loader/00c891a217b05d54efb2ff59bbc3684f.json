{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\fmis\\store\\billwait\\bill_wait.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\fmis\\store\\billwait\\bill_wait.vue","mtime":1574160264568},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\EDZ\\\\Desktop\\\\\\u7814\\u53D1\\u9879\\u76EE\\\\vue-project\\\\trunk\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"C:\\\\Users\\\\EDZ\\\\Desktop\\\\\\u7814\\u53D1\\u9879\\u76EE\\\\vue-project\\\\trunk\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nimport { getToken } from \"@/utils/auth\";\nimport { mapGetters } from \"vuex\";\nimport * as userTypes from \"@/types/userConfig\";\nvar token = getToken();\nexport default {\n  data: function data() {\n    return {\n      signData: {\n        //对账类型（门店对账）\n        statementType: \"01001\",\n        //标识未对账\n        valid: 0,\n        //所属门店\n        merchantIds: [],\n        //标记隶属机构\n        organizationCodes: [],\n        //机构Id的集合\n        organizationIds: [],\n        //对账方式\n        statementCycleTypes: [],\n        //当前页数\n        pageIndex: 1,\n        //每页要显示的数据条数,默认10条\n        pageSize: 10\n      },\n      //得到权限Code\n      codeData: [],\n      //存储表格选择项改变时的数据\n      multipleSelectionData: [],\n      //表格数据\n      tableData: [{\n        refundMoneyOrderStatus: \"1\"\n      }],\n      //总条数\n      totalCount: 1,\n      //存储门店数据\n      storeListData: [],\n      //隶属机构数据\n      organizationListData: [],\n      //对账方式\n      typeListData: [],\n      //交易总金额\n      generalLedger: \"\",\n      //微信消费\n      weChatPayLedger: \"\",\n      //支付宝消费\n      aliPayLedger: '',\n      //刷卡消费\n      cardPayLedger: \"\",\n      //储值消费\n      storageCardPayLedger: \"\",\n      //现金\n      cashPayLedger: ''\n    };\n  },\n  computed: _objectSpread({}, mapGetters({\n    userInfo: userTypes.GETTER_USERINFO\n  })),\n  //过滤器\n  filters: {\n    //过滤对账方式\n    filterStatementCycleType: function filterStatementCycleType(val) {\n      switch (val) {\n        case \"05001\":\n          return \"日结\";\n          break;\n\n        case \"05002\":\n          return \"周结\";\n          break;\n\n        case \"05004\":\n          return \"月结\";\n          break;\n\n        case \"05010\":\n          return \"自定义\";\n          break;\n\n        default:\n          return \"--\";\n          break;\n      }\n    }\n  },\n  mounted: function mounted() {\n    //得到组织机构数据\n    this.getWarehouseListData(); //得到门店列表数据\n\n    this.getStoreBasicListData(); //得到对账方式数据\n\n    this.getStatementCycleTypeListData();\n  },\n  methods: {\n    //得到组织机构数据\n    getWarehouseListData: function () {\n      var _getWarehouseListData = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        var info;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.request(this.api.user.get_userinfo, {}, true);\n\n              case 2:\n                info = _context.sent;\n                console.log(info); //得到关联机构（type-0 机构 type-1 部门）\n\n                this.request(this.api.user.userCompany_getUserAllDepartByUserId, {\n                  userId: info.userId,\n                  type: 0\n                }).then(function (data) {\n                  //得到组织机构数据\n                  _this.organizationListData = data;\n                  console.log(data);\n                  _this.signData.organizationIds = [];\n                  data.forEach(function (item) {\n                    _this.signData.organizationIds.push(item.id);\n                  }); //得到列表数据\n\n                  _this.getBillWaitListData();\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getWarehouseListData() {\n        return _getWarehouseListData.apply(this, arguments);\n      }\n\n      return getWarehouseListData;\n    }(),\n    // 得到code码，用来限制是否显示按钮\n    getCodeLimitToBtnStatus: function getCodeLimitToBtnStatus(codeId) {\n      var _this2 = this;\n\n      this.request(this.api.user.crm_userCompany_authList, {\n        menuId: codeId\n      }).then(function (res) {\n        console.log(res);\n        _this2.codeData = res;\n      });\n    },\n    //得到对账方式数据\n    getStatementCycleTypeListData: function getStatementCycleTypeListData() {\n      var _this3 = this;\n\n      this.request(this.api.financial.financialBase_statementCycleTypeList, {}).then(function (res) {\n        console.log(res);\n        _this3.typeListData = res;\n      });\n    },\n    //得到门店列表数据\n    getStoreBasicListData: function getStoreBasicListData() {\n      var _this4 = this;\n\n      this.request(this.api.store.storeBasic_list, {}).then(function (res) {\n        console.log(res);\n        _this4.storeListData = res.data;\n      });\n    },\n    //得到列表数据\n    getBillWaitListData: function getBillWaitListData() {\n      var _this5 = this;\n\n      this.request(this.api.financial.financialData_tdStatement_list, this.signData).then(function (data) {\n        _this5.totalCount = data.tdStatementList.totalCount;\n        _this5.tableData = data.tdStatementList.data;\n        _this5.generalLedger = data.generalLedger;\n        _this5.cardPayLedger = data.cardPayLedger;\n        _this5.weChatPayLedger = data.weChatPayLedger;\n        _this5.aliPayLedger = data.aliPayLedger;\n        _this5.storageCardPayLedger = data.storageCardPayLedger;\n        _this5.cashPayLedger = data.cashPayLedger;\n        console.log(data);\n      }); //得到按钮操作权限数据\n\n      this.getCodeLimitToBtnStatus(this.$route.meta.currentid);\n    },\n    //查询表单数据\n    searchFormData: function searchFormData(ref) {\n      this.signData.pageIndex = 1;\n\n      if (this.signData.organizationCodes.length == 0) {\n        this.getWarehouseListData();\n      } else {\n        this.signData.organizationIds = this.signData.organizationCodes;\n        this.getBillWaitListData();\n      }\n    },\n    //重置表单数据\n    resetFormData: function resetFormData(formData) {\n      this.$refs[formData].resetFields();\n    },\n    //导出\n    exportExcel: function exportExcel() {\n      if (this.multipleSelectionData.length == 0) {\n        this.exportExcelAll(this.api.FN_ALLPATH(this.api.financial.financialData_tdStatement_exportAll), this.signData);\n      } else {\n        this.exportExcelSelectData();\n      }\n\n      console.log(\"导出Excel表格...+++++++++++++++++++multipleSelectionData.length\");\n    },\n    //导出选中的数据\n    exportExcelSelectData: function exportExcelSelectData() {\n      var _this6 = this;\n\n      require.ensure([], function () {\n        var _require = require(\"@/vendor/Export2Excel\"),\n            export_json_to_excel = _require.export_json_to_excel;\n\n        var tHeader = [\"对账单号\", \"零售门店\", \"对账方式\", \"累计交易金额\", \"微信消费\", \"支付宝消费\", \"刷卡消费\", \"储值消费\", \"现金\", \"隶属机构\", \"上次对账时间\"]; // 上面设置Excel的表格第一行的标题\n\n        var filterVal = [\"statementSn\", \"merchant\", \"statementCycleTypeName\", \"generalLedger\", \"weChatPayLedger\", \"aliPayLedger\", \"cardPayLedger\", \"storageCardPayLedger\", \"cashPayLedger\", \"organization\", \"lastStatementTimeName\"]; // 上面的index、nickName、name是tableData里对象的属性\n\n        var list = _this6.multipleSelectionData; //把data里的multipleSelectionData存到list\n\n        var data = _this6.formatJson(filterVal, list);\n\n        export_json_to_excel(tHeader, data, \"门店待对账表单\");\n      });\n    },\n    formatJson: function formatJson(filterVal, jsonData) {\n      return jsonData.map(function (v) {\n        return filterVal.map(function (j) {\n          return v[j];\n        });\n      });\n    },\n    //导出全部数据\n    exportExcelAll: function exportExcelAll(url, data) {\n      axios({\n        url: url,\n        data: data,\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"accessToken\": token\n        },\n        responseType: \"blob\" //设置响应的数据类型为一个包含二进制数据的 Blob 对象，必须设置！！！\n\n      }).then(function (response) {\n        var blob = new Blob([response.data]);\n        var fileName = \"门店待对账表单.xls\";\n        var linkNode = document.createElement(\"a\");\n        linkNode.download = fileName; //a标签的download属性规定下载文件的名称\n\n        linkNode.style.display = \"none\";\n        linkNode.href = URL.createObjectURL(blob); //生成一个Blob URL\n\n        document.body.appendChild(linkNode);\n        linkNode.click(); //模拟在按钮上的一次鼠标单击\n\n        URL.revokeObjectURL(linkNode.href); // 释放URL 对象\n\n        document.body.removeChild(linkNode);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    selectionChange: function selectionChange(val) {\n      var _this7 = this;\n\n      val.forEach(function (item) {\n        item.statementCycleTypeName = _this7.$options.filters.filterStatementCycleType(item.statementCycleType);\n        item.lastStatementTimeName = _this7.$options.filters.timestampToTime(item.lastStatementTime);\n      });\n      console.log(val);\n      this.multipleSelectionData = val;\n    },\n    //对账Btn的事件\n    receiptBtnClick: function receiptBtnClick(row) {\n      console.log(\"receiptBtnClick....\");\n      this.$router.push({\n        path: \"/fmis/store/billwait/show_statement\",\n        query: {\n          statementId: row.id,\n          storeName: row.merchant\n        }\n      });\n    },\n    //确认完成Btn的事件\n    sureBtnClick: function sureBtnClick(row) {\n      var _this8 = this;\n\n      console.log(row);\n      this.request(this.api.financial.financialData_confirmTransactionByStatementId, {\n        statementId: row.id\n      }).then(function (res) {\n        console.log(res);\n\n        if (res.STATUS) {\n          //说明已经全部核对\n          _this8.$confirm(\"本期累计对账金额：+\" + res.DATA + \",确认完成吗？\", \"提示\", {\n            confirmButtonText: \"确定\",\n            cancelButtonText: \"取消\",\n            type: \"warning\"\n          }).then(function () {\n            _this8.request(_this8.api.financial.financialData_tdStatement_completeStatementByPrimary, {\n              statementId: row.id\n            }).then(function (data) {\n              _this8.getBillWaitListData();\n            });\n          }).catch(function () {});\n        } else {\n          //说明未核对\n          _this8.$confirm(\"当前无法完成,未对账笔数：\" + res.DATA + \"笔,请核对完后,再确认完成！\", \"提示\", {\n            confirmButtonText: \"去对账\",\n            showCancelButton: false,\n            type: \"error\"\n          }).then(function () {\n            _this8.receiptBtnClick(row);\n          }).catch(function () {});\n        }\n      });\n    },\n    //每页条数改变时\n    handleSizeChange: function handleSizeChange(page) {\n      this.signData.pageSize = page;\n      this.getBillWaitListData();\n    },\n    //当前页改变时\n    handleCurrentChange: function handleCurrentChange(page) {\n      this.signData.pageIndex = page;\n      this.getBillWaitListData();\n    }\n  }\n};",{"version":3,"sources":["bill_wait.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"search_div\">\r\n      <el-form ref=\"formData\" :model=\"signData\" label-width=\"110px\" :inline=\"true\">\r\n        <el-form-item label=\"所属门店：\" prop=\"merchantIds\" label-width=\"140px\">\r\n          <el-select v-model=\"signData.merchantIds\" placeholder=\"请选择\" multiple>\r\n            <el-option\r\n              v-for=\"item in storeListData\"\r\n              :label=\"item.name\"\r\n              :key=\"item.id\"\r\n              :value=\"item.id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"隶属机构：\" prop=\"organizationCodes\">\r\n          <el-select v-model=\"signData.organizationCodes\" placeholder=\"请选择\" multiple>\r\n            <el-option\r\n              v-for=\"item in organizationListData\"\r\n              :label=\"item.name\"\r\n              :key=\"item.id\"\r\n              :value=\"item.id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"对账方式：\" prop=\"statementCycleTypes\">\r\n          <el-select v-model=\"signData.statementCycleTypes\" placeholder=\"请选择\" multiple>\r\n            <el-option\r\n              v-for=\"item in typeListData\"\r\n              :label=\"item.description\"\r\n              :key=\"item.code\"\r\n              :value=\"item.code\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"searchFormData('formData')\" size=\"small\">查询</el-button>\r\n          <el-button @click=\"resetFormData('formData')\" size=\"small\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n    <div class=\"table_div\">\r\n      <el-button v-auth=\"codeData\" data-code=\"16010102\" plain @click=\"exportExcel\" size=\"small\">导出</el-button>\r\n      <el-table\r\n        ref=\"multipleTable\"\r\n        :data=\"tableData\"\r\n        tooltip-effect=\"dark\"\r\n        style=\"width: 100%\"\r\n        header-row-class-name=\"item-table-header\"\r\n        @selection-change=\"selectionChange\"\r\n      >\r\n        <el-table-column type=\"selection\" width=\"55\"></el-table-column>\r\n        <el-table-column label=\"对账单号\" width=\"170\">\r\n          <template slot-scope=\"scope\">{{ scope.row.statementSn ? scope.row.statementSn : '--'}}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"merchant\" label=\"零售门店\">\r\n          <template slot-scope=\"scope\">{{ scope.row.merchant?scope.row.merchant:'--' }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"statementCycleType\" label=\"对账方式\">\r\n          <template slot-scope=\"scope\">{{scope.row.statementCycleType | filterStatementCycleType}}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"generalLedger\" label=\"累计交易金额\">\r\n          <template slot-scope=\"scope\">{{scope.row.generalLedger}}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"weChatPayLedger\" label=\"微信消费\">\r\n          <template slot-scope=\"scope\">{{ scope.row.weChatPayLedger }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"aliPayLedger\" label=\"支付宝消费\">\r\n          <template slot-scope=\"scope\">{{ scope.row.aliPayLedger }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"cardPayLedger\" label=\"刷卡消费\">\r\n          <template slot-scope=\"scope\">{{ scope.row.cardPayLedger }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"storageCardPayLedger\" label=\"储值消费\">\r\n          <template slot-scope=\"scope\">{{ scope.row.storageCardPayLedger }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"cashPayLedger\" label=\"现金\">\r\n          <template slot-scope=\"scope\">{{ scope.row.cashPayLedger }}</template>\r\n        </el-table-column>\r\n        <el-table-column label=\"隶属机构\">\r\n          <template slot-scope=\"scope\">{{ scope.row.organization?scope.row.organization:'--' }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"lastStatementTime\" label=\"上次对账时间\" align=\"center\">\r\n          <template slot-scope=\"scope\">{{ scope.row.lastStatementTime | timestampToTime}}</template>\r\n        </el-table-column>\r\n        <el-table-column fixed=\"right\" label=\"操作\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button\r\n              :key=\"scope.$index\"\r\n              @click=\"receiptBtnClick(scope.row)\"\r\n              type=\"text\"\r\n              size=\"small\"\r\n              v-auth=\"codeData\"\r\n              data-code=\"16010103\"\r\n            >对账</el-button>\r\n            <el-button\r\n              :key=\"scope.$index+'1'\"\r\n              @click=\"sureBtnClick(scope.row)\"\r\n              type=\"text\"\r\n              size=\"small\"\r\n              v-auth=\"codeData\"\r\n              data-code=\"16010104\"\r\n            >确认完成</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <div class=\"page_div\" v-show=\"this.tableData.length>0\">\r\n        <div style=\"color:#222;flex:auto;font-weight:700;\">\r\n          <span>累计交易金额：￥{{generalLedger}}</span>\r\n          <span style=\"margin-left:10px;margin-right:10px;\">微信消费：￥{{weChatPayLedger}}</span>\r\n          <span style=\"margin-left:10px;margin-right:10px;\">支付宝消费：￥{{aliPayLedger}}</span>\r\n          <span>刷卡消费：￥{{cardPayLedger}}</span>\r\n          <span style=\"margin-left:10px;margin-right:10px;\">储值消费：￥{{storageCardPayLedger}}</span>\r\n          <span style=\"margin-left:10px;margin-right:10px;\">现金：￥{{cashPayLedger}}</span>\r\n        </div>\r\n        <el-pagination\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page.sync=\"signData.pageIndex\"\r\n          :page-sizes=\"[10, 20, 30, 40]\"\r\n          :page-size=\"signData.pageSize\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"totalCount\"\r\n        ></el-pagination>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { getToken } from \"@/utils/auth\";\r\nimport { mapGetters } from \"vuex\";\r\nimport * as userTypes from \"@/types/userConfig\";\r\nlet token = getToken();\r\nexport default {\r\n  data() {\r\n    return {\r\n      signData: {\r\n        //对账类型（门店对账）\r\n        statementType: \"01001\",\r\n        //标识未对账\r\n        valid: 0,\r\n        //所属门店\r\n        merchantIds: [],\r\n        //标记隶属机构\r\n        organizationCodes: [],\r\n        //机构Id的集合\r\n        organizationIds: [],\r\n        //对账方式\r\n        statementCycleTypes: [],\r\n        //当前页数\r\n        pageIndex: 1,\r\n        //每页要显示的数据条数,默认10条\r\n        pageSize: 10\r\n      },\r\n      //得到权限Code\r\n      codeData: [],\r\n      //存储表格选择项改变时的数据\r\n      multipleSelectionData: [],\r\n      //表格数据\r\n      tableData: [{ refundMoneyOrderStatus: \"1\" }],\r\n      //总条数\r\n      totalCount: 1,\r\n      //存储门店数据\r\n      storeListData: [],\r\n      //隶属机构数据\r\n      organizationListData: [],\r\n      //对账方式\r\n      typeListData: [],\r\n      //交易总金额\r\n      generalLedger: \"\",\r\n      //微信消费\r\n      weChatPayLedger: \"\",\r\n      //支付宝消费\r\n      aliPayLedger:'',\r\n      //刷卡消费\r\n      cardPayLedger: \"\",\r\n      //储值消费\r\n      storageCardPayLedger: \"\",\r\n      //现金\r\n      cashPayLedger:''\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      userInfo: userTypes.GETTER_USERINFO\r\n    })\r\n  },\r\n  //过滤器\r\n  filters: {\r\n    //过滤对账方式\r\n    filterStatementCycleType(val) {\r\n      switch (val) {\r\n        case \"05001\":\r\n          return \"日结\";\r\n          break;\r\n        case \"05002\":\r\n          return \"周结\";\r\n          break;\r\n        case \"05004\":\r\n          return \"月结\";\r\n          break;\r\n        case \"05010\":\r\n          return \"自定义\";\r\n          break;\r\n        default:\r\n          return \"--\";\r\n          break;\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    //得到组织机构数据\r\n    this.getWarehouseListData();\r\n    //得到门店列表数据\r\n    this.getStoreBasicListData();\r\n    //得到对账方式数据\r\n    this.getStatementCycleTypeListData();\r\n  },\r\n  methods: {\r\n    //得到组织机构数据\r\n    async getWarehouseListData() {\r\n      let info = await this.request(this.api.user.get_userinfo, {}, true);\r\n      console.log(info);\r\n      //得到关联机构（type-0 机构 type-1 部门）\r\n      this.request(this.api.user.userCompany_getUserAllDepartByUserId, {\r\n        userId: info.userId,\r\n        type: 0\r\n      }).then(data => {\r\n        //得到组织机构数据\r\n        this.organizationListData = data;\r\n        console.log(data);\r\n        this.signData.organizationIds = [];\r\n        data.forEach(item => {\r\n          this.signData.organizationIds.push(item.id);\r\n        });\r\n        //得到列表数据\r\n        this.getBillWaitListData();\r\n      });\r\n    },\r\n    // 得到code码，用来限制是否显示按钮\r\n    getCodeLimitToBtnStatus(codeId) {\r\n      this.request(this.api.user.crm_userCompany_authList, {\r\n        menuId: codeId\r\n      }).then(res => {\r\n        console.log(res);\r\n        this.codeData = res;\r\n      });\r\n    },\r\n    //得到对账方式数据\r\n    getStatementCycleTypeListData() {\r\n      this.request(\r\n        this.api.financial.financialBase_statementCycleTypeList,\r\n        {}\r\n      ).then(res => {\r\n        console.log(res);\r\n        this.typeListData = res;\r\n      });\r\n    },\r\n    //得到门店列表数据\r\n    getStoreBasicListData() {\r\n      this.request(this.api.store.storeBasic_list, {}).then(res => {\r\n        console.log(res);\r\n        this.storeListData = res.data;\r\n      });\r\n    },\r\n    //得到列表数据\r\n    getBillWaitListData() {\r\n      this.request(\r\n        this.api.financial.financialData_tdStatement_list,\r\n        this.signData\r\n      ).then(data => {\r\n        this.totalCount = data.tdStatementList.totalCount;\r\n        this.tableData = data.tdStatementList.data;\r\n        this.generalLedger = data.generalLedger;\r\n        this.cardPayLedger = data.cardPayLedger;\r\n        this.weChatPayLedger = data.weChatPayLedger;\r\n        this.aliPayLedger=data.aliPayLedger;\r\n        this.storageCardPayLedger = data.storageCardPayLedger;\r\n        this.cashPayLedger=data.cashPayLedger;\r\n        console.log(data);\r\n      });\r\n      //得到按钮操作权限数据\r\n      this.getCodeLimitToBtnStatus(this.$route.meta.currentid);\r\n    },\r\n    //查询表单数据\r\n    searchFormData(ref) {\r\n      this.signData.pageIndex=1\r\n      if (this.signData.organizationCodes.length == 0) {\r\n        this.getWarehouseListData();\r\n      } else {\r\n        this.signData.organizationIds = this.signData.organizationCodes;\r\n        this.getBillWaitListData();\r\n      }\r\n    },\r\n    //重置表单数据\r\n    resetFormData(formData) {\r\n      this.$refs[formData].resetFields();\r\n    },\r\n    //导出\r\n    exportExcel() {\r\n      if (this.multipleSelectionData.length == 0) {\r\n        this.exportExcelAll(this.api.FN_ALLPATH(this.api.financial.financialData_tdStatement_exportAll),this.signData)\r\n      } else {\r\n        this.exportExcelSelectData();\r\n      }\r\n      console.log(\r\n        \"导出Excel表格...+++++++++++++++++++multipleSelectionData.length\"\r\n      );\r\n    },\r\n    //导出选中的数据\r\n    exportExcelSelectData() {\r\n      require.ensure([], () => {\r\n        let { export_json_to_excel } = require(\"@/vendor/Export2Excel\");\r\n        let tHeader = [\r\n          \"对账单号\",\r\n          \"零售门店\",\r\n          \"对账方式\",\r\n          \"累计交易金额\",\r\n          \"微信消费\",\r\n          \"支付宝消费\",\r\n          \"刷卡消费\",\r\n          \"储值消费\",\r\n          \"现金\",\r\n          \"隶属机构\",\r\n          \"上次对账时间\"\r\n        ];\r\n        // 上面设置Excel的表格第一行的标题\r\n        let filterVal = [\r\n          \"statementSn\",\r\n          \"merchant\",\r\n          \"statementCycleTypeName\",\r\n          \"generalLedger\",\r\n          \"weChatPayLedger\",\r\n          \"aliPayLedger\",\r\n          \"cardPayLedger\",\r\n          \"storageCardPayLedger\",\r\n          \"cashPayLedger\",\r\n          \"organization\",\r\n          \"lastStatementTimeName\"\r\n        ];\r\n        // 上面的index、nickName、name是tableData里对象的属性\r\n        let list = this.multipleSelectionData; //把data里的multipleSelectionData存到list\r\n        let data = this.formatJson(filterVal, list);\r\n        export_json_to_excel(tHeader, data, \"门店待对账表单\");\r\n      });\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => v[j]));\r\n    },\r\n    //导出全部数据\r\n    exportExcelAll(url,data){\r\n      axios({\r\n        url:url,\r\n        data:data,\r\n        method:\"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"accessToken\": token\r\n        },\r\n        responseType: \"blob\" //设置响应的数据类型为一个包含二进制数据的 Blob 对象，必须设置！！！\r\n        }\r\n      ).then(function(response) {\r\n          const blob = new Blob([response.data]);\r\n          const fileName = \"门店待对账表单.xls\";\r\n          const linkNode = document.createElement(\"a\");\r\n\r\n          linkNode.download = fileName; //a标签的download属性规定下载文件的名称\r\n          linkNode.style.display = \"none\";\r\n          linkNode.href = URL.createObjectURL(blob); //生成一个Blob URL\r\n          document.body.appendChild(linkNode);\r\n          linkNode.click(); //模拟在按钮上的一次鼠标单击\r\n\r\n          URL.revokeObjectURL(linkNode.href); // 释放URL 对象\r\n          document.body.removeChild(linkNode);\r\n        })\r\n        .catch(function(error) {\r\n          console.log(error);\r\n        });\r\n    },\r\n    selectionChange(val) {\r\n      val.forEach(item => {\r\n        item.statementCycleTypeName = this.$options.filters.filterStatementCycleType(\r\n          item.statementCycleType\r\n        );\r\n        item.lastStatementTimeName = this.$options.filters.timestampToTime(\r\n          item.lastStatementTime\r\n        );\r\n      });\r\n      console.log(val);\r\n      this.multipleSelectionData = val;\r\n    },\r\n    //对账Btn的事件\r\n    receiptBtnClick(row) {\r\n      console.log(\"receiptBtnClick....\");\r\n      this.$router.push({\r\n        path: \"/fmis/store/billwait/show_statement\",\r\n        query: {\r\n          statementId: row.id,\r\n          storeName: row.merchant\r\n        }\r\n      });\r\n    },\r\n    //确认完成Btn的事件\r\n    sureBtnClick(row) {\r\n      console.log(row);\r\n      this.request(\r\n        this.api.financial.financialData_confirmTransactionByStatementId,\r\n        { statementId: row.id }\r\n      ).then(res => {\r\n        console.log(res);\r\n        if (res.STATUS) {\r\n          //说明已经全部核对\r\n          this.$confirm(\r\n            \"本期累计对账金额：+\" + res.DATA + \",确认完成吗？\",\r\n            \"提示\",\r\n            {\r\n              confirmButtonText: \"确定\",\r\n              cancelButtonText: \"取消\",\r\n              type: \"warning\"\r\n            }\r\n          )\r\n            .then(() => {\r\n              this.request(\r\n                this.api.financial\r\n                  .financialData_tdStatement_completeStatementByPrimary,\r\n                { statementId: row.id }\r\n              ).then(data => {\r\n                this.getBillWaitListData();\r\n              });\r\n            })\r\n            .catch(() => {});\r\n        } else {\r\n          //说明未核对\r\n          this.$confirm(\r\n            \"当前无法完成,未对账笔数：\" +\r\n              res.DATA +\r\n              \"笔,请核对完后,再确认完成！\",\r\n            \"提示\",\r\n            {\r\n              confirmButtonText: \"去对账\",\r\n              showCancelButton: false,\r\n              type: \"error\"\r\n            }\r\n          )\r\n            .then(() => {\r\n              this.receiptBtnClick(row);\r\n            })\r\n            .catch(() => {});\r\n        }\r\n      });\r\n    },\r\n    //每页条数改变时\r\n    handleSizeChange(page) {\r\n      this.signData.pageSize = page;\r\n      this.getBillWaitListData();\r\n    },\r\n    //当前页改变时\r\n    handleCurrentChange(page) {\r\n      this.signData.pageIndex = page;\r\n      this.getBillWaitListData();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.search_div {\r\n  margin: 0 10px;\r\n  padding-top: 20px;\r\n  background-color: #fff;\r\n  .first-input {\r\n    width: 300px;\r\n  }\r\n}\r\n.table_div {\r\n  margin: 10px;\r\n  background-color: #fff;\r\n  padding-top: 20px;\r\n  padding-left: 10px;\r\n}\r\n.page_div {\r\n  margin-top: 20px;\r\n  padding-bottom: 10px;\r\n  margin-right: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n</style>\r\n\r\n\r\n\r\n"],"sourceRoot":"src/views/fmis/store/billwait"}]}