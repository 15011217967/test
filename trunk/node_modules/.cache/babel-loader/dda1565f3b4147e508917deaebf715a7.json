{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\scb\\order\\returnGoods_order_edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\scb\\order\\returnGoods_order_edit.vue","mtime":1576512263617},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\EDZ\\\\Desktop\\\\\\u7814\\u53D1\\u9879\\u76EE\\\\vue-project\\\\trunk\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// TODO 临时解决上传文件\nimport axios from 'axios';\nimport { getToken } from \"@/utils/auth\";\nimport PageTable from \"@/views/collocation/components/PageTable\";\nimport CheckTags from \"@/views/collocation/components/CheckTags\";\nimport BackGoodsTable from \"@/views/collocation/components/BackGoodsTable\";\nimport ImagePopover from \"@/views/collocation/components/ImagePopover\";\nexport default {\n  name: '',\n  // 数据\n  data: function data() {\n    return {\n      warehouseType: {\n        '07001': '总仓',\n        '07002': '分仓',\n        '07003': '中转仓'\n      },\n      // 弹框中包裹的对象\n      dialogIncludeObj: {\n        // out为调出方，in调入方\n        type: 'out',\n        // 弹出框是否显示\n        isDialogTableVisible: false,\n        // 调出单检索条件 ---\n        formDataOut: {\n          orderStatus: null,\n          pageIndex: 1,\n          pageSize: 10\n        },\n        // 调出单\n        tableOutDate: {\n          data: [],\n          totalCount: 15\n        },\n        // 选中调出单某一项\n        checkOutItem: {},\n        // 调入单检索条件 ---\n        formDataIn: {\n          orderStatus: null\n        },\n        // 调入单\n        tableInDate: {\n          data: []\n        },\n        // 选中调入单某一项\n        checkInItem: {}\n      },\n      // 收货人\n      backWarehouse_obj: {\n        warehouseCode: null,\n        warehouseName: null,\n        // 收货人\n        receiveMan: null,\n        // 电话\n        phone: null,\n        divisionId: null,\n        addressInfo: null,\n        provinceName: null,\n        provinceCode: null,\n        cityName: null,\n        cityCode: null\n      },\n      // 默认显示门店信息\n      activeName: 'store',\n      // 门店信息数据\n      storeInfo: {},\n      // 门店商品相关\n      productTypeList: [],\n      // 弹窗选择商品\n      SKUDialog: false,\n      // 是否显示选中的\n      checkedGoodsShow: false,\n      // 查询商品参数\n      formData: {\n        // 所属机构或货主\n        relationDepId: '',\n        // 所属门店\n        storeId: '',\n        // 商品分类\n        productType: '',\n        // 价格筛选\n        lowerPriceLimit: '',\n        priceCap: '',\n        // 库存量\n        lowerInventoryLimit: '',\n        inventoryCap: '',\n        // 设计商\n        designCompanyCode: '',\n        // 品牌\n        brandCode: '',\n        // 综合搜索\n        filter: '',\n        // 标签\n        // collocationTagIdList: [],\n        // 当前页码\n        pageIndex: 1,\n        // 每页数量\n        pageSize: 10\n      },\n      // 导入商品地址\n      uploadGoodsUrl: this.api.FN_ALLPATH(this.api.retailStore.storeProduct_importOrderItem),\n      // 商品主表格数据\n      tableData: {},\n      tableDataCheckedRow: {},\n      // 弹窗商品数据\n      SKUTableData: [],\n      // 选择的商品\n      checkedSKUTableData: [],\n      checkedSKUTotalPrice: 0,\n      checkedSKUTotal: 0,\n      // 提交信息\n      backGoodsInfo: {},\n\n      /** 商品查询辅助数据*/\n      // 验证\n      rules: {\n        money: [{\n          required: false,\n          validator: this.moneyRule,\n          trigger: 'blur'\n        }],\n        count: [{\n          required: false,\n          validator: this.countRule,\n          trigger: 'blur'\n        }]\n      },\n      // 分类映射\n      props: {\n        value: 'id',\n        label: 'name',\n        children: 'children'\n      },\n      // 分类数据\n      classData: [],\n      classList: [],\n      // 选中的分类\n      cateArr: [],\n      // 品牌\n      brandOptions: [],\n      // 设计商\n      designCompanyOptions: []\n      /** 商品查询辅助数据--end */\n\n    };\n  },\n  // 组件\n  components: {\n    PageTable: PageTable,\n    BackGoodsTable: BackGoodsTable,\n    CheckTags: CheckTags,\n    ImagePopover: ImagePopover\n  },\n  created: function created() {\n    // 获取上页面缓存的门店信息\n    var backGoodsInfo = sessionStorage.getItem('BACK_GOODS_INFO');\n\n    if (backGoodsInfo) {\n      this.backGoodsInfo = JSON.parse(backGoodsInfo);\n      this.formData.relationDepId = this.backGoodsInfo.organizationId;\n      this.formData.storeId = this.backGoodsInfo.storeId;\n    } else {\n      this.$notify.error({\n        title: '错误',\n        message: '信息丢失'\n      }); // 回退到选择门店;\n\n      var module = '/' + this.$route.path.split('/')[1];\n      this.$router.push({\n        path: module + '/back_goods/back_goods_add'\n      });\n    }\n  },\n  // 初始化数据\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      _this.getStoreInfo();\n\n      _this.getDesignCompanyOptions();\n\n      _this.getBrandOptions();\n\n      _this.getClassData();\n\n      _this.getTableData();\n\n      _this.getOrganizationIdByUserId();\n    });\n  },\n  // 方法\n  methods: {\n    inNext: function inNext() {\n      var inObj = this.dialogIncludeObj.checkInItem;\n      if (JSON.stringify(inObj) == '{}') return;\n      Object.assign(this.backGoodsInfo, {\n        warehouseCode: inObj.warehouseCode,\n        warehouseName: inObj.warehouseName,\n        // 收货人\n        receiveMan: inObj.contact,\n        // 电话\n        phone: inObj.telephone,\n        divisionId: inObj.divisionId,\n        addressInfo: inObj.address,\n        provinceName: inObj.provinceName,\n        provinceCode: inObj.provinceCode,\n        cityName: inObj.cityName,\n        cityCode: inObj.cityCode\n      });\n      this.dialogIncludeObj.isDialogTableVisible = false;\n    },\n    searchInTableData: function searchInTableData() {},\n    initInTableFormData: function initInTableFormData() {},\n    getOrganizationIdByUserId: function () {\n      var _getOrganizationIdByUserId = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var info, url;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.request(this.api.user.get_userinfo, {}, true);\n\n              case 2:\n                info = _context.sent;\n                url = this.api.user.userCompany_getUserOrgByUserId;\n                this.request(url, {\n                  userId: info.userId\n                }).then(function (data) {\n                  _this2.getWarehouseList(data.id);\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getOrganizationIdByUserId() {\n        return _getOrganizationIdByUserId.apply(this, arguments);\n      }\n\n      return getOrganizationIdByUserId;\n    }(),\n    //获取仓库数据\n    getWarehouseList: function getWarehouseList(id) {\n      var _this3 = this;\n\n      this.request(this.api.warehouse.warehouse_list, {\n        orgId: id,\n        used: true\n      }).then(function (data) {\n        _this3.dialogIncludeObj.tableInDate = data.data;\n        data.data.forEach(function (item, index) {\n          item.createTime = _this3.$options.filters.timestampToTime(item.createTime);\n        });\n      });\n    },\n    // 获取门店信息\n    getStoreInfo: function getStoreInfo() {\n      var _this4 = this;\n\n      if (this.backGoodsInfo.storeType) return;\n      this.request(this.api.retailStore.storeBasic_get, {\n        id: this.backGoodsInfo.storeId\n      }).then(function (data) {\n        _this4.storeInfo = data;\n        _this4.backGoodsInfo.storeType = _this4.storeInfo.type;\n      });\n    },\n    // 获取门店热门销售标签\n    getStoreTags: function getStoreTags() {\n      var _this5 = this;\n\n      if (this.productTypeList.length > 0) return;\n      this.request(this.api.retailStore.storeProduct_listTagByStoreId, {\n        storeId: this.backGoodsInfo.storeId\n      }).then(function (data) {\n        _this5.productTypeList = data;\n      });\n    },\n    // 点击搜索\n    searchTableData: function searchTableData() {\n      this.formData.pageIndex = 1;\n      this.getTableData();\n    },\n    // 获取商品数据\n    getTableData: function getTableData() {\n      var _this6 = this;\n\n      this.$nextTick(function () {\n        setTimeout(function () {\n          _this6.$refs.searchForm.validate(function (valid) {\n            if (valid) {\n              var params = JSON.parse(JSON.stringify(_this6.formData));\n              /*if(params.collocationTagIdList.length === 0){\n                params.collocationTagIdList = null\n              }*/\n\n              if (params.lowerInventoryLimit || params.inventoryCap) {\n                params.validStock = null;\n              }\n\n              _this6.request(_this6.api.scb.movingAveragePrice_selectAllocateProduct, params).then(function (data) {\n                _this6.tableData = data;\n              });\n            } else {\n              return false;\n            }\n          });\n        }, 0);\n      });\n    },\n    // 重置查询条件\n    initFormData: function initFormData(formName) {\n      this.$refs[formName].resetFields();\n      this.cateArr = [];\n      this.formData.productType = '';\n      this.formData.lowerPriceLimit = '';\n      this.formData.priceCap = '';\n      this.formData.lowerInventoryLimit = '';\n      this.formData.inventoryCap = '';\n    },\n    // 获取选择商品\n    checkGoods: function checkGoods(row) {\n      var _this7 = this;\n\n      this.tableDataCheckedRow = row;\n      var params = {\n        productCode: row.productCode,\n        storeId: row.storeId,\n        // relationDepId: row.relationDepId,\n        // 页码\n        pageIndex: 1,\n        // 每页数量\n        pageSize: 10000\n      };\n      this.request(this.api.scb.movingAveragePrice_list, params).then(function (data) {\n        if (data.data && data.data.length) {\n          for (var n = 0; n < data.data.length; n++) {\n            data.data[n].planBackQuantity = 0;\n            data.data[n].backUnitPrice = data.data[n].price;\n\n            if (_this7.checkedSKUTableData.length > 0) {\n              for (var i = 0; i < _this7.checkedSKUTableData.length; i++) {\n                if (_this7.checkedSKUTableData[i].id === data.data[n].id) {\n                  data.data[n].planBackQuantity = _this7.checkedSKUTableData[i].planBackQuantity;\n                }\n              }\n            }\n          }\n        }\n\n        _this7.SKUTableData = data.data;\n        _this7.SKUDialog = true;\n      });\n    },\n    // 确认选择商品\n    checkGoodsSub: function checkGoodsSub() {\n      var _this8 = this;\n\n      var _loop = function _loop(i) {\n        var good = _this8.SKUTableData[i];\n\n        var checkedGood = _this8.checkedSKUTableData.find(function (item) {\n          return item.id === good.id;\n        });\n\n        if (checkedGood) {\n          if (good.planBackQuantity === 0) {\n            var index = _this8.checkedSKUTableData.find(function (item) {\n              return item.id === good.id;\n            });\n\n            _this8.checkedSKUTableData.splice(index, 1);\n          } else {\n            checkedGood.planBackQuantity = good.planBackQuantity;\n          }\n        } else if (!checkedGood && good.planBackQuantity > 0) {\n          _this8.SKUTableData[i].designCompanyName = _this8.tableDataCheckedRow.designCompanyName;\n          _this8.SKUTableData[i].designCompanyCode = _this8.tableDataCheckedRow.designCompanyCode;\n\n          _this8.checkedSKUTableData.push(_this8.SKUTableData[i]);\n        }\n      };\n\n      for (var i = 0; i < this.SKUTableData.length; i++) {\n        _loop(i);\n      } // 计算总价\n\n\n      this.checkedTotalPrice();\n      this.SKUDialog = false;\n    },\n    // 类型切换\n    handleBeforeClick: function handleBeforeClick(activeName) {\n      if (activeName === 'store') {\n        this.getStoreInfo();\n      }\n\n      if (activeName === 'goods') {\n        this.getStoreTags();\n      }\n    },\n    // 计算总价\n    checkedTotalPrice: function checkedTotalPrice() {\n      var _this9 = this;\n\n      this.checkedSKUTotal = 0;\n      this.checkedSKUTotalPrice = 0;\n\n      if (this.checkedSKUTableData.length) {\n        this.checkedSKUTableData.forEach(function (item) {\n          _this9.checkedSKUTotalPrice += Number(item.backUnitPrice) * Number(item.planBackQuantity);\n          _this9.checkedSKUTotal += item.planBackQuantity;\n        });\n      }\n\n      this.checkedSKUTotalPrice = this.checkedSKUTotalPrice.toFixed(2);\n    },\n    // 获取更多标签\n    getMoreTags: function getMoreTags() {},\n    // 最终提交\n    finalSub: function finalSub() {\n      var _this10 = this;\n\n      if (!this.checkedSKUTableData.length) {\n        return;\n      }\n\n      this.backGoodsInfo.returnProductList = [];\n      this.backGoodsInfo.totalPrice = this.checkedSKUTotalPrice;\n      var goodsNum = 0;\n      this.checkedSKUTableData.forEach(function (item) {\n        var obj = {\n          // 货品编码\n          goodsCode: item.goodsCode,\n          // 货品名称\n          goodsName: item.goodsName,\n          // 商品(spu)编码\n          productCode: item.productCode,\n          // 商品类型\n          productType: item.productType,\n          // 商品图片\n          image: item.image,\n          // 品牌\n          brandName: item.brandName,\n          brandCode: item.brandCode,\n          // 设计商\n          designCompanyName: item.designCompanyName,\n          designCompanyCode: item.designCompanyCode,\n          // 尺码\n          size: item.size,\n          // 颜色\n          color: item.color,\n          // 颜色色系\n          colorSeries: item.colorSeries,\n          // 吊牌价\n          retailPrice: item.price,\n          // 返货单价\n          backUnitPrice: item.backUnitPrice,\n          // 数量\n          planBackQuantity: item.planBackQuantity\n        };\n\n        _this10.backGoodsInfo.returnProductList.push(obj);\n\n        goodsNum += item.planBackQuantity;\n      });\n      this.backGoodsInfo.productNum = goodsNum;\n      this.request(this.api.order.returnGoods_keep, this.backGoodsInfo).then(function (data) {\n        _this10.$notify.success({\n          title: '成功',\n          message: '新增成功'\n        });\n\n        var module = '/' + _this10.$route.path.split('/')[1];\n\n        _this10.$router.push({\n          path: module + '/order/returnGoods_order'\n        });\n      });\n    },\n\n    /**\n     * 导入商品\n     * @param file 上传的文件\n     */\n    uploadGoodsChange: function uploadGoodsChange(file) {\n      var _this11 = this;\n\n      var nameAry = file.name.split('.');\n      var str = nameAry[nameAry.length - 1].toLowerCase(); // 判断类型\n\n      if (!str.match(/xlsx|xls/)) {\n        this.$message.error('文件格式只能是 xlsx | xls格式!');\n        return false;\n      }\n\n      var formData = new FormData();\n      var token = getToken();\n      formData.set('file', file.raw);\n      formData.set('storeId', this.formData.storeId);\n      axios({\n        method: \"POST\",\n        url: this.api.FN_ALLPATH(this.api.retailStore.storeProduct_importOrderItem),\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n          accessToken: token\n        },\n        data: formData\n      }).then(function (res) {\n        var data = res.data; // 合并导入的数据和已选择的数据\n\n        _this11.$notify.success({\n          title: '成功',\n          message: '导入成功'\n        });\n\n        if (data.code && data.code == 200) {\n          (function () {\n            var goodsData = data.data;\n\n            if (goodsData && goodsData.length > 0) {\n              var _loop2 = function _loop2(n) {\n                var goodsIndex = _this11.checkedSKUTableData.findIndex(function (item) {\n                  return item.goodsCode === goodsData[n].goodsCode;\n                });\n\n                if (goodsIndex !== -1) {\n                  _this11.checkedSKUTableData[goodsIndex].quantity = goodsData[n].quantity + _this11.checkedSKUTableData[goodsIndex].quantity;\n                } else {\n                  goodsData[n].allotPrice = goodsData[n].retailPrice;\n\n                  _this11.checkedSKUTableData.push(goodsData[n]);\n                }\n              };\n\n              for (var n = 0; n < goodsData.length; n++) {\n                _loop2(n);\n              }\n            }\n\n            _this11.checkedGoodsShow = true;\n\n            _this11.$nextTick(function () {// this.$refs.transferSlipGoodsTable.init();\n            });\n          })();\n        } else {\n          _this11.$notify.error({\n            title: '错误',\n            message: data.message\n          });\n        }\n      });\n    },\n\n    /**\n     * 搜索商品参数下拉数据及验证\n     */\n    // 验证价格区间\n    moneyRule: function moneyRule(rule, value, callback) {\n      var reg = /^[0-9]*$/;\n\n      if (!reg.test(this.formData.lowerPriceLimit) || !reg.test(this.formData.priceCap)) {\n        callback(new Error('价格区间必须是数字'));\n        return;\n      }\n\n      if (this.formData.lowerPriceLimit && this.formData.priceCap && this.formData.lowerPriceLimit >= this.formData.priceCap) {\n        callback(new Error('价格区间下限应小于上限'));\n      } else {\n        callback();\n      }\n    },\n    // 验证数量区间\n    countRule: function countRule(rule, value, callback) {\n      var reg = /^[0-9]*$/;\n\n      if (!reg.test(this.formData.lowerInventoryLimit) || !reg.test(this.formData.inventoryCap)) {\n        callback(new Error('库存量区间必须是数字'));\n        return;\n      }\n\n      if (this.formData.lowerInventoryLimit && this.formData.inventoryCap && this.formData.lowerInventoryLimit >= this.formData.inventoryCap) {\n        callback(new Error('库存量区间下限应小于上限'));\n      } else {\n        callback();\n      }\n    },\n    // 获取商品分类数据\n    getClassData: function getClassData() {\n      var _this12 = this;\n\n      //分类类型（1：标准分类，2：定制分类，3：原料分类或者称为属性分类）\n      this.$common.getClassSelect(this, 1).then(function (res) {\n        _this12.classData = res.ztree;\n        _this12.classList = res.list;\n      });\n    },\n    // 商品分类Change\n    classChange: function classChange(e) {\n      if (e.length === 0) {\n        this.formData.productType = '';\n        return;\n      }\n\n      var cateId = JSON.parse(JSON.stringify(e)).pop();\n      var obj = this.classList.find(function (item) {\n        return item.id == cateId;\n      });\n      this.formData.productType = obj.fullCateName;\n    },\n    // 获取设计商\n    getDesignCompanyOptions: function getDesignCompanyOptions() {\n      var _this13 = this;\n\n      this.request(this.api.product.designCompany_list, {}).then(function (data) {\n        _this13.designCompanyOptions = data.data;\n      });\n    },\n    // 获取品牌\n    getBrandOptions: function getBrandOptions() {\n      var _this14 = this;\n\n      this.request(this.api.product.productBrand_list, {}).then(function (data) {\n        _this14.brandOptions = data.data;\n      });\n    }\n    /**\n     * 搜索商品参数下拉数据--end\n     */\n\n  },\n  // 计算属性\n  computed: {},\n  // 监听数据变化\n  watch: {}\n};",{"version":3,"sources":["returnGoods_order_edit.vue"],"names":[],"mappings":"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","sourcesContent":["<style lang=\"less\" scoped>\r\n  .back-goods-add-goods{display: flex;\r\n    .upload-goods-btn{display: inline-block;margin-left: 15px;}\r\n    .side{width: 320px;background: #fff;margin-left: 8px;line-height: 24px;\r\n      .tabs{margin-top: 10px;}\r\n      .store-info{\r\n        ul{\r\n          li{margin-bottom: 5px;position: relative;padding-left: 70px;\r\n            img{width: 80px;height: 80px;margin-right: 10px;margin-bottom: 10px;}\r\n            span{width: 70px;text-align: right;display: block;position: absolute;left: 0;top: 0;}\r\n          }\r\n        }\r\n      }\r\n      .goods-info{\r\n        .category{\r\n          ul{\r\n            li{width: 50%;float: left;margin-bottom: 5px;\r\n\r\n            }\r\n          }\r\n        }\r\n        .tags{\r\n          ul{\r\n            li{display: flex;\r\n              .label{display: inline-block;width: 80px;}\r\n              div{flex: 1;\r\n                .el-tag{margin-right: 5px;margin-bottom: 5px;}\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    .table-list{flex: 1;background: #fff;margin-top: 0;\r\n      .goods-list{\r\n        .type-list{padding-top: 0;padding-bottom: 0;\r\n\r\n        }\r\n      }\r\n      .check-goods-list{\r\n\r\n      }\r\n    }\r\n    .page-more{border-top: 1px solid #e6e8ed;margin-top: 10px;\r\n      div.btn{\r\n        width: 120px;border: 1px solid #e6e8ed;border-top: 1px solid #fff;margin: -1px auto 0;text-align: center;font-size: 12px;cursor: pointer;line-height: 30px;\r\n      }\r\n    }\r\n    .item-cont{\r\n      .total-price{float: left; width: 40%;}\r\n      .btns{float: right;}\r\n    }\r\n    .index-goods-table{padding-top: 0;}\r\n  }\r\n</style>\r\n<template>\r\n  <div class=\"back-goods-add-goods\">\r\n    <!-- 选择调出入方信息 -->\r\n    <el-dialog min-width=\"800px\" max-width=\"1200px\" title=\"选择收货仓库\" :visible.sync=\"dialogIncludeObj.isDialogTableVisible\">\r\n      <el-form\r\n        class=\"item-form\"\r\n        :model=\"dialogIncludeObj.formDataIn\"\r\n        label-width=\"90px\"\r\n        size=\"small\"\r\n        ref=\"formData\"\r\n        inline>\r\n        <el-form-item label=\"仓库名称：\" prop=\"orderStatus\">\r\n          <el-select\r\n            placeholder=\"请选择\"\r\n            class=\"input-w\"\r\n            v-model=\"dialogIncludeObj.formDataIn.orderStatus\"\r\n            filterable\r\n            clearable>\r\n            <el-option v-for=\"item in dialogIncludeObj.tableInDate\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button @click=\"searchInTableData\" type=\"primary\" plain>搜索</el-button>\r\n          <el-button @click=\"initInTableFormData\" plain>重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n      <el-table :data=\"dialogIncludeObj.tableInDate\" max-height=\"350\" class=\"mt-10\">\r\n        <el-table-column label=\"单选\" align=\"center\" min-width=\"50\">\r\n          <template slot-scope=\"scope\">\r\n            <el-radio-group v-model=\"dialogIncludeObj.checkInItem\">\r\n              <el-radio :disabled=\"scope.row.status == 10\" :label=\"scope.row\">&nbsp;</el-radio>\r\n            </el-radio-group>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column :show-overflow-tooltip=\"true\" label=\"仓库名称\" align=\"center\" min-width=\"90\">\r\n          <template slot-scope=\"scope\">{{ scope.row.warehouseName }}</template>\r\n        </el-table-column>\r\n        <el-table-column :show-overflow-tooltip=\"true\" label=\"仓库类型\" align=\"center\" min-width=\"90\">\r\n          <template slot-scope=\"scope\">{{ warehouseType[scope.row.warehouseType] }}</template>\r\n        </el-table-column>\r\n        <el-table-column :show-overflow-tooltip=\"true\" label=\"所在省/直辖市\" align=\"center\" min-width=\"90\">\r\n          <template slot-scope=\"scope\">{{ scope.row.provinceName }}</template>\r\n        </el-table-column>\r\n        <el-table-column :show-overflow-tooltip=\"true\" label=\"市/区\" align=\"center\" min-width=\"90\">\r\n          <template slot-scope=\"scope\">{{ scope.row.areaName }}</template>\r\n        </el-table-column>\r\n          <el-table-column :show-overflow-tooltip=\"true\" label=\"详细地址\" align=\"center\" min-width=\"90\">\r\n          <template slot-scope=\"scope\">{{ scope.row.address }}</template>\r\n        </el-table-column>\r\n          <el-table-column :show-overflow-tooltip=\"true\" label=\"联系人\" align=\"center\" min-width=\"90\">\r\n          <template slot-scope=\"scope\">{{ scope.row.contact }}</template>\r\n        </el-table-column>\r\n          <el-table-column :show-overflow-tooltip=\"true\" label=\"联系电话\" align=\"center\" min-width=\"90\">\r\n          <template slot-scope=\"scope\">{{ scope.row.telephone }}</template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogIncludeObj.isDialogTableVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"inNext\">下一步</el-button>\r\n      </span>\r\n    </el-dialog>\r\n    <div class=\"side\">\r\n      <div class=\"item-cont\">\r\n        <el-button size=\"small\" type=\"primary\" @click=\"checkedGoodsShow = true\">已选商品</el-button>\r\n        <el-upload class=\"upload-goods-btn\" :action=\"uploadGoodsUrl\" :show-file-list=\"false\" :auto-upload=\"false\" :on-change=\"uploadGoodsChange\">\r\n          <el-button size=\"small\" type=\"primary\" plain>导入商品</el-button>\r\n        </el-upload>\r\n        <el-tabs v-model=\"activeName\" class=\"tabs\" :before-leave=\"handleBeforeClick\" type=\"card\">\r\n          <el-tab-pane label=\"退返货方\" name=\"store\" class=\"store-info\">\r\n            <ul>\r\n              <li><span>客户名称：</span>{{ storeInfo.name }}</li>\r\n              <li><span>所在地区：</span>{{ storeInfo.provinceName }} {{ storeInfo.cityName }} {{ storeInfo.areaName }}</li>\r\n              <li><span>门店类型：</span>{{ \"STO001\" | codeToName(storeInfo.type) }}</li>\r\n              <li v-if=\"storeInfo.infosMap && storeInfo.infosMap.length\">\r\n                <span>经营类型：</span>\r\n                <i v-for=\"info in storeInfo.infosMap[0]\">{{ \"COM002\" | codeToName(info.type) }}</i></li>\r\n              <li><span>店铺面积：</span>{{ storeInfo.storeArea }}m²</li>\r\n              <li v-if=\"storeInfo.images && storeInfo.images.length\"><span>门店图片：</span>\r\n                <img :src=\"image.url\" alt=\"图片\" v-for=\"image in storeInfo.images\">\r\n              </li>\r\n              <li><span>收货人：</span>{{ backGoodsInfo.receiveMan }}</li>\r\n              <li><span>联系电话：</span>{{ backGoodsInfo.phone }}</li>\r\n              <li><span>客户地址：</span>{{ backGoodsInfo.provinceName }} {{ backGoodsInfo.cityName }} {{ backGoodsInfo.areaName }} {{ backGoodsInfo.addressInfo }}</li>\r\n            </ul>\r\n          </el-tab-pane>\r\n          <el-tab-pane label=\"收货仓库\" name=\"goods\" class=\"store-info\">\r\n            <ul>\r\n              <li><span>仓库名称：</span>{{ backGoodsInfo.warehouseName }}</li>\r\n              <li><span>仓库类型：</span>{{ warehouseType[backGoodsInfo.warehouseType] }}</li>\r\n              <li><span>负责人：</span>{{ backGoodsInfo.receiveMan }}</li>\r\n              <li><span>联系电话：</span>{{ backGoodsInfo.phone }}</li>\r\n              <li><span>仓库地址：</span>{{ backGoodsInfo.provinceName }} {{ backGoodsInfo.cityName }} {{ backGoodsInfo.areaName }} {{ backGoodsInfo.addressInfo }}</li>\r\n            </ul>\r\n            <el-button class=\"mt-20\" type=\"primary\" @click=\"dialogIncludeObj.isDialogTableVisible = true\">更改收货仓库</el-button>\r\n          </el-tab-pane>\r\n        </el-tabs>\r\n      </div>\r\n    </div>\r\n    <div class=\"table-list item-margin\">\r\n      <!--商品主列表-->\r\n      <div class=\"goods-list\" v-if=\"!checkedGoodsShow\">\r\n        <div class=\"\">\r\n          <el-form class=\"item-form\" :model=\"formData\" label-width=\"90px\" size=\"small\" ref=\"searchForm\" inline :rules=\"rules\">\r\n            <el-form-item label=\"商品分类：\">\r\n              <el-cascader\r\n                  class=\"input-w\"\r\n                  :options=\"classData\"\r\n                  v-model=\"cateArr\"\r\n                  @change=\"classChange\"\r\n                  :show-all-levels=\"false\"\r\n                  :props=\"props\"\r\n                  change-on-select\r\n                  clearable\r\n              ></el-cascader>\r\n            </el-form-item>\r\n            <el-form-item label=\"价格筛选：\" prop=\"money\">\r\n              <el-input class=\"input-w\" placeholder=\"请输入区间下限\" v-model.number=\"formData.lowerPriceLimit\"></el-input>\r\n              &nbsp;\r\n              <el-input class=\"input-w\" placeholder=\"请输入区间上限\" v-model.number=\"formData.priceCap\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"库存量：\" prop=\"count\">\r\n              <el-input class=\"input-w\" placeholder=\"请输入区间下限\" v-model.number=\"formData.lowerInventoryLimit\"></el-input>\r\n              &nbsp;\r\n              <el-input class=\"input-w\" placeholder=\"请输入区间上限\" v-model.number=\"formData.inventoryCap\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"设计商：\" prop=\"designCompanyCode\">\r\n              <el-select class=\"input-w\" placeholder=\"请选择\" v-model=\"formData.designCompanyCode\" clearable filterable>\r\n                <el-option\r\n                    v-for=\"item in designCompanyOptions\"\r\n                    :key=\"item.id\"\r\n                    :label=\"item.name\"\r\n                    :value=\"item.id\"\r\n                ></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"品牌：\" prop=\"brandCode\">\r\n              <el-select class=\"input-w\" placeholder=\"请选择\" v-model=\"formData.brandCode\" clearable filterable>\r\n                <el-option\r\n                    v-for=\"item in brandOptions\"\r\n                    :key=\"item.id\"\r\n                    :label=\"item.name\"\r\n                    :value=\"item.id\"\r\n                ></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"综合搜索：\" prop=\"filter\">\r\n              <el-input class=\"input-w\" placeholder=\"款号、名称\" v-model=\"formData.filter\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button @click=\"searchTableData\" type=\"primary\" plain>搜索</el-button>\r\n              <el-button @click=\"initFormData('searchForm')\" plain>重置</el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n          <!--<div class=\"type-list item-cont\">\r\n            <check-tags :checked-data=\"formData.collocationTagIdList\"></check-tags>\r\n          </div>-->\r\n        </div>\r\n        <div class=\"item-cont index-goods-table\">\r\n          <page-table :form-data=\"formData\" :get-data=\"getTableData\" :table-data=\"tableData\">\r\n            <el-table :data=\"tableData.data\" style=\"width: 100%\">\r\n              <el-table-column prop=\"productCode\" label=\"商品款号\"></el-table-column>\r\n              <el-table-column prop=\"goodsName\" label=\"名称\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n              <el-table-column label=\"商品图片\">\r\n                <template slot-scope=\"scope\">\r\n                  <image-popover :img-src=\"scope.row.image\"></image-popover>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"brandName\" label=\"品牌\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n              <el-table-column prop=\"designCompanyName\" label=\"设计商\"></el-table-column>\r\n              <el-table-column prop=\"productType\" label=\"品类\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n              <el-table-column prop=\"priceTag\" label=\"吊牌价\"></el-table-column>\r\n              <el-table-column prop=\"quantity\" label=\"库存量\"></el-table-column>\r\n              <el-table-column label=\"操作\" width=\"120\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-button type=\"text\" size=\"small\" @click=\"checkGoods(scope.row)\">选择</el-button>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </page-table>\r\n        </div>\r\n      </div>\r\n      <!--选中的商品-->\r\n      <div class=\"check-goods-list\" v-if=\"checkedGoodsShow\">\r\n        <back-goods-table :table-data=\"checkedSKUTableData\" key=\"2\" :is-del=\"true\" v-if=\"checkedGoodsShow\"></back-goods-table>\r\n        <div class=\"item-cont clearfix\">\r\n          <div class=\"total-price\">商品总价：{{ checkedSKUTotalPrice }}</div>\r\n          <div class=\"total-price\">商品总数：{{ checkedSKUTotal }}</div>\r\n          <div class=\"btns\">\r\n            <el-button type=\"primary\" @click=\"finalSub\" size=\"small\">完成返货</el-button>\r\n            <el-button type=\"primary\" @click=\"checkedGoodsShow = false\" size=\"small\">继续返货</el-button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!--点击商品主列表  弹窗选择商品-->\r\n    <el-dialog title=\"选择SKU\" :visible.sync=\"SKUDialog\" width=\"80%\" :close-on-click-modal=\"false\">\r\n      <back-goods-table :table-data=\"SKUTableData\" key=\"1\" v-if=\"SKUDialog\"></back-goods-table>\r\n      <div class=\"item-cont clearfix \">\r\n        <div class=\"btns\">\r\n          <el-button type=\"primary\" @click=\"checkGoodsSub\" size=\"small\">确定</el-button>\r\n          <el-button @click=\"SKUDialog = false\" size=\"small\">取消</el-button>\r\n        </div>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\n  // TODO 临时解决上传文件\r\n  import axios from 'axios'\r\n  import { getToken } from \"@/utils/auth\";\r\n\r\n  import PageTable from \"@/views/collocation/components/PageTable\";\r\n  import CheckTags from \"@/views/collocation/components/CheckTags\";\r\n  import BackGoodsTable from \"@/views/collocation/components/BackGoodsTable\";\r\n  import ImagePopover from \"@/views/collocation/components/ImagePopover\";\r\n  export default {\r\n    name: '',\r\n    // 数据\r\n    data() {\r\n      return {\r\n        warehouseType:{\r\n          '07001':'总仓',\r\n          '07002':'分仓',\r\n          '07003':'中转仓'\r\n        },\r\n        // 弹框中包裹的对象\r\n        dialogIncludeObj:{\r\n          // out为调出方，in调入方\r\n          type:'out',\r\n          // 弹出框是否显示\r\n          isDialogTableVisible:false,\r\n          // 调出单检索条件 ---\r\n          formDataOut:{\r\n            orderStatus:null,\r\n            pageIndex:1,\r\n            pageSize:10\r\n          },\r\n          // 调出单\r\n          tableOutDate:{\r\n            data:[],\r\n            totalCount:15\r\n          },\r\n          // 选中调出单某一项\r\n          checkOutItem:{},\r\n          // 调入单检索条件 ---\r\n          formDataIn:{\r\n            orderStatus:null\r\n          },\r\n          // 调入单\r\n          tableInDate:{\r\n            data:[]\r\n          },\r\n          // 选中调入单某一项\r\n          checkInItem:{}\r\n        },\r\n        // 收货人\r\n        backWarehouse_obj:{\r\n          warehouseCode: null,\r\n          warehouseName: null,\r\n          // 收货人\r\n          receiveMan:null,\r\n          // 电话\r\n          phone: null,\r\n          divisionId: null,\r\n          addressInfo:null,\r\n          provinceName: null,\r\n          provinceCode: null,\r\n          cityName: null,\r\n          cityCode: null,\r\n        },\r\n        // 默认显示门店信息\r\n        activeName: 'store',\r\n        // 门店信息数据\r\n        storeInfo: {},\r\n        // 门店商品相关\r\n        productTypeList: [],\r\n        // 弹窗选择商品\r\n        SKUDialog: false,\r\n        // 是否显示选中的\r\n        checkedGoodsShow: false,\r\n        // 查询商品参数\r\n        formData: {\r\n          // 所属机构或货主\r\n          relationDepId: '',\r\n          // 所属门店\r\n          storeId: '',\r\n          // 商品分类\r\n          productType: '',\r\n          // 价格筛选\r\n          lowerPriceLimit: '',\r\n          priceCap: '',\r\n          // 库存量\r\n          lowerInventoryLimit: '',\r\n          inventoryCap: '',\r\n          // 设计商\r\n          designCompanyCode: '',\r\n          // 品牌\r\n          brandCode: '',\r\n          // 综合搜索\r\n          filter: '',\r\n          // 标签\r\n          // collocationTagIdList: [],\r\n          // 当前页码\r\n          pageIndex: 1,\r\n          // 每页数量\r\n          pageSize: 10\r\n        },\r\n        // 导入商品地址\r\n        uploadGoodsUrl: this.api.FN_ALLPATH(this.api.retailStore.storeProduct_importOrderItem),\r\n        // 商品主表格数据\r\n        tableData: {},\r\n        tableDataCheckedRow: {},\r\n        // 弹窗商品数据\r\n        SKUTableData: [],\r\n        // 选择的商品\r\n        checkedSKUTableData: [],\r\n        checkedSKUTotalPrice: 0,\r\n        checkedSKUTotal: 0,\r\n        // 提交信息\r\n        backGoodsInfo: {},\r\n\r\n        /** 商品查询辅助数据*/\r\n        // 验证\r\n        rules: {\r\n          money: [\r\n            { required: false, validator: this.moneyRule, trigger: 'blur'}\r\n          ],\r\n          count: [\r\n            { required: false, validator: this.countRule, trigger: 'blur'}\r\n          ]\r\n        },\r\n        // 分类映射\r\n        props:{\r\n          value: 'id',\r\n          label:'name',\r\n          children: 'children'\r\n        },\r\n        // 分类数据\r\n        classData:[],\r\n        classList:[],\r\n        // 选中的分类\r\n        cateArr:[],\r\n        // 品牌\r\n        brandOptions:[],\r\n        // 设计商\r\n        designCompanyOptions:[]\r\n        /** 商品查询辅助数据--end */\r\n      }\r\n    },\r\n    // 组件\r\n    components: {\r\n      PageTable,\r\n      BackGoodsTable,\r\n      CheckTags,\r\n      ImagePopover\r\n    },\r\n    created(){\r\n      // 获取上页面缓存的门店信息\r\n      let backGoodsInfo = sessionStorage.getItem('BACK_GOODS_INFO');\r\n      if(backGoodsInfo){\r\n        this.backGoodsInfo = JSON.parse(backGoodsInfo);\r\n        this.formData.relationDepId = this.backGoodsInfo.organizationId;\r\n        this.formData.storeId = this.backGoodsInfo.storeId;\r\n      }else {\r\n        this.$notify.error({ title: '错误',message: '信息丢失'});\r\n        // 回退到选择门店;\r\n        let module = '/' + this.$route.path.split('/')[1];\r\n        this.$router.push({\r\n          path: module + '/back_goods/back_goods_add'\r\n        });\r\n      }\r\n    },\r\n    // 初始化数据\r\n    mounted() {\r\n      this.$nextTick(()=> {\r\n        this.getStoreInfo();\r\n        this.getDesignCompanyOptions();\r\n        this.getBrandOptions();\r\n        this.getClassData();\r\n        this.getTableData();\r\n        this.getOrganizationIdByUserId();\r\n      })\r\n    },\r\n    // 方法\r\n    methods: {\r\n      inNext() {\r\n        var inObj = this.dialogIncludeObj.checkInItem;\r\n        if(JSON.stringify(inObj) == '{}') return;\r\n        Object.assign(this.backGoodsInfo,{\r\n          warehouseCode: inObj.warehouseCode,\r\n          warehouseName: inObj.warehouseName,\r\n          // 收货人\r\n          receiveMan:inObj.contact,\r\n          // 电话\r\n          phone: inObj.telephone, \r\n          divisionId: inObj.divisionId,\r\n          addressInfo:inObj.address,\r\n          provinceName: inObj.provinceName,\r\n          provinceCode: inObj.provinceCode,\r\n          cityName: inObj.cityName,\r\n          cityCode: inObj.cityCode\r\n        });\r\n        this.dialogIncludeObj.isDialogTableVisible = false;\r\n      },\r\n      searchInTableData() {},\r\n      initInTableFormData() {},\r\n      async getOrganizationIdByUserId(){\r\n        let info = await this.request(this.api.user.get_userinfo, {}, true);\r\n        let url = this.api.user.userCompany_getUserOrgByUserId;\r\n\r\n        this.request(url, {userId: info.userId}).then(data => {\r\n          this.getWarehouseList(data.id);\r\n        });\r\n      },\r\n      //获取仓库数据\r\n      getWarehouseList(id) {\r\n        this.request(this.api.warehouse.warehouse_list, {orgId: id, used: true}).then(data => {\r\n          this.dialogIncludeObj.tableInDate = data.data;\r\n          data.data.forEach((item, index) => {\r\n            item.createTime = this.$options.filters.timestampToTime(item.createTime);\r\n          });\r\n        });\r\n      },\r\n      // 获取门店信息\r\n      getStoreInfo(){\r\n        if(this.backGoodsInfo.storeType) return;\r\n        this.request(this.api.retailStore.storeBasic_get, {id: this.backGoodsInfo.storeId}).then(data => {\r\n          this.storeInfo = data;\r\n          this.backGoodsInfo.storeType = this.storeInfo.type;\r\n        });\r\n      },\r\n      // 获取门店热门销售标签\r\n      getStoreTags(){\r\n        if(this.productTypeList.length > 0) return;\r\n        this.request(this.api.retailStore.storeProduct_listTagByStoreId, {storeId: this.backGoodsInfo.storeId}).then(data => {\r\n          this.productTypeList = data;\r\n        });\r\n      },\r\n      // 点击搜索\r\n      searchTableData(){\r\n        this.formData.pageIndex = 1;\r\n        this.getTableData();\r\n      },\r\n      // 获取商品数据\r\n      getTableData() {\r\n        this.$nextTick(() => {\r\n          setTimeout(()=> {\r\n            this.$refs.searchForm.validate((valid) => {\r\n              if (valid) {\r\n                let params = JSON.parse(JSON.stringify(this.formData));\r\n                /*if(params.collocationTagIdList.length === 0){\r\n                  params.collocationTagIdList = null\r\n                }*/\r\n                if(params.lowerInventoryLimit || params.inventoryCap ){\r\n                  params.validStock = null\r\n                }\r\n                this.request(this.api.scb.movingAveragePrice_selectAllocateProduct, params).then(data => {\r\n                  this.tableData = data;\r\n                });\r\n              } else {\r\n                return false;\r\n              }\r\n            });\r\n          },0)\r\n        })\r\n      },\r\n      // 重置查询条件\r\n      initFormData(formName){\r\n        this.$refs[formName].resetFields();\r\n        this.cateArr = [];\r\n        this.formData.productType = '';\r\n        this.formData.lowerPriceLimit = '';\r\n        this.formData.priceCap = '';\r\n        this.formData.lowerInventoryLimit = '';\r\n        this.formData.inventoryCap = '';\r\n      },\r\n      // 获取选择商品\r\n      checkGoods(row){\r\n        this.tableDataCheckedRow = row;\r\n        let params = {\r\n          productCode: row.productCode,\r\n          storeId: row.storeId,\r\n          // relationDepId: row.relationDepId,\r\n          // 页码\r\n          pageIndex: 1,\r\n          // 每页数量\r\n          pageSize: 10000\r\n        };\r\n        this.request(this.api.scb.movingAveragePrice_list, params).then(data => {\r\n          if(data.data && data.data.length){\r\n            for(let n = 0; n < data.data.length; n++){\r\n              data.data[n].planBackQuantity = 0;\r\n              data.data[n].backUnitPrice = data.data[n].price;\r\n              if(this.checkedSKUTableData.length > 0){\r\n                for(let i = 0; i < this.checkedSKUTableData.length; i++){\r\n                  if(this.checkedSKUTableData[i].id === data.data[n].id){\r\n                    data.data[n].planBackQuantity = this.checkedSKUTableData[i].planBackQuantity;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          this.SKUTableData = data.data;\r\n          this.SKUDialog = true;\r\n        });\r\n      },\r\n      // 确认选择商品\r\n      checkGoodsSub(){\r\n        for(let i = 0; i < this.SKUTableData.length; i++){\r\n          let good = this.SKUTableData[i];\r\n          let checkedGood = this.checkedSKUTableData.find(item => {\r\n            return item.id === good.id;\r\n          });\r\n          if(checkedGood){\r\n            if(good.planBackQuantity === 0){\r\n              let index = this.checkedSKUTableData.find(item => {\r\n                return item.id === good.id;\r\n              });\r\n              this.checkedSKUTableData.splice(index, 1)\r\n            }else {\r\n              checkedGood.planBackQuantity = good.planBackQuantity;\r\n            }\r\n          }else if(!checkedGood && good.planBackQuantity > 0){\r\n            this.SKUTableData[i].designCompanyName = this.tableDataCheckedRow.designCompanyName;\r\n            this.SKUTableData[i].designCompanyCode = this.tableDataCheckedRow.designCompanyCode;\r\n            this.checkedSKUTableData.push(this.SKUTableData[i]);\r\n          }\r\n        }\r\n        // 计算总价\r\n        this.checkedTotalPrice();\r\n        this.SKUDialog = false;\r\n      },\r\n      // 类型切换\r\n      handleBeforeClick(activeName) {\r\n        if(activeName === 'store'){\r\n          this.getStoreInfo();\r\n        }\r\n        if(activeName === 'goods'){\r\n          this.getStoreTags();\r\n        }\r\n      },\r\n      // 计算总价\r\n      checkedTotalPrice(){\r\n        this.checkedSKUTotal = 0;\r\n        this.checkedSKUTotalPrice = 0;\r\n        if(this.checkedSKUTableData.length){\r\n          this.checkedSKUTableData.forEach(item => {\r\n            this.checkedSKUTotalPrice += Number(item.backUnitPrice) * Number(item.planBackQuantity);\r\n            this.checkedSKUTotal += item.planBackQuantity;\r\n          });\r\n        }\r\n        this.checkedSKUTotalPrice = this.checkedSKUTotalPrice.toFixed(2)\r\n      },\r\n      // 获取更多标签\r\n      getMoreTags() {},\r\n      // 最终提交\r\n      finalSub(){\r\n        if(!this.checkedSKUTableData.length){\r\n          return\r\n        }\r\n        this.backGoodsInfo.returnProductList = [];\r\n        this.backGoodsInfo.totalPrice = this.checkedSKUTotalPrice;\r\n        let goodsNum = 0;\r\n        this.checkedSKUTableData.forEach(item => {\r\n          let obj = {\r\n            // 货品编码\r\n            goodsCode: item.goodsCode,\r\n            // 货品名称\r\n            goodsName: item.goodsName,\r\n            // 商品(spu)编码\r\n            productCode: item.productCode,\r\n            // 商品类型\r\n            productType: item.productType,\r\n            // 商品图片\r\n            image: item.image,\r\n            // 品牌\r\n            brandName: item.brandName,\r\n            brandCode: item.brandCode,\r\n            // 设计商\r\n            designCompanyName: item.designCompanyName,\r\n            designCompanyCode: item.designCompanyCode,\r\n            // 尺码\r\n            size: item.size,\r\n            // 颜色\r\n            color: item.color,\r\n            // 颜色色系\r\n            colorSeries: item.colorSeries,\r\n            // 吊牌价\r\n            retailPrice: item.price,\r\n            // 返货单价\r\n            backUnitPrice: item.backUnitPrice,\r\n            // 数量\r\n            planBackQuantity: item.planBackQuantity\r\n          };\r\n          this.backGoodsInfo.returnProductList.push(obj);\r\n          goodsNum += item.planBackQuantity;\r\n        });\r\n        this.backGoodsInfo.productNum = goodsNum;\r\n        this.request(this.api.order.returnGoods_keep, this.backGoodsInfo).then(data => {\r\n          this.$notify.success({ title: '成功',message: '新增成功'});\r\n          let module = '/' + this.$route.path.split('/')[1];\r\n          this.$router.push({\r\n            path: module + '/order/returnGoods_order'\r\n          })\r\n        });\r\n      },\r\n      /**\r\n       * 导入商品\r\n       * @param file 上传的文件\r\n       */\r\n      uploadGoodsChange(file){\r\n        let nameAry = file.name.split('.');\r\n        const str = nameAry[nameAry.length -1].toLowerCase();\r\n        // 判断类型\r\n        if (!str.match(/xlsx|xls/)) {\r\n          this.$message.error('文件格式只能是 xlsx | xls格式!');\r\n          return false\r\n        }\r\n        let formData = new FormData();\r\n        let token = getToken();\r\n        formData.set('file', file.raw );\r\n        formData.set('storeId', this.formData.storeId );\r\n        axios({\r\n          method: \"POST\",\r\n          url: this.api.FN_ALLPATH(this.api.retailStore.storeProduct_importOrderItem),\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n            accessToken: token\r\n          },\r\n          data: formData\r\n        }).then(res => {\r\n          let data = res.data;\r\n          // 合并导入的数据和已选择的数据\r\n          this.$notify.success({ title: '成功',message: '导入成功'});\r\n          if(data.code && data.code == 200){\r\n            let goodsData = data.data;\r\n            if(goodsData && goodsData.length > 0){\r\n              for(let n = 0; n < goodsData.length; n++){\r\n                let goodsIndex = this.checkedSKUTableData.findIndex(item => {\r\n                  return item.goodsCode === goodsData[n].goodsCode\r\n                });\r\n                if(goodsIndex !== -1){\r\n                  this.checkedSKUTableData[goodsIndex].quantity = goodsData[n].quantity + this.checkedSKUTableData[goodsIndex].quantity;\r\n                }else {\r\n                  goodsData[n].allotPrice = goodsData[n].retailPrice;\r\n                  this.checkedSKUTableData.push(goodsData[n])\r\n                }\r\n              }\r\n            }\r\n            this.checkedGoodsShow = true;\r\n            this.$nextTick(() => {\r\n              // this.$refs.transferSlipGoodsTable.init();\r\n            })\r\n          }else {\r\n            this.$notify.error({ title: '错误',message: data.message});\r\n          }\r\n        })\r\n\r\n      },\r\n      /**\r\n       * 搜索商品参数下拉数据及验证\r\n       */\r\n      // 验证价格区间\r\n      moneyRule(rule, value,callback) {\r\n        const reg = /^[0-9]*$/;\r\n        if(!reg.test(this.formData.lowerPriceLimit) || !reg.test(this.formData.priceCap)){\r\n          callback(new Error('价格区间必须是数字'));\r\n          return\r\n        }\r\n        if(this.formData.lowerPriceLimit && this.formData.priceCap && this.formData.lowerPriceLimit >= this.formData.priceCap){\r\n          callback(new Error('价格区间下限应小于上限'));\r\n        }else {\r\n          callback();\r\n        }\r\n      },\r\n      // 验证数量区间\r\n      countRule(rule, value,callback) {\r\n        const reg = /^[0-9]*$/;\r\n        if(!reg.test(this.formData.lowerInventoryLimit) || !reg.test(this.formData.inventoryCap)){\r\n          callback(new Error('库存量区间必须是数字'));\r\n          return\r\n        }\r\n        if(this.formData.lowerInventoryLimit && this.formData.inventoryCap && this.formData.lowerInventoryLimit >= this.formData.inventoryCap){\r\n          callback(new Error('库存量区间下限应小于上限'));\r\n        }else {\r\n          callback();\r\n        }\r\n      },\r\n      // 获取商品分类数据\r\n      getClassData(){\r\n        //分类类型（1：标准分类，2：定制分类，3：原料分类或者称为属性分类）\r\n        this.$common.getClassSelect(this,1).then(res =>{\r\n          this.classData=res.ztree;\r\n          this.classList=res.list;\r\n        })\r\n      },\r\n      // 商品分类Change\r\n      classChange(e){\r\n        if(e.length === 0){\r\n          this.formData.productType = '';\r\n          return;\r\n        }\r\n        let cateId  = JSON.parse(JSON.stringify(e)).pop();\r\n        let obj = this.classList.find((item)=>(item.id == cateId));\r\n        this.formData.productType = obj.fullCateName;\r\n      },\r\n      // 获取设计商\r\n      getDesignCompanyOptions(){\r\n        this.request(this.api.product.designCompany_list, {}).then(data => {\r\n          this.designCompanyOptions=data.data;\r\n        });\r\n      },\r\n      // 获取品牌\r\n      getBrandOptions(){\r\n        this.request(this.api.product.productBrand_list,{}).then(data => {\r\n          this.brandOptions= data.data;\r\n        });\r\n      }\r\n      /**\r\n       * 搜索商品参数下拉数据--end\r\n       */\r\n    },\r\n    // 计算属性\r\n    computed: {},\r\n    // 监听数据变化\r\n    watch: {}\r\n  }\r\n</script>\r\n"],"sourceRoot":"src/views/scb/order"}]}