{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\orders\\business\\purchaseReturn\\purchaseReturn_List.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\orders\\business\\purchaseReturn\\purchaseReturn_List.vue","mtime":1574989693438},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\EDZ\\\\Desktop\\\\\\u7814\\u53D1\\u9879\\u76EE\\\\vue-project\\\\trunk\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { constants } from \"crypto\";\nexport default {\n  data: function data() {\n    return {\n      signData: {\n        //订单类型\n        orderType: '0302',\n        searchKey: \"\",\n        //供应商值\n        supplierCodes: [],\n        //标记订单状态\n        businessStatusList: [],\n        //标记仓库收货状态\n        warehouseStatusList: [],\n        //标记是否核销\n        financialWriteOff: \"\",\n        startTime: \"\",\n        endTime: \"\",\n        //当前页数\n        pageIndex: 1,\n        //每页要显示的数据条数,默认10条\n        pageSize: 10\n      },\n      //记录总的条数\n      totalCount: 1,\n      //存储表格选择项改变时的数据\n      multipleSelectionData: [],\n      tableData: [],\n      //供应商数据\n      optionData: []\n    };\n  },\n  //过滤器\n  filters: {\n    //过滤订单状态\n    filterBusinessStatus: function filterBusinessStatus(val) {\n      switch (val) {\n        case \"13\":\n          return \"待处理\";\n          break;\n\n        case \"14\":\n          return \"已处理\";\n          break;\n\n        case \"15\":\n          return \"已作废\";\n          break;\n\n        default:\n          return \"--\";\n          break;\n      }\n    },\n    //过滤仓库收货状态\n    filterWarehouseStatus: function filterWarehouseStatus(val) {\n      switch (val) {\n        case \"1001\":\n          return \"未到货\";\n          break;\n\n        case \"1002\":\n          return \"部分到货\";\n          break;\n\n        case \"1003\":\n          return \"全部到货\";\n          break;\n\n        case \"1004\":\n          return \"超收到货\";\n          break;\n\n        default:\n          return \"--\";\n          break;\n      }\n    },\n    //过滤是否核销\n    filterFinancialWriteOff: function filterFinancialWriteOff(val) {\n      switch (val) {\n        case false:\n          return \"否\";\n          break;\n\n        case true:\n          return \"是\";\n          break;\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.getChannelReturnListData();\n    this.getWarehouseListData();\n  },\n  methods: {\n    //得到列表数据\n    getChannelReturnListData: function getChannelReturnListData() {\n      var _this = this;\n\n      this.request(this.api.order.channelRetundOrder_list, this.signData).then(function (data) {\n        _this.totalCount = data.totalCount;\n        _this.tableData = data.data;\n        console.log(data);\n      });\n    },\n    //得到组织机构数据\n    getWarehouseListData: function () {\n      var _getWarehouseListData = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var info;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.request(this.api.user.get_userinfo, {}, true);\n\n              case 2:\n                info = _context.sent;\n                console.log(info); //得到部门Id\n\n                this.signData.relationDepId = info.departId;\n                this.request(this.api.user.userCompany_getUserOrgByUserId, {\n                  userId: info.userId,\n                  type: 0\n                }).then(function (data) {\n                  //得到供货商Id\n                  _this2.getSupplierListData(data.id);\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getWarehouseListData() {\n        return _getWarehouseListData.apply(this, arguments);\n      }\n\n      return getWarehouseListData;\n    }(),\n    //得到供货商数据\n    getSupplierListData: function getSupplierListData(organizationId) {\n      var _this3 = this;\n\n      console.log(246);\n      this.request(this.api.product.supplier_list, {\n        organizationId: organizationId,\n        cooperation: true\n      }).then(function (data) {\n        console.log(data);\n        _this3.optionData = data.data;\n      });\n    },\n    //查询表单数据\n    searchFormData: function searchFormData(ref) {\n      var _this4 = this;\n\n      this.$refs[ref].validate(function (valid) {\n        console.log(valid);\n\n        if (valid) {\n          _this4.getChannelReturnListData();\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    },\n    //重置表单数据\n    resetFormData: function resetFormData(formData) {\n      console.log(this.$refs[formData]);\n      this.$refs[formData].resetFields();\n    },\n    //新增\n    addBtnClickEvent: function addBtnClickEvent() {\n      console.log(\"addBtnClickEvent\");\n      this.$router.push({\n        path: '/OS/business/purchaseReturn/purchaseReturn_add'\n      });\n      localStorage.setItem(\"type\", \"add\");\n    },\n    //导出\n    exportExcel: function exportExcel() {\n      var _this5 = this;\n\n      console.log(\"导出Excel表格...+++++++++++++++++++\");\n\n      require.ensure([], function () {\n        var _require = require(\"@/vendor/Export2Excel\"),\n            export_json_to_excel = _require.export_json_to_excel;\n\n        var tHeader = [\"采购退货单号\", \"单据状态\", \"供应商\", \"创建人\", \"创建时间\", \"采退总金额\", \"仓库出库状态\", \"财务是否核销\"]; // 上面设置Excel的表格第一行的标题\n\n        var filterVal = [\"returnSn\", \"businessStatusName\", \"supplier\", \"creator\", \"createTimeName\", \"amount\", \"warehouseStatusName\", \"financialWriteOffName\"]; // 上面的index、nickName、name是tableData里对象的属性\n\n        var list = _this5.multipleSelectionData; //把data里的multipleSelectionData存到list\n\n        var data = _this5.formatJson(filterVal, list);\n\n        export_json_to_excel(tHeader, data, \"采购退货表单\");\n      });\n    },\n    formatJson: function formatJson(filterVal, jsonData) {\n      return jsonData.map(function (v) {\n        return filterVal.map(function (j) {\n          return v[j];\n        });\n      });\n    },\n    //表格选择项改变时触发\n    selectionChange: function selectionChange(val) {\n      var _this6 = this;\n\n      val.forEach(function (item) {\n        item.businessStatusName = _this6.$options.filters.filterBusinessStatus(item.businessStatus);\n        item.createTimeName = _this6.$options.filters.timestampToTime(item.createTime);\n        item.warehouseStatusName = _this6.$options.filters.filterWarehouseStatus(item.warehouseStatus);\n        item.financialWriteOffName = _this6.$options.filters.filterFinancialWriteOff(item.financialWriteOff);\n      });\n      this.multipleSelectionData = val;\n    },\n    //查看Btn的事件\n    checkBtnClick: function checkBtnClick(row) {\n      console.log(\"checkBtnClick....\");\n      this.$router.push({\n        path: \"/OS/business/purchaseReturn/purchaseReturn_check\",\n        query: {\n          returnSn: row.returnSn\n        }\n      });\n    },\n    //修改Btn的事件\n    editorBtnClick: function editorBtnClick(row) {\n      console.log(\"editorBtnClick....\");\n    },\n    //作废Btn的事件\n    obsoleteBtnClick: function obsoleteBtnClick(row) {\n      var _this7 = this;\n\n      console.log(row);\n      this.request(this.api.order.channelReturnOrder_obsoleteByReturnSn, {\n        returnSn: row.returnSn,\n        goodsOwner: row.goodsOwner,\n        warehouseCode: row.warehouseCode\n      }).then(function (data) {\n        console.log(data); //刷新数据\n\n        _this7.getChannelReturnListData();\n      });\n    },\n    //每页条数改变时\n    handleSizeChange: function handleSizeChange(page) {\n      this.signData.pageSize = page;\n      this.getChannelReturnListData();\n    },\n    //当前页改变时\n    handleCurrentChange: function handleCurrentChange(page) {\n      this.signData.pageIndex = page;\n      this.getChannelReturnListData();\n    }\n  }\n};",{"version":3,"sources":["purchaseReturn_List.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"search_div\">\r\n      <el-form ref=\"formData\" :model=\"signData\" label-width=\"110px\" :inline=\"true\">\r\n        <el-form-item label=\"模糊查询：\" prop=\"searchKey\">\r\n          <el-input class=\"first-input\" v-model=\"signData.searchKey\" placeholder=\"采购退货单号/采购订单号/创建人\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"单据状态：\" prop=\"businessStatusList\">\r\n          <el-select v-model=\"signData.businessStatusList\" placeholder=\"请选择\" multiple>\r\n            <el-option label=\"待处理\" value=\"13\"></el-option>\r\n            <el-option label=\"已处理\" value=\"14\"></el-option>\r\n            <el-option label=\"已作废\" value=\"15\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"供应商：\" prop=\"supplierCodes\" label-width=\"140px\">\r\n          <el-select class=\"input-w\" placeholder=\"请选择\" v-model=\"signData.supplierCodes\" multiple>\r\n            <el-option\r\n                v-for=\"item in optionData\"\r\n                :key=\"item.id\"\r\n                :label=\"item.name\"\r\n                :value=\"item.code\"\r\n            ></el-option>\r\n              </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"出库状态：\" prop=\"warehouseStatusList\" label-width=\"140px\">\r\n          <el-select v-model=\"signData.warehouseStatusList\" placeholder=\"请选择\" multiple>\r\n            <el-option label=\"未到货\" value=\"1001\"></el-option>\r\n            <el-option label=\"部分到货\" value=\"1002\"></el-option>\r\n            <el-option label=\"全部到货\" value=\"1003\"></el-option>\r\n            <el-option label=\"超收到货\" value=\"1004\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"创建时间：\" prop=\"startTime\">\r\n          <el-date-picker v-model=\"signData.startTime\" type=\"date\" placeholder=\"选择日期\"></el-date-picker>\r\n        </el-form-item>\r\n        <el-form-item prop=\"endTime\">\r\n          <el-date-picker v-model=\"signData.endTime\" type=\"date\" placeholder=\"选择日期\"></el-date-picker>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"searchFormData('formData')\" size=\"small\">查询</el-button>\r\n          <el-button @click=\"resetFormData('formData')\" size=\"small\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n    <div class=\"table_div\">\r\n      <el-button type=\"primary\" @click=\"addBtnClickEvent\" size=\"small\">新增</el-button>\r\n      <el-button\r\n        :disabled=\"multipleSelectionData.length==0\"\r\n        plain\r\n        @click=\"exportExcel\"\r\n        size=\"small\"\r\n      >导出</el-button>\r\n      <el-table\r\n        ref=\"multipleTable\"\r\n        :data=\"tableData\"\r\n        tooltip-effect=\"dark\"\r\n        style=\"width: 100%\"\r\n        header-row-class-name=\"item-table-header\"\r\n        @selection-change=\"selectionChange\"\r\n      >\r\n        <el-table-column type=\"selection\" width=\"55\"></el-table-column>\r\n        <el-table-column width=\"210\" label=\"采购退货单号\">\r\n          <template slot-scope=\"scope\">{{ scope.row.returnSn }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"businessStatus\" label=\"单据状态\">\r\n          <template slot-scope=\"scope\">{{ scope.row.businessStatus | filterBusinessStatus }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"supplier\" label=\"供应商\"></el-table-column>\r\n        <el-table-column prop=\"creator\" label=\"创建人\">\r\n          <template slot-scope=\"scope\">{{ scope.row.creator ? scope.row.creator : '--'}}</template>\r\n        </el-table-column>\r\n        <el-table-column label=\"创建时间\">\r\n          <template slot-scope=\"scope\">{{ scope.row.createTime | timestampToTime }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"amount\" label=\"采退总金额\">\r\n          <template slot-scope=\"scope\">{{ scope.row.amount ? scope.row.amount : '--'}}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"warehouseStatus\" label=\"仓库出库状态\">\r\n          <template slot-scope=\"scope\">{{ scope.row.warehouseStatus | filterWarehouseStatus }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"financialWriteOff\" label=\"财务是否核销\" align=\"center\">\r\n          <template slot-scope=\"scope\">{{ scope.row.financialWriteOff | filterFinancialWriteOff }}</template>\r\n        </el-table-column>\r\n        <el-table-column fixed=\"right\" label=\"操作\" width=\"160\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button @click=\"checkBtnClick(scope.row)\" type=\"text\" size=\"small\">查看</el-button>\r\n            <!-- <el-button\r\n              :disabled=\"scope.row.orderStatus!=0\"\r\n              @click=\"editorBtnClick(scope.row)\"\r\n              type=\"text\"\r\n              size=\"small\"\r\n            >修改</el-button> -->\r\n            <el-button\r\n              :disabled=\"scope.row.businessStatus!='13'\"\r\n              @click=\"obsoleteBtnClick(scope.row)\"\r\n              type=\"text\"\r\n              size=\"small\"\r\n            >作废</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <div style=\"margin-top:20px;padding-bottom:10px;margin-right:20px;\">\r\n        <el-pagination\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page.sync=\"signData.pageIndex\"\r\n          :page-sizes=\"[10, 20, 30, 40]\"\r\n          :page-size=\"signData.pageSize\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"totalCount\"\r\n        ></el-pagination>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { constants } from \"crypto\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      signData: {\r\n        //订单类型\r\n        orderType:'0302',\r\n        searchKey: \"\",\r\n        //供应商值\r\n        supplierCodes:[],\r\n        //标记订单状态\r\n        businessStatusList: [],\r\n        //标记仓库收货状态\r\n        warehouseStatusList: [],\r\n        //标记是否核销\r\n        financialWriteOff: \"\",\r\n        startTime: \"\",\r\n        endTime: \"\",\r\n        //当前页数\r\n        pageIndex: 1,\r\n        //每页要显示的数据条数,默认10条\r\n        pageSize: 10\r\n      },\r\n      //记录总的条数\r\n      totalCount:1,\r\n      //存储表格选择项改变时的数据\r\n      multipleSelectionData: [],\r\n      tableData: [],\r\n      //供应商数据\r\n      optionData:[]\r\n    };\r\n  },\r\n  //过滤器\r\n  filters: {\r\n    //过滤订单状态\r\n    filterBusinessStatus(val) {\r\n      switch (val) {\r\n        case \"13\":\r\n          return \"待处理\";\r\n          break;\r\n        case \"14\":\r\n          return \"已处理\";\r\n          break;\r\n        case \"15\":\r\n          return \"已作废\";\r\n          break;\r\n        default:\r\n          return \"--\";\r\n          break;\r\n      }\r\n    },\r\n    //过滤仓库收货状态\r\n    filterWarehouseStatus(val) {\r\n      switch (val) {\r\n        case \"1001\":\r\n          return \"未到货\";\r\n          break;\r\n        case \"1002\":\r\n          return \"部分到货\";\r\n          break;\r\n        case \"1003\":\r\n          return \"全部到货\";\r\n          break;\r\n        case \"1004\":\r\n          return \"超收到货\";\r\n          break;\r\n        default:\r\n          return \"--\";\r\n          break;\r\n      }\r\n    },\r\n    //过滤是否核销\r\n    filterFinancialWriteOff(val) {\r\n      switch (val) {\r\n        case false:\r\n          return \"否\";\r\n          break;\r\n        case true:\r\n          return \"是\";\r\n          break;\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getChannelReturnListData()\r\n    this.getWarehouseListData()\r\n  },\r\n  methods: {\r\n    //得到列表数据\r\n    getChannelReturnListData(){\r\n      this.request(this.api.order.channelRetundOrder_list,this.signData).then(data=>{\r\n        this.totalCount=data.totalCount\r\n        this.tableData=data.data\r\n        console.log(data)\r\n      })\r\n    },\r\n    //得到组织机构数据\r\n    async getWarehouseListData() {\r\n      let info = await this.request(this.api.user.get_userinfo, {}, true);\r\n      console.log(info);\r\n      //得到部门Id\r\n      this.signData.relationDepId = info.departId;\r\n\r\n      this.request(this.api.user.userCompany_getUserOrgByUserId, {\r\n        userId: info.userId,\r\n        type: 0\r\n      }).then(data => {\r\n        //得到供货商Id\r\n        this.getSupplierListData(data.id)\r\n      });\r\n    },\r\n    //得到供货商数据\r\n    getSupplierListData(organizationId) {\r\n      console.log(246);\r\n      this.request(this.api.product.supplier_list, {organizationId:organizationId,cooperation:true}).then(data => {\r\n        console.log(data);\r\n        this.optionData = data.data;\r\n      });\r\n    },\r\n    //查询表单数据\r\n    searchFormData(ref) {\r\n      this.$refs[ref].validate(valid => {\r\n        console.log(valid);\r\n        if (valid) {\r\n          this.getChannelReturnListData()\r\n        } else {\r\n          console.log(\"error submit!!\");\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    //重置表单数据\r\n    resetFormData(formData) {\r\n      console.log(this.$refs[formData]);\r\n      this.$refs[formData].resetFields();\r\n    },\r\n    //新增\r\n    addBtnClickEvent() {\r\n      console.log(\"addBtnClickEvent\");\r\n      this.$router.push({\r\n        path:'/OS/business/purchaseReturn/purchaseReturn_add'\r\n      })\r\n      localStorage.setItem(\"type\", \"add\");\r\n    },\r\n    //导出\r\n    exportExcel() {\r\n      console.log(\"导出Excel表格...+++++++++++++++++++\");\r\n      require.ensure([], () => {\r\n        let { export_json_to_excel } = require(\"@/vendor/Export2Excel\");\r\n        let tHeader = [\r\n          \"采购退货单号\",\r\n          \"单据状态\",\r\n          \"供应商\",\r\n          \"创建人\",\r\n          \"创建时间\",\r\n          \"采退总金额\",\r\n          \"仓库出库状态\",\r\n          \"财务是否核销\"\r\n        ];\r\n        // 上面设置Excel的表格第一行的标题\r\n        let filterVal = [\r\n          \"returnSn\",\r\n          \"businessStatusName\",\r\n          \"supplier\",\r\n          \"creator\",\r\n          \"createTimeName\",\r\n          \"amount\",\r\n          \"warehouseStatusName\",\r\n          \"financialWriteOffName\"\r\n        ];\r\n        // 上面的index、nickName、name是tableData里对象的属性\r\n        let list = this.multipleSelectionData; //把data里的multipleSelectionData存到list\r\n        let data = this.formatJson(filterVal, list);\r\n        export_json_to_excel(tHeader, data, \"采购退货表单\");\r\n      });\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => v[j]));\r\n    },\r\n    //表格选择项改变时触发\r\n    selectionChange(val) {\r\n      val.forEach(item => {\r\n        item.businessStatusName=this.$options.filters.filterBusinessStatus(item.businessStatus)\r\n        item.createTimeName=this.$options.filters.timestampToTime(item.createTime)\r\n        item.warehouseStatusName=this.$options.filters.filterWarehouseStatus(item.warehouseStatus)\r\n        item.financialWriteOffName=this.$options.filters.filterFinancialWriteOff(item.financialWriteOff)\r\n      })\r\n      this.multipleSelectionData = val;\r\n    },\r\n    //查看Btn的事件\r\n    checkBtnClick(row) {\r\n      console.log(\"checkBtnClick....\");\r\n      this.$router.push({\r\n        path:\"/OS/business/purchaseReturn/purchaseReturn_check\",\r\n        query:{\r\n          returnSn:row.returnSn\r\n        }\r\n      })\r\n    },\r\n    //修改Btn的事件\r\n    editorBtnClick(row) {\r\n      console.log(\"editorBtnClick....\");\r\n    },\r\n    //作废Btn的事件\r\n    obsoleteBtnClick(row) {\r\n      console.log(row)\r\n      this.request(this.api.order.channelReturnOrder_obsoleteByReturnSn,{\r\n        returnSn:row.returnSn,\r\n        goodsOwner:row.goodsOwner,\r\n        warehouseCode:row.warehouseCode\r\n      }).then(data=>{\r\n        console.log(data)\r\n        //刷新数据\r\n        this.getChannelReturnListData();\r\n      })\r\n    },\r\n    //每页条数改变时\r\n    handleSizeChange(page) {\r\n      this.signData.pageSize = page;\r\n      this.getChannelReturnListData()\r\n    },\r\n    //当前页改变时\r\n    handleCurrentChange(page) {\r\n      this.signData.pageIndex = page;\r\n      this.getChannelReturnListData()\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.search_div {\r\n  margin: 0 10px;\r\n  padding-top: 20px;\r\n  background-color: #fff;\r\n  .first-input {\r\n    width: 300px;\r\n  }\r\n}\r\n.table_div {\r\n  margin: 10px;\r\n  background-color: #fff;\r\n  padding-top: 20px;\r\n  padding-left: 10px;\r\n}\r\n</style>\r\n\r\n\r\n\r\n"],"sourceRoot":"src/views/orders/business/purchaseReturn"}]}