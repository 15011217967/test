{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\content\\manage\\content_manage.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\content\\manage\\content_manage.vue","mtime":1574160264883},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport PageTable from '@/views/content/components/PageTable.vue';\nimport { timestampToTime } from '@/utils/util';\nexport default {\n  name: 'content_manage',\n  // 数据\n  data: function data() {\n    return {\n      // 状态\n      timingStatus: {\n        8: {\n          name: '全部',\n          type: 'success'\n        },\n        2: {\n          name: '已发布',\n          type: ''\n        },\n        1: {\n          name: '待发布',\n          type: ''\n        },\n        5: {\n          name: '发布中',\n          type: ''\n        },\n        3: {\n          name: '未通过',\n          type: 'warning'\n        },\n        4: {\n          name: '已下线',\n          type: 'info'\n        },\n        0: {\n          name: '草稿箱',\n          type: 'info'\n        }\n      },\n      // 类型默认选中\n      typeActiveIndex: '4',\n      // 状态默认选中\n      stateActiveIndex: '8',\n      // 分类数据\n      categoryTreeList: [],\n      // 分类映射\n      categoryTreeListProps: {\n        value: 'id',\n        label: 'name',\n        children: 'children',\n        expandTrigger: 'hover'\n      },\n      // 表格数据\n      tableData: {},\n      formData: {\n        pageIndex: 1,\n        pageSize: 10,\n        contentType: 4,\n        contentStatus: '',\n        title: '',\n        contentCategory: [],\n        contentCategoryId: ''\n      }\n    };\n  },\n  // 组件\n  components: {\n    PageTable: PageTable\n  },\n  // 初始化数据\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      _this.getCategoryTreeList();\n\n      _this.getData();\n    });\n  },\n  // keepAlive 页面显示时\n  activated: function activated() {\n    this.getData();\n  },\n  // 方法\n  methods: {\n    init: function init() {},\n    initFormData: function initFormData() {\n      this.formData.title = '';\n      this.formData.contentCategory = [];\n    },\n    // 点击搜索\n    searchTableData: function searchTableData() {\n      this.formData.pageIndex = 1;\n      this.getData();\n    },\n    // 获取数据\n    getData: function getData() {\n      var _this2 = this;\n\n      this.formData.contentCategoryId = this.formData.contentCategory[this.formData.contentCategory.length - 1]; // 待发布多种状态 单独接口\n\n      if (this.formData.contentStatus === '1') {\n        this.request(this.api.contentCore.not_active_list, this.formData).then(function (data) {\n          if (data.data && data.data.length) {\n            _this2.tableDataInit(data);\n\n            _this2.tableData = data;\n          } else {\n            _this2.tableData = {};\n          }\n        });\n        return;\n      }\n\n      this.request(this.api.contentCore.content_list, this.formData).then(function (data) {\n        if (data.data && data.data.length) {\n          _this2.tableDataInit(data);\n\n          _this2.tableData = data;\n        } else {\n          _this2.tableData = {};\n        }\n      });\n    },\n    // table数据格式化\n    tableDataInit: function tableDataInit(data) {\n      data.data.forEach(function (item) {\n        if (item.showIdentifier) {\n          var showIdentifier = item.showIdentifier;\n\n          if (showIdentifier.indexOf('$') > -1) {\n            // 获取最后一个分类\n            var items = showIdentifier.split('$')[showIdentifier.split('$').length - 1];\n\n            if (items.split('&').length > 2) {\n              item._categoryName = items.split('&')[items.split('&').length - 1];\n            } else {\n              item._categoryName = null;\n            }\n          } else {\n            if (showIdentifier.split('&').length > 2) {\n              item._categoryName = showIdentifier.split('&')[showIdentifier.split('&').length - 1];\n            } else {\n              item._categoryName = null;\n            }\n          }\n        } else {\n          item._categoryName = null;\n        }\n      });\n    },\n    // 编辑\n    itemEdit: function itemEdit(row) {\n      this.$router.push({\n        path: '/content/create/release',\n        query: {\n          id: row.id\n        }\n      });\n    },\n    // 删除\n    itemDel: function itemDel(row) {\n      var _this3 = this;\n\n      this.$confirm('确认删除吗？', '删除', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        showClose: false\n      }).then(function () {\n        _this3.request(_this3.api.contentCore.content_delete, row).then(function (data) {\n          _this3.$notify.success({\n            title: '成功',\n            message: '删除成功'\n          });\n\n          _this3.getData();\n        });\n      }).catch(function () {});\n    },\n    // 查看评论\n    seeComment: function seeComment(row) {\n      this.$router.push({\n        path: '/content/manage/Comment',\n        query: {\n          id: row.id,\n          title: row.title\n        }\n      });\n    },\n    // 查看分析\n    seeAnalysis: function seeAnalysis(row) {},\n    // 强制下线\n    itemOffline: function itemOffline(row) {\n      var _this4 = this;\n\n      this.$confirm('确认下线吗？', '下线', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        showClose: false\n      }).then(function () {\n        row.contentStatus = 4;\n\n        _this4.request(_this4.api.contentCore.content_offline, row).then(function (data) {\n          _this4.$notify.success({\n            title: '成功',\n            message: '下线成功'\n          });\n\n          _this4.getData();\n        });\n      }).catch(function () {});\n    },\n    // 置顶\n    itemTop: function itemTop(row) {\n      var _this5 = this;\n\n      this.$confirm('确认置顶吗？', '置顶', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        showClose: false\n      }).then(function () {\n        row.top = 1;\n\n        _this5.request(_this5.api.contentCore.content_top, row).then(function (data) {\n          _this5.$notify.success({\n            title: '成功',\n            message: '置顶成功'\n          });\n\n          _this5.getData();\n        });\n      }).catch(function () {});\n    },\n    // 取消置顶\n    itemTopOut: function itemTopOut(row) {\n      var _this6 = this;\n\n      this.$confirm('取消置顶吗？', '置顶', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        showClose: false\n      }).then(function () {\n        row.top = 0;\n\n        _this6.request(_this6.api.contentCore.content_top, row).then(function (data) {\n          _this6.$notify.success({\n            title: '成功',\n            message: '取消置顶成功'\n          });\n\n          _this6.getData();\n        });\n      }).catch(function () {});\n    },\n    // 类型切换\n    typeActiveSelect: function typeActiveSelect(index, indexPath, event) {\n      this.formData.pageIndex = 1;\n      this.formData.contentType = index;\n      this.getData();\n    },\n    // 状态切换\n    stateActiveSelect: function stateActiveSelect(index, indexPath, event) {\n      this.formData.pageIndex = 1; // 等于4时   为全部\n\n      if (index === '8') {\n        this.formData.contentStatus = '';\n      } else {\n        this.formData.contentStatus = index;\n      }\n\n      this.getData();\n    },\n    // 获取分类tree\n    getCategoryTreeList: function getCategoryTreeList() {\n      var _this7 = this;\n\n      this.request(this.api.contentCore.category_tree_list, {\n        contentType: this.formData.contentType\n      }).then(function (data) {\n        if (data && data.length) {\n          _this7.categoryTreeListInit(data);\n\n          _this7.categoryTreeList = data;\n        }\n      });\n    },\n    // 初始分类数据\n    categoryTreeListInit: function categoryTreeListInit(data) {\n      var _this8 = this;\n\n      if (data && data.length) {\n        data.forEach(function (item) {\n          if (item.children) {\n            if (item.children.length === 0) {\n              delete item.children;\n            } else {\n              _this8.categoryTreeListInit(item.children);\n            }\n          }\n        });\n      }\n    },\n    //\n    // 强制下线\n    auditOffline: function auditOffline(row) {\n      var _this9 = this;\n\n      this.$confirm('确认强制下线吗？', '强制下线', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        showClose: false\n      }).then(function () {\n        _this9.request(_this9.api.contentCore.audit_offline, {\n          id: row.id\n        }).then(function (data) {\n          _this9.$notify.success({\n            title: '成功',\n            message: '强制下线成功'\n          });\n\n          _this9.getData();\n        });\n      }).catch(function () {});\n    }\n  },\n  // 计算属性\n  computed: {},\n  // 监听数据变化\n  watch: {}\n};",{"version":3,"sources":["content_manage.vue"],"names":[],"mappings":"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","sourcesContent":["<style lang=\"less\" scoped>\r\n  @import \"../style/contentPublic.less\";\r\n  .content-manage{\r\n    .page-main-inner{\r\n      .menu-small{position: relative;}\r\n      .form-data{position: absolute;right: 20px;top: 4px;}\r\n      .table-img{width: 100px;height: 100px;}\r\n      .info-list{\r\n        li{float: left;margin-right: 20px;}\r\n      }\r\n      .state-flag{\r\n        .el-tag.el-tag--mini{float: right;}\r\n      }\r\n      .table-reason{color: #e6a23c;}\r\n    }\r\n  }\r\n</style>\r\n<template>\r\n  <div class=\"content-manage page-public\">\r\n    <div class=\"page-main\">\r\n      <div class=\"page-main-inner item-margin\">\r\n        <el-menu :default-active=\"typeActiveIndex\" class=\"el-menu-demo page-menu-border\" mode=\"horizontal\" @select=\"typeActiveSelect\">\r\n          <el-menu-item index=\"4\">文章</el-menu-item>\r\n          <el-menu-item index=\"3\">图集</el-menu-item>\r\n          <el-menu-item index=\"2\">小视频</el-menu-item>\r\n          <el-menu-item index=\"1\">视频</el-menu-item>\r\n        </el-menu>\r\n        <div class=\"menu-small\">\r\n          <el-menu :default-active=\"stateActiveIndex\" class=\"el-menu-demo\" mode=\"horizontal\" @select=\"stateActiveSelect\">\r\n            <el-menu-item index=\"8\">全部</el-menu-item>\r\n            <el-menu-item index=\"2\">已发布</el-menu-item>\r\n            <el-menu-item index=\"1\">待发布</el-menu-item>\r\n            <el-menu-item index=\"3\">未通过</el-menu-item>\r\n            <el-menu-item index=\"4\">已下线</el-menu-item>\r\n            <el-menu-item index=\"0\">草稿箱</el-menu-item>\r\n            <div class=\"form-data\">\r\n              <el-form :inline=\"true\" :model=\"formData\" class=\"demo-form-inline\" size=\"small\" ref=\"form\">\r\n                <el-form-item label=\"\">\r\n                  <el-input v-model=\"formData.title\" placeholder=\"请输入关键字搜索内容\" suffix-icon=\"el-icon-search\" @keyup.13.native=\"searchTableData\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"内容分类：\">\r\n                  <el-cascader :options=\"categoryTreeList\" v-model=\"formData.contentCategory\" :props=\"categoryTreeListProps\" :show-all-levels=\"false\" clearable>\r\n                  </el-cascader>\r\n                </el-form-item>\r\n                <el-form-item>\r\n                  <el-button type=\"primary\" @click=\"searchTableData\" size=\"small\" plain>搜索</el-button>\r\n                  <el-button @click=\"initFormData\" size=\"small\" plain>重置</el-button>\r\n                </el-form-item>\r\n              </el-form>\r\n            </div>\r\n          </el-menu>\r\n        </div>\r\n        <page-table :form-data=\"formData\" :get-data=\"getData\" :table-data=\"tableData\">\r\n          <el-table :data=\"tableData.data\" style=\"width: 100%\" :show-header=\"false\">\r\n            <el-table-column label=\"\"  width=\"120\">\r\n              <template slot-scope=\"scope\">\r\n                <img :src=\"scope.row.coverList[0].url\" alt=\"\" class=\"table-img\" v-if=\"scope.row.coverList.length\">\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"\">\r\n              <template slot-scope=\"scope\">\r\n                <!--@click=\"itemEdit(scope.row)\"-->\r\n                <h6 >{{scope.row.title}}\r\n                  <el-tag size=\"mini\" type=\"danger\" v-if=\"scope.row.top === 1\">置顶</el-tag>\r\n                </h6>\r\n                <p>{{ scope.row.createTime | timestampToTime }} <span v-show=\"scope.row._categoryName\">分类：{{ scope.row._categoryName }}</span></p>\r\n                <p v-if=\"scope.row.contentStatus === 3 && scope.row.reason\" class=\"table-reason\">驳回理由：<span>{{ scope.row.reason }}</span></p>\r\n                <ul class=\"info-list\" v-if=\"scope.row.count\">\r\n                  <li>阅读：{{ scope.row.count.readCount }}</li>\r\n                  <li>评论：{{ scope.row.count.commentCount }}</li>\r\n                  <li>点赞：{{ scope.row.count.praiseCount }}</li>\r\n                  <li>收藏：{{ scope.row.count.collectCount }}</li>\r\n                </ul>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\" width=\"300\">\r\n              <template slot-scope=\"scope\">\r\n                <div class=\"state-flag clearfix\">\r\n                  <el-tag size=\"mini\" :type=\"timingStatus[scope.row.contentStatus].type\" v-if=\"scope.row.contentStatus.toString()\">{{ timingStatus[scope.row.contentStatus].name }}</el-tag>\r\n                </div>\r\n                <el-button type=\"text\" size=\"small\" @click=\"itemEdit(scope.row)\" v-if=\"scope.row.contentStatus === 4 || scope.row.contentStatus === 0 || scope.row.contentStatus === 3  ||  (scope.row.contentStatus === 2 && scope.row.isTime)\">编辑</el-button>\r\n                <el-button type=\"text\" size=\"small\" @click=\"itemDel(scope.row)\" v-if=\"scope.row.contentStatus === 4 || scope.row.contentStatus === 0 || scope.row.contentStatus === 3  ||  (scope.row.contentStatus === 2 && scope.row.isTime)\">删除</el-button>\r\n                <el-button type=\"text\" size=\"small\" @click=\"seeComment(scope.row)\" v-if=\"scope.row.contentStatus === 2 || scope.row.contentStatus === 4\">查看评论</el-button>\r\n                <!--<el-button type=\"text\" size=\"small\" @click=\"seeAnalysis(scope.row)\" v-if=\"scope.row.contentStatus === 2 || scope.row.contentStatus === 4\">数据分析</el-button>-->\r\n                <el-button type=\"text\" size=\"small\" @click=\"itemOffline(scope.row)\" v-if=\"scope.row.contentStatus === 2\">下线</el-button>\r\n                <el-button type=\"text\" size=\"small\" @click=\"itemTop(scope.row)\" v-if=\"scope.row.contentStatus === 2 && !scope.row.top \">置顶</el-button>\r\n                <el-button type=\"text\" size=\"small\" @click=\"itemTopOut(scope.row)\" v-if=\"scope.row.contentStatus === 2 && scope.row.top === 1\">取消置顶</el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </page-table>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n  import PageTable from '@/views/content/components/PageTable.vue'\r\n  import { timestampToTime } from '@/utils/util'\r\n  export default {\r\n    name: 'content_manage',\r\n    // 数据\r\n    data() {\r\n      return {\r\n        // 状态\r\n        timingStatus: {\r\n          8: {name:'全部', type: 'success'},\r\n          2: {name: '已发布', type: ''},\r\n          1: {name:'待发布', type: ''},\r\n          5: {name:'发布中', type: ''},\r\n          3: {name:'未通过', type: 'warning'},\r\n          4: {name:'已下线', type: 'info'},\r\n          0: {name:'草稿箱', type: 'info'}\r\n        },\r\n        // 类型默认选中\r\n        typeActiveIndex:'4',\r\n        // 状态默认选中\r\n        stateActiveIndex: '8',\r\n        // 分类数据\r\n        categoryTreeList: [],\r\n        // 分类映射\r\n        categoryTreeListProps:{\r\n          value: 'id',\r\n          label: 'name',\r\n          children: 'children',\r\n          expandTrigger: 'hover'\r\n        },\r\n        // 表格数据\r\n        tableData: {},\r\n        formData: {\r\n          pageIndex: 1,\r\n          pageSize: 10,\r\n          contentType: 4,\r\n          contentStatus: '',\r\n          title: '',\r\n          contentCategory: [],\r\n          contentCategoryId: ''\r\n        }\r\n      }\r\n    },\r\n    // 组件\r\n    components: {\r\n      PageTable\r\n    },\r\n    // 初始化数据\r\n    mounted() {\r\n      this.$nextTick(() => {\r\n        this.getCategoryTreeList()\r\n        this.getData()\r\n      })\r\n    },\r\n    // keepAlive 页面显示时\r\n    activated() {\r\n      this.getData();\r\n    },\r\n    // 方法\r\n    methods: {\r\n      init(){\r\n\r\n      },\r\n      initFormData(){\r\n        this.formData.title = ''\r\n        this.formData.contentCategory = []\r\n      },\r\n      // 点击搜索\r\n      searchTableData(){\r\n        this.formData.pageIndex = 1;\r\n        this.getData();\r\n      },\r\n      // 获取数据\r\n      getData(){\r\n        this.formData.contentCategoryId = this.formData.contentCategory[this.formData.contentCategory.length - 1]\r\n        // 待发布多种状态 单独接口\r\n        if(this.formData.contentStatus === '1'){\r\n          this.request(this.api.contentCore.not_active_list, this.formData).then(data => {\r\n            if(data.data && data.data.length){\r\n              this.tableDataInit(data)\r\n              this.tableData = data\r\n            }else {\r\n              this.tableData = {}\r\n            }\r\n          })\r\n          return\r\n        }\r\n        this.request(this.api.contentCore.content_list, this.formData).then(data => {\r\n          if(data.data && data.data.length){\r\n            this.tableDataInit(data)\r\n            this.tableData = data\r\n          }else {\r\n            this.tableData = {}\r\n          }\r\n        })\r\n      },\r\n      // table数据格式化\r\n      tableDataInit(data){\r\n        data.data.forEach(item => {\r\n          if(item.showIdentifier){\r\n            let showIdentifier = item.showIdentifier\r\n            if(showIdentifier.indexOf('$') > -1){\r\n              // 获取最后一个分类\r\n              let items = showIdentifier.split('$')[showIdentifier.split('$').length - 1]\r\n              if(items.split('&').length > 2){\r\n                item._categoryName = items.split('&')[items.split('&').length - 1]\r\n              }else{\r\n                item._categoryName = null\r\n              }\r\n            }else {\r\n              if(showIdentifier.split('&').length > 2){\r\n                item._categoryName = showIdentifier.split('&')[showIdentifier.split('&').length - 1]\r\n              }else{\r\n                item._categoryName = null\r\n              }\r\n            }\r\n          }else {\r\n            item._categoryName = null\r\n          }\r\n\r\n        })\r\n      },\r\n      // 编辑\r\n      itemEdit(row){\r\n        this.$router.push({\r\n          path:'/content/create/release',\r\n          query: {\r\n            id: row.id\r\n          }\r\n        });\r\n      },\r\n      // 删除\r\n      itemDel(row){\r\n        this.$confirm('确认删除吗？', '删除', {\r\n          confirmButtonText: '确认',\r\n          cancelButtonText: '取消',\r\n          showClose:false\r\n        }).then(() => {\r\n          this.request(this.api.contentCore.content_delete, row).then(data => {\r\n            this.$notify.success({ title: '成功',message: '删除成功'})\r\n            this.getData()\r\n          });\r\n        }).catch(() => {\r\n        });\r\n      },\r\n      // 查看评论\r\n      seeComment(row){\r\n        this.$router.push({\r\n          path:'/content/manage/Comment',\r\n          query: {\r\n            id: row.id,\r\n            title: row.title\r\n          }\r\n        });\r\n      },\r\n      // 查看分析\r\n      seeAnalysis(row){\r\n\r\n      },\r\n      // 强制下线\r\n      itemOffline(row){\r\n        this.$confirm('确认下线吗？', '下线', {\r\n          confirmButtonText: '确认',\r\n          cancelButtonText: '取消',\r\n          showClose:false\r\n        }).then(() => {\r\n          row.contentStatus = 4\r\n          this.request(this.api.contentCore.content_offline, row).then(data => {\r\n            this.$notify.success({ title: '成功',message: '下线成功'})\r\n            this.getData()\r\n          });\r\n        }).catch(() => {\r\n        });\r\n      },\r\n      // 置顶\r\n      itemTop(row){\r\n        this.$confirm('确认置顶吗？', '置顶', {\r\n          confirmButtonText: '确认',\r\n          cancelButtonText: '取消',\r\n          showClose:false\r\n        }).then(() => {\r\n          row.top = 1\r\n          this.request(this.api.contentCore.content_top, row).then(data => {\r\n            this.$notify.success({ title: '成功',message: '置顶成功'})\r\n            this.getData()\r\n          });\r\n        }).catch(() => {\r\n        });\r\n      },\r\n      // 取消置顶\r\n      itemTopOut(row){\r\n        this.$confirm('取消置顶吗？', '置顶', {\r\n          confirmButtonText: '确认',\r\n          cancelButtonText: '取消',\r\n          showClose:false\r\n        }).then(() => {\r\n          row.top = 0\r\n          this.request(this.api.contentCore.content_top, row).then(data => {\r\n            this.$notify.success({ title: '成功',message: '取消置顶成功'})\r\n            this.getData()\r\n          });\r\n        }).catch(() => {\r\n        });\r\n      },\r\n      // 类型切换\r\n      typeActiveSelect(index,indexPath,event) {\r\n        this.formData.pageIndex = 1\r\n        this.formData.contentType = index\r\n        this.getData()\r\n      },\r\n      // 状态切换\r\n      stateActiveSelect(index,indexPath,event){\r\n        this.formData.pageIndex = 1\r\n        // 等于4时   为全部\r\n        if(index === '8'){\r\n          this.formData.contentStatus = ''\r\n        }else{\r\n          this.formData.contentStatus = index\r\n        }\r\n        this.getData()\r\n      },\r\n      // 获取分类tree\r\n      getCategoryTreeList(){\r\n        this.request(this.api.contentCore.category_tree_list, {contentType: this.formData.contentType}).then(data => {\r\n          if(data && data.length){\r\n            this.categoryTreeListInit(data)\r\n            this.categoryTreeList = data\r\n          }\r\n        });\r\n      },\r\n      // 初始分类数据\r\n      categoryTreeListInit(data){\r\n        if(data && data.length){\r\n          data.forEach((item)=>{\r\n            if(item.children){\r\n              if(item.children.length === 0){\r\n                delete item.children\r\n              }else {\r\n                this.categoryTreeListInit(item.children)\r\n              }\r\n            }\r\n          })\r\n        }\r\n      },\r\n\r\n\r\n\r\n      //\r\n      // 强制下线\r\n      auditOffline(row){\r\n        this.$confirm('确认强制下线吗？', '强制下线', {\r\n          confirmButtonText: '确认',\r\n          cancelButtonText: '取消',\r\n          showClose:false\r\n        }).then(() => {\r\n          this.request(this.api.contentCore.audit_offline, {id: row.id}).then(data => {\r\n            this.$notify.success({ title: '成功',message: '强制下线成功'})\r\n            this.getData()\r\n          });\r\n        }).catch(() => {\r\n        });\r\n\r\n      },\r\n\r\n    },\r\n    // 计算属性\r\n    computed: {},\r\n    // 监听数据变化\r\n    watch: {}\r\n  }\r\n</script>\r\n"],"sourceRoot":"src/views/content/manage"}]}