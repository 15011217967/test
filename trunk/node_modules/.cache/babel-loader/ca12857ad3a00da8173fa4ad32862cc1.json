{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\components\\editor\\Editor.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\components\\editor\\Editor.vue","mtime":1572415127786},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.replace\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport UploadImg from '@/components/editor/UploadImg';\nimport UploadVideo from '@/components/editor/UploadVideo';\nimport CheckList from '@/components/editor/CheckList';\nimport VideoCheckList from '@/components/editor/VideoCheckList';\nimport WangEditor from 'wangeditor';\nexport default {\n  name: 'editor',\n  props: {},\n  // 数据\n  data: function data() {\n    return {\n      // 富文本\n      editor: null,\n      // 图片\n      // 上传弹窗\n      uploadDialog: false,\n      //默认本地\n      activeName: 'local',\n      // 本地上传列表\n      localImgList: [],\n      // 本地上传列表 选中的\n      localCheckList: [],\n      // 素材列表\n      materialImgFrom: {\n        pageIndex: 1,\n        pageSize: 12,\n        type: 2 // 1 -- 视频  2 -- 图片\n\n      },\n      materialImgList: [],\n      // 素材列表 选中的\n      materialCheckList: [],\n      // 视频\n      // 上传弹窗\n      uploadVideoDialog: false,\n      //默认本地\n      activeVideoName: 'localVideo',\n      // 本地上传列表\n      localVideoList: [],\n      // 本地上传列表 选中的\n      localVideoCheckList: [],\n      // 素材列表\n      materialVideoFrom: {\n        pageIndex: 1,\n        pageSize: 12,\n        type: 1 // 1 -- 视频  2 -- 图片\n\n      },\n      materialVideoList: [],\n      // 素材列表 选中的\n      materialVideoCheckList: []\n    };\n  },\n  // 组件\n  components: {\n    UploadImg: UploadImg,\n    UploadVideo: UploadVideo,\n    CheckList: CheckList,\n    VideoCheckList: VideoCheckList\n  },\n  // 初始化数据\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      _this.createEditor();\n    });\n  },\n  // 方法\n  methods: {\n    // 富文本\n    // 光标插入\n    insertEditor: function insertEditor(str) {\n      this.editor.cmd.do('insertHtml', str);\n    },\n    // 创建编辑器\n    createEditor: function createEditor() {\n      this.editor = new WangEditor(document.getElementById('editor')); // 初始化编辑器配置，在create之前\n\n      this.initEditorConfig(); // 生成编辑器\n\n      this.editor.create();\n    },\n    // 初始化编辑器配置\n    initEditorConfig: function initEditorConfig() {\n      // 自定义菜单配置\n      this.editor.customConfig.zIndex = 100;\n      this.editor.customConfig.menus = ['head', // 标题\n      'bold', // 粗体\n      'fontSize', // 字号\n      // 'fontName',  // 字体\n      'italic', // 斜体\n      'underline', // 下划线\n      'strikeThrough', // 删除线\n      'foreColor', // 文字颜色\n      // 'link',  // 插入链接\n      'list', // 列表\n      'justify', // 对齐方式\n      'quote', // 引用\n      'table', // 表格\n      'code', // 插入代码\n      'undo', // 撤销\n      'redo' // 重复\n      ]; // 关闭粘贴样式的过滤\n\n      this.editor.customConfig.pasteFilterStyle = false; // 忽略粘贴内容中的图片\n\n      this.editor.customConfig.pasteIgnoreImg = true; // 自定义处理粘贴的文本内容\n\n      this.editor.customConfig.pasteTextHandle = function (content) {\n        // content 即粘贴过来的内容（html 或 纯文本），可进行自定义处理然后返回\n        if (content == '' && !content) return '';\n        var str = content;\n        str = str.replace(/<xml>[\\s\\S]*?<\\/xml>/ig, '');\n        str = str.replace(/<style>[\\s\\S]*?<\\/style>/ig, '');\n        str = str.replace(/<\\/?[^>]*>/g, '');\n        str = str.replace(/[ | ]*\\n/g, '\\n');\n        str = str.replace(/&nbsp;/ig, '');\n        return str;\n      };\n    },\n    // 获取数据\n    getEditorHtml: function getEditorHtml() {\n      return this.editor.txt.html();\n    },\n    // 设置数据\n    getEditorText: function getEditorText() {\n      return this.editor.txt.text();\n    },\n    // 初始数据\n    setEditorHtml: function setEditorHtml(str) {\n      this.editor.txt.html(str);\n    },\n    // 上传图片\n    uploadImg: function uploadImg() {\n      // 初始数据\n      this.materialImgFrom.pageIndex = 1;\n      this.activeName = 'local';\n      this.localImgList = [];\n      this.localCheckList = [];\n      this.materialImgList = [];\n      this.materialCheckList = [];\n      this.uploadDialog = true;\n    },\n    // 图片转dom\n    checkImgInit: function checkImgInit(ary) {\n      var str = \"\";\n\n      if (ary && ary.length) {\n        ary.forEach(function (item) {\n          str += \"<img src=\\\"\".concat(item, \"\\\" alt=\\\"\\\" style=\\\"width: 400px;\\\"><br/>\");\n        });\n      }\n\n      return str;\n    },\n    //图片 素材 本地 切换\n    handleClick: function handleClick(node) {\n      if (node.name === 'material') {\n        this.getMaterialImgData();\n      }\n    },\n    // 获取素材库图片\n    getMaterialImgData: function getMaterialImgData(flag) {\n      var _this2 = this;\n\n      if (flag) {\n        this.materialImgFrom.pageIndex++;\n      }\n\n      this.request(this.api.contentCore.library_list, this.materialImgFrom).then(function (data) {\n        if (flag) {\n          _this2.materialImgList = _this2.materialImgList.concat(data.data);\n        } else {\n          _this2.materialImgList = data.data;\n        }\n      });\n    },\n    // 确认选中图片\n    uploadDialogSub: function uploadDialogSub() {\n      if (this.activeName === 'local') {\n        var urlList = this.$refs.localCheckListDom.getCheckList();\n        this.localCheckList = urlList;\n        var dom = this.checkImgInit(urlList);\n        this.insertEditor(dom);\n        this.uploadDialog = false;\n      }\n\n      if (this.activeName === 'material') {\n        var _urlList = this.$refs.materialCheckListDom.getCheckList();\n\n        this.materialCheckList = _urlList;\n\n        var _dom = this.checkImgInit(_urlList);\n\n        this.insertEditor(_dom);\n        this.uploadDialog = false;\n      }\n    },\n    // 上传视频\n    uploadVideo: function uploadVideo() {\n      // 初始数据\n      this.materialVideoFrom.pageIndex = 1;\n      this.localVideoList = [];\n      this.localVideoCheckList = [];\n      this.materialVideoList = [];\n      this.materialVideoCheckList = [];\n      this.activeVideoName = 'localVideo';\n      this.uploadVideoDialog = true;\n    },\n    //视频 素材 本地 切换\n    handleVideoClick: function handleVideoClick(node) {\n      if (node.name === 'materialVideo') {\n        this.getMaterialVideoData();\n      }\n    },\n    // 获取素材库视频\n    getMaterialVideoData: function getMaterialVideoData(flag) {\n      var _this3 = this;\n\n      if (flag) {\n        this.materialVideoFrom.pageIndex++;\n      }\n\n      this.request(this.api.contentCore.library_list, this.materialVideoFrom).then(function (data) {\n        if (flag) {\n          _this3.materialVideoList = _this3.materialVideoList.concat(data.data);\n        } else {\n          _this3.materialVideoList = data.data;\n        }\n      });\n    },\n    // 确认选中视频\n    uploadVideoDialogSub: function uploadVideoDialogSub() {\n      if (this.activeVideoName === 'localVideo') {\n        var urlList = this.$refs.localVideoCheckListDom.getCheckList();\n        this.localVideoCheckList = urlList;\n        var dom = this.checkVideoInit(urlList);\n        this.insertEditor(dom);\n        this.uploadVideoDialog = false;\n      }\n\n      if (this.activeVideoName === 'materialVideo') {\n        var _urlList2 = this.$refs.materialVideoCheckListDom.getCheckList();\n\n        this.materialVideoCheckList = _urlList2;\n\n        var _dom2 = this.checkVideoInit(_urlList2);\n\n        this.insertEditor(_dom2);\n        this.uploadVideoDialog = false;\n      }\n    },\n    // 视频转dom\n    checkVideoInit: function checkVideoInit(ary) {\n      if (!ary.length) return;\n      var str = \"\";\n\n      if (ary && ary.length) {\n        ary.forEach(function (item) {\n          str += \"<video controls=\\\"controls\\\" src=\\\"\".concat(item.url, \"\\\" width=\\\"400px\\\"></video><br/>\");\n        });\n      }\n\n      return str;\n    }\n  },\n  // 计算属性\n  computed: {},\n  // 监听数据变化\n  watch: {}\n};",{"version":3,"sources":["Editor.vue"],"names":[],"mappings":"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","sourcesContent":["<style lang=\"less\" scoped>\r\n  .editor{\r\n    .editor-info{position: relative;\r\n      span{font-size: 20px;z-index: 101;cursor: pointer;position: absolute;top: 7px;color: #999;}\r\n      span:hover{color: #666;}\r\n      .el-icon-picture{left: 487px;}\r\n      .el-icon-video-camera-solid{left: 517px;}\r\n    }\r\n    .upload-list{height: 230px;\r\n      .auto-list{height: 200px;overflow: auto;}\r\n    }\r\n  }\r\n</style>\r\n<template>\r\n  <div class=\"editor\">\r\n    <div class=\"editor-info\">\r\n      <div id=\"editor\"></div>\r\n      <span class=\"icon el-icon-picture\" @click=\"uploadImg\"></span>\r\n      <span class=\"icon el-icon-video-camera-solid\" @click=\"uploadVideo\"></span>\r\n    </div>\r\n    <!--上传图片-->\r\n    <el-dialog title=\"选择图片\" :visible.sync=\"uploadDialog\" width=\"45%\" :close-on-click-modal=\"false\">\r\n      <div class=\"upload-list\">\r\n        <el-tabs v-model=\"activeName\" @tab-click=\"handleClick\">\r\n          <el-tab-pane label=\"本地上传\" name=\"local\">\r\n            <div class=\"auto-list\">\r\n              <check-list :img-list=\"localImgList\" ref=\"localCheckListDom\" v-if=\"uploadDialog\" :is-default-check=\"true\">\r\n                <upload-img :is-radio=\"false\" :img-list=\"localImgList\" content-txt=\"上传图片\"></upload-img>\r\n              </check-list>\r\n            </div>\r\n          </el-tab-pane>\r\n          <el-tab-pane label=\"素材库\" name=\"material\">\r\n            <div class=\"auto-list\">\r\n              <check-list :img-list=\"materialImgList\" v-if=\"uploadDialog\" ref=\"materialCheckListDom\"></check-list>\r\n              <el-button type=\"primary\" @click=\"getMaterialImgData(true)\" size=\"small\">加载更多</el-button>\r\n            </div>\r\n          </el-tab-pane>\r\n        </el-tabs>\r\n      </div>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"uploadDialog = false\" size=\"small\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"uploadDialogSub\" size=\"small\">确 定</el-button>\r\n        </span>\r\n    </el-dialog>\r\n    <!--上传视频-->\r\n    <el-dialog title=\"选择视频\" :visible.sync=\"uploadVideoDialog\" width=\"45%\" :close-on-click-modal=\"false\">\r\n      <div class=\"upload-list\">\r\n        <el-tabs v-model=\"activeVideoName\" @tab-click=\"handleVideoClick\">\r\n          <el-tab-pane label=\"本地上传\" name=\"localVideo\">\r\n            <div class=\"auto-list\">\r\n              <video-check-list :video-list=\"localVideoList\" v-if=\"uploadVideoDialog\" ref=\"localVideoCheckListDom\">\r\n                <upload-video ref=\"uploadVideo\" v-if=\"uploadVideoDialog\" :is-radio=\"false\" :video-list=\"localVideoList\"></upload-video>\r\n              </video-check-list>\r\n            </div>\r\n          </el-tab-pane>\r\n          <el-tab-pane label=\"素材库\" name=\"materialVideo\">\r\n            <div class=\"auto-list\">\r\n              <video-check-list :video-list=\"materialVideoList\" v-if=\"uploadVideoDialog\" ref=\"materialVideoCheckListDom\">\r\n              </video-check-list>\r\n              <el-button type=\"primary\" @click=\"getMaterialVideoData(true)\" size=\"small\">加载更多</el-button>\r\n            </div>\r\n          </el-tab-pane>\r\n        </el-tabs>\r\n      </div>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"uploadVideoDialog = false\" size=\"small\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"uploadVideoDialogSub\" size=\"small\">确 定</el-button>\r\n        </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\n  import UploadImg from '@/components/editor/UploadImg'\r\n  import UploadVideo from '@/components/editor/UploadVideo'\r\n  import CheckList from '@/components/editor/CheckList'\r\n  import VideoCheckList from '@/components/editor/VideoCheckList'\r\n\r\n  import WangEditor  from 'wangeditor'\r\n  export default {\r\n    name: 'editor',\r\n    props: {\r\n\r\n    },\r\n    // 数据\r\n    data() {\r\n      return {\r\n        // 富文本\r\n        editor:null,\r\n        // 图片\r\n        // 上传弹窗\r\n        uploadDialog: false,\r\n        //默认本地\r\n        activeName: 'local',\r\n        // 本地上传列表\r\n        localImgList:[],\r\n        // 本地上传列表 选中的\r\n        localCheckList: [],\r\n        // 素材列表\r\n        materialImgFrom:{\r\n          pageIndex: 1,\r\n          pageSize: 12,\r\n          type: 2  // 1 -- 视频  2 -- 图片\r\n        },\r\n        materialImgList:[],\r\n        // 素材列表 选中的\r\n        materialCheckList:[],\r\n\r\n        // 视频\r\n        // 上传弹窗\r\n        uploadVideoDialog: false,\r\n        //默认本地\r\n        activeVideoName: 'localVideo',\r\n        // 本地上传列表\r\n        localVideoList:[],\r\n        // 本地上传列表 选中的\r\n        localVideoCheckList: [],\r\n        // 素材列表\r\n        materialVideoFrom:{\r\n          pageIndex: 1,\r\n          pageSize: 12,\r\n          type: 1  // 1 -- 视频  2 -- 图片\r\n        },\r\n        materialVideoList:[],\r\n        // 素材列表 选中的\r\n        materialVideoCheckList:[],\r\n\r\n\r\n      }\r\n    },\r\n    // 组件\r\n    components: {\r\n      UploadImg,\r\n      UploadVideo,\r\n      CheckList,\r\n      VideoCheckList\r\n    },\r\n    // 初始化数据\r\n    mounted() {\r\n      this.$nextTick(() => {\r\n        this.createEditor()\r\n      })\r\n    },\r\n    // 方法\r\n    methods: {\r\n      // 富文本\r\n      // 光标插入\r\n      insertEditor(str){\r\n        this.editor.cmd.do('insertHtml', str)\r\n      },\r\n      // 创建编辑器\r\n      createEditor(){\r\n        this.editor = new WangEditor(document.getElementById('editor'))\r\n        // 初始化编辑器配置，在create之前\r\n        this.initEditorConfig()\r\n        // 生成编辑器\r\n        this.editor.create()\r\n      },\r\n      // 初始化编辑器配置\r\n      initEditorConfig() {\r\n        // 自定义菜单配置\r\n        this.editor.customConfig.zIndex = 100\r\n        this.editor.customConfig.menus = [\r\n          'head',  // 标题\r\n          'bold',  // 粗体\r\n          'fontSize',  // 字号\r\n          // 'fontName',  // 字体\r\n          'italic',  // 斜体\r\n          'underline',  // 下划线\r\n          'strikeThrough',  // 删除线\r\n          'foreColor',  // 文字颜色\r\n          // 'link',  // 插入链接\r\n          'list',  // 列表\r\n          'justify',  // 对齐方式\r\n          'quote',  // 引用\r\n          'table',  // 表格\r\n          'code',  // 插入代码\r\n          'undo',  // 撤销\r\n          'redo'  // 重复\r\n        ]\r\n        // 关闭粘贴样式的过滤\r\n        this.editor.customConfig.pasteFilterStyle = false\r\n        // 忽略粘贴内容中的图片\r\n        this.editor.customConfig.pasteIgnoreImg = true\r\n        // 自定义处理粘贴的文本内容\r\n        this.editor.customConfig.pasteTextHandle = function (content) {\r\n          // content 即粘贴过来的内容（html 或 纯文本），可进行自定义处理然后返回\r\n          if (content == '' && !content) return ''\r\n          let str = content\r\n          str = str.replace(/<xml>[\\s\\S]*?<\\/xml>/ig, '')\r\n          str = str.replace(/<style>[\\s\\S]*?<\\/style>/ig, '')\r\n          str = str.replace(/<\\/?[^>]*>/g, '')\r\n          str = str.replace(/[ | ]*\\n/g, '\\n')\r\n          str = str.replace(/&nbsp;/ig, '')\r\n          return str\r\n        }\r\n      },\r\n      // 获取数据\r\n      getEditorHtml(){\r\n        return this.editor.txt.html()\r\n      },\r\n      // 设置数据\r\n      getEditorText(){\r\n        return this.editor.txt.text()\r\n      },\r\n      // 初始数据\r\n      setEditorHtml(str){\r\n        this.editor.txt.html(str)\r\n      },\r\n\r\n      // 上传图片\r\n      uploadImg(){\r\n        // 初始数据\r\n        this.materialImgFrom.pageIndex = 1\r\n        this.activeName = 'local'\r\n        this.localImgList = []\r\n        this.localCheckList = []\r\n        this.materialImgList = []\r\n        this.materialCheckList = []\r\n        this.uploadDialog = true\r\n      },\r\n      // 图片转dom\r\n      checkImgInit(ary){\r\n        let str =  ``\r\n        if(ary && ary.length){\r\n          ary.forEach((item)=> {\r\n            str += `<img src=\"${item}\" alt=\"\" style=\"width: 400px;\"><br/>`\r\n          })\r\n        }\r\n        return str\r\n      },\r\n      //图片 素材 本地 切换\r\n      handleClick(node){\r\n        if(node.name === 'material'){\r\n          this.getMaterialImgData()\r\n        }\r\n      },\r\n      // 获取素材库图片\r\n      getMaterialImgData(flag){\r\n        if(flag){\r\n          this.materialImgFrom.pageIndex++\r\n        }\r\n        this.request(this.api.contentCore.library_list, this.materialImgFrom).then(data => {\r\n          if(flag){\r\n            this.materialImgList = this.materialImgList.concat(data.data)\r\n          }else {\r\n            this.materialImgList =  data.data\r\n          }\r\n        });\r\n      },\r\n      // 确认选中图片\r\n      uploadDialogSub(){\r\n        if(this.activeName === 'local'){\r\n          const urlList = this.$refs.localCheckListDom.getCheckList()\r\n          this.localCheckList = urlList\r\n          const dom = this.checkImgInit(urlList)\r\n          this.insertEditor(dom)\r\n          this.uploadDialog = false\r\n        }\r\n        if(this.activeName === 'material'){\r\n          const urlList = this.$refs.materialCheckListDom.getCheckList()\r\n          this.materialCheckList = urlList\r\n          const dom = this.checkImgInit(urlList)\r\n          this.insertEditor(dom)\r\n          this.uploadDialog = false\r\n        }\r\n      },\r\n\r\n      // 上传视频\r\n      uploadVideo(){\r\n        // 初始数据\r\n        this.materialVideoFrom.pageIndex = 1\r\n        this.localVideoList = []\r\n        this.localVideoCheckList = []\r\n        this.materialVideoList = []\r\n        this.materialVideoCheckList = []\r\n        this.activeVideoName = 'localVideo'\r\n        this.uploadVideoDialog = true\r\n      },\r\n      //视频 素材 本地 切换\r\n      handleVideoClick(node){\r\n        if(node.name === 'materialVideo'){\r\n          this.getMaterialVideoData()\r\n        }\r\n      },\r\n      // 获取素材库视频\r\n      getMaterialVideoData(flag){\r\n        if(flag){\r\n          this.materialVideoFrom.pageIndex++\r\n        }\r\n        this.request(this.api.contentCore.library_list, this.materialVideoFrom).then(data => {\r\n          if(flag){\r\n            this.materialVideoList = this.materialVideoList.concat(data.data)\r\n          }else {\r\n            this.materialVideoList =  data.data\r\n          }\r\n        });\r\n      },\r\n      // 确认选中视频\r\n      uploadVideoDialogSub(){\r\n        if(this.activeVideoName === 'localVideo'){\r\n          const urlList = this.$refs.localVideoCheckListDom.getCheckList()\r\n          this.localVideoCheckList = urlList\r\n          const dom = this.checkVideoInit(urlList)\r\n          this.insertEditor(dom)\r\n          this.uploadVideoDialog = false\r\n        }\r\n        if(this.activeVideoName === 'materialVideo'){\r\n          const urlList = this.$refs.materialVideoCheckListDom.getCheckList()\r\n          this.materialVideoCheckList = urlList\r\n          const dom = this.checkVideoInit(urlList)\r\n          this.insertEditor(dom)\r\n          this.uploadVideoDialog = false\r\n        }\r\n      },\r\n      // 视频转dom\r\n      checkVideoInit(ary){\r\n        if (!ary.length) return\r\n        let str =  ``\r\n        if(ary && ary.length){\r\n          ary.forEach((item)=> {\r\n            str += `<video controls=\"controls\" src=\"${item.url}\" width=\"400px\"></video><br/>`\r\n          })\r\n        }\r\n        return str\r\n      }\r\n    },\r\n    // 计算属性\r\n    computed: {},\r\n    // 监听数据变化\r\n    watch: {\r\n\r\n    }\r\n  }\r\n</script>\r\n"],"sourceRoot":"src/components/editor"}]}