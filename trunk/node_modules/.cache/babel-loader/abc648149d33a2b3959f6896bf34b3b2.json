{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\product\\custom_attrs\\supplier_support.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\product\\custom_attrs\\supplier_support.vue","mtime":1574160265162},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _toConsumableArray from \"C:\\\\Users\\\\EDZ\\\\Desktop\\\\\\u7814\\u53D1\\u9879\\u76EE\\\\vue-project\\\\trunk\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.array.find\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/** 制造商支持管理 */\nexport default {\n  name: 'supplier_support',\n  data: function data() {\n    return {\n      filtersData: {\n        manufacturerId: \"\",\n        cateIdentifier: \"\",\n        pageIndex: 1,\n        //当前页码\n        pageSize: 10,\n        //每页数量\n        valid: null,\n        //有效状态\n        searchWords: \"\" //搜索关键字\n\n      },\n      tableListData: [],\n      total: null,\n      classData: [],\n      classList: [],\n      cateArr: [],\n      props: {\n        value: \"id\",\n        label: \"name\",\n        children: \"children\"\n      },\n      manufacturerOptions: []\n    };\n  },\n  created: function created() {\n    this.getTableList();\n    this.getClassData();\n    this.getManufacturerData();\n  },\n  activated: function activated() {\n    this.getTableList();\n  },\n  methods: {\n    getClassData: function getClassData() {\n      var _this = this;\n\n      //分类类型（1：标准分类，2：定制分类，3：原料分类或者称为属性分类）\n      this.$common.getClassSelect(this, 1).then(function (res) {\n        _this.classData = res.ztree;\n        _this.classList = res.list;\n      });\n    },\n    cascaderGet: function cascaderGet(e) {\n      var cateId = JSON.parse(JSON.stringify(e)).pop();\n      var obj = this.classList.find(function (item) {\n        return item.id == cateId;\n      });\n      this.filtersData.cateIdentifier = obj.identifier;\n    },\n    //制造商\n    getManufacturerData: function getManufacturerData() {\n      var _this2 = this;\n\n      this.request(this.api.product.manufacturer_list, {}).then(function (data) {\n        _this2.manufacturerOptions = data.data;\n      });\n    },\n    //获取列表\n    getTableList: function getTableList() {\n      var _this3 = this;\n\n      this.request(this.api.product.manufacturerProductionInformation_list, this.filtersData).then(function (data) {\n        var _data = data.data,\n            _dataLen = _data.length;\n\n        for (var i = 0; i < _dataLen; i++) {\n          _data[i].isShow = true;\n          _data[i].isType = 1;\n          _data[i]._cid = \"\";\n        }\n\n        _this3.tableListData = _data;\n        _this3.total = data.totalCount;\n      });\n    },\n    //新增支持  跳转页面\n    openAddSupport: function openAddSupport() {\n      this.$router.push({\n        path: \"/product/custom_attrs/add_support\",\n        name: \"add_support\",\n        query: {\n          type: \"add\"\n        }\n      });\n    },\n    //查看支持\n    openShowDetails: function openShowDetails(params) {\n      this.$router.push({\n        path: \"/product/custom_attrs/show_support_details'\",\n        name: \"show_support_details\",\n        query: {\n          id: params,\n          _type: \"show\"\n        }\n      });\n    },\n    //修改支持\n    openEditDetails: function openEditDetails(params) {\n      this.$router.push({\n        path: \"/product/custom_attrs/edit_support_details\",\n        name: \"edit_support_details\",\n        query: {\n          id: params,\n          _type: \"edit\"\n        }\n      });\n    },\n    //点击获取子元素插入数组\n    childrenIsShow: function childrenIsShow(row) {\n      var _id = row.manufacturerId; //当前数据ID\n\n      var _type = row.isType; //状态 1 关闭 0 打开\n\n      if (_type == \"1\") {\n        //当前为关闭状态 需请求接口获取子元素\n        row.isType = 0;\n        this.getChildData(row, _id);\n      } else {\n        //当前为打开状态 需删除子元素\n        row.isType = 1;\n        this.removeChildData(row);\n      }\n    },\n    //获取子集\n    getChildData: function getChildData(row, _id) {\n      var _this4 = this;\n\n      var _index = this.tableListData.findIndex(function (item) {\n        return item.manufacturerId == _id;\n      });\n\n      if (!row._chilren) {\n        this.request(this.api.product.manufacturerProductionInformation_listForCateCount, {\n          manufacturerId: _id,\n          id: row.id,\n          cateId: row.cateId\n        }).then(function (res) {\n          var _this4$tableListData;\n\n          var _data = res;\n          var _dataLen = _data.length;\n\n          for (var i = 0; i < _dataLen; i++) {\n            _data[i]._fullCateName = _data[i].fullCateName;\n            _data[i]._subset = true;\n          }\n\n          row._chilren = _data; //根据下标插入进去 获取ID 在数组中的下标\n\n          (_this4$tableListData = _this4.tableListData).splice.apply(_this4$tableListData, [_index + 1, 0].concat(_toConsumableArray(_data))); //获取子集id存入 元素属性\n\n\n          var arr = [];\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = _data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var id = _step.value.id;\n              arr.push(id);\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          row._cid = arr.join();\n        });\n      } else {\n        var _this$tableListData;\n\n        (_this$tableListData = this.tableListData).splice.apply(_this$tableListData, [_index + 1, 0].concat(_toConsumableArray(row._chilren)));\n      }\n    },\n    //删除子集\n    removeChildData: function removeChildData(row) {\n      var cid = row._cid;\n      var cidArr = cid.split(\",\");\n      var _table = this.tableListData,\n          tableLen = _table.length;\n\n      for (var i = 0; i < cidArr.length; i++) {\n        for (var j = 0; j < this.tableListData.length; j++) {\n          if (cidArr[i] == this.tableListData[j].id && this.tableListData[j]._subset) {\n            this.tableListData.splice(j, 1);\n          }\n        }\n      }\n    },\n    //搜索\n    handleSearch: function handleSearch() {\n      this.filtersData.pageIndex = 1;\n      this.getTableList();\n    },\n    //清空重置\n    handleResetFilters: function handleResetFilters(formName) {\n      this.$refs[formName].resetFields();\n    },\n    //当前页数修改时发生改变\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.filtersData.pageIndex = val;\n      this.getTableList();\n    },\n    // 每页显示多少条时发生改变\n    handleSizeChange: function handleSizeChange(val) {\n      this.filtersData.pageSize = val;\n      this.getTableList();\n    },\n    //滑块开关\n    switchValid: function switchValid(params) {\n      var _this5 = this;\n\n      this.request(this.api.product.manufacturerProductionInformation_save, params).then(function (data) {\n        _this5.$message.success(\"保存成功\");\n      });\n    }\n  }\n};",{"version":3,"sources":["supplier_support.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"item-margin\">\r\n      <el-form\r\n        class=\"item-form\"\r\n        :model=\"filtersData\"\r\n        label-width=\"100px\"\r\n        size=\"small\"\r\n        ref=\"filtersForm\"\r\n        inline\r\n      >\r\n        <el-form-item prop=\"valid\" label=\"使用状态：\">\r\n          <el-select class=\"input-w\" placeholder=\"请选择\" v-model=\"filtersData.valid\">\r\n            <el-option\r\n              v-for=\"item in this.$common.getValidOptions()\"\r\n              :key=\"item.status_id\"\r\n              :label=\"item.status_name\"\r\n              :value=\"item.status_id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <!-- 商品分类 -->\r\n        <el-form-item prop=\"cateIdentifier\" label=\"分类选择：\">\r\n          <el-cascader\r\n            class=\"input-w\"\r\n            :options=\"classData\"\r\n            v-model=\"cateArr\"\r\n            :value=\"cateArr\"\r\n            @change=\"cascaderGet\"\r\n            :show-all-levels=\"false\"\r\n            :props=\"props\"\r\n            change-on-select\r\n          ></el-cascader>\r\n        </el-form-item>\r\n        <el-form-item prop=\"manufacturerId\" label=\"制造商名称：\">\r\n          <el-select class=\"input-w\" placeholder=\"请选择\" v-model=\"filtersData.manufacturerId\">\r\n            <el-option\r\n              v-for=\"item in manufacturerOptions\"\r\n              :key=\"item.id\"\r\n              :label=\"item.name\"\r\n              :value=\"item.id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item prop=\"searchWords\" label=\"综合搜索：\">\r\n          <el-input class=\"input-w\" placeholder=\"请输入内容\" v-model=\"filtersData.searchWords\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button size=\"small\" @click=\"handleSearch\" type=\"primary\" plain>搜索</el-button>\r\n          <el-button size=\"small\" @click=\"handleResetFilters('filtersForm')\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n    <!--table  -->\r\n    <div class=\"item-margin\">\r\n      <div class=\"item-cont\">\r\n        <el-button-group>\r\n          <el-button size=\"small\" type=\"primary\" @click=\"openAddSupport\">新增制造商支持</el-button>\r\n        </el-button-group>\r\n      </div>\r\n      <div class=\"item-table\">\r\n        <el-table\r\n          :data=\"tableListData\"\r\n          stripe\r\n          empty-text=\"暂无数据\"\r\n          header-align=\"center\"\r\n          header-row-class-name=\"item-table-header\"\r\n          :highlight-current-row=\"true\"\r\n        >\r\n          <el-table-column align=\"center\" width=\"50\">\r\n            <template slot-scope=\"scope\">\r\n              <i\r\n                @click=\"childrenIsShow(scope.row)\"\r\n                v-if=\"scope.row.isShow\"\r\n                :class=\"scope.row.isType == 1 ?'el-icon-circle-plus-outline i-cursor' : 'el-icon-remove-outline i-cursor'\"\r\n              ></i>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"manufacturerName\" align=\"center\" label=\"制造商名称\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"_fullCateName\" align=\"center\" label=\"支持品类\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"materialCount\" align=\"center\" label=\"相关原料\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"craftCount\" align=\"center\" label=\"相关工艺\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"measurementCount\" align=\"center\" label=\"成衣测量项\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"valid\" align=\"center\" label=\"使用状态\" min-width=\"120\">\r\n            <template slot-scope=\"scope\">\r\n              <el-switch\r\n                v-model=\"scope.row.valid\"\r\n                v-if=\"!scope.row.isShow\"\r\n                active-color=\"#13ce66\"\r\n                @change=\"switchValid(scope.row)\"\r\n                inactive-color=\"#ff4949\"\r\n              ></el-switch>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column\r\n            fixed=\"right\"\r\n            label-class-name=\"text-center\"\r\n            class-name=\"text-center\"\r\n            align=\"center\"\r\n            label=\"操作\"\r\n            width=\"150\"\r\n          >\r\n            <template slot-scope=\"scope\">\r\n              <el-button\r\n                @click=\"openShowDetails(scope.row.id)\"\r\n                v-if=\"!scope.row.isShow\"\r\n                type=\"text\"\r\n                size=\"small\"\r\n              >查看</el-button>\r\n              <el-button\r\n                @click=\"openEditDetails(scope.row.id)\"\r\n                v-if=\"!scope.row.isShow\"\r\n                type=\"text\"\r\n                size=\"small\"\r\n              >修改</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n        <div class=\"pagination mt-10 mb-20\">\r\n          <el-pagination\r\n            class=\"mr-20\"\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"filtersData.pageIndex\"\r\n            :page-sizes=\"[10,20,30,40,50]\"\r\n            :page-size=\"filtersData.pageSize\"\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=\"total\"\r\n          ></el-pagination>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!--table END  -->\r\n  </div>\r\n</template>\r\n<script>\r\n/** 制造商支持管理 */\r\nexport default {\r\n  name:'supplier_support',\r\n  data() {\r\n    return {\r\n      filtersData: {\r\n        manufacturerId: \"\",\r\n        cateIdentifier: \"\",\r\n        pageIndex: 1, //当前页码\r\n        pageSize: 10, //每页数量\r\n        valid: null, //有效状态\r\n        searchWords: \"\" //搜索关键字\r\n      },\r\n      tableListData: [],\r\n      total: null,\r\n      classData: [],\r\n      classList: [],\r\n      cateArr: [],\r\n      props: {\r\n        value: \"id\",\r\n        label: \"name\",\r\n        children: \"children\"\r\n      },\r\n      manufacturerOptions: []\r\n    };\r\n  },\r\n  created() {\r\n    this.getTableList();\r\n    this.getClassData();\r\n    this.getManufacturerData();\r\n  },\r\n   activated () {\r\n      this.getTableList();\r\n    },\r\n  methods: {\r\n    getClassData() {\r\n      //分类类型（1：标准分类，2：定制分类，3：原料分类或者称为属性分类）\r\n      this.$common.getClassSelect(this, 1).then(res => {\r\n        this.classData = res.ztree;\r\n        this.classList = res.list;\r\n      });\r\n    },\r\n    cascaderGet(e) {\r\n      let cateId = JSON.parse(JSON.stringify(e)).pop();\r\n      let obj = this.classList.find(item => item.id == cateId);\r\n      this.filtersData.cateIdentifier = obj.identifier;\r\n    },\r\n    //制造商\r\n    getManufacturerData() {\r\n      this.request(this.api.product.manufacturer_list, {}).then(data => {\r\n        this.manufacturerOptions = data.data;\r\n      });\r\n    },\r\n    //获取列表\r\n    getTableList() {\r\n      this.request(\r\n        this.api.product.manufacturerProductionInformation_list,\r\n        this.filtersData\r\n      ).then(data => {\r\n        let _data = data.data,\r\n          _dataLen = _data.length;\r\n        for (let i = 0; i < _dataLen; i++) {\r\n          _data[i].isShow = true;\r\n          _data[i].isType = 1;\r\n          _data[i]._cid = \"\";\r\n        }\r\n        this.tableListData = _data;\r\n        this.total = data.totalCount;\r\n      });\r\n    },\r\n    //新增支持  跳转页面\r\n    openAddSupport() {\r\n      this.$router.push({\r\n        path: \"/product/custom_attrs/add_support\",\r\n        name: \"add_support\",\r\n        query: {\r\n          type: \"add\"\r\n        }\r\n      });\r\n    },\r\n    //查看支持\r\n    openShowDetails(params) {\r\n      this.$router.push({\r\n        path: \"/product/custom_attrs/show_support_details'\",\r\n        name: \"show_support_details\",\r\n        query: {\r\n          id: params,\r\n          _type: \"show\"\r\n        }\r\n      });\r\n    },\r\n    //修改支持\r\n    openEditDetails(params) {\r\n      this.$router.push({\r\n        path: \"/product/custom_attrs/edit_support_details\",\r\n        name: \"edit_support_details\",\r\n        query: {\r\n          id: params,\r\n          _type: \"edit\"\r\n        }\r\n      });\r\n    },\r\n    //点击获取子元素插入数组\r\n    childrenIsShow(row) {\r\n      let _id = row.manufacturerId; //当前数据ID\r\n      let _type = row.isType; //状态 1 关闭 0 打开\r\n      if (_type == \"1\") {\r\n        //当前为关闭状态 需请求接口获取子元素\r\n        row.isType = 0;\r\n        this.getChildData(row, _id);\r\n      } else {\r\n        //当前为打开状态 需删除子元素\r\n        row.isType = 1;\r\n        this.removeChildData(row);\r\n      }\r\n    },\r\n    //获取子集\r\n    getChildData(row, _id) {\r\n      let _index = this.tableListData.findIndex(\r\n        item => item.manufacturerId == _id\r\n      );\r\n      if (!row._chilren) {\r\n        this.request(\r\n          this.api.product.manufacturerProductionInformation_listForCateCount,\r\n          { manufacturerId: _id,id:row.id, cateId:row.cateId}\r\n        ).then(res => {\r\n          let _data = res;\r\n          let _dataLen = _data.length;\r\n          for (let i = 0; i < _dataLen; i++) {\r\n            _data[i]._fullCateName = _data[i].fullCateName;\r\n            _data[i]._subset = true;\r\n          }\r\n          row._chilren = _data;\r\n          //根据下标插入进去 获取ID 在数组中的下标\r\n          this.tableListData.splice(_index + 1, 0, ..._data);\r\n          //获取子集id存入 元素属性\r\n          let arr = [];\r\n          for (let { id } of _data) {\r\n            arr.push(id);\r\n          }\r\n          row._cid = arr.join();\r\n        });\r\n      } else {\r\n        this.tableListData.splice(_index + 1, 0, ...row._chilren);\r\n      }\r\n    },\r\n    //删除子集\r\n    removeChildData(row) {\r\n      let cid = row._cid;\r\n      let cidArr = cid.split(\",\");\r\n      let _table = this.tableListData,\r\n        tableLen = _table.length;\r\n      for (let i = 0; i < cidArr.length; i++) {\r\n        for (let j = 0; j < this.tableListData.length; j++) {\r\n          if (\r\n            cidArr[i] == this.tableListData[j].id &&\r\n            this.tableListData[j]._subset\r\n          ) {\r\n            this.tableListData.splice(j, 1);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    //搜索\r\n    handleSearch() {\r\n      this.filtersData.pageIndex = 1;\r\n      this.getTableList();\r\n    },\r\n    //清空重置\r\n    handleResetFilters(formName) {\r\n      this.$refs[formName].resetFields();\r\n    },\r\n    //当前页数修改时发生改变\r\n    handleCurrentChange(val) {\r\n      this.filtersData.pageIndex = val;\r\n      this.getTableList();\r\n    },\r\n    // 每页显示多少条时发生改变\r\n    handleSizeChange(val) {\r\n      this.filtersData.pageSize = val;\r\n      this.getTableList();\r\n    },\r\n    //滑块开关\r\n    switchValid(params) {\r\n      this.request(\r\n        this.api.product.manufacturerProductionInformation_save,\r\n        params\r\n      ).then(data => {\r\n        this.$message.success(\"保存成功\");\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"less\" scoped>\r\n</style>\r\n"],"sourceRoot":"src/views/product/custom_attrs"}]}