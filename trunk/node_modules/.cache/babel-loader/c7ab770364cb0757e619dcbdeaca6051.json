{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\warehouse\\warehouse_center\\warehouse_manager\\receive_order\\receive_order_list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\warehouse\\warehouse_center\\warehouse_manager\\receive_order\\receive_order_list.vue","mtime":1578909967842},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TimeIntervalCheck from \"@/components/TimeIntervalCheck\";\nexport default {\n  components: {\n    TimeIntervalCheck: TimeIntervalCheck\n  },\n  data: function data() {\n    return {\n      signData: {\n        //搜索\n        searchKey: \"\",\n        //单据状态\n        businessStatus: \"\",\n        //入库仓库\n        warehouseCode: \"\",\n        //入库类型\n        orderType: \"\",\n        //开始时间\n        createTimeBegin: \"\",\n        //结束时间\n        createTimeEnd: \"\",\n        //当前页数\n        pageIndex: 1,\n        //每页要显示的数据条数,默认10条\n        pageSize: 10\n      },\n      //表格数据源\n      tableData: [],\n      //总条数\n      totalCount: 1,\n      //单据状态\n      orderStateData: [],\n      //入库类型数据\n      orderTypeData: [],\n      //仓库数据\n      warehouseData: [],\n      //存储需要导出的数据\n      multipleSelectionData: []\n    };\n  },\n  filters: {\n    //过滤订单状态\n    filterBusinessStatus: function filterBusinessStatus(val) {\n      switch (val) {\n        case \"08001\":\n          return \"待收货\";\n          break;\n\n        case \"08002\":\n          return \"部分已收货\";\n          break;\n\n        case \"08003\":\n          return \"异常完成\";\n          break;\n\n        case \"08004\":\n          return \"已完成\";\n          break;\n\n        case \"08005\":\n          return \"已作废\";\n          break;\n      }\n    },\n    //过滤入库类型\n    filtersType: function filtersType(val) {\n      switch (val) {\n        case \"05001\":\n          return \"采购入库\";\n          break;\n\n        case \"05002\":\n          return \"退货入库\";\n          break;\n\n        case \"05003\":\n          return \"其他入库\";\n          break;\n\n        case \"04004\":\n          return \"已完成\";\n          break;\n\n        case \"04005\":\n          return \"已作废\";\n          break;\n      }\n    }\n  },\n  mounted: function mounted() {\n    //得到单据状态的数据\n    this.getOrderStateByCode(); //得到仓库数据\n\n    this.geSendWarehouseData(); //得到收货单列表数据\n\n    this.getReceiveOrderTableData();\n  },\n  methods: {\n    //得到单据状态的数据\n    getOrderStateByCode: function getOrderStateByCode() {\n      var _this = this;\n\n      //得到订单状态数据 code==01 订单状态\n      this.request(this.api.warehouse.warehouseBase_configurationDictionaryByCode, {\n        code: \"CONFIGURABLE08\"\n      }).then(function (res) {\n        _this.orderStateData = res;\n      }); //得到入库类型数据 code==05 入库类型\n\n      this.request(this.api.warehouse.warehouseBase_configurationDictionaryByCode, {\n        code: \"CONFIGURABLE05\"\n      }).then(function (res) {\n        _this.orderTypeData = res;\n      });\n    },\n    //得到入货仓库数据\n    geSendWarehouseData: function geSendWarehouseData() {\n      var _this2 = this;\n\n      this.request(this.api.warehouse.warehouseBase_warehouse_list, {\n        isValid: true\n      }).then(function (res) {\n        console.log(res);\n        _this2.warehouseData = res.data;\n      });\n    },\n    //得到收货单列表数据\n    getReceiveOrderTableData: function getReceiveOrderTableData() {\n      var _this3 = this;\n\n      // let filter = this.$common.deepCopy(this.signData);\n      // if (filter.createTimeEnd != null) {\n      //   let date = new Date(filter.createTimeEnd);\n      //   let t = (date.getTime() / 1000 + 86399) * 1000;\n      //   filter.createTimeEnd = new Date(t);\n      // }\n      this.request(this.api.warehouse.warehouseBase_receiveOrder_list, this.signData).then(function (res) {\n        console.log(res);\n        _this3.tableData = res.data;\n        _this3.totalCount = res.totalCount;\n      });\n    },\n    //查询\n    searchFormData: function searchFormData() {\n      this.signData.pageIndex = 1;\n      this.getReceiveOrderTableData();\n      console.log(\"searchFormData---\");\n    },\n    //重置\n    resetFormData: function resetFormData(ruleForm) {\n      console.log(\"resetForm----\");\n      this.$refs[ruleForm].resetFields();\n    },\n    //导出\n    exportExcel: function exportExcel() {\n      this.exportExcelSelectData();\n      console.log(\"导出Excel表格...+++++++++++++++++++multipleSelectionData.length\");\n    },\n    //新增发货单Btn的点击事件\n    addBtnClickEvent: function addBtnClickEvent() {\n      console.log(\"addBtnClick---\");\n      this.$router.push({\n        path: \"/warehouse/warehouse_center/warehouse_manager/receive_order/receive_order_add\"\n      });\n    },\n    //导出选中的数据\n    exportExcelSelectData: function exportExcelSelectData() {\n      var _this4 = this;\n\n      require.ensure([], function () {\n        var _require = require(\"@/vendor/Export2Excel\"),\n            export_json_to_excel = _require.export_json_to_excel;\n\n        var tHeader = [\"收货单号\", \"单据状态\", \"入库类型\", \"收货件数\", \"预计到货时间\", \"承运商\", \"运单号\", \"入库仓库\", \"源单号\", \"创建时间\"]; // 上面设置Excel的表格第一行的标题\n\n        var filterVal = [\"orderSn\", \"businessStatusName\", \"typeName\", \"warehousingQuantity\", \"expectedTimeName\", \"logistics\", \"logisticsSn\", \"warehouse\", \"associationSn\", \"createTimeName\"]; // 上面的index、nickName、name是tableData里对象的属性\n\n        var list = _this4.multipleSelectionData; //把data里的multipleSelectionData存到list\n\n        var data = _this4.formatJson(filterVal, list);\n\n        export_json_to_excel(tHeader, data, \"收货管理表单\");\n      });\n    },\n    formatJson: function formatJson(filterVal, jsonData) {\n      return jsonData.map(function (v) {\n        return filterVal.map(function (j) {\n          return v[j];\n        });\n      });\n    },\n    //表格选择项改变时触发\n    selectionChange: function selectionChange(val) {\n      var _this5 = this;\n\n      val.forEach(function (item) {\n        item.businessStatusName = _this5.$options.filters.filterBusinessStatus(item.businessStatus);\n        item.typeName = _this5.$options.filters.filtersType(item.type);\n        item.expectedTimeName = _this5.$options.filters.timestampToTime(item.expectedTime);\n        item.createTimeName = _this5.$options.filters.timestampToTime(item.createTime);\n      });\n      this.multipleSelectionData = val;\n    },\n    //查看Btn的点击事件\n    checkBtnClick: function checkBtnClick(row) {\n      console.log(\"checkBtnClick---row--\");\n      this.$router.push({\n        path: \"/warehouse/warehouse_center/warehouse_manager/receive_order/receive_order_detail\",\n        query: {\n          orderSn: row.orderSn\n        }\n      });\n    },\n    //作废Btn的点击事件\n    obsoleteBtnClick: function obsoleteBtnClick() {\n      console.log(\"obsoleteBtnClick---\");\n    },\n    //每页条数改变时\n    handleSizeChange: function handleSizeChange(page) {\n      this.signData.pageSize = page;\n      this.getReceiveOrderTableData();\n    },\n    //当前页改变时\n    handleCurrentChange: function handleCurrentChange(page) {\n      this.signData.pageIndex = page;\n      this.getReceiveOrderTableData();\n    }\n  }\n};",{"version":3,"sources":["receive_order_list.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"search_div\">\r\n      <el-form ref=\"formData\" :model=\"signData\" label-width=\"110px\" :inline=\"true\">\r\n        <el-form-item label=\"模糊查询：\" prop=\"searchKey\">\r\n          <el-input\r\n            v-model=\"signData.searchKey\"\r\n            placeholder=\"单据编号/收货人/收货地址/收货人电话/源单号\"\r\n            style=\"width:330px;\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"单据状态：\" prop=\"businessStatus\">\r\n          <el-select v-model=\"signData.businessStatus\" placeholder=\"请选择\">\r\n            <el-option\r\n              v-for=\"item in orderStateData\"\r\n              :key=\"item.id\"\r\n              :label=\"item.description\"\r\n              :value=\"item.code\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"入库仓库：\" prop=\"warehouseCode\" label-width=\"100px\">\r\n          <el-select v-model=\"signData.warehouseCode\" style=\"width:185px;\">\r\n            <el-option\r\n              v-for=\"item in warehouseData\"\r\n              :key=\"item.id\"\r\n              :label=\"item.warehouseName\"\r\n              :value=\"item.warehouseCode\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"入库类型：\" prop=\"orderType\">\r\n          <el-select v-model=\"signData.orderType\" placeholder=\"请选择\">\r\n            <el-option\r\n              v-for=\"item in orderTypeData\"\r\n              :key=\"item.id\"\r\n              :label=\"item.description\"\r\n              :value=\"item.code\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <time-interval-check :form-data=\"signData\"></time-interval-check>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"searchFormData\" size=\"small\">搜索</el-button>\r\n          <el-button @click=\"resetFormData('formData')\" size=\"small\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n    <div class=\"table_div\">\r\n      <el-button\r\n        type=\"primary\"\r\n        @click=\"addBtnClickEvent\"\r\n        size=\"small\"\r\n        style=\"margin-left:10px;\"\r\n      >新增收货单</el-button>\r\n      <el-button\r\n        :disabled=\"multipleSelectionData.length==0\"\r\n        plain\r\n        @click=\"exportExcel\"\r\n        size=\"small\"\r\n      >导出</el-button>\r\n      <el-table\r\n        ref=\"multipleTable\"\r\n        :data=\"tableData\"\r\n        tooltip-effect=\"dark\"\r\n        style=\"width: 100%\"\r\n        empty-text=\"暂无数据\"\r\n        header-row-class-name=\"item-table-header\"\r\n        @selection-change=\"selectionChange\"\r\n      >\r\n        <el-table-column type=\"selection\" width=\"55\"></el-table-column>\r\n        <el-table-column label=\"收货单号\">\r\n          <template slot-scope=\"scope\">{{ scope.row.orderSn?scope.row.orderSn:'--'}}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"businessStatus\" label=\"单据状态\">\r\n          <template slot-scope=\"scope\">{{ scope.row.businessStatus | filterBusinessStatus}}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"type\" label=\"入库类型\">\r\n          <template slot-scope=\"scope\">{{ scope.row.type | filtersType}}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"warehousingQuantity\" label=\"收货件数\"></el-table-column>\r\n        <el-table-column prop=\"expectedTime\" label=\"预计到货时间\" width=\"160px\">\r\n          <template slot-scope=\"scope\">{{ scope.row.expectedTime | timestampToTime}}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"logistics\" label=\"承运商\">\r\n          <template slot-scope=\"scope\">{{ scope.row.logistics?scope.row.logistics:'--'}}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"logisticsSn\" label=\"运单号\"></el-table-column>\r\n        <el-table-column label=\"入库仓库\">\r\n          <template slot-scope=\"scope\">{{ scope.row.warehouseCode }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"associationSn\" label=\"源单号\"></el-table-column>\r\n        <el-table-column prop=\"createTime\" label=\"创建时间\" width=\"160px\">\r\n          <template slot-scope=\"scope\">{{ scope.row.createTime | timestampToTime}}</template>\r\n        </el-table-column>\r\n        <el-table-column fixed=\"right\" label=\"操作\" width=\"160\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button @click=\"checkBtnClick(scope.row)\" type=\"text\" size=\"small\">查看</el-button>\r\n            <el-button @click=\"obsoleteBtnClick(scope.row)\" type=\"text\" size=\"small\" disabled>作废</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <div class=\"pagination\">\r\n        <el-pagination\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page.sync=\"signData.pageIndex\"\r\n          :page-sizes=\"[10, 20, 30, 40]\"\r\n          :page-size=\"signData.pageSize\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"totalCount\"\r\n        ></el-pagination>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport TimeIntervalCheck from \"@/components/TimeIntervalCheck\";\r\nexport default {\r\n  components: {\r\n    TimeIntervalCheck\r\n  },\r\n  data() {\r\n    return {\r\n      signData: {\r\n        //搜索\r\n        searchKey: \"\",\r\n        //单据状态\r\n        businessStatus: \"\",\r\n        //入库仓库\r\n        warehouseCode: \"\",\r\n        //入库类型\r\n        orderType: \"\",\r\n        //开始时间\r\n        createTimeBegin: \"\",\r\n        //结束时间\r\n        createTimeEnd: \"\",\r\n        //当前页数\r\n        pageIndex: 1,\r\n        //每页要显示的数据条数,默认10条\r\n        pageSize: 10\r\n      },\r\n      //表格数据源\r\n      tableData: [],\r\n      //总条数\r\n      totalCount: 1,\r\n      //单据状态\r\n      orderStateData: [],\r\n      //入库类型数据\r\n      orderTypeData: [],\r\n      //仓库数据\r\n      warehouseData: [],\r\n      //存储需要导出的数据\r\n      multipleSelectionData: []\r\n    };\r\n  },\r\n  filters: {\r\n    //过滤订单状态\r\n    filterBusinessStatus(val) {\r\n      switch (val) {\r\n        case \"08001\":\r\n          return \"待收货\";\r\n          break;\r\n        case \"08002\":\r\n          return \"部分已收货\";\r\n          break;\r\n        case \"08003\":\r\n          return \"异常完成\";\r\n          break;\r\n        case \"08004\":\r\n          return \"已完成\";\r\n          break;\r\n        case \"08005\":\r\n          return \"已作废\";\r\n          break;\r\n      }\r\n    },\r\n    //过滤入库类型\r\n    filtersType(val) {\r\n      switch (val) {\r\n        case \"05001\":\r\n          return \"采购入库\";\r\n          break;\r\n        case \"05002\":\r\n          return \"退货入库\";\r\n          break;\r\n        case \"05003\":\r\n          return \"其他入库\";\r\n          break;\r\n        case \"04004\":\r\n          return \"已完成\";\r\n          break;\r\n        case \"04005\":\r\n          return \"已作废\";\r\n          break;\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    //得到单据状态的数据\r\n    this.getOrderStateByCode();\r\n    //得到仓库数据\r\n    this.geSendWarehouseData();\r\n    //得到收货单列表数据\r\n    this.getReceiveOrderTableData();\r\n  },\r\n  methods: {\r\n    //得到单据状态的数据\r\n    getOrderStateByCode() {\r\n      //得到订单状态数据 code==01 订单状态\r\n      this.request(\r\n        this.api.warehouse.warehouseBase_configurationDictionaryByCode,\r\n        { code: \"CONFIGURABLE08\" }\r\n      ).then(res => {\r\n        this.orderStateData = res;\r\n      });\r\n      //得到入库类型数据 code==05 入库类型\r\n      this.request(\r\n        this.api.warehouse.warehouseBase_configurationDictionaryByCode,\r\n        { code: \"CONFIGURABLE05\" }\r\n      ).then(res => {\r\n        this.orderTypeData = res;\r\n      });\r\n    },\r\n    //得到入货仓库数据\r\n    geSendWarehouseData() {\r\n      this.request(this.api.warehouse.warehouseBase_warehouse_list, {\r\n        isValid: true\r\n      }).then(res => {\r\n        console.log(res);\r\n        this.warehouseData = res.data;\r\n      });\r\n    },\r\n    //得到收货单列表数据\r\n    getReceiveOrderTableData() {\r\n      // let filter = this.$common.deepCopy(this.signData);\r\n      // if (filter.createTimeEnd != null) {\r\n      //   let date = new Date(filter.createTimeEnd);\r\n      //   let t = (date.getTime() / 1000 + 86399) * 1000;\r\n      //   filter.createTimeEnd = new Date(t);\r\n      // }\r\n      this.request(\r\n        this.api.warehouse.warehouseBase_receiveOrder_list,\r\n        this.signData\r\n      ).then(res => {\r\n        console.log(res);\r\n        this.tableData = res.data;\r\n        this.totalCount = res.totalCount;\r\n      });\r\n    },\r\n    //查询\r\n    searchFormData() {\r\n      this.signData.pageIndex = 1;\r\n      this.getReceiveOrderTableData();\r\n      console.log(\"searchFormData---\");\r\n    },\r\n    //重置\r\n    resetFormData(ruleForm) {\r\n      console.log(\"resetForm----\");\r\n      this.$refs[ruleForm].resetFields();\r\n    },\r\n    //导出\r\n    exportExcel() {\r\n      this.exportExcelSelectData();\r\n      console.log(\r\n        \"导出Excel表格...+++++++++++++++++++multipleSelectionData.length\"\r\n      );\r\n    },\r\n    //新增发货单Btn的点击事件\r\n    addBtnClickEvent() {\r\n      console.log(\"addBtnClick---\");\r\n      this.$router.push({\r\n        path:\r\n          \"/warehouse/warehouse_center/warehouse_manager/receive_order/receive_order_add\"\r\n      });\r\n    },\r\n    //导出选中的数据\r\n    exportExcelSelectData() {\r\n      require.ensure([], () => {\r\n        let { export_json_to_excel } = require(\"@/vendor/Export2Excel\");\r\n        let tHeader = [\r\n          \"收货单号\",\r\n          \"单据状态\",\r\n          \"入库类型\",\r\n          \"收货件数\",\r\n          \"预计到货时间\",\r\n          \"承运商\",\r\n          \"运单号\",\r\n          \"入库仓库\",\r\n          \"源单号\",\r\n          \"创建时间\"\r\n        ];\r\n        // 上面设置Excel的表格第一行的标题\r\n        let filterVal = [\r\n          \"orderSn\",\r\n          \"businessStatusName\",\r\n          \"typeName\",\r\n          \"warehousingQuantity\",\r\n          \"expectedTimeName\",\r\n          \"logistics\",\r\n          \"logisticsSn\",\r\n          \"warehouse\",\r\n          \"associationSn\",\r\n          \"createTimeName\"\r\n        ];\r\n        // 上面的index、nickName、name是tableData里对象的属性\r\n        let list = this.multipleSelectionData; //把data里的multipleSelectionData存到list\r\n        let data = this.formatJson(filterVal, list);\r\n        export_json_to_excel(tHeader, data, \"收货管理表单\");\r\n      });\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => v[j]));\r\n    },\r\n    //表格选择项改变时触发\r\n    selectionChange(val) {\r\n      val.forEach(item => {\r\n        item.businessStatusName = this.$options.filters.filterBusinessStatus(\r\n          item.businessStatus\r\n        );\r\n        item.typeName = this.$options.filters.filtersType(item.type);\r\n        item.expectedTimeName = this.$options.filters.timestampToTime(\r\n          item.expectedTime\r\n        );\r\n        item.createTimeName = this.$options.filters.timestampToTime(\r\n          item.createTime\r\n        );\r\n      });\r\n      this.multipleSelectionData = val;\r\n    },\r\n    //查看Btn的点击事件\r\n    checkBtnClick(row) {\r\n      console.log(\"checkBtnClick---row--\");\r\n      this.$router.push({\r\n        path:\r\n          \"/warehouse/warehouse_center/warehouse_manager/receive_order/receive_order_detail\",\r\n        query: {\r\n          orderSn: row.orderSn\r\n        }\r\n      });\r\n    },\r\n    //作废Btn的点击事件\r\n    obsoleteBtnClick() {\r\n      console.log(\"obsoleteBtnClick---\");\r\n    },\r\n    //每页条数改变时\r\n    handleSizeChange(page) {\r\n      this.signData.pageSize = page;\r\n      this.getReceiveOrderTableData();\r\n    },\r\n    //当前页改变时\r\n    handleCurrentChange(page) {\r\n      this.signData.pageIndex = page;\r\n      this.getReceiveOrderTableData();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.search_div {\r\n  background-color: #fff;\r\n  padding-top: 20px;\r\n  margin: 0 10px;\r\n}\r\n.table_div {\r\n  background-color: #fff;\r\n  padding: 10px;\r\n  margin: 10px;\r\n}\r\n.pagination {\r\n  margin-top: 20px;\r\n  padding-bottom: 10px;\r\n  margin-right: 20px;\r\n  text-align: right;\r\n}\r\n</style>"],"sourceRoot":"src/views/warehouse/warehouse_center/warehouse_manager/receive_order"}]}