{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\workorder\\config\\workOrder_time_list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\workorder\\config\\workOrder_time_list.vue","mtime":1574160264954},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport { getToken } from '@/utils/auth';\nimport codeSet from '@/components/codeSet';\nimport treeDept from '@/components/treeDept';\nimport { filter } from 'minimatch';\nimport { get } from 'http';\nvar token = getToken();\nexport default {\n  name: 'workOrder_time_list',\n  data: function data() {\n    return {\n      job_list_obj: {},\n      jobOrderTime_List_backup: {},\n      warningTypeList: [],\n      // 预警提醒列表\n      \"alarmSets\": [{\n        \"startTime\": null,\n        \"endTime\": null,\n        \"warnType\": null,\n        \"localRemind\": null,\n        \"emailRemind\": null,\n        \"smsRemind\": null,\n        \"signerReceive\": null,\n        \"adminReceive\": null\n      }],\n      formInline: {\n        user: '',\n        region: ''\n      },\n      filtersData: {\n        pageIndex: 1,\n        //当前页码\n        pageSize: 10,\n        //每页数量\n        \"orderBy\": \"createTime\",\n        used: null,\n        //有效状态\n        filter: \"\",\n        //搜索关键字\n        name: \"\",\n        isStart: \"\",\n        startDate: \"\",\n        endDate: \"\"\n      },\n      value: '',\n      storageValArr: [],\n      // 指派单选框\n      radio: '1',\n      // 指派\n      gridData: [],\n      dialogTableVisible: false,\n      dialogFormVisible: false,\n      form: {\n        name: '',\n        region: '',\n        date1: '',\n        date2: '',\n        delivery: false,\n        type: [],\n        resource: '',\n        desc: ''\n      },\n      formLabelWidth: '120px'\n    };\n  },\n  created: function created() {\n    var that = this;\n    this.getJobOrderTime_List();\n    this.getWarningTypeList();\n  },\n  activated: function activated() {\n    this.getJobOrderTime_List();\n  },\n  methods: {\n    /**\r\n    * 获取预警类型\r\n    */\n    getWarningTypeList: function getWarningTypeList() {\n      var that = this;\n      this.request(that.api.job_order.getWarningType_List).then(function (res) {\n        that.warningTypeList = res.data;\n      });\n    },\n\n    /**\r\n     * 编辑\r\n     */\n    timeRedact: function timeRedact(id) {\n      this.href('workorder/config/workOrder_time_redact', {\n        id: id\n      });\n    },\n    // 点击页数\n    handleCurrentChange: function handleCurrentChange(pageIndex) {\n      this.filtersData.pageIndex = pageIndex;\n      this.getJobOrderTime_List();\n    },\n    // 点击每页多少条数\n    handleSizeChange: function handleSizeChange(pageSize) {\n      this.filtersData.pageSize = pageSize;\n      this.getJobOrderTime_List();\n    },\n\n    /**\r\n     * 查看预警\r\n     */\n    examineWarning: function examineWarning(scope) {\n      var _this = this;\n\n      if (!scope) return;\n      this.alarmSets = JSON.parse(JSON.stringify(scope));\n      if (!this.alarmSets.length > 0) return;\n      this.alarmSets.forEach(function (item, index) {\n        item.endTime = _this.formattingTime(item.endTime);\n      });\n      this.dialogTableVisible = true;\n    },\n    saveTimeUpdate: function saveTimeUpdate(isStart, index) {\n      var that = this,\n          data = that.jobOrderTime_List_backup.data[index];\n      data.isStart = isStart ? 1 : 0;\n      this.request(that.api.job_order.jobOrderTimeUpdate, data).then(function (res) {\n        that.warn('启停状态更改成功！', 'success');\n        that.getJobOrderTime_List();\n      });\n    },\n\n    /**\r\n     * 提示\r\n     */\n    warn: function warn(message, type) {\n      this.$message({\n        message: message,\n        type: type || 'warning'\n      });\n    },\n\n    /**\r\n     * 查询工单列表\r\n     */\n    getJobOrderTime_List: function getJobOrderTime_List(pageIndex, pageSize) {\n      var _this2 = this;\n\n      var that = this;\n      this.request(that.api.job_order.getJobOrderTime_List, this.filtersData).then(function (res) {\n        _this2.jobOrderTime_List_backup = JSON.parse(JSON.stringify(res));\n        res.data.forEach(function (item, index) {\n          // 适用工单字段拼接处理\n          item._applyWorkOrders = '';\n          if (!item.applyWorkOrders.length > 0) return;\n          item.applyWorkOrders.forEach(function (items, indexs) {\n            if (items.workOrderName) item._applyWorkOrders += \"\".concat(items.workOrderName, \"\\u3001\");\n          });\n          item._applyWorkOrders = item._applyWorkOrders.replace(/、$/g, ''); // 处理时长字段拼接处理\n\n          item._handleTime = item.handleTime ? that.formattingTime(item.handleTime) : ''; // 启停状态字段处理\n\n          item.isStart = item.isStart ? true : false;\n        });\n        that.job_list_obj = res;\n      });\n    },\n\n    /**\r\n     * 格式化工单时间段\r\n     * @param { String } str 需要转换的字符串 如：'1-0-1-0'\r\n     * @return { String } str 如：'01-00-01-00'\r\n     */\n    formattingTime: function formattingTime(str) {\n      var arr = str.split('-');\n      return \"\".concat(this.replenishZero(arr[0]), \"\\u5929\").concat(this.replenishZero(arr[1]), \"\\u65F6\").concat(this.replenishZero(arr[2]), \"\\u5206\").concat(this.replenishZero(arr[3]), \"\\u79D2\");\n    },\n\n    /**\r\n     * 补零函数\r\n     * @param { Nunber | String } item 数字或数字字符串 如： 1，'1'\r\n     * @return { String } 如：'01'\r\n     */\n    replenishZero: function replenishZero(item) {\n      item = parseInt(item);\n      return item < 10 ? \"0\".concat(item) : item;\n    },\n\n    /**\r\n     * 新增工单\r\n     */\n    workOrder_add: function workOrder_add() {\n      this.$router.push({\n        path: '/workOrder_add',\n        name: 'workOrder_add'\n      });\n    },\n\n    /**\r\n     * 跳转工单详情\r\n     */\n    href: function href(routeName, param) {\n      this.$router.push({\n        path: '/' + routeName,\n        query: param\n      });\n    },\n\n    /**\r\n     * 删除工单\r\n     */\n    open: function open(scope) {\n      var _this3 = this;\n\n      var that = this;\n      console.log(scope);\n      this.$confirm('确定要删除吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        that.request(that.api.job_order.jobOrderTimeDelete, {\n          id: scope.id\n        }).then(function (res) {\n          _this3.$message({\n            type: 'succeed',\n            message: '删除成功！'\n          }); // 如果数据大于一条，则直接请求列表\n\n\n          if (that.job_list_obj.data.length > 1) {\n            that.getJobOrderTime_List();\n          } else {\n            // 如果是第一页直接请求列表，负责页数减一再请求\n            if (that.filtersData.pageIndex == 1) {\n              that.getJobOrderTime_List();\n            } else {\n              that.filtersData.pageIndex--;\n              that.getJobOrderTime_List();\n            }\n          }\n        });\n      }).catch(function () {\n        _this3.$message({\n          type: 'info',\n          message: '已取消删除！'\n        });\n      });\n    },\n\n    /**\r\n     * 领取工单\r\n     */\n    open2: function open2() {\n      this.$message({\n        message: '工单领取成功！',\n        type: 'success'\n      });\n    },\n\n    /**\r\n     * 模糊搜索\r\n     */\n    handleSearch: function handleSearch() {\n      this.filtersData.pageIndex = 1;\n      this.getJobOrderTime_List();\n    },\n\n    /**\r\n     * 搜索重置\r\n     */\n    handleResetFilters: function handleResetFilters() {\n      Object.assign(this.filtersData, {\n        name: \"\",\n        isStart: \"\",\n        startDate: \"\",\n        endDate: \"\"\n      });\n    }\n  },\n  components: {\n    codeSet: codeSet,\n    treeDept: treeDept\n  }\n};",{"version":3,"sources":["workOrder_time_list.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- 工单池 -->\r\n<template>\r\n   <div>\r\n      <!-- 指派 -->\r\n      <el-dialog title=\"查看配置预警类型\" :visible.sync=\"dialogTableVisible\">\r\n        <el-table :data=\"alarmSets\" width=\"330\">\r\n          <el-table-column  label=\"预警类型\" align=\"center\">\r\n            <template  slot-scope=\"scope\">\r\n               <div class=\"warnType\" :style=\"{background:item.color}\" v-if=\"scope.row.warnType === item.id\" v-for=\"(item,index) in warningTypeList\" :key=\"index\">{{ item.tag}}</div>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column property=\"endTime\" label=\"预警时间段\" align=\"center\"></el-table-column>\r\n          <el-table-column  label=\"提醒方式\" align=\"center\">\r\n            <template  slot-scope=\"scope\">{{ scope.row.localRemind ? '站内提醒' : ''  }}</template>\r\n          </el-table-column>\r\n          <el-table-column  label=\"接收人\" align=\"center\">\r\n             <template  slot-scope=\"scope\">{{ scope.row.signerReceive && scope.row.signerReceive != 'false' ? '签收人、' : ''  }}{{ scope.row.adminReceive ? '管理者' : ''  }}</template>\r\n          </el-table-column>\r\n        </el-table>\r\n         <div slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"dialogTableVisible = false\" size=\"small\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"dialogTableVisible = false\" size=\"small\" >确 定</el-button>\r\n        </div>\r\n      </el-dialog>\r\n      <!-- 指派 -->\r\n      <!-- 模糊搜索 -->\r\n      <div class=\"item-margin\">\r\n         <el-form\r\n            class=\"item-form\"\r\n            size=\"small\"\r\n            :inline=\"true\"\r\n            :model=\"filtersData\">\r\n            <!-- 模糊查询 -->\r\n            <el-form-item label=\"模糊查询：\">\r\n               <el-input v-model=\"filtersData.name\" @keyup.enter.native=\"handleSearch\" placeholder=\"时限管理名称\"></el-input>\r\n            </el-form-item>\r\n            <!-- 状态 -->\r\n            <el-form-item label=\"状态：\">\r\n              <el-select v-model=\"filtersData.isStart\">\r\n                 <el-option v-for=\"item in this.$common.usedOptions()\" :label=\"item.name\" :key=\"item.id\" :value=\"item.id\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <br/>\r\n            <!-- 选择时间 -->\r\n            <el-form-item label=\"创建时间：\" prop=\"startDate\">\r\n               <el-date-picker value-format=\"yyyy-MM-dd\" v-model=\"filtersData.startDate\" type=\"date\" placeholder=\"开始日期\"></el-date-picker>\r\n            </el-form-item>\r\n            <el-form-item prop=\"endDate\">\r\n               <el-date-picker value-format=\"yyyy-MM-dd\" v-model=\"filtersData.endDate\" type=\"date\" placeholder=\"结束日期\"></el-date-picker>\r\n            </el-form-item>\r\n            <!-- 搜索，重置 -->\r\n            <el-form-item>\r\n               <el-button @click=\"handleSearch\" type=\"primary\" plain size=\"small\">搜索</el-button>\r\n               <el-button @click=\"handleResetFilters\" size=\"small\">重置</el-button>\r\n            </el-form-item>\r\n         </el-form>\r\n      </div>\r\n      <!-- 模糊搜索 -->\r\n      <!-- 工单列表 -->\r\n      <div class=\"item-margin\">\r\n         <div class=\"item-table\">\r\n            <el-button type=\"primary\" size=\"small\" class=\"ml-20 mt-24\" @click=\"href('workorder/config/workOrder_time_add')\">新增</el-button>\r\n            <el-table\r\n                class=\"mt-20\"\r\n               :data=\"job_list_obj.data\"\r\n               stripe\r\n               empty-text=\"暂无数据\"\r\n               header-align=\"center\"\r\n               header-row-class-name=\"item-table-header\"\r\n               :highlight-current-row=\"true\">\r\n               <!-- 时限管理名称 -->\r\n               <el-table-column prop=\"\" align=\"center\" label=\"时限管理名称\" min-width=\"100\">\r\n                  <template slot-scope=\"scope\">\r\n                     {{ scope.row.name }}\r\n                  </template>\r\n               </el-table-column>\r\n               <!-- 适用工单 -->\r\n               <el-table-column prop=\"\" :show-overflow-tooltip=\"true\" align=\"center\" label=\"适用工单\" min-width=\"100\">\r\n                  <template slot-scope=\"scope\">\r\n                     <span  class=\"blueness\">{{ scope.row._applyWorkOrders ? scope.row._applyWorkOrders : '--' }}</span>\r\n                  </template>\r\n               </el-table-column>\r\n               <!-- 处理时间时长 -->\r\n               <el-table-column prop=\"\" align=\"center\" label=\"处理时间时长\" min-width=\"100\">\r\n                  <template slot-scope=\"scope\">\r\n                     <span  class=\"blueness\">{{ scope.row._handleTime ? scope.row._handleTime : '--' }}</span>\r\n                  </template>\r\n               </el-table-column>\r\n               <!-- 配置预警 -->\r\n               <el-table-column align=\"center\" label=\"配置预警\" min-width=\"100\">\r\n                  <template slot-scope=\"scope\">\r\n                  <span @click=\"examineWarning(scope.row.alarmSets)\" class=\"blueness\">查看</span>\r\n                  </template>\r\n               </el-table-column>\r\n               <!-- 更新时间 -->\r\n               <el-table-column prop=\"\" align=\"center\" label=\"更新时间\" min-width=\"100\">\r\n                  <template slot-scope=\"scope\">\r\n                        {{ scope.row.updateTime | timestampToTime }}\r\n                     </template>\r\n               </el-table-column>\r\n               <!-- 启停状态 -->\r\n               <el-table-column align=\"center\" label=\"启停状态\" min-width=\"100\">\r\n                  <template slot-scope=\"scope\">\r\n                     <el-switch\r\n                        v-model=\"scope.row.isStart\"\r\n                        active-color=\"#13ce66\"\r\n                        @change=\"saveTimeUpdate(scope.row.isStart, scope.$index, scope.row)\"\r\n                        inactive-color=\"#9d9d9d\"\r\n                     ></el-switch>\r\n                  </template>\r\n               </el-table-column>\r\n               <!-- 操作 -->\r\n               <el-table-column\r\n                  fixed=\"right\"\r\n                  label-class-name=\"text-center\"\r\n                  class-name=\"text-center\"\r\n                  align=\"center\"\r\n                  label=\"操作\"\r\n                  width=\"180\">\r\n                  <template slot-scope=\"scope\">\r\n                     <el-button type=\"text\" size=\"small\" @click=\"timeRedact(scope.row.id)\">编辑</el-button>\r\n                     <el-button type=\"text\" @click=\"open(scope.row)\" size=\"small\">删除</el-button>\r\n                  </template>\r\n               </el-table-column>\r\n            </el-table>\r\n            <div class=\"pagination mt-10 mb-20\">\r\n         <!-- 分页 -->\r\n         <el-pagination\r\n            class=\"mr-20\"\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"filtersData.pageIndex\"\r\n            :page-sizes=\"[10,20,30,40,50]\"\r\n            :page-size=\"filtersData.pageSize\"\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=\"job_list_obj.totalCount\"\r\n         ></el-pagination>\r\n        </div>\r\n         </div>\r\n      </div>\r\n      <!-- 工单列表 -->\r\n   </div>\r\n</template>\r\n<!-- 工单池 -->\r\n<script>\r\nimport axios from 'axios'\r\nimport {getToken} from '@/utils/auth'\r\nimport codeSet from '@/components/codeSet'\r\nimport treeDept from '@/components/treeDept'\r\nimport { filter } from 'minimatch';\r\nimport { get } from 'http';\r\n\r\nlet token=getToken()\r\n\r\nexport default {\r\n   name:'workOrder_time_list',\r\n   data() {\r\n      return{\r\n         job_list_obj:{},\r\n         jobOrderTime_List_backup:{},\r\n         warningTypeList:[],\r\n         // 预警提醒列表\r\n         \"alarmSets\":[\r\n            {\r\n               \"startTime\":null,\r\n               \"endTime\":null,\r\n               \"warnType\":null,\r\n               \"localRemind\":null,\r\n               \"emailRemind\":null,\r\n               \"smsRemind\":null,\r\n               \"signerReceive\":null,\r\n               \"adminReceive\":null\r\n            }\r\n         ],\r\n         formInline:{\r\n            user: '',\r\n            region: ''\r\n         },\r\n         filtersData:{\r\n            pageIndex: 1, //当前页码\r\n            pageSize: 10, //每页数量\r\n            \"orderBy\":\"createTime\",\r\n            used: null, //有效状态\r\n            filter: \"\", //搜索关键字\r\n            name:\"\",\r\n            isStart:\"\",\r\n            startDate: \"\",\r\n            endDate: \"\"\r\n         },\r\n         value: '',\r\n         storageValArr:[],\r\n         // 指派单选框\r\n         radio: '1',\r\n         // 指派\r\n         gridData: [],\r\n        dialogTableVisible: false,\r\n        dialogFormVisible: false,\r\n        form: {\r\n          name: '',\r\n          region: '',\r\n          date1: '',\r\n          date2: '',\r\n          delivery: false,\r\n          type: [],\r\n          resource: '',\r\n          desc: ''\r\n        },\r\n        formLabelWidth: '120px'\r\n      }\r\n   },\r\n   created() {\r\n      const that = this;\r\n      this.getJobOrderTime_List();\r\n      this.getWarningTypeList();\r\n   },\r\n   activated() {\r\n      this.getJobOrderTime_List();\r\n   },\r\n   methods: {\r\n        /**\r\n     * 获取预警类型\r\n     */\r\n    getWarningTypeList() {\r\n      const that = this;\r\n\r\n      this.request(\r\n        that.api.job_order.getWarningType_List,\r\n      ).then(res => {\r\n        that.warningTypeList = res.data;\r\n      });\r\n    },\r\n      /**\r\n       * 编辑\r\n       */\r\n      timeRedact(id) {\r\n         this.href('workorder/config/workOrder_time_redact',{\r\n            id:id\r\n         })\r\n      },\r\n      // 点击页数\r\n      handleCurrentChange(pageIndex){\r\n         this.filtersData.pageIndex = pageIndex;\r\n         this.getJobOrderTime_List();\r\n      },\r\n      // 点击每页多少条数\r\n      handleSizeChange(pageSize){\r\n         this.filtersData.pageSize = pageSize;\r\n         this.getJobOrderTime_List();\r\n      },\r\n      /**\r\n       * 查看预警\r\n       */\r\n      examineWarning(scope) {\r\n         if(!scope) return;\r\n         this.alarmSets = JSON.parse(JSON.stringify(scope));\r\n         if(!this.alarmSets.length > 0) return;\r\n         this.alarmSets.forEach((item, index) => {\r\n            item.endTime = this.formattingTime(item.endTime);\r\n         });\r\n         this.dialogTableVisible = true;\r\n      },\r\n      saveTimeUpdate(isStart,index) {\r\n         const that = this,\r\n               data = that.jobOrderTime_List_backup.data[index];\r\n\r\n         data.isStart = isStart ? 1 : 0;\r\n         this.request(\r\n            that.api.job_order.jobOrderTimeUpdate,\r\n            data\r\n         ).then(res => {\r\n            that.warn('启停状态更改成功！','success');\r\n            that.getJobOrderTime_List();\r\n         });\r\n      },\r\n      /**\r\n       * 提示\r\n       */\r\n      warn(message, type) {\r\n         this.$message({\r\n         message: message,\r\n         type: type || 'warning'\r\n         });\r\n      },\r\n      /**\r\n       * 查询工单列表\r\n       */\r\n      getJobOrderTime_List(pageIndex, pageSize) {\r\n         const that = this;\r\n\r\n         this.request(\r\n         that.api.job_order.getJobOrderTime_List,\r\n         this.filtersData\r\n         ).then(res => {\r\n            this.jobOrderTime_List_backup = JSON.parse(JSON.stringify(res));\r\n            res.data.forEach((item, index) => {\r\n               // 适用工单字段拼接处理\r\n               item._applyWorkOrders = '';\r\n               if(!item.applyWorkOrders.length > 0) return;\r\n               item.applyWorkOrders.forEach((items, indexs) => {\r\n                  if(items.workOrderName) item._applyWorkOrders += `${items.workOrderName}、`;\r\n               });\r\n               item._applyWorkOrders = item._applyWorkOrders.replace(/、$/g,'');\r\n               // 处理时长字段拼接处理\r\n               item._handleTime = item.handleTime ? that.formattingTime(item.handleTime) : '';\r\n               // 启停状态字段处理\r\n               item.isStart = item.isStart ? true : false;\r\n            });\r\n            that.job_list_obj = res;\r\n         });\r\n      },\r\n      /**\r\n       * 格式化工单时间段\r\n       * @param { String } str 需要转换的字符串 如：'1-0-1-0'\r\n       * @return { String } str 如：'01-00-01-00'\r\n       */\r\n      formattingTime(str) {\r\n         let arr = str.split('-');\r\n         return `${this.replenishZero(arr[0])}天${this.replenishZero(arr[1])}时${this.replenishZero(arr[2])}分${this.replenishZero(arr[3])}秒`;\r\n      },\r\n      /**\r\n       * 补零函数\r\n       * @param { Nunber | String } item 数字或数字字符串 如： 1，'1'\r\n       * @return { String } 如：'01'\r\n       */\r\n      replenishZero(item) {\r\n         item = parseInt(item);\r\n\r\n         return item < 10 ? `0${item}` : item;\r\n      },\r\n\r\n      /**\r\n       * 新增工单\r\n       */\r\n      workOrder_add() {\r\n        this.$router.push({\r\n            path: '/workOrder_add',\r\n            name: 'workOrder_add'\r\n         });\r\n      },\r\n      /**\r\n       * 跳转工单详情\r\n       */\r\n      href(routeName, param) {\r\n         this.$router.push({\r\n            path: '/' + routeName,\r\n            query: param\r\n         })\r\n      },\r\n      /**\r\n       * 删除工单\r\n       */\r\n      open(scope) {\r\n         const that = this;\r\n         console.log(scope)\r\n        this.$confirm('确定要删除吗？', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          that.request(\r\n             that.api.job_order.jobOrderTimeDelete,\r\n             {\r\n                id:scope.id\r\n             }\r\n          ).then(res => {\r\n             this.$message({\r\n               type: 'succeed',\r\n               message: '删除成功！'\r\n            });\r\n            // 如果数据大于一条，则直接请求列表\r\n            if(that.job_list_obj.data.length > 1) {\r\n               that.getJobOrderTime_List();\r\n            }else{\r\n               // 如果是第一页直接请求列表，负责页数减一再请求\r\n               if(that.filtersData.pageIndex == 1) {\r\n                  that.getJobOrderTime_List();\r\n               }else{\r\n                  that.filtersData.pageIndex --;\r\n                  that.getJobOrderTime_List();\r\n               }\r\n            }\r\n          })\r\n        }).catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '已取消删除！'\r\n          });\r\n        });\r\n      },\r\n      /**\r\n       * 领取工单\r\n       */\r\n      open2() {\r\n         this.$message({\r\n            message: '工单领取成功！',\r\n            type: 'success'\r\n         });\r\n      },\r\n      /**\r\n       * 模糊搜索\r\n       */\r\n      handleSearch() {\r\n         this.filtersData.pageIndex = 1;\r\n         this.getJobOrderTime_List();\r\n      },\r\n      /**\r\n       * 搜索重置\r\n       */\r\n      handleResetFilters() {\r\n         Object.assign(this.filtersData, {\r\n            name:\"\",\r\n            isStart:\"\",\r\n            startDate: \"\",\r\n            endDate: \"\"\r\n         });\r\n      },\r\n   },\r\n   components:{\r\n      codeSet,\r\n      treeDept\r\n   },\r\n}\r\n</script>\r\n<style  lang=\"less\" scoped>\r\n   .blueness{\r\n      color: #1E90FF;\r\n   }\r\n   h5 {\r\n     color: #222;\r\n     margin-left: -15px;\r\n   }\r\n   .test {\r\n     color: #9d9d9d;\r\n   }\r\n   .warnType{\r\n      color: #fff;\r\n      border-radius: 5px;\r\n   }\r\n</style>\r\n"],"sourceRoot":"src/views/workorder/config"}]}