{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\OS\\stockOrder\\putOrder\\putOrder_check.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\OS\\stockOrder\\putOrder\\putOrder_check.vue","mtime":1572415124364},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      //标记商品流水号table框\n      showPopover: false,\n      // 商品数据\n      orderShopData: {},\n      //仓库类型名称\n      warehouseTypeName: \"\",\n      //记录总的商品数\n      totalPage: 0,\n      shopData: {\n        warehouseSn: '',\n        pageIndex: 1,\n        pageSize: 10\n      },\n      //商品流水号数据\n      serialNumberData: []\n    };\n  },\n  //过滤器\n  filters: {\n    //过滤仓库\n    filterWarehouseCode: function filterWarehouseCode(val) {\n      switch (val) {\n        case \"01\":\n          return \"正常仓库\";\n          break;\n\n        case \"02\":\n          return \"网销渠道仓\";\n          break;\n\n        default:\n          return \"--\";\n          break;\n      }\n    },\n    //过滤仓库类型\n    filterWarehouseType: function filterWarehouseType(val) {\n      switch (val) {\n        case \"030201\":\n          return \"采购类型\";\n          break;\n\n        case \"010101\":\n          return \"网销类型\";\n          break;\n\n        case \"020101\":\n          return \"渠道类型\";\n          break;\n\n        case \"020301\":\n          return \"门店类型\";\n          break;\n\n        default:\n          return \"--\";\n          break;\n      }\n    }\n  },\n  created: function created() {\n    console.log(this.$route.query.warehouseSn);\n\n    if (this.$route.query.warehouseSn) {\n      this.shopData.warehouseSn = this.$route.query.warehouseSn; //得到详情数据\n\n      this.getDetailData();\n    }\n  },\n  methods: {\n    //得到详情数据\n    getDetailData: function getDetailData() {\n      var _this = this;\n\n      this.request(this.api.order.warehouseStorageOrder_getByWarehouseSn, this.shopData).then(function (res) {\n        console.log(res);\n        _this.orderShopData = res;\n        _this.totalPage = res.totalCount;\n      });\n    },\n    //根据仓库编码得到仓库类型\n    getWarehouseTypeByCode: function getWarehouseTypeByCode(code) {\n      this.request(this.api.system.warehouse_getByCode, {\n        code: code\n      }).then(function (data) {\n        console.log(data); // this.warehouseTypeName=data.\n      });\n    },\n    //顶部小箭头，点击返回ditch路由页面\n    backToPreRoute: function backToPreRoute() {\n      this.$router.go(-1);\n    },\n    //点击产看更多商品\n    showOrderShopView: function showOrderShopView() {\n      console.log(\"showOrderShopView\");\n    },\n    //每页条数改变时\n    handleSizeChange: function handleSizeChange(page) {\n      console.log(page);\n      this.shopData.pageSize = page; //刷新数据\n\n      this.getDetailData();\n    },\n    // 当前页改变时\n    handleCurrentChange: function handleCurrentChange(page) {\n      console.log(page);\n      this.shopData.pageIndex = page; //刷新数据\n\n      this.getDetailData();\n    },\n    //得到商品流水号\n    warehousingQuantityClickEvent: function warehousingQuantityClickEvent(row) {\n      var _this2 = this;\n\n      console.log(row);\n      this.request(this.api.order.warehouseStorageOrder_serialNumberListByWarehouseSnAndProductGoodsCode, {\n        warehouseSn: this.orderShopData.warehouseSn,\n        productGoodsCode: row.productGoodsCode\n      }).then(function (data) {\n        console.log(data);\n        _this2.serialNumberData = data;\n        _this2.showPopover = true;\n      });\n    }\n  }\n};",{"version":3,"sources":["putOrder_check.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"middle\">\r\n      <h3>入库单号: {{orderShopData.warehouseSn}}</h3>\r\n      <!-- <span>待审核</span> -->\r\n    </div>\r\n\r\n    <div class=\"middle-msg\">\r\n      <span>入库仓：{{orderShopData.warehouse?orderShopData.warehouse:\"--\"}}</span>\r\n      <span>仓库类型：{{warehouseTypeName?warehouseTypeName:\"--\"}}</span>\r\n      <span>入库类型：{{orderShopData.warehouseType | filterWarehouseType}}</span>\r\n      <span>入库人：{{orderShopData.operator?orderShopData.operator:\"--\"}}</span>\r\n      <span>入库时间：{{orderShopData.warehouseTime | timestampToTime}}</span>\r\n      <span>源单号：{{orderShopData.orderSn?orderShopData.orderSn:\"--\"}}</span>\r\n      <span>货主：{{orderShopData.goodsOwner?orderShopData.goodsOwner:\"--\"}}</span>\r\n    </div>\r\n    <div class=\"shopView\">\r\n      <span>入库商品</span>\r\n      <el-table\r\n        :data=\"orderShopData.warehouseOrderGoodsVOList\"\r\n        stripe\r\n        style=\"width: 100%\"\r\n        header-row-class-name=\"item-table-header\"\r\n      >\r\n        <el-table-column prop=\"productCode\" label=\"商品款号\" width></el-table-column>\r\n        <el-table-column prop=\"productGoodsCode\" label=\"商品货号\" width align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"goodsName\" label=\"商品名称\" width align=\"center\"></el-table-column>\r\n        <el-table-column label=\"商品图片\" align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            <img :src=\"scope.row.goodsImage\" style=\"width:32px;height:32px;\" />\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"brand\" label=\"品牌\" width align=\"center\">\r\n          <template slot-scope=\"scope\">{{scope.row.brand?scope.row.brand:'--'}}</template>\r\n        </el-table-column>\r\n        <el-table-column label=\"入库数量\" width align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            <span\r\n              v-popover:popover\r\n              class=\"blueSpan\"\r\n              @click=\"warehousingQuantityClickEvent(scope.row)\"\r\n            >{{scope.row.warehousingQuantity}}</span>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <div class=\"block\">\r\n        <el-pagination\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page=\"shopData.pageIndex\"\r\n          :page-sizes=\"[10,20,30,40]\"\r\n          :page-size=\"10\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"totalPage\"\r\n        ></el-pagination>\r\n      </div>\r\n      <div>\r\n        <el-popover\r\n          ref=\"popover\"\r\n          v-model=\"showPopover\"\r\n          placement=\"right\"\r\n          width=\"400\"\r\n          trigger=\"click\"\r\n        >\r\n          <span>查看商品流水号：</span>\r\n          <el-table :data=\"serialNumberData\" max-height=\"300\" header-row-class-name=\"item-table-header\">\r\n            <el-table-column align=\"center\" label=\"商品流水号\">\r\n              <template slot-scope=\"scope\">\r\n                <span>{{scope.row}}</span>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n          <span class=\"closeSpan\" @click=\"showPopover=false\">关闭</span>\r\n        </el-popover>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      //标记商品流水号table框\r\n      showPopover: false,\r\n\r\n      // 商品数据\r\n      orderShopData: {},\r\n      //仓库类型名称\r\n      warehouseTypeName: \"\",\r\n\r\n     //记录总的商品数\r\n      totalPage:0,\r\n      shopData:{\r\n        warehouseSn:'',\r\n        pageIndex:1,\r\n        pageSize:10\r\n      },\r\n\r\n      //商品流水号数据\r\n      serialNumberData: []\r\n    };\r\n  },\r\n  //过滤器\r\n  filters: {\r\n    //过滤仓库\r\n    filterWarehouseCode(val) {\r\n      switch (val) {\r\n        case \"01\":\r\n          return \"正常仓库\";\r\n          break;\r\n        case \"02\":\r\n          return \"网销渠道仓\";\r\n          break;\r\n        default:\r\n          return \"--\"\r\n          break;\r\n      }\r\n    },\r\n    //过滤仓库类型\r\n    filterWarehouseType(val) {\r\n      switch (val) {\r\n        case \"030201\":\r\n          return \"采购类型\";\r\n          break;\r\n        case \"010101\":\r\n          return \"网销类型\";\r\n          break;\r\n        case \"020101\":\r\n          return \"渠道类型\";\r\n          break;\r\n        case \"020301\":\r\n          return \"门店类型\";\r\n          break;\r\n        default:\r\n          return \"--\"\r\n          break;\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    console.log(this.$route.query.warehouseSn);\r\n    if (this.$route.query.warehouseSn) {\r\n      this.shopData.warehouseSn=this.$route.query.warehouseSn\r\n      //得到详情数据\r\n      this.getDetailData();\r\n    }\r\n  },\r\n  methods: {\r\n    //得到详情数据\r\n    getDetailData() {\r\n      this.request(this.api.order.warehouseStorageOrder_getByWarehouseSn, this.shopData).then(res => {\r\n        console.log(res);\r\n        this.orderShopData = res;\r\n        this.totalPage=res.totalCount\r\n      });\r\n    },\r\n    //根据仓库编码得到仓库类型\r\n    getWarehouseTypeByCode(code) {\r\n      this.request(this.api.system.warehouse_getByCode, { code: code }).then(\r\n        data => {\r\n          console.log(data);\r\n          // this.warehouseTypeName=data.\r\n        }\r\n      );\r\n    },\r\n    //顶部小箭头，点击返回ditch路由页面\r\n    backToPreRoute() {\r\n      this.$router.go(-1)\r\n    },\r\n    //点击产看更多商品\r\n    showOrderShopView() {\r\n      console.log(\"showOrderShopView\");\r\n    },\r\n    //每页条数改变时\r\n    handleSizeChange(page) {\r\n      console.log(page);\r\n      this.shopData.pageSize=page\r\n      //刷新数据\r\n      this.getDetailData()\r\n    },\r\n    // 当前页改变时\r\n    handleCurrentChange(page) {\r\n      console.log(page);\r\n      this.shopData.pageIndex=page\r\n      //刷新数据\r\n      this.getDetailData()\r\n    },\r\n    //得到商品流水号\r\n    warehousingQuantityClickEvent(row) {\r\n      console.log(row);\r\n      this.request(\r\n        this.api.order.warehouseStorageOrder_serialNumberListByWarehouseSnAndProductGoodsCode,\r\n        { warehouseSn: this.orderShopData.warehouseSn, productGoodsCode:row.productGoodsCode}\r\n      ).then(data=>{\r\n        console.log(data)\r\n        this.serialNumberData=data\r\n        this.showPopover=true\r\n      })\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.title {\r\n  background-color: #fff;\r\n  padding: 15px 0 15px 30px;\r\n}\r\n.closeSpan{\r\n  display: inline-block;\r\n  margin-top: 10px;\r\n  margin-left: 45%;\r\n}\r\n.title > span {\r\n  display: inline-block;\r\n  background-color: #fff;\r\n  margin-left: 3px;\r\n}\r\n.middle {\r\n  background-color: #fff;\r\n  margin: 10px 10px 0;\r\n  padding: 10px;\r\n  position: relative;\r\n  border-bottom: 1px solid #ccc;\r\n}\r\n.middle > span {\r\n  position: absolute;\r\n  top: 17px;\r\n  left: 415px;\r\n  background-color: pink;\r\n  padding: 0 5px;\r\n  border-radius: 3px;\r\n  color: #fff;\r\n}\r\n.middle-msg {\r\n  background-color: #fff;\r\n  margin: 0 10px;\r\n  padding: 25px 20px;\r\n  position: relative;\r\n  border-bottom: 1px solid #ccc;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n.btnLabel {\r\n  color: plum;\r\n  position: absolute;\r\n  right: 20px;\r\n  bottom: 10px;\r\n}\r\n.transition-box {\r\n  margin-bottom: 10px;\r\n  width: 100%;\r\n  background-color: #fff;\r\n  color: #222;\r\n  box-sizing: border-box;\r\n  margin-right: 20px;\r\n  padding: 10px;\r\n  font-weight: 700;\r\n}\r\n.shopView {\r\n  padding: 20px 10px;\r\n  background-color: #fff;\r\n  margin: 10px;\r\n  span {\r\n    font-weight: bold;\r\n    color: #222;\r\n    display: inline-block;\r\n    margin-bottom: 20px;\r\n  }\r\n  .blueSpan {\r\n    color: #409eff;\r\n  }\r\n}\r\n/* .el-table /deep/ .shopTable{\r\n      color:#222;\r\n      font-weight: bold;\r\n  } */\r\n.logistics {\r\n  background-color: #fff;\r\n  margin: 10px;\r\n  height: 100%;\r\n  margin-bottom: 0;\r\n  padding-top: 20px;\r\n  padding-left: 30px;\r\n}\r\n.logistics > div::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n.logistics > div {\r\n  height: 200px;\r\n  background-color: #fff;\r\n  overflow: hidden;\r\n  overflow-x: hidden;\r\n  overflow-y: scroll;\r\n}\r\n</style>\r\n\r\n\r\n\r\n"],"sourceRoot":"src/views/OS/stockOrder/putOrder"}]}