{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\scb\\goods\\goods_list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\scb\\goods\\goods_list.vue","mtime":1579154894152},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'goods_list',\n  data: function data() {\n    return {\n      // table选择商品\n      checkedTableData_product: [],\n      type: null,\n      // table选择商品\n      checkedTableData_scb: [],\n      isAllAddProduct: false,\n      ruleForm: {\n        cateIdArr: []\n      },\n      categories_categoriesTreeList_data: [],\n      addProductClassItemData: {},\n      dialogForm: false,\n      onSaleStatusList: {\n        'ONSALE': '上架',\n        'OFFSALE': '下架'\n      },\n      categories_getPullDownCategoriesList_data: [],\n      // 创建分类所用-分类下拉（一二级）\n      // 季节列表\n      codeItem_list_get: [],\n      // 快速创建保留门店id\n      fastCreateStoreId: null,\n      // 快速创建剔除已有门店\n      fastCreateTF: true,\n      // 是否编辑\n      isEdit: this.$route.query.isEdit,\n      // 是否快速创建\n      isFastCreate: this.$route.query.isFastCreate,\n      // 单品商品信息是否存在\n      isGoods: false,\n      // 折扣id\n      discountId: this.$route.query.discountId,\n      // 弹框\n      dialogTableVisible: false,\n      // 全部商品\n      goodsList: {},\n      // 已添加\n      goodsCheckList: {},\n      // 检索全部商品\n      goodsFiltersData: {\n        // 当前页码\n        pageIndex: 1,\n        // 每页数量\n        pageSize: 10,\n        // 品类id\n        cateIdentifier: null,\n        // 品牌id\n        brandId: null,\n        // 售价最小值\n        retailPriceLowerLimit: null,\n        // 售价最大值\n        retailPriceUpperLimit: null,\n        // 库存最小值\n        quantityLowerLimit: null,\n        // 库存最大值\n        quantityUpperLimit: null,\n        // 季节\n        seasonalStyleCode: null,\n        // 关键词\n        searchWords: null\n      },\n      // 全部品牌\n      brandOptions: [],\n      // 检索已选商品\n      goodsFiltersDataCheck: {\n        // 当前页码\n        pageIndex: 1,\n        // 每页数量\n        pageSize: 10,\n        // 分类id\n        scbCateId: null,\n        // 品类id\n        cateIdentifier: null,\n        // 售价最小值\n        retailPriceLowerLimit: null,\n        // 售价最大值\n        retailPriceUpperLimit: null,\n        // 品牌id\n        brandId: null,\n        // 上下架状态\n        onSaleStatus: null,\n        // 库存最小值\n        quantityLowerLimit: null,\n        // 库存最大值\n        quantityUpperLimit: null,\n        // 季节\n        seasonalStyleCode: null,\n        // 关键词 \n        searchWords: null\n      },\n      // 单品折扣列表\n      itemDiscountData: {\n        data: []\n      },\n      // 门店列表\n      storeList: {},\n      classData: [],\n      classList: [],\n      cateArr: [],\n      cateArrs: [],\n      props: {\n        value: \"id\",\n        label: \"name\",\n        children: \"children\"\n      },\n      // 检索\n      filtersData: {\n        pageIndex: 1,\n        // 当前页码\n        pageSize: 10,\n        // 每页数量\n        \"orderBy\": \"\"\n      },\n      // 商品列表\n      merchantProduct_scbServiceList_data: {}\n    };\n  },\n  created: function created() {\n    var that = this;\n    this.getClassData(); // 获取商品\n\n    this.codeItem_list(); // 获取季节列表\n\n    this.getStoreList(); // 获取门店列表\n\n    this.getBrandOptions(); // 获取品牌\n\n    this.merchantProduct_scbServiceList(); // 获取商品列表\n\n    if (this.$route.query.id) {\n      Object.assign(this.goodsFiltersDataCheck, {\n        scbCateId: this.$route.query.id\n      });\n    }\n\n    ;\n\n    document.onkeydown = function (e) {\n      var key = window.event.keyCode;\n\n      if (key == 13) {\n        if (that.dialogTableVisible) {\n          that.handleSearch();\n        } else {\n          that.handleSearchCheck();\n        }\n      }\n    };\n  },\n  activated: function activated() {\n    this.merchantProduct_scbServiceList();\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      _this.marketingMiddleground_listProduct(); // 查询全部商品\n\n\n      _this.categories_getPullDownCategoriesList(); // 获取分类所用-分类下拉（一二级）\n\n    });\n  },\n  methods: {\n    /**\r\n     * 关闭分类弹框\r\n     */\n    closeDialogClass: function closeDialogClass() {\n      this.ruleForm.cateIdArr = [];\n    },\n\n    /**\r\n     * 关闭弹框\r\n     */\n    closeDialog: function closeDialog() {\n      this.goodsFiltersData = {\n        // 当前页码\n        pageIndex: 1,\n        // 每页数量\n        pageSize: 10,\n        // 品类id\n        cateIdentifier: null,\n        // 品牌id\n        brandId: null,\n        // 售价最小值\n        retailPriceLowerLimit: null,\n        // 售价最大值\n        retailPriceUpperLimit: null,\n        // 库存最小值\n        quantityLowerLimit: null,\n        // 库存最大值\n        quantityUpperLimit: null,\n        // 季节\n        seasonalStyleCode: null,\n        // 关键词\n        searchWords: null\n      };\n    },\n\n    /**\r\n     * 选择全部商品\r\n     */\n    scbCheckChange: function scbCheckChange(val) {\n      this.checkedTableData_scb = val;\n    },\n\n    /**\r\n     * 选择全部商品\r\n     */\n    productCheckChange: function productCheckChange(val) {\n      this.checkedTableData_product = val;\n    },\n    //复选框\n    checkboxT: function checkboxT(row, index) {\n      if (row.currentMerchant === 0 || row.currentMerchant === null) {\n        return 1;\n      } else {\n        return 0;\n      }\n    },\n\n    /**\r\n     * 批量上下架\r\n     */\n    merchantProduct_batchOnSaleOrOffSaleSPU: function merchantProduct_batchOnSaleOrOffSaleSPU(type) {\n      var _this2 = this;\n\n      var data = {\n        \"merchantId\": \"\",\n        \"operationTag\": type,\n        \"productCodeList\": []\n      };\n\n      if (this.checkedTableData_scb.length == 0) {\n        this.warn('请选择商品！', 'warning');\n        return;\n      }\n\n      var text = type ? '确定批量下架吗？' : '确定批量上架吗？';\n      this.$confirm(text, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        _this2.checkedTableData_scb.forEach(function (item, index) {\n          data.productCodeList.push(item.code);\n        });\n\n        _this2.request(_this2.api.scb.merchantProduct_batchOnSaleOrOffSaleSPU, data, true).then(function (res) {\n          var tit = type ? '批量下架成功！' : '批量上架成功！';\n\n          _this2.warn(tit);\n\n          _this2.merchantProduct_scbServiceList();\n\n          _this2.marketingMiddleground_listProduct();\n        });\n      }).catch(function () {\n        _this2.$message({\n          type: 'info',\n          message: '已取消'\n        });\n      });\n    },\n\n    /**\r\n     * 批量剔除\r\n     */\n    merchantProduct_deleteBatchProductFromMerchant: function merchantProduct_deleteBatchProductFromMerchant() {\n      var _this3 = this;\n\n      var data = {\n        \"merchantId\": \"\",\n        \"productCodeList\": []\n      };\n\n      if (this.checkedTableData_scb.length == 0) {\n        this.warn('请选择商品！', 'warning');\n        return;\n      }\n\n      this.$confirm('确定批量剔除吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        _this3.checkedTableData_scb.forEach(function (item, index) {\n          data.productCodeList.push(item.code);\n        });\n\n        _this3.request(_this3.api.scb.merchantProduct_deleteBatchProductFromMerchant, data, true).then(function (res) {\n          _this3.warn('添加剔除成功！');\n\n          _this3.merchantProduct_scbServiceList();\n\n          _this3.marketingMiddleground_listProduct();\n        });\n      }).catch(function () {\n        _this3.$message({\n          type: 'info',\n          message: '已取消'\n        });\n      });\n    },\n\n    /**\r\n     * 确定添加分类\r\n     */\n    saveAddClass: function saveAddClass() {\n      var _this4 = this;\n\n      var data = {};\n      var url = this.api.scb.merchantProduct_addPageProductToMerchantCategories;\n\n      if (this.ruleForm.cateIdArr.length == 0) {\n        this.warn('请选择分类！', 'warning');\n        return;\n      }\n\n      ; // 批量添加到分类\n\n      if (JSON.stringify(this.addProductClassItemData) === '{}') {\n        data = {\n          \"merchantId\": \"\",\n          \"cateId\": this.ruleForm.cateIdArr,\n          \"productCodeList\": []\n        };\n\n        switch (this.type) {\n          // 添加全部商品到分类下\n          case 'product':\n            this.checkedTableData_product.forEach(function (item, index) {\n              if (item.currentMerchant === 0 || item.currentMerchant === null) {\n                data.productCodeList.push(item.code);\n              }\n            });\n            break;\n          // 添加全部商品到分类下\n\n          case 'scb':\n            this.checkedTableData_scb.forEach(function (item, index) {\n              if (item.currentMerchant === 0 || item.currentMerchant === null) {\n                data.productCodeList.push(item.code);\n              }\n            });\n            break;\n          // 添加全部商品到分类下\n\n          case 'scbTransfer':\n            this.checkedTableData_scb.forEach(function (item, index) {\n              if (item.currentMerchant === 0 || item.currentMerchant === null) {\n                data.productCodeList.push(item.code);\n              }\n            });\n            url = this.api.scb.merchantProduct_transferPageProductToMerchantCategories;\n            break;\n        } // 单个添加到分类\n\n      } else {\n        data = {\n          \"merchantId\": this.addProductClassItemData.id,\n          \"cateId\": this.ruleForm.cateIdArr,\n          \"productCodeList\": [this.addProductClassItemData.code]\n        };\n      }\n\n      this.request(url, data, true).then(function (res) {\n        _this4.warn('添加分类成功！');\n\n        _this4.addProductClassItemData = {};\n\n        _this4.merchantProduct_scbServiceList();\n\n        _this4.marketingMiddleground_listProduct();\n\n        _this4.ruleForm.cateIdArr = [];\n        _this4.dialogForm = false;\n      });\n    },\n\n    /**\r\n     * 添加到分类-Product（全部）\r\n     */\n    addProductClassAll: function addProductClassAll() {\n      if (this.checkedTableData_product.length == 0) {\n        this.warn('请选择要添加的商品！', 'warning');\n        return;\n      }\n\n      this.addProductClassItemData = {};\n      this.dialogForm = true;\n      this.type = 'product';\n    },\n\n    /**\r\n     * 添加到分类-scb\r\n     */\n    addScbClassAll: function addScbClassAll() {\n      if (this.checkedTableData_scb.length == 0) {\n        this.warn('请选择要添加的商品！', 'warning');\n        return;\n      }\n\n      this.dialogForm = true;\n      this.type = 'scb';\n    },\n\n    /**\r\n     * 转移到分类-scb\r\n     */\n    addScbTransferClassAll: function addScbTransferClassAll() {\n      if (this.checkedTableData_scb.length == 0) {\n        this.warn('请选择要添加的商品！', 'warning');\n        return;\n      }\n\n      this.dialogForm = true;\n      this.type = 'scbTransfer';\n    },\n\n    /**\r\n     * 添加到分类-Product（单个）\r\n     */\n    addProductClassItem: function addProductClassItem(row) {\n      this.addProductClassItemData = row;\n      this.dialogForm = true;\n    },\n\n    /**\r\n     * 获取分类所用-分类下拉（一二级）\r\n     */\n    categories_getPullDownCategoriesList: function categories_getPullDownCategoriesList() {\n      var that = this;\n      this.request(this.api.scb.categories_getPullDownCategoriesList, {\n        \"merchantId\": \"\"\n      }, true).then(function (res) {\n        that.categories_getPullDownCategoriesList_data = res;\n      });\n    },\n\n    /**\r\n     * 修改（跳转到商品详情）\r\n     */\n    hrefDetails: function hrefDetails(obj) {\n      this.href('scb/goods/goods_details', {\n        \"merchantId\": obj.id,\n        \"productCode\": obj.code\n      });\n    },\n\n    /**\r\n     * （获取商品列表）\r\n     */\n    merchantProduct_scbServiceList: function merchantProduct_scbServiceList() {\n      var _this5 = this;\n\n      var that = this;\n      this.request(this.api.scb.merchantProduct_scbServiceList, this.goodsFiltersDataCheck, true).then(function (res) {\n        _this5.merchantProduct_scbServiceList_data = res;\n        res.data.forEach(function (item, index) {\n          // item.productCateNameList = ['分类1','分类2','分类3','分类4'];\n          item._productCateNameList = item.productCateNameList.join('、');\n        });\n      });\n    },\n\n    /**\r\n     * （获取季节）\r\n     */\n    codeItem_list: function codeItem_list(item) {\n      var that = this;\n      this.request(this.api.market.codeItem_list, {\n        codeSetId: '06b11574-ef82-4ae4-a8a9-a25f903083df'\n      }, true).then(function (res) {\n        that.codeItem_list_get = res;\n      });\n    },\n\n    /**\r\n     * 获取品牌\r\n     */\n    getBrandOptions: function getBrandOptions() {\n      var _this6 = this;\n\n      this.request(this.api.product.productBrand_list, {}, true).then(function (data) {\n        var _data = data.data;\n        _this6.brandOptions = _data;\n      });\n    },\n\n    /**\r\n     * 获取分类\r\n     */\n    getClassData: function getClassData() {\n      var _this7 = this;\n\n      //分类类型（1：标准分类，2：定制分类，3：原料分类或者称为属性分类）\n      this.$common.getClassSelect(this, 1).then(function (res) {\n        _this7.classData = res.ztree;\n        _this7.classList = res.list;\n      });\n    },\n\n    /**\r\n     * \r\n     */\n    cascaderGet: function cascaderGet(e) {\n      var cateId = JSON.parse(JSON.stringify(e)).pop();\n      var obj = this.classList.find(function (item) {\n        return item.id == cateId;\n      });\n      this.goodsFiltersData.cateIdentifier = obj.identifier;\n    },\n\n    /**\r\n     * \r\n     */\n    cascaderGets: function cascaderGets(e) {\n      var cateId = JSON.parse(JSON.stringify(e)).pop();\n      var obj = this.classList.find(function (item) {\n        return item.id == cateId;\n      });\n      this.goodsFiltersDataCheck.cateIdentifier = obj.identifier;\n    },\n\n    /**\r\n     * （单品全部添加）\r\n     */\n    marketingMiddleground_addPageSingleProduct: function marketingMiddleground_addPageSingleProduct() {\n      var _this8 = this;\n\n      var that = this;\n      var productCodeList = [];\n      var time = null;\n      time = setTimeout(function () {\n        _this8.isAllAddProduct = false;\n      }, 5000);\n\n      if (this.checkedTableData_product.length == 0) {\n        this.warn('请选择要添加的商品！', 'warning');\n        return;\n      }\n\n      this.isAllAddProduct = true;\n      this.$confirm('确定批量添加吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        _this8.warn('正在添加本页全部商品！');\n\n        _this8.checkedTableData_product.forEach(function (item, index) {\n          productCodeList.push(item.code);\n        });\n\n        _this8.request(_this8.api.scb.merchantProduct_addPageProductToMerchant, {\n          productCodeList: productCodeList\n        }, true).then(function (res) {\n          _this8.warn('本页全部商品添加成功！');\n\n          that.marketingMiddleground_listProduct();\n\n          _this8.merchantProduct_scbServiceList();\n        });\n      }).catch(function () {\n        _this8.$message({\n          type: 'info',\n          message: '已取消'\n        });\n\n        _this8.isAllAddProduct = false;\n      });\n    },\n\n    /**\r\n     * （添加商品）\r\n     */\n    merchantProduct_addProductToMerchant: function merchantProduct_addProductToMerchant(item) {\n      var _this9 = this;\n\n      var that = this;\n      var discountData = this.discountData;\n      this.request(this.api.scb.merchantProduct_addProductToMerchant, {\n        productCode: item.code\n      }, true).then(function (res) {\n        _this9.warn('商品添加成功！');\n\n        that.marketingMiddleground_listProduct();\n\n        _this9.merchantProduct_scbServiceList();\n      });\n    },\n\n    /**\r\n     * （上下架）\r\n     */\n    merchantProduct_onSaleOrOffSaleSPU: function merchantProduct_onSaleOrOffSaleSPU(item) {\n      var _this10 = this;\n\n      var that = this;\n      var text = item.onSaleStatus == 'ONSALE' ? '下架后客户无法下单，是否继续？' : '确定上架吗？';\n      this.$confirm(text, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        _this10.request(_this10.api.scb.merchantProduct_onSaleOrOffSaleSPU, {\n          \"merchantId\": item.id,\n          \"productCode\": item.code\n        }, true).then(function (res) {\n          _this10.merchantProduct_scbServiceList();\n\n          _this10.warn('操作成功！');\n        });\n      }).catch(function () {\n        _this10.$message({\n          type: 'info',\n          message: '已取消'\n        });\n      });\n    },\n\n    /**\r\n     * （单品从列表内剔除）\r\n     */\n    merchantProduct_deleteProductFromMerchant: function merchantProduct_deleteProductFromMerchant(item) {\n      var _this11 = this;\n\n      var that = this;\n      var discountData = this.discountData;\n      this.$confirm('剔除后该商品在商城不可见，是否继续？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        _this11.request(_this11.api.scb.merchantProduct_deleteProductFromMerchant, {\n          productCode: item.code\n        }, true).then(function (res) {\n          _this11.warn('剔除成功！');\n\n          that.marketingMiddleground_listProduct();\n\n          _this11.merchantProduct_scbServiceList();\n        });\n      }).catch(function () {\n        _this11.$message({\n          type: 'info',\n          message: '已取消'\n        });\n      });\n    },\n\n    /**\r\n     * （全部商品）\r\n     */\n    marketingMiddleground_listProduct: function marketingMiddleground_listProduct() {\n      var _this12 = this;\n\n      var that = this; // const discountData = this.discountData;\n      // Object.assign(this.goodsFiltersData, {\n      //   storeId:discountData.storeId,\n      //   type:discountData.itemDiscountType,\n      //   discount:discountData.itemDiscountEd\n      // }); \n\n      this.request(this.api.scb.merchantProduct_productServiceList, this.goodsFiltersData, true).then(function (res) {\n        that.goodsList = res;\n        _this12.isAllAddProduct = false;\n      });\n    },\n\n    /**\r\n     * 查询门店列表\r\n     */\n    getStoreList: function getStoreList() {\n      var that = this;\n      this.request(that.api.store.storeBasic_list, {\n        pricingPower: 0\n      }, true).then(function (res) {\n        that.storeList = res;\n      });\n    },\n\n    /**\r\n     * 提示\r\n     * @param { String } message 提示文案\r\n     * @param { String } type 提示类型\r\n     */\n    warn: function warn(message, type) {\n      this.$message({\n        message: message,\n        type: type || 'success'\n      });\n    },\n\n    /**\r\n     * 跳转\r\n     * @param { String } routeName 路由跳转名字\r\n     */\n    href: function href(routeName, param) {\n      this.$router.push({\n        path: \"/\".concat(routeName),\n        query: param\n      });\n    },\n\n    /**\r\n     *  选择每页多少条数（全部）\r\n     *  @param { Number } pageSize 每页条数\r\n     */\n    handleSizeChange: function handleSizeChange(pageSize) {\n      this.isAllAddProduct = false;\n      this.goodsFiltersData.pageSize = pageSize;\n      this.marketingMiddleground_listProduct();\n    },\n\n    /**\r\n    * 点击页数（全部）\r\n    * @param { Number } pageIndex 当前页\r\n    */\n    handleCurrentChange: function handleCurrentChange(pageIndex) {\n      this.isAllAddProduct = false;\n      this.goodsFiltersData.pageIndex = pageIndex;\n      this.marketingMiddleground_listProduct();\n    },\n\n    /**\r\n      * 模糊搜索（全部）\r\n      */\n    handleSearch: function handleSearch() {\n      this.goodsFiltersData.pageIndex = 1;\n      this.marketingMiddleground_listProduct();\n    },\n\n    /**\r\n     * 搜索重置（全部）\r\n     */\n    handleResetFilters: function handleResetFilters() {\n      Object.assign(this.goodsFiltersData, {\n        // 当前页码\n        pageIndex: 1,\n        // 每页数量\n        pageSize: 10,\n        // 品类id\n        cateIdentifier: null,\n        // 品牌id\n        brandId: null,\n        // 售价最小值\n        retailPriceLowerLimit: null,\n        // 售价最大值\n        retailPriceUpperLimit: null,\n        // 库存最小值\n        quantityLowerLimit: null,\n        // 库存最大值\n        quantityUpperLimit: null,\n        // 季节\n        seasonalStyleCode: null,\n        // 关键词\n        searchWords: null\n      });\n      this.cateArr = [];\n    },\n\n    /** ---------------\r\n     * 点击页数（已添加）\r\n     * @param { Number } pageIndex 当前页\r\n     */\n    handleCurrentChangeCheck: function handleCurrentChangeCheck(pageIndex) {\n      this.goodsFiltersDataCheck.pageIndex = pageIndex;\n      this.merchantProduct_scbServiceList();\n    },\n\n    /**\r\n     *  选择每页多少条数（已添加）\r\n     *  @param { Number } pageSize 每页条数\r\n     */\n    handleSizeChangeCheck: function handleSizeChangeCheck(pageSize) {\n      this.goodsFiltersDataCheck.pageSize = pageSize;\n      this.merchantProduct_scbServiceList();\n    },\n\n    /**\r\n    * 模糊搜索（已添加）\r\n    */\n    handleSearchCheck: function handleSearchCheck() {\n      this.goodsFiltersDataCheck.pageIndex = 1;\n      this.merchantProduct_scbServiceList();\n    },\n\n    /**\r\n     * 搜索重置（已添加）\r\n     */\n    handleResetFiltersCheck: function handleResetFiltersCheck() {\n      Object.assign(this.goodsFiltersDataCheck, {\n        // 当前页码\n        pageIndex: 1,\n        // 每页数量\n        pageSize: 10,\n        // 分类id\n        scbCateId: null,\n        // 品类id\n        cateIdentifier: null,\n        // 售价最小值\n        retailPriceLowerLimit: null,\n        // 售价最大值\n        retailPriceUpperLimit: null,\n        // 品牌id\n        brandId: null,\n        // 上下架状态\n        onSaleStatus: null,\n        // 库存最小值\n        quantityLowerLimit: null,\n        // 库存最大值\n        quantityUpperLimit: null,\n        // 季节\n        seasonalStyleCode: null,\n        // 关键词 \n        searchWords: null\n      });\n      this.cateArrs = [];\n    }\n  },\n  components: {}\n};",{"version":3,"sources":["goods_list.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n   <div>\r\n     <el-dialog  title=\"选择分类\" @closed=\"closeDialogClass\" width=\"420px\" :visible.sync=\"dialogForm\">\r\n      <el-form :model=\"ruleForm\"  label-width=\"120px\">\r\n        <el-form-item label=\"所属分类：\">\r\n          <el-cascader :disabled=\"isEdit\" ref=\"cascader\" v-model=\"ruleForm.cateIdArr\" :options=\"categories_getPullDownCategoriesList_data\" :props=\"{ checkStrictly: true, label: 'name', value: 'id', emitPath: false, multiple:true}\" clearable></el-cascader>\r\n        </el-form-item>\r\n        <div class=\"addClass\">\r\n          <el-button type=\"primary\" class=\"ml-20 mt-24\" v-noMoreClick  @click=\"saveAddClass\">确定添加</el-button>\r\n        </div>\r\n      </el-form>\r\n    </el-dialog>\r\n      <el-dialog title=\"选择商品\" :visible.sync=\"dialogTableVisible\">\r\n        <div>\r\n          <el-form\r\n            class=\"item-form\"\r\n            size=\"small\"\r\n            :inline=\"true\"\r\n            :model=\"goodsFiltersData\">\r\n            <!-- 模糊查询 -->\r\n            <el-form-item prop=\"cateIdentifier\" clearable label=\"品类：\">\r\n              <el-cascader\r\n                class=\"input-w\"\r\n                :options=\"classData\"\r\n                v-model=\"cateArr\"\r\n                :value=\"cateArr\"\r\n                @change=\"cascaderGet\"\r\n                :show-all-levels=\"false\"\r\n                :props=\"props\"\r\n                change-on-select\r\n              ></el-cascader>\r\n            </el-form-item>\r\n            <el-form-item label=\"品牌：\">\r\n              <el-select class=\"input-w\" filterable clearable placeholder=\"请选择\" v-model=\"goodsFiltersData.brandId\">\r\n                <el-option\r\n                  v-for=\"item in brandOptions\"\r\n                  :key=\"item.id\"\r\n                  :label=\"item.name\"\r\n                  :value=\"item.id\"\r\n                ></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"售价：\">\r\n              <el-input placeholder=\"请输入售价最小值\" clearable  v-model.number=\"goodsFiltersData.retailPriceLowerLimit\" class=\"el-input-width155\"></el-input>\r\n              <el-input placeholder=\"请输入售价最大值\" clearable  v-model.number=\"goodsFiltersData.retailPriceUpperLimit\" class=\"el-input-width155 ml-10\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"季节：\">\r\n              <el-select v-model=\"goodsFiltersData.seasonalStyleCode\" clearable placeholder=\"请选择\">\r\n                <el-option v-for=\"(item, index) in codeItem_list_get.data\" :key=\"index\" :label=\"item.name\" :value=\"item.code\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"关键词：\">\r\n              <el-input placeholder=\"请输入关键词，如：货号、款号、商品名称\" clearable  v-model=\"goodsFiltersData.searchWords\" class=\"el-input-width355\"></el-input>\r\n            </el-form-item>\r\n            <!-- 搜索，重置 -->\r\n            <el-form-item>\r\n              <el-button size=\"small\" @click=\"handleSearch\" type=\"primary\" plain>搜索</el-button>\r\n              <el-button size=\"small\" @click=\"handleResetFilters\">重置</el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n        </div>\r\n        <div>\r\n          <!-- 全部商品 -->\r\n          <div class=\"item-table\">\r\n            <el-button size=\"small\" type=\"primary\" v-noMoreClick class=\"ml-20 mt-24\" @click=\"addProductClassAll\">批量加入到指定分类</el-button>\r\n            <el-button size=\"small\" type=\"primary\" plain class=\"ml-20 mt-24\" :disabled=\"isAllAddProduct\" @click=\"marketingMiddleground_addPageSingleProduct\">批量添加</el-button>\r\n            <el-table\r\n              class=\"mt-20\"\r\n              :data=\"goodsList.data\"  \r\n              stripe\r\n              empty-text=\"暂无数据\"\r\n              header-align=\"center\"\r\n              @selection-change=\"productCheckChange\"\r\n              header-row-class-name=\"item-table-header\"\r\n              :highlight-current-row=\"true\">\r\n              <el-table-column disabled=\"disabled\" :selectable=\"checkboxT\" type=\"selection\" width=\"45\"></el-table-column>\r\n              <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"商品款号\" min-width=\"100\">\r\n                <template  slot-scope=\"scope\">{{ scope.row.code|| '--' }}</template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"品牌\" min-width=\"100\">\r\n                <template  slot-scope=\"scope\">{{ scope.row.brandName || '--' }}</template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"品类\" min-width=\"100\">\r\n                <template  slot-scope=\"scope\">{{ scope.row.fullCateName || '--' }}</template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"商品名称\" min-width=\"100\">\r\n                <template  slot-scope=\"scope\">{{ scope.row.name || '--' }}</template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"商品图片\" min-width=\"100\">\r\n                <template  slot-scope=\"scope\"><img class=\"discountImg\" :src=\"scope.row.image\" alt=\"\"></template>\r\n              </el-table-column>\r\n              <!-- 操作 -->\r\n              <el-table-column\r\n                  fixed=\"right\"\r\n                  label-class-name=\"text-center\"\r\n                  class-name=\"text-center\"\r\n                  align=\"center\"\r\n                  label=\"操作\"\r\n                  width=\"180\">\r\n                  <template slot-scope=\"scope\">\r\n                    <el-button type=\"text\" v-noMoreClick v-if=\"scope.row.currentMerchant === 0 || scope.row.currentMerchant === null\" size=\"small\" @click=\"merchantProduct_addProductToMerchant(scope.row)\">添加</el-button>\r\n                    <el-button type=\"text\" v-if=\"scope.row.currentMerchant === 0 || scope.row.currentMerchant === null\" size=\"small\" @click=\"addProductClassItem(scope.row)\">添加到分类</el-button>\r\n                    <el-button type=\"text\" v-if=\"scope.row.currentMerchant === 1\" size=\"small\" @click=\"merchantProduct_deleteProductFromMerchant(scope.row)\">从列表内剔除</el-button>\r\n                  </template>\r\n              </el-table-column>\r\n            </el-table>\r\n            <div class=\"pagination mt-10 mb-20\">\r\n              <!-- 分页 -->\r\n              <el-pagination\r\n                  class=\"mr-20\"\r\n                  @size-change=\"handleSizeChange\"\r\n                  @current-change=\"handleCurrentChange\"\r\n                  :current-page=\"goodsFiltersData.pageIndex\"\r\n                  :page-sizes=\"[10,20,30,40,50]\"\r\n                  :page-size=\"goodsFiltersData.pageSize\"\r\n                  layout=\"total, sizes, prev, pager, next, jumper\"\r\n                  :total=\"goodsList.totalCount\"\r\n              ></el-pagination>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </el-dialog>\r\n      <!--  -->\r\n      <div class=\"box\">\r\n        <el-form\r\n          class=\"item-form\"\r\n          size=\"small\"\r\n          :inline=\"true\"\r\n          :model=\"goodsFiltersDataCheck\">\r\n          <!-- 新增1 -->\r\n          <el-form-item label=\"所属分类：\" prop=\"name\">\r\n            <el-cascader ref=\"cascader\" v-model=\"goodsFiltersDataCheck.scbCateId\" :options=\"categories_getPullDownCategoriesList_data\" :props=\"{ checkStrictly: true, label: 'name', value: 'id', emitPath: false }\" clearable></el-cascader>\r\n          </el-form-item>\r\n          <!-- 新增1 -->\r\n          <el-form-item prop=\"cateIdentifier\" clearable label=\"品类：\">\r\n            <el-cascader\r\n              class=\"input-w\"\r\n              clearable\r\n              :options=\"classData\"\r\n              v-model=\"cateArrs\"\r\n              :value=\"cateArrs\"\r\n              @change=\"cascaderGets\"\r\n              :show-all-levels=\"false\"\r\n              :props=\"props\"\r\n              change-on-select\r\n            ></el-cascader>\r\n          </el-form-item>\r\n          <el-form-item label=\"售价：\">\r\n            <el-input placeholder=\"请输入售价最小值\" clearable  v-model=\"goodsFiltersDataCheck.retailPriceLowerLimit\" class=\"el-input-width155\"></el-input>\r\n            <el-input placeholder=\"请输入售价最大值\" clearable  v-model=\"goodsFiltersDataCheck.retailPriceUpperLimit\" class=\"el-input-width155 ml-10\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"品牌：\">\r\n            <el-select class=\"input-w\" filterable clearable placeholder=\"请选择\" v-model=\"goodsFiltersDataCheck.brandId\">\r\n              <el-option\r\n                v-for=\"item in brandOptions\"\r\n                :key=\"item.id\"\r\n                :label=\"item.name\"\r\n                :value=\"item.id\"\r\n              ></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"上下架：\">\r\n            <el-select v-model=\"goodsFiltersDataCheck.onSaleStatus\" clearable placeholder=\"请选择\">\r\n              <el-option v-for=\"(item, index) in onSaleStatusList\" :key=\"index\" :label=\"item\" :value=\"index\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"库存：\">\r\n            <el-input placeholder=\"请输入库存最小值\" clearable  v-model=\"goodsFiltersDataCheck.quantityLowerLimit\" class=\"el-input-width155\"></el-input>\r\n            <el-input placeholder=\"请输入库存最大值\" clearable  v-model=\"goodsFiltersDataCheck.quantityUpperLimit\" class=\"el-input-width155 ml-10\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"关键词：\">\r\n            <el-input placeholder=\"请输入关键词，如：货号、款号、商品名称\" clearable  v-model=\"goodsFiltersDataCheck.searchWords\" class=\"el-input-width355\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"季节：\">\r\n            <el-select v-model=\"goodsFiltersDataCheck.seasonalStyleCode\" clearable placeholder=\"请选择\">\r\n              <el-option v-for=\"(item, index) in codeItem_list_get.data\" :key=\"index\" :label=\"item.name\" :value=\"item.code\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <!-- 搜索，重置 -->\r\n          <el-form-item>\r\n            <el-button size=\"small\" @click=\"handleSearchCheck\" type=\"primary\" plain>搜索</el-button>\r\n            <el-button size=\"small\" @click=\"handleResetFiltersCheck\">重置</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n      <div class=\"box\">\r\n        <div class=\"item-table\">\r\n          <el-button size=\"small\" type=\"primary\" class=\"ml-20 mt-24\" @click=\"dialogTableVisible = true\">从商品中心导入商品</el-button>\r\n          <el-button size=\"small\" type=\"primary\" plain class=\"ml-20 mt-24\" v-noMoreClick @click=\"addScbClassAll\">批量添加到分类</el-button>\r\n          <el-button size=\"small\" type=\"primary\" plain class=\"ml-20 mt-24\" v-noMoreClick @click=\"addScbTransferClassAll\">批量转移到分类</el-button>\r\n          <el-button size=\"small\" type=\"primary\" plain class=\"ml-20 mt-24\" v-noMoreClick @click=\"merchantProduct_batchOnSaleOrOffSaleSPU(0)\">批量上架</el-button>\r\n          <el-button size=\"small\" type=\"primary\" plain class=\"ml-20 mt-24\" v-noMoreClick @click=\"merchantProduct_batchOnSaleOrOffSaleSPU(1)\">批量下架</el-button>\r\n          <el-button size=\"small\" type=\"primary\" plain class=\"ml-20 mt-24\" v-noMoreClick @click=\"merchantProduct_deleteBatchProductFromMerchant\">批量剔除</el-button>\r\n          <el-table\r\n            class=\"mt-20\"\r\n            :data=\"merchantProduct_scbServiceList_data.data\"\r\n            stripe\r\n            empty-text=\"暂无数据\"\r\n            header-align=\"center\"\r\n            @selection-change=\"scbCheckChange\" \r\n            header-row-class-name=\"item-table-header\"\r\n            :highlight-current-row=\"true\">\r\n            <el-table-column disabled=\"disabled\" type=\"selection\" width=\"45\"></el-table-column>\r\n            <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"商品款号\" min-width=\"100\">\r\n              <template  slot-scope=\"scope\">{{ scope.row.code|| '--' }}</template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"所属分类\" min-width=\"100\">\r\n              <template  slot-scope=\"scope\">{{ scope.row._productCateNameList|| '--' }}</template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"品牌\" min-width=\"100\">\r\n              <template  slot-scope=\"scope\">{{ scope.row.brandName || '--' }}</template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"品类\" min-width=\"100\">\r\n              <template  slot-scope=\"scope\">{{ scope.row.fullCateName || '--' }}</template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"商品名称\" min-width=\"100\">\r\n              <template  slot-scope=\"scope\">{{ scope.row.name || '--' }}</template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"商品图片\" min-width=\"100\">\r\n              <template  slot-scope=\"scope\"><img class=\"discountImg\" :src=\"scope.row.image\" alt=\"\"></template>\r\n            </el-table-column>\r\n            <!-- 操作 -->\r\n            <el-table-column\r\n                fixed=\"right\"\r\n                label-class-name=\"text-center\"\r\n                class-name=\"text-center\"\r\n                align=\"center\"\r\n                label=\"操作\"\r\n                width=\"180\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-button type=\"text\" size=\"small\" @click=\"hrefDetails(scope.row)\">修改</el-button>\r\n                  <el-button type=\"text\" size=\"small\" @click=\"merchantProduct_onSaleOrOffSaleSPU(scope.row)\">{{ scope.row.onSaleStatus == 'ONSALE' ? '下架' : '上架' }}</el-button>\r\n                  <el-button type=\"text\" size=\"small\" @click=\"merchantProduct_deleteProductFromMerchant(scope.row)\">剔除</el-button>\r\n                </template>\r\n            </el-table-column>\r\n          </el-table>\r\n          <div class=\"pagination mt-20 mb-20\">\r\n            <!-- 分页 -->\r\n            <el-pagination\r\n                class=\"mr-20\"\r\n                @size-change=\"handleSizeChangeCheck\"\r\n                @current-change=\"handleCurrentChangeCheck\"\r\n                :current-page=\"goodsFiltersDataCheck.pageIndex\"\r\n                :page-sizes=\"[10,20,30,40,50]\"\r\n                :page-size=\"goodsFiltersDataCheck.pageSize\"\r\n                layout=\"total, sizes, prev, pager, next, jumper\"\r\n                :total=\"merchantProduct_scbServiceList_data.totalCount\"\r\n            ></el-pagination>\r\n          </div>\r\n        </div>\r\n      </div>\r\n   </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name:'goods_list',\r\n  data() {\r\n    return {\r\n      // table选择商品\r\n      checkedTableData_product:[],\r\n      type:null,\r\n      // table选择商品\r\n      checkedTableData_scb:[],\r\n      isAllAddProduct:false,\r\n      ruleForm:{\r\n        cateIdArr:[]\r\n      },\r\n      categories_categoriesTreeList_data:[],\r\n      addProductClassItemData:{},\r\n      dialogForm:false,\r\n      onSaleStatusList:{\r\n        'ONSALE':'上架',\r\n        'OFFSALE':'下架'\r\n      },\r\n      categories_getPullDownCategoriesList_data:[],// 创建分类所用-分类下拉（一二级）\r\n      // 季节列表\r\n      codeItem_list_get:[],\r\n      // 快速创建保留门店id\r\n      fastCreateStoreId:null,\r\n      // 快速创建剔除已有门店\r\n      fastCreateTF:true,\r\n      // 是否编辑\r\n      isEdit:this.$route.query.isEdit,\r\n      // 是否快速创建\r\n      isFastCreate:this.$route.query.isFastCreate,\r\n      // 单品商品信息是否存在\r\n      isGoods:false,\r\n      // 折扣id\r\n      discountId:this.$route.query.discountId,\r\n      // 弹框\r\n      dialogTableVisible:false,\r\n      // 全部商品\r\n      goodsList:{},\r\n      // 已添加\r\n      goodsCheckList:{},\r\n      // 检索全部商品\r\n      goodsFiltersData:{\r\n        // 当前页码\r\n        pageIndex: 1,\r\n        // 每页数量\r\n        pageSize: 10,\r\n        // 品类id\r\n        cateIdentifier:null,\r\n        // 品牌id\r\n        brandId:null,\r\n        // 售价最小值\r\n        retailPriceLowerLimit:null, \r\n        // 售价最大值\r\n        retailPriceUpperLimit:null, \r\n        // 库存最小值\r\n        quantityLowerLimit:null, \r\n        // 库存最大值\r\n        quantityUpperLimit:null, \r\n        // 季节\r\n        seasonalStyleCode:null,\r\n        // 关键词\r\n        searchWords:null \r\n      },\r\n      // 全部品牌\r\n      brandOptions:[],\r\n      // 检索已选商品\r\n      goodsFiltersDataCheck:{\r\n        // 当前页码\r\n        pageIndex: 1,\r\n        // 每页数量\r\n        pageSize: 10,\r\n        // 分类id\r\n        scbCateId:null,\r\n        // 品类id\r\n        cateIdentifier:null,\r\n        // 售价最小值\r\n        retailPriceLowerLimit:null, \r\n        // 售价最大值\r\n        retailPriceUpperLimit:null, \r\n        // 品牌id\r\n        brandId:null,\r\n        // 上下架状态\r\n        onSaleStatus:null,\r\n        // 库存最小值\r\n        quantityLowerLimit:null, \r\n        // 库存最大值\r\n        quantityUpperLimit:null, \r\n        // 季节\r\n        seasonalStyleCode:null,\r\n        // 关键词 \r\n        searchWords:null \r\n      },\r\n      // 单品折扣列表\r\n      itemDiscountData:{\r\n        data:[]\r\n      },\r\n      // 门店列表\r\n      storeList:{},\r\n      classData: [],\r\n      classList: [],\r\n      cateArr: [],\r\n      cateArrs: [],\r\n      props: {\r\n        value: \"id\",\r\n        label: \"name\",\r\n        children: \"children\"\r\n      },\r\n      // 检索\r\n      filtersData: {\r\n        pageIndex: 1, // 当前页码\r\n        pageSize: 10, // 每页数量\r\n        \"orderBy\": \"\",\r\n      },\r\n      // 商品列表\r\n      merchantProduct_scbServiceList_data:{}\r\n    };\r\n  },\r\n  created() {\r\n    var that = this;\r\n    this.getClassData(); // 获取商品\r\n    this.codeItem_list(); // 获取季节列表\r\n    this.getStoreList(); // 获取门店列表\r\n    this.getBrandOptions(); // 获取品牌\r\n    this.merchantProduct_scbServiceList();// 获取商品列表\r\n    if(this.$route.query.id) {\r\n      Object.assign(this.goodsFiltersDataCheck, {\r\n        scbCateId:this.$route.query.id\r\n      })\r\n    };\r\n    document.onkeydown = function(e) {\r\n         var key = window.event.keyCode;\r\n         if (key == 13) {\r\n            if(that.dialogTableVisible) {\r\n              that.handleSearch();\r\n            }else{\r\n              that.handleSearchCheck();\r\n            }\r\n         }\r\n      };\r\n  },\r\n  activated() {\r\n    this.merchantProduct_scbServiceList();\r\n  },\r\n  mounted() {\r\n    this.$nextTick(()=>{\r\n      this.marketingMiddleground_listProduct();// 查询全部商品\r\n      this.categories_getPullDownCategoriesList();// 获取分类所用-分类下拉（一二级）\r\n    })\r\n  },\r\n  methods: {\r\n    /**\r\n     * 关闭分类弹框\r\n     */\r\n    closeDialogClass() {\r\n      this.ruleForm.cateIdArr = [];\r\n    },\r\n    /**\r\n     * 关闭弹框\r\n     */\r\n    closeDialog() {\r\n      this.goodsFiltersData = {\r\n        // 当前页码\r\n        pageIndex: 1,\r\n        // 每页数量\r\n        pageSize: 10,\r\n        // 品类id\r\n        cateIdentifier:null,\r\n        // 品牌id\r\n        brandId:null,\r\n        // 售价最小值\r\n        retailPriceLowerLimit:null, \r\n        // 售价最大值\r\n        retailPriceUpperLimit:null, \r\n        // 库存最小值\r\n        quantityLowerLimit:null, \r\n        // 库存最大值\r\n        quantityUpperLimit:null, \r\n        // 季节\r\n        seasonalStyleCode:null,\r\n        // 关键词\r\n        searchWords:null \r\n      };\r\n    },\r\n    /**\r\n     * 选择全部商品\r\n     */\r\n    scbCheckChange(val){\r\n      this.checkedTableData_scb = val;\r\n    },\r\n    /**\r\n     * 选择全部商品\r\n     */\r\n    productCheckChange(val){\r\n      this.checkedTableData_product = val;\r\n    },\r\n    //复选框\r\n    checkboxT(row,index){\r\n      if(row.currentMerchant === 0 || row.currentMerchant === null){\r\n        return 1;\r\n      }else{\r\n        return 0;\r\n      }\r\n    },\r\n    /**\r\n     * 批量上下架\r\n     */\r\n    merchantProduct_batchOnSaleOrOffSaleSPU(type) {\r\n      var data = {\r\n        \"merchantId\": \"\",\r\n        \"operationTag\": type,\r\n        \"productCodeList\": []\r\n      };\r\n      if(this.checkedTableData_scb.length == 0) {\r\n        this.warn('请选择商品！','warning');\r\n        return;\r\n      }\r\n      let text = type ? '确定批量下架吗？' : '确定批量上架吗？';\r\n\r\n      this.$confirm(text, '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        \r\n        this.checkedTableData_scb.forEach((item, index) => {\r\n          data.productCodeList.push(item.code);\r\n        });\r\n        this.request(\r\n          this.api.scb.merchantProduct_batchOnSaleOrOffSaleSPU,\r\n          data,\r\n          true\r\n        ).then(res => {\r\n          let tit = type ? '批量下架成功！' : '批量上架成功！';\r\n          this.warn(tit);\r\n          this.merchantProduct_scbServiceList();\r\n          this.marketingMiddleground_listProduct();\r\n        });\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消'\r\n        });          \r\n      });\r\n    },\r\n    /**\r\n     * 批量剔除\r\n     */\r\n    merchantProduct_deleteBatchProductFromMerchant() {\r\n      var data = {\r\n        \"merchantId\": \"\",\r\n        \"productCodeList\": []\r\n      };\r\n      if(this.checkedTableData_scb.length == 0) {\r\n        this.warn('请选择商品！','warning');\r\n        return;\r\n      }\r\n      this.$confirm('确定批量剔除吗？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.checkedTableData_scb.forEach((item, index) => { \r\n          data.productCodeList.push(item.code);\r\n        });\r\n        this.request(\r\n          this.api.scb.merchantProduct_deleteBatchProductFromMerchant,\r\n          data,\r\n          true\r\n        ).then(res => {\r\n          this.warn('添加剔除成功！');\r\n          this.merchantProduct_scbServiceList();\r\n          this.marketingMiddleground_listProduct();\r\n        });\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消'\r\n        });          \r\n      });\r\n      \r\n      \r\n    },\r\n    /**\r\n     * 确定添加分类\r\n     */\r\n    saveAddClass() {\r\n      var data = {};\r\n      var url = this.api.scb.merchantProduct_addPageProductToMerchantCategories;\r\n      if(this.ruleForm.cateIdArr.length == 0) {\r\n        this.warn('请选择分类！','warning');\r\n        return;\r\n      };\r\n      // 批量添加到分类\r\n      if(JSON.stringify(this.addProductClassItemData) === '{}') {\r\n        data = {\r\n          \"merchantId\": \"\",\r\n          \"cateId\": this.ruleForm.cateIdArr,\r\n          \"productCodeList\": []\r\n        };\r\n        switch(this.type) {\r\n          // 添加全部商品到分类下\r\n          case 'product':\r\n            this.checkedTableData_product.forEach((item, index) => {\r\n              if(item.currentMerchant === 0 || item.currentMerchant === null) {\r\n                data.productCodeList.push(item.code);\r\n              }\r\n            });\r\n          break;\r\n          // 添加全部商品到分类下\r\n          case 'scb':\r\n            this.checkedTableData_scb.forEach((item, index) => {\r\n              if(item.currentMerchant === 0 || item.currentMerchant === null) {\r\n                data.productCodeList.push(item.code);\r\n              }\r\n            });\r\n          break;\r\n          // 添加全部商品到分类下\r\n          case 'scbTransfer':\r\n            this.checkedTableData_scb.forEach((item, index) => {\r\n              if(item.currentMerchant === 0 || item.currentMerchant === null) {\r\n                data.productCodeList.push(item.code);\r\n              }\r\n            });\r\n            url = this.api.scb.merchantProduct_transferPageProductToMerchantCategories;\r\n          break;\r\n        }\r\n      // 单个添加到分类\r\n      }else{\r\n        data = {\r\n          \"merchantId\": this.addProductClassItemData.id,\r\n          \"cateId\": this.ruleForm.cateIdArr,\r\n          \"productCodeList\": [this.addProductClassItemData.code]\r\n        };\r\n      }\r\n      this.request(\r\n        url,\r\n        data,\r\n        true\r\n      ).then(res => {\r\n        this.warn('添加分类成功！');\r\n        this.addProductClassItemData = {};\r\n        this.merchantProduct_scbServiceList();\r\n        this.marketingMiddleground_listProduct();\r\n        this.ruleForm.cateIdArr = [];\r\n        this.dialogForm = false;\r\n      });\r\n    },\r\n    /**\r\n     * 添加到分类-Product（全部）\r\n     */\r\n    addProductClassAll() {\r\n      if(this.checkedTableData_product.length == 0) {\r\n        this.warn('请选择要添加的商品！','warning');\r\n        return;\r\n      }\r\n      this.addProductClassItemData =  {};\r\n      this.dialogForm = true;\r\n      this.type = 'product';\r\n    },\r\n    /**\r\n     * 添加到分类-scb\r\n     */\r\n    addScbClassAll() {\r\n      if(this.checkedTableData_scb.length == 0) {\r\n        this.warn('请选择要添加的商品！','warning');\r\n        return;\r\n      }\r\n      this.dialogForm = true;\r\n      this.type = 'scb';\r\n    },\r\n    /**\r\n     * 转移到分类-scb\r\n     */\r\n    addScbTransferClassAll() {\r\n      if(this.checkedTableData_scb.length == 0) {\r\n        this.warn('请选择要添加的商品！','warning');\r\n        return;\r\n      }\r\n      this.dialogForm = true;\r\n      this.type = 'scbTransfer';\r\n    },\r\n    /**\r\n     * 添加到分类-Product（单个）\r\n     */\r\n    addProductClassItem(row) {\r\n      this.addProductClassItemData =  row;\r\n      this.dialogForm = true;\r\n    },\r\n    /**\r\n     * 获取分类所用-分类下拉（一二级）\r\n     */\r\n    categories_getPullDownCategoriesList() {\r\n      const that = this;\r\n\r\n      this.request(\r\n        this.api.scb.categories_getPullDownCategoriesList,\r\n        {\r\n          \"merchantId\": \"\"\r\n        },\r\n        true\r\n      ).then(res => {\r\n        that.categories_getPullDownCategoriesList_data = res;\r\n      });\r\n    },\r\n    /**\r\n     * 修改（跳转到商品详情）\r\n     */\r\n    hrefDetails(obj) {\r\n      this.href('scb/goods/goods_details', {\r\n        \"merchantId\": obj.id,\r\n        \"productCode\": obj.code\r\n      });\r\n    },\r\n    /**\r\n     * （获取商品列表）\r\n     */\r\n    merchantProduct_scbServiceList() {\r\n      const that = this;\r\n      \r\n      this.request(\r\n        this.api.scb.merchantProduct_scbServiceList,\r\n        this.goodsFiltersDataCheck,\r\n        true\r\n      ).then(res => {\r\n        this.merchantProduct_scbServiceList_data = res;\r\n        res.data.forEach((item, index) => {\r\n          // item.productCateNameList = ['分类1','分类2','分类3','分类4'];\r\n          item._productCateNameList = item.productCateNameList.join('、');  \r\n        });\r\n      });\r\n    },\r\n    /**\r\n     * （获取季节）\r\n     */\r\n    codeItem_list(item) {\r\n      const that = this;\r\n\r\n      this.request(\r\n        this.api.market.codeItem_list,\r\n        {\r\n          codeSetId:'06b11574-ef82-4ae4-a8a9-a25f903083df'\r\n        },\r\n        true\r\n      ).then(res => {\r\n        that.codeItem_list_get = res;\r\n      });\r\n    },\r\n    /**\r\n     * 获取品牌\r\n     */\r\n    getBrandOptions() {\r\n      this.request(\r\n        this.api.product.productBrand_list,\r\n        {},\r\n        true\r\n        ).then(data => {\r\n          let _data = data.data;\r\n          this.brandOptions = _data;\r\n      });\r\n    },\r\n    /**\r\n     * 获取分类\r\n     */\r\n    getClassData() {\r\n      //分类类型（1：标准分类，2：定制分类，3：原料分类或者称为属性分类）\r\n      this.$common.getClassSelect(this, 1).then(res => {\r\n        this.classData = res.ztree;\r\n        this.classList = res.list;\r\n      });\r\n    },\r\n    /**\r\n     * \r\n     */\r\n    cascaderGet(e) {\r\n      let cateId = JSON.parse(JSON.stringify(e)).pop();\r\n      let obj = this.classList.find(item => item.id == cateId);\r\n      this.goodsFiltersData.cateIdentifier = obj.identifier;\r\n    },\r\n    /**\r\n     * \r\n     */\r\n    cascaderGets(e) {\r\n      let cateId = JSON.parse(JSON.stringify(e)).pop();\r\n      let obj = this.classList.find(item => item.id == cateId);\r\n      this.goodsFiltersDataCheck.cateIdentifier = obj.identifier;\r\n    },\r\n    /**\r\n     * （单品全部添加）\r\n     */\r\n    marketingMiddleground_addPageSingleProduct() {\r\n      const that = this;\r\n      const productCodeList = [];\r\n      let time = null;\r\n      time = setTimeout(() => {\r\n        this.isAllAddProduct = false;    \r\n      }, 5000);\r\n      if(this.checkedTableData_product.length == 0) {\r\n        this.warn('请选择要添加的商品！','warning');\r\n        return;\r\n      }\r\n      this.isAllAddProduct = true;\r\n      this.$confirm('确定批量添加吗?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.warn('正在添加本页全部商品！');\r\n        this.checkedTableData_product.forEach((item, index) => {\r\n          productCodeList.push(item.code);\r\n        });\r\n        this.request(\r\n          this.api.scb.merchantProduct_addPageProductToMerchant,\r\n          {\r\n            productCodeList\r\n          },\r\n          true\r\n        ).then(res => {\r\n          this.warn('本页全部商品添加成功！');\r\n          that.marketingMiddleground_listProduct();\r\n          this.merchantProduct_scbServiceList();\r\n        });\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消'\r\n        });      \r\n        this.isAllAddProduct = false;    \r\n      });\r\n    },\r\n    /**\r\n     * （添加商品）\r\n     */\r\n    merchantProduct_addProductToMerchant(item) {\r\n      const that = this;\r\n      const discountData = this.discountData;\r\n\r\n      this.request(\r\n        this.api.scb.merchantProduct_addProductToMerchant,\r\n        {\r\n          productCode:item.code\r\n        },\r\n        true\r\n      ).then(res => {\r\n        this.warn('商品添加成功！');\r\n        that.marketingMiddleground_listProduct();\r\n        this.merchantProduct_scbServiceList();\r\n      });\r\n    },\r\n    /**\r\n     * （上下架）\r\n     */\r\n    merchantProduct_onSaleOrOffSaleSPU(item) {\r\n      const that = this;\r\n      const text = item.onSaleStatus == 'ONSALE' ? '下架后客户无法下单，是否继续？' : '确定上架吗？';\r\n      this.$confirm(text, '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.request(\r\n          this.api.scb.merchantProduct_onSaleOrOffSaleSPU,\r\n          {\r\n            \"merchantId\": item.id,\r\n            \"productCode\": item.code\r\n          },\r\n          true\r\n        ).then(res => {\r\n          this.merchantProduct_scbServiceList();\r\n          this.warn('操作成功！');\r\n        });\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消'\r\n        });          \r\n      });\r\n    },\r\n    /**\r\n     * （单品从列表内剔除）\r\n     */\r\n    merchantProduct_deleteProductFromMerchant(item) {\r\n      const that = this;\r\n      const discountData = this.discountData;\r\n      this.$confirm('剔除后该商品在商城不可见，是否继续？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.request(\r\n          this.api.scb.merchantProduct_deleteProductFromMerchant,\r\n          {\r\n            productCode:item.code\r\n          },\r\n          true\r\n        ).then(res => {\r\n          this.warn('剔除成功！');\r\n          that.marketingMiddleground_listProduct();\r\n          this.merchantProduct_scbServiceList();\r\n        });\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消'\r\n        });          \r\n      });\r\n    },\r\n    /**\r\n     * （全部商品）\r\n     */\r\n    marketingMiddleground_listProduct() {\r\n      const that = this;\r\n      // const discountData = this.discountData;\r\n\r\n      // Object.assign(this.goodsFiltersData, {\r\n      //   storeId:discountData.storeId,\r\n      //   type:discountData.itemDiscountType,\r\n      //   discount:discountData.itemDiscountEd\r\n      // }); \r\n      this.request(\r\n        this.api.scb.merchantProduct_productServiceList,\r\n        this.goodsFiltersData,\r\n        true\r\n      ).then(res => {\r\n        that.goodsList = res;\r\n        this.isAllAddProduct = false;\r\n      });\r\n    },\r\n    /**\r\n     * 查询门店列表\r\n     */\r\n    getStoreList() {\r\n        const that = this;\r\n\r\n        this.request(\r\n        that.api.store.storeBasic_list,\r\n        {\r\n          pricingPower:0\r\n        },\r\n        true\r\n        ).then(res => {\r\n          that.storeList = res;\r\n        });\r\n    },\r\n    /**\r\n     * 提示\r\n     * @param { String } message 提示文案\r\n     * @param { String } type 提示类型\r\n     */\r\n    warn(message, type) {\r\n      this.$message({\r\n        message: message,\r\n        type: type || 'success'\r\n      });\r\n    },\r\n    /**\r\n     * 跳转\r\n     * @param { String } routeName 路由跳转名字\r\n     */\r\n    href(routeName, param) {\r\n      this.$router.push({\r\n        path: `/${routeName}`,\r\n        query:param\r\n      });\r\n    },\r\n    /**\r\n     *  选择每页多少条数（全部）\r\n     *  @param { Number } pageSize 每页条数\r\n     */\r\n    handleSizeChange(pageSize){\r\n        this.isAllAddProduct = false;\r\n        this.goodsFiltersData.pageSize = pageSize;  \r\n        this.marketingMiddleground_listProduct();\r\n    },\r\n     /**\r\n     * 点击页数（全部）\r\n     * @param { Number } pageIndex 当前页\r\n     */\r\n    handleCurrentChange(pageIndex){\r\n        this.isAllAddProduct = false;\r\n        this.goodsFiltersData.pageIndex = pageIndex;\r\n        this.marketingMiddleground_listProduct();\r\n    },\r\n   /**\r\n     * 模糊搜索（全部）\r\n     */\r\n    handleSearch() {\r\n        this.goodsFiltersData.pageIndex = 1;\r\n        this.marketingMiddleground_listProduct();\r\n    },\r\n    /**\r\n     * 搜索重置（全部）\r\n     */\r\n    handleResetFilters() {\r\n      Object.assign(this.goodsFiltersData,{\r\n        // 当前页码\r\n        pageIndex: 1,\r\n        // 每页数量\r\n        pageSize: 10,\r\n        // 品类id\r\n        cateIdentifier:null,\r\n        // 品牌id\r\n        brandId:null,\r\n        // 售价最小值\r\n        retailPriceLowerLimit:null, \r\n        // 售价最大值\r\n        retailPriceUpperLimit:null, \r\n        // 库存最小值\r\n        quantityLowerLimit:null, \r\n        // 库存最大值\r\n        quantityUpperLimit:null, \r\n        // 季节\r\n        seasonalStyleCode:null,\r\n        // 关键词\r\n        searchWords:null \r\n      });\r\n      this.cateArr = [];\r\n    },\r\n\r\n    /** ---------------\r\n     * 点击页数（已添加）\r\n     * @param { Number } pageIndex 当前页\r\n     */\r\n    handleCurrentChangeCheck(pageIndex){\r\n      this.goodsFiltersDataCheck.pageIndex = pageIndex;\r\n      this.merchantProduct_scbServiceList();\r\n    },\r\n    /**\r\n     *  选择每页多少条数（已添加）\r\n     *  @param { Number } pageSize 每页条数\r\n     */\r\n    handleSizeChangeCheck(pageSize){\r\n      this.goodsFiltersDataCheck.pageSize = pageSize;  \r\n      this.merchantProduct_scbServiceList();\r\n    },\r\n     /**\r\n     * 模糊搜索（已添加）\r\n     */\r\n    handleSearchCheck() {\r\n        this.goodsFiltersDataCheck.pageIndex = 1;\r\n        this.merchantProduct_scbServiceList();\r\n    },\r\n    /**\r\n     * 搜索重置（已添加）\r\n     */\r\n    handleResetFiltersCheck() {\r\n      Object.assign(this.goodsFiltersDataCheck,{\r\n        // 当前页码\r\n        pageIndex: 1,\r\n        // 每页数量\r\n        pageSize: 10,\r\n        // 分类id\r\n        scbCateId:null,\r\n        // 品类id\r\n        cateIdentifier:null,\r\n        // 售价最小值\r\n        retailPriceLowerLimit:null, \r\n        // 售价最大值\r\n        retailPriceUpperLimit:null, \r\n        // 品牌id\r\n        brandId:null,\r\n        // 上下架状态\r\n        onSaleStatus:null,\r\n        // 库存最小值\r\n        quantityLowerLimit:null, \r\n        // 库存最大值\r\n        quantityUpperLimit:null, \r\n        // 季节\r\n        seasonalStyleCode:null,\r\n        // 关键词 \r\n        searchWords:null \r\n      });\r\n      this.cateArrs = [];\r\n    },\r\n  },\r\n  components: {}\r\n};\r\n</script>\r\n<style  lang=\"less\" scoped>\r\n  .addClass{\r\n    display: flex;\r\n    justify-content:center;\r\n  }\r\n  .box{\r\n    padding: 20px 20px 20px 20px;\r\n    margin: 8px 8px 0 8px;\r\n    background: #fff;\r\n  }\r\n  .el-input-short{\r\n    width: 300px;\r\n  }\r\n  .el-input-mini{\r\n    width: 90px;\r\n  }\r\n  .mlr10px{\r\n    margin: 0 10px;\r\n  }\r\n  .addRadder{\r\n    border-radius: 4px;\r\n    border: 1px solid #DCDFE6;\r\n    width: 400px;\r\n    padding: 15px;\r\n  }\r\n  .mb-10{\r\n    margin-bottom: 10px;\r\n  }\r\n  .mb-100{\r\n    margin-bottom: 100px;\r\n  }\r\n  .ml-10{\r\n    margin-left: 10px;\r\n  }\r\n  .mt-74{\r\n    margin-top: 74px;\r\n  }\r\n  .el-input-width155{\r\n    width:300px;\r\n  }\r\n  .el-input-width355{\r\n    width: 355px;\r\n  }\r\n  .el-input__inners{\r\n    width: 300px;\r\n  }\r\n  .el-dialog__wrapper /deep/ .el-dialog{\r\n    width: 80%;\r\n  }\r\n  .discountImg{\r\n    width: 40px;\r\n    height: 40px;\r\n  }\r\n</style>\r\n\r\n\r\n"],"sourceRoot":"src/views/scb/goods"}]}