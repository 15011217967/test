{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\components\\Prints\\BatchPrintsDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\components\\Prints\\BatchPrintsDialog.vue","mtime":1572415127704},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//引入LODOP模块\nimport { getLodop } from \"@/utils/LodopFuncs.js\"; //引入 打印样式模块\n\nimport { printWinform } from \"@/utils/print_50_120_shu.js\"; // 引入弹出打印状态组件；\n\nimport PrintsStatusDialog from \"./PrintsStatusDialog.vue\";\nvar LODOP;\nexport default {\n  name: \"tp-batch-prints-dialog\",\n  components: {\n    PrintsStatusDialog: PrintsStatusDialog\n  },\n  data: function data() {\n    return {\n      filtersData: {},\n      tableListData: [],\n      printsOptions: [],\n      printsDialogVisible: false,\n      printsValue: null,\n      //选择后打印的数据\n      tableLoading: false\n    };\n  },\n  created: function created() {\n    this.init();\n  },\n  mounted: function mounted() {},\n  methods: {\n    init: function init() {\n      this.tableListData = [];\n      this.selectPrintData = [];\n    },\n    //获取打印机\n    getLodopData: function getLodopData() {\n      try {\n        LODOP = getLodop();\n        var arr = [];\n        var iPrinterCount = LODOP.GET_PRINTER_COUNT();\n\n        for (var i = 0; i < iPrinterCount; i++) {\n          arr.push({\n            label: LODOP.GET_PRINTER_NAME(i),\n            value: i\n          });\n        } // console.log(arr);\n\n\n        this.printsOptions = arr;\n      } catch (error) {}\n    },\n    popupInit: function popupInit(list) {\n      this.getTableList(list);\n      this.printsDialogVisible = true;\n      this.getLodopData();\n    },\n    //获取列表\n    getTableList: function getTableList(list) {\n      var _this = this;\n\n      this.tableLoading = true;\n      this.tableListData = [];\n      this.request(this.api.product.productGoodsSn_reprintSns, list, true).then(function (res) {\n        _this.tableLoading = false;\n        var arr = [];\n\n        for (var i = 0; i < res.length; i++) {\n          var productGoodsSns = res[i].productGoodsSns || [];\n\n          for (var k = 0; k < productGoodsSns.length; k++) {\n            var dataList = JSON.parse(JSON.stringify(res[i]));\n            var obj = new Object();\n            obj = dataList;\n            obj.productGoodsSn = productGoodsSns[k];\n            arr.push(obj);\n            dataList = null;\n            obj = null;\n          }\n        }\n\n        _this.tableListData = arr;\n      }).catch(function (err) {\n        _this.tableLoading = false;\n      });\n    },\n    //提交打印\n    submitPrint: function submitPrint() {\n      var _this2 = this;\n\n      if (this.tableListData.length <= 0) {\n        this.$message.error(\"无可打印的数据！\");\n        return;\n      }\n\n      if (this.printsValue == null) {\n        this.$message.error(\"请选择打印机！\");\n        return;\n      } // LODOP.SELECT_PRINTER();//选择打印机\n      // LODOP.SET_PRINTER_INDEXA(this.printsValue);\n      // LODOP.SET_PRINT_MODE(\"RESELECT_PRINTER\",true);// 允许重选打印机\n\n\n      LODOP = getLodop(); // LODOP.PRINT_INITA(\"0mm\", \"0mm\", \"50.00mm\", \"120.00mm\", \"合格证\");\n      // LODOP.SET_PRINTER_INDEX(this.printsValue);\n      // console.log(LODOP.SET_PRINTER_INDEX(this.printsValue));\n      // LODOP.SET_PRINTER_INDEXA(this.printsValue);\n\n      for (var i = 0; i < this.tableListData.length; i++) {\n        printWinform(LODOP, this.tableListData[i], this.printsValue);\n      } // LODOP.NewPage();\n\n\n      if (LODOP.CVERSION) {\n        CLODOP.On_Return = function (TaskID, Value) {\n          if (!!Value) {\n            //打印状态\n            _this2.$refs.printsStatusRef.propInit();\n          } else {\n            alert(\"放弃打印！\");\n          }\n        };\n\n        return;\n      }\n    },\n    //获取子组件返回的打印成功能\n    getPrintsStatus: function getPrintsStatus() {\n      var _this3 = this;\n\n      var snArr = [];\n\n      for (var i = 0; i < this.tableListData.length; i++) {\n        snArr.push({\n          sn: this.tableListData[i].productGoodsSn\n        });\n      }\n\n      this.request(this.api.product.productGoodsSn_confirmed, snArr).then(function (res) {\n        _this3.$message.success(\"更新打印数据成功\");\n\n        _this3.$refs.printsStatusRef.closeDialog();\n\n        _this3.closeDialog();\n      }).catch(function (err) {\n        _this3.$message.error(\"更新打印数据失败\");\n\n        _this3.$refs.printsStatusRef.closeDialog();\n\n        _this3.closeDialog();\n      });\n    },\n    closeDialog: function closeDialog() {\n      this.printsDialogVisible = false;\n    }\n  }\n};",{"version":3,"sources":["BatchPrintsDialog.vue"],"names":[],"mappings":"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","sourcesContent":["<!--\r\n * @Description: 重新打印\r\n * @Author: elephant  \r\n * @Date: 2019-08-20 08:58:12\r\n * @LastEditTime: 2019-08-20 11:06:36\r\n * @LastEditors: Please set LastEditors\r\n -->\r\n<template>\r\n  <div>\r\n    <el-dialog\r\n      v-if=\"printsDialogVisible\"\r\n      title=\"重新打印\"\r\n      :visible.sync=\"printsDialogVisible\"\r\n      class=\"alarmPopup\"\r\n      width=\"1000px\"\r\n      append-to-body\r\n    >\r\n      <div class=\"dialog-search\">\r\n        <el-form\r\n          class=\"item-form\"\r\n          :model=\"filtersData\"\r\n          label-width=\"100px\"\r\n          size=\"small\"\r\n          ref=\"filtersForm\"\r\n          inline\r\n        >\r\n          <el-form-item prop=\"printsOptions\" label=\"选择打印机：\">\r\n            <el-select v-model=\"printsValue\" placeholder=\"请选择\">\r\n              <el-option\r\n                v-for=\"item in printsOptions\"\r\n                :key=\"item.value\"\r\n                :label=\"item.label\"\r\n                :value=\"item.value\"\r\n              ></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n      <div>\r\n        <el-table\r\n          :data=\"tableListData\"\r\n          v-loading=\"tableLoading\"\r\n          stripe\r\n          empty-text=\"暂无数据\"\r\n          header-align=\"center\"\r\n          header-row-class-name=\"item-table-header\"\r\n          :highlight-current-row=\"true\"\r\n          height=\"400\"\r\n        >\r\n          <el-table-column prop=\"productGoodsCode\" align=\"center\" label=\"商品编码\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"productCode\" align=\"center\" label=\"商品款号\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"productGoodsSn\" align=\"center\" label=\"SN码\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"productGoodsName\" align=\"center\" label=\"品名\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"tagBrandName\" align=\"center\" label=\"品牌\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"size\" align=\"center\" label=\"尺码\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"color\" align=\"center\" label=\"颜色\" min-width=\"100\"></el-table-column>\r\n        </el-table>\r\n      </div>\r\n      <div class=\"item-right mt-10\">\r\n        <el-button size=\"small\" @click=\"closeDialog\">取消打印</el-button>\r\n        <el-button size=\"small\" @click=\"submitPrint()\" type=\"primary\">确认打印</el-button>\r\n      </div>\r\n    </el-dialog>\r\n    <!-- 打印状态弹窗 -->\r\n    <prints-status-dialog @setParentPrintsStatus=\"getPrintsStatus\" ref=\"printsStatusRef\"></prints-status-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\n//引入LODOP模块\r\nimport { getLodop } from \"@/utils/LodopFuncs.js\";\r\n//引入 打印样式模块\r\nimport { printWinform } from \"@/utils/print_50_120_shu.js\";\r\n// 引入弹出打印状态组件；\r\nimport PrintsStatusDialog from \"./PrintsStatusDialog.vue\";\r\n\r\nlet LODOP;\r\nexport default {\r\n  name: \"tp-batch-prints-dialog\",\r\n  components: {\r\n    PrintsStatusDialog\r\n  },\r\n  data() {\r\n    return {\r\n      filtersData: {},\r\n      tableListData: [],\r\n      printsOptions: [],\r\n      printsDialogVisible: false,\r\n      printsValue: null,\r\n      //选择后打印的数据\r\n      tableLoading: false\r\n    };\r\n  },\r\n  created() {\r\n    this.init();\r\n  },\r\n  mounted() {\r\n      \r\n  },\r\n  methods: {\r\n    init() {\r\n      this.tableListData = [];\r\n      this.selectPrintData = [];\r\n    },\r\n    //获取打印机\r\n    getLodopData() {\r\n      try {\r\n        LODOP = getLodop();\r\n        let arr = [];\r\n        let iPrinterCount = LODOP.GET_PRINTER_COUNT();\r\n        for (let i = 0; i < iPrinterCount; i++) {\r\n          arr.push({\r\n            label: LODOP.GET_PRINTER_NAME(i),\r\n            value: i\r\n          });\r\n        }\r\n        // console.log(arr);\r\n        this.printsOptions = arr;\r\n      } catch (error) {\r\n        \r\n      }\r\n    },\r\n    popupInit(list) {\r\n      this.getTableList(list);\r\n      this.printsDialogVisible = true;\r\n      this.getLodopData();\r\n    },\r\n    //获取列表\r\n    getTableList(list) {\r\n      this.tableLoading = true;\r\n      this.tableListData=[];\r\n      this.request(this.api.product.productGoodsSn_reprintSns, list, true)\r\n        .then(res => {\r\n          this.tableLoading = false;\r\n          let arr = [];\r\n          for (let i = 0; i < res.length; i++) {\r\n            let productGoodsSns = res[i].productGoodsSns || [];\r\n            for (let k = 0; k < productGoodsSns.length; k++) {\r\n              let dataList = JSON.parse(JSON.stringify(res[i]));\r\n              let obj = new Object();\r\n              obj = dataList;\r\n              obj.productGoodsSn = productGoodsSns[k];\r\n              arr.push(obj);\r\n              dataList = null;\r\n              obj = null;\r\n            }\r\n          }\r\n          this.tableListData = arr;\r\n        })\r\n        .catch(err => {\r\n          this.tableLoading = false;\r\n        });\r\n    },\r\n    //提交打印\r\n    submitPrint() {\r\n      if (this.tableListData.length <= 0) {\r\n        this.$message.error(\"无可打印的数据！\");\r\n        return;\r\n      }\r\n      if (this.printsValue == null) {\r\n        this.$message.error(\"请选择打印机！\");\r\n        return;\r\n      }\r\n      // LODOP.SELECT_PRINTER();//选择打印机\r\n      // LODOP.SET_PRINTER_INDEXA(this.printsValue);\r\n      // LODOP.SET_PRINT_MODE(\"RESELECT_PRINTER\",true);// 允许重选打印机\r\n      LODOP = getLodop();\r\n      // LODOP.PRINT_INITA(\"0mm\", \"0mm\", \"50.00mm\", \"120.00mm\", \"合格证\");\r\n      // LODOP.SET_PRINTER_INDEX(this.printsValue);\r\n      // console.log(LODOP.SET_PRINTER_INDEX(this.printsValue));\r\n      // LODOP.SET_PRINTER_INDEXA(this.printsValue);\r\n      for (let i = 0; i < this.tableListData.length; i++) {\r\n        printWinform(LODOP, this.tableListData[i],this.printsValue);\r\n      }\r\n      // LODOP.NewPage();\r\n      if (LODOP.CVERSION) {\r\n        CLODOP.On_Return = (TaskID, Value) => {\r\n          if (!!Value) {\r\n            //打印状态\r\n            this.$refs.printsStatusRef.propInit();\r\n          } else {\r\n            alert(\"放弃打印！\");\r\n          }\r\n        };\r\n        return;\r\n      }\r\n    },\r\n    //获取子组件返回的打印成功能\r\n    getPrintsStatus() {\r\n      let snArr = [];\r\n      for (let i = 0; i < this.tableListData.length; i++) {\r\n        snArr.push({ sn: this.tableListData[i].productGoodsSn });\r\n      }\r\n      this.request(this.api.product.productGoodsSn_confirmed, snArr)\r\n        .then(res => {\r\n          this.$message.success(\"更新打印数据成功\");\r\n          this.$refs.printsStatusRef.closeDialog();\r\n          this.closeDialog();\r\n        })\r\n        .catch(err => {\r\n          this.$message.error(\"更新打印数据失败\");\r\n          this.$refs.printsStatusRef.closeDialog();\r\n          this.closeDialog();\r\n        });\r\n    },\r\n    closeDialog() {\r\n      this.printsDialogVisible = false;\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.alarmPopup /deep/ .el-dialog__body {\r\n  padding: 0 20px 30px;\r\n}\r\n.alarmPopup /deep/ .el-input-number {\r\n  line-height: 26px;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/Prints"}]}