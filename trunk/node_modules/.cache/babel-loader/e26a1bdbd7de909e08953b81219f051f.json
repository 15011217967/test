{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\warehouse\\stock_center\\stock_manager\\stock_manager_list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\warehouse\\stock_center\\stock_manager\\stock_manager_list.vue","mtime":1587347931263},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport _toConsumableArray from \"C:\\\\Users\\\\EDZ\\\\Desktop\\\\\\u7814\\u53D1\\u9879\\u76EE\\\\vue-project\\\\trunk\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\EDZ\\\\Desktop\\\\\\u7814\\u53D1\\u9879\\u76EE\\\\vue-project\\\\trunk\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      //搜索得数据源\n      signData: {\n        //搜索\n        searchWords: \"\",\n        //品牌ID\n        brandId: \"\",\n        //季节编码\n        appropriateSeasonCode: \"\",\n        //分类\n        cateIdentifier: \"\",\n        //仓库编码\n        warehouseCode: \"\",\n        //颜色\n        colorCode: \"\",\n        //货主编码\n        ownerId: \"\",\n        //数量类型(0：可用数量，1：冻结数量，2：总数量)\n        quantityType: \"\",\n        //逻辑运算符（0：小于，1：等于，2：大于，3：小于等于，4：大于等于）\n        logicType: \"\",\n        //数量\n        quantity: \"\",\n        //商品形态（0：未知，1：合格，2：残次，3：在途)\n        inventoryStatus: \"1\",\n        //当前页数\n        pageIndex: 1,\n        //每页要显示的数据条数,默认10条\n        pageSize: 10\n      },\n      //品牌数据\n      brandData: [],\n      //颜色数据\n      colorData: [],\n      //仓库\n      warehouseArr: [],\n      // 分类数据\n      classData: [],\n      classList: [],\n      // 分类映射\n      props: {\n        value: \"identifier\",\n        label: \"name\",\n        children: \"children\"\n      },\n      // 选中的分类\n      cateArr: [],\n      //货主数据\n      ownerData: [],\n      //自定义筛选\n      logicTypeArr: [{\n        id: 0,\n        value: \"小于\"\n      }, {\n        id: 1,\n        value: \"等于\"\n      }, {\n        id: 2,\n        value: \"大于\"\n      }, {\n        id: 3,\n        value: \"小于等于\"\n      }, {\n        id: 4,\n        value: \"大于等于\"\n      }],\n      quantityTypeArr: [{\n        id: 0,\n        value: \"可用数量\"\n      }, {\n        id: 1,\n        value: \"冻结数量\"\n      }, {\n        id: 2,\n        value: \"总数量\"\n      }],\n      //标记临时得选项名称\n      tempTabName: -1,\n      //表数据\n      tableListData: {},\n      //表格数据\n      tableData: [],\n      totalCount: 1,\n      multipleSelectionData: [{\n        statementSn: \"0101010\"\n      }]\n    };\n  },\n  //监听器\n  watch: {\n    qualityStatus: function qualityStatus(newVal, oldVal) {// this.tempTabName = newVal;\n      // switch (this.signData.qualityStatus) {\n      //   case \"1\":\n      //     console.log(\"合格品====\");\n      //     break;\n      //   case \"2\":\n      //     console.log(\"残次品====\");\n      //     break;\n      // }\n      // this.getStatementListData();\n    }\n  },\n  computed: {\n    //季节波段\n    seasonalStyleOptions: function seasonalStyleOptions() {\n      var codeSet = this.$store.getters.codeData;\n      console.log(codeSet);\n\n      if (codeSet.PRO001) {\n        return codeSet.PRO001.codeItemList;\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.getOrganizationListData();\n    this.getTableListData();\n    this.getBrandOptionsData();\n    this.getColorData();\n    this.getClassData();\n  },\n  methods: {\n    //得到组织机构数据\n    getOrganizationListData: function () {\n      var _getOrganizationListData = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        var info;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.request(this.api.user.get_userinfo, {}, true);\n\n              case 2:\n                info = _context.sent;\n                console.log(info); //得到部门Id\n                // this.shop_user.relationDepId = info.departId;\n\n                this.request(this.api.user.userCompany_getUserOrgByUserId, {\n                  userId: info.userId,\n                  type: 0\n                }).then(function (data) {\n                  //获取货主列表\n                  _this.getGoodsOwnerListData(data.id); //得到仓库数据\n\n\n                  _this.getWarehouseList(data.id);\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getOrganizationListData() {\n        return _getOrganizationListData.apply(this, arguments);\n      }\n\n      return getOrganizationListData;\n    }(),\n    //得到表格数据\n    getTableListData: function getTableListData() {\n      var _this2 = this;\n\n      this.request(this.api.warehouse.warehouseBase_inventory_list, this.signData).then(function (res) {\n        console.log(res);\n        res.data.data.forEach(function (item) {\n          item.isType = 1;\n          item.isShow = true;\n        });\n        _this2.tableListData = res;\n        _this2.tableData = res.data.data;\n        _this2.totalCount = res.data.totalCount;\n      });\n    },\n    //得到品牌数据\n    getBrandOptionsData: function getBrandOptionsData() {\n      var _this3 = this;\n\n      this.request(this.api.product.productBrand_list, {}, true).then(function (data) {\n        var _data = data.data;\n        _this3.brandData = _data;\n      });\n    },\n    //得到颜色数据\n    getColorData: function getColorData() {\n      var _this4 = this;\n\n      this.request(this.api.product.color_list, {}, true).then(function (res) {\n        var _data = res.data;\n        _this4.colorData = _data;\n      });\n    },\n    //得到仓库数据\n    getWarehouseList: function getWarehouseList(orgId) {\n      var _this5 = this;\n\n      this.request(this.api.warehouse.warehouseBase_warehouse_list, {\n        isValid: true\n      }).then(function (data) {\n        _this5.warehouseArr = data.data;\n      });\n    },\n    //获取货主列表\n    getGoodsOwnerListData: function getGoodsOwnerListData(orgId) {\n      var _this6 = this;\n\n      this.request(this.api.warehouse.warehouseBase_goodsOwner_list, {\n        valid: true\n      }).then(function (res) {\n        _this6.ownerData = res.data;\n      });\n    },\n    // 获取商品分类数据\n    getClassData: function getClassData() {\n      var _this7 = this;\n\n      //分类类型（1：标准分类，2：定制分类，3：原料分类或者称为属性分类）\n      this.$common.getClassSelect(this, 1).then(function (res) {\n        _this7.classData = res.ztree;\n        _this7.classList = res.list;\n      });\n    },\n    // 商品分类Change\n    classChange: function classChange(e) {\n      var cateId = JSON.parse(JSON.stringify(e)).pop();\n      var obj = this.classList.find(function (item) {\n        return item.identifier == cateId;\n      });\n      this.signData.cateIdentifier = obj.identifier;\n    },\n    //搜索\n    onSearchContent: function onSearchContent() {\n      this.signData.productId = \"\";\n      this.signData.pageIndex = 1; //刷新数据\n\n      this.getTableListData();\n    },\n    //重置\n    resetForm: function resetForm(ruleForm) {\n      this.$refs[ruleForm].resetFields();\n      this.cateArr = [];\n      this.signData.cateIdentifier = \"\";\n      this.signData.productId = \"\";\n    },\n    //选项卡切换事件\n    activeTabClickEvent: function activeTabClickEvent(tab, event) {\n      if (this.tempTabName != this.signData.inventoryStatus) {\n        this.getTableListData();\n        this.tempTabName = this.signData.inventoryStatus;\n      }\n    },\n    //导出\n    exportExcel: function exportExcel() {\n      this.exportExcelSelectData();\n    },\n    //导出选中的数据\n    exportExcelSelectData: function exportExcelSelectData() {\n      var _this8 = this;\n\n      require.ensure([], function () {\n        var _require = require(\"@/vendor/Export2Excel\"),\n            export_json_to_excel = _require.export_json_to_excel;\n\n        var tHeader = [\"商品款号\", \"货号\", \"商品名称\", \"商品图片\", \"原始款号\", \"颜色\", \"规格\", \"品牌\", \"库存总量\", \"冻结库存\", \"可用库存\", \"在途库存\"]; // 上面设置Excel的表格第一行的标题\n\n        var filterVal = [\"spu\", \"sku\", \"name\", \"image\", \"原始款号\", \"colorName\", \"sizeName\", \"brandName\", \"quantity\", \"frozenQuantity\", \"availableQuantity\", \"inTransitQuantity\"]; // 上面的index、nickName、name是tableData里对象的属性\n\n        var list = _this8.multipleSelectionData; //把data里的multipleSelectionData存到list\n\n        var data = _this8.formatJson(filterVal, list);\n\n        export_json_to_excel(tHeader, data, \"门店待对账表单\");\n      });\n    },\n    formatJson: function formatJson(filterVal, jsonData) {\n      return jsonData.map(function (v) {\n        return filterVal.map(function (j) {\n          return v[j];\n        });\n      });\n    },\n    //点击获取子元素插入数组\n    childrenIsShow: function childrenIsShow(row) {\n      console.log(row);\n      var _id = row.id; //当前数据ID\n\n      var _type = row.isType; //状态 1 关闭 0 打开\n\n      if (_type == \"1\") {\n        //当前为关闭状态 需请求接口获取子元素\n        row.isType = 0;\n        this.getChildData(row, _id);\n      } else {\n        //当前为打开状态 需删除子元素\n        row.isType = 1;\n        this.removeChildData(row);\n      }\n    },\n    //获取子集\n    getChildData: function getChildData(row, _id) {\n      var _this9 = this;\n\n      console.log(_id);\n      this.signData.productId = _id; // {\n      //       productId: _id,\n      //       inventoryStatus: this.signData.inventoryStatus\n      //     }\n\n      var _index = this.tableData.findIndex(function (item) {\n        return item.id == _id;\n      });\n\n      if (!row._chilren) {\n        this.request(this.api.warehouse.warehouseBase_inventory_getProductGoodsInventoryByProductCode, this.signData).then(function (res) {\n          var _this9$tableData;\n\n          var _data = res.data;\n          var _dataLen = _data.length;\n\n          for (var i = 0; i < _dataLen; i++) {\n            _data[i].subCode = _data[i].code;\n            _data[i].code = null;\n          }\n\n          row._chilren = _data; //根据下标插入进去 获取ID 在数组中的下标\n\n          (_this9$tableData = _this9.tableData).splice.apply(_this9$tableData, [_index + 1, 0].concat(_toConsumableArray(_data))); //获取子集id存入 元素属性\n\n\n          var arr = [];\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = _data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var id = _step.value.id;\n              arr.push(id);\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          row._cid = arr.join();\n        });\n      } else {\n        var _this$tableData;\n\n        (_this$tableData = this.tableData).splice.apply(_this$tableData, [_index + 1, 0].concat(_toConsumableArray(row._chilren)));\n      }\n    },\n    //删除子集\n    removeChildData: function removeChildData(row) {\n      var cid = row._cid;\n      var cidArr = cid.split(\",\");\n      var _table = this.tableData,\n          tableLen = _table.length;\n\n      for (var i = 0; i < cidArr.length; i++) {\n        for (var j = 0; j < this.tableData.length; j++) {\n          if (cidArr[i] == this.tableData[j].id) {\n            this.tableData.splice(j, 1);\n          }\n        }\n      }\n    },\n    //每页条数改变时\n    handleSizeChange: function handleSizeChange(page) {\n      this.signData.pageSize = page;\n      this.getTableListData();\n    },\n    //当前页改变时\n    handleCurrentChange: function handleCurrentChange(page) {\n      this.signData.productId = \"\";\n      this.signData.pageIndex = page;\n      this.getTableListData();\n    }\n  }\n};",{"version":3,"sources":["stock_manager_list.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"content-from\">\r\n      <el-form\r\n        :inline=\"true\"\r\n        :model=\"signData\"\r\n        size=\"small\"\r\n        ref=\"ruleForm\"\r\n        class=\"demo-form-inline\"\r\n        label-width=\"104px\"\r\n      >\r\n        <el-form-item label=\"模糊查询：\" prop=\"searchWords\">\r\n          <el-input\r\n            style=\"width:240px;\"\r\n            v-model=\"signData.searchWords\"\r\n            placeholder=\"商品款号/货号/商品名称/原始款号\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"商品分类：\">\r\n          <el-cascader\r\n            class=\"input-w\"\r\n            :options=\"classData\"\r\n            v-model=\"cateArr\"\r\n            @change=\"classChange\"\r\n            :show-all-levels=\"false\"\r\n            :props=\"props\"\r\n            change-on-select\r\n            clearable\r\n          ></el-cascader>\r\n        </el-form-item>\r\n        <el-form-item label=\"品牌：\" label-width=\"88px\" prop=\"brandId\">\r\n          <el-select v-model=\"signData.brandId\" placeholder=\"请选择\">\r\n            <el-option v-for=\"item in brandData\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"季节：\" label-width=\"94px\" prop=\"appropriateSeasonCode\">\r\n          <el-select v-model=\"signData.appropriateSeasonCode\" placeholder=\"请选择\">\r\n            <el-option\r\n              v-for=\"(item,index) in seasonalStyleOptions\"\r\n              :key=\"index.code\"\r\n              :label=\"item.name\"\r\n              :value=\"item.code\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"颜色：\" prop=\"colorCode\">\r\n          <el-select v-model=\"signData.colorCode\" placeholder=\"请选择\">\r\n            <el-option\r\n              v-for=\"item in colorData\"\r\n              :key=\"item.id\"\r\n              :label=\"item.name\"\r\n              :value=\"item.code\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"仓库：\" prop=\"warehouseCode\">\r\n          <el-select v-model=\"signData.warehouseCode\" placeholder=\"请选择\" style=\"width:240px;\">\r\n            <el-option\r\n              v-for=\"item in warehouseArr\"\r\n              :key=\"item.id\"\r\n              :label=\"item.warehouseName\"\r\n              :value=\"item.warehouseCode\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"货主：\" label-width=\"105px\" prop=\"ownerId\">\r\n          <el-select v-model=\"signData.ownerId\" placeholder=\"请选择\" style=\"width:160px;\">\r\n            <el-option\r\n              v-for=\"item in ownerData\"\r\n              :key=\"item.id\"\r\n              :label=\"item.name\"\r\n              :value=\"item.code\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"自定义筛选：\" label-width=\"126px\" prop=\"quantityType\">\r\n          <el-select v-model=\"signData.quantityType\" placeholder=\"请选择\">\r\n            <el-option\r\n              v-for=\"item in quantityTypeArr\"\r\n              :key=\"item.id\"\r\n              :label=\"item.value\"\r\n              :value=\"item.id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label prop=\"logicType\" style=\"margin:0px -14px;\">\r\n          <el-select v-model=\"signData.logicType\" placeholder=\"请选择\" style=\"margin:0 5px;\">\r\n            <el-option\r\n              v-for=\"item in logicTypeArr\"\r\n              :key=\"item.id\"\r\n              :label=\"item.value\"\r\n              :value=\"item.id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label prop=\"quantity\" style=\"margin-left:10px;\">\r\n          <el-input class=\"input-w\" placeholder=\"具体数量\" v-model=\"signData.quantity\" v-enter-number></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" plain @click=\"onSearchContent\" size=\"small\">搜索</el-button>\r\n          <el-button @click=\"resetForm('ruleForm')\" size=\"small\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n    <div class=\"content-table\">\r\n      <el-tabs v-model=\"signData.inventoryStatus\" @tab-click=\"activeTabClickEvent\">\r\n        <el-tab-pane label=\"合格品\" name=\"1\"></el-tab-pane>\r\n        <el-tab-pane label=\"残次品\" name=\"2\"></el-tab-pane>\r\n      </el-tabs>\r\n      <el-button plain @click=\"exportExcel\" size=\"small\">导出</el-button>\r\n      <el-table\r\n        ref=\"multipleTable\"\r\n        :data=\"tableData\"\r\n        tooltip-effect=\"dark\"\r\n        style=\"width: 100%\"\r\n        header-row-class-name=\"item-table-header\"\r\n        empty-text=\"暂无数据\"\r\n      >\r\n        <el-table-column width=\"55\">\r\n          <template slot-scope=\"scope\">\r\n            <i\r\n              @click=\"childrenIsShow(scope.row)\"\r\n              :data-id=\"scope.row.id\"\r\n              v-if=\"scope.row.isShow\"\r\n              :class=\"scope.row.isType == 1 ?'el-icon-circle-plus-outline i-cursor' : 'el-icon-remove-outline i-cursor'\"\r\n            ></i>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"商品款号\" width=\"170\">\r\n          <template slot-scope=\"scope\">{{ scope.row.spu }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"sku\" label=\"货号\" width=\"170\">\r\n          <template slot-scope=\"scope\">{{ scope.row.sku }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"name\" label=\"商品名称\">\r\n          <template slot-scope=\"scope\">{{scope.row.name}}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"image\" label=\"商品图片\">\r\n          <template slot-scope=\"scope\">\r\n            <img :src=\"scope.row.image\" style=\"width:32px;height:32px;\" />\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"originalCode\" label=\"原始款号\">\r\n          <template slot-scope=\"scope\">{{ scope.row.originalCode }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"colorName\" label=\"颜色\">\r\n          <template slot-scope=\"scope\">{{ scope.row.colorName }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"sizeName\" label=\"规格\">\r\n          <template slot-scope=\"scope\">{{ scope.row.sizeName }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"brandName\" label=\"品牌\">\r\n          <template slot-scope=\"scope\">{{ scope.row.brandName }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"quantity\" label=\"库存总量\">\r\n          <template slot-scope=\"scope\">{{ scope.row.quantity }}</template>\r\n        </el-table-column>\r\n        <el-table-column label=\"冻结库存\">\r\n          <template slot-scope=\"scope\">{{ scope.row.frozenQuantity }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"availableQuantity\" label=\"可用库存\" align=\"center\">\r\n          <template slot-scope=\"scope\">{{ scope.row.availableQuantity}}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"inTransitQuantity\" label=\"在途库存\" align=\"center\">\r\n          <template slot-scope=\"scope\">{{ scope.row.inTransitQuantity}}</template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <div :class=\"{'page_div':tableData.length>0}\">\r\n        <div\r\n          style=\"color:#222;flex:auto;font-weight:700;font-size:13px;\"\r\n          v-show=\"tableData.length>0\"\r\n        >\r\n          <span>货主：{{tableListData.ownerCount}}家</span>\r\n          <span style=\"margin-left:10px;margin-right:10px;\">仓库：{{tableListData.warehouseCount}}个</span>\r\n          <span style=\"margin-left:10px;margin-right:10px;\">总库存量：{{tableListData.inventoryCount}}件</span>\r\n          <span>其中款号数{{tableListData.productCodeCount}}种</span>\r\n          <span style=\"margin-left:10px;margin-right:10px;\">货号数{{tableListData.goodsCodeCount}}个</span>\r\n          <span style=\"margin-left:10px;margin-right:10px;\">累计可用库存：{{tableListData.availableCount}}</span>\r\n          <span style=\"margin-left:10px;margin-right:10px;\">累计冻结库存：{{tableListData.blockedCount}}</span>\r\n          <span style=\"margin-left:10px;margin-right:10px;\">累计在途库存：{{tableListData.inTransitCount}}</span>\r\n        </div>\r\n        <div :class=\"{'pagination':tableData.length==0}\">\r\n          <el-pagination\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page.sync=\"signData.pageIndex\"\r\n            :page-sizes=\"[10, 20, 30, 40]\"\r\n            :page-size=\"signData.pageSize\"\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=\"totalCount\"\r\n          ></el-pagination>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      //搜索得数据源\r\n      signData: {\r\n        //搜索\r\n        searchWords: \"\",\r\n        //品牌ID\r\n        brandId: \"\",\r\n        //季节编码\r\n        appropriateSeasonCode: \"\",\r\n        //分类\r\n        cateIdentifier: \"\",\r\n        //仓库编码\r\n        warehouseCode: \"\",\r\n        //颜色\r\n        colorCode: \"\",\r\n        //货主编码\r\n        ownerId: \"\",\r\n        //数量类型(0：可用数量，1：冻结数量，2：总数量)\r\n        quantityType: \"\",\r\n        //逻辑运算符（0：小于，1：等于，2：大于，3：小于等于，4：大于等于）\r\n        logicType: \"\",\r\n        //数量\r\n        quantity: \"\",\r\n        //商品形态（0：未知，1：合格，2：残次，3：在途)\r\n        inventoryStatus: \"1\",\r\n        //当前页数\r\n        pageIndex: 1,\r\n        //每页要显示的数据条数,默认10条\r\n        pageSize: 10\r\n      },\r\n      //品牌数据\r\n      brandData: [],\r\n      //颜色数据\r\n      colorData: [],\r\n      //仓库\r\n      warehouseArr: [],\r\n      // 分类数据\r\n      classData: [],\r\n      classList: [],\r\n      // 分类映射\r\n      props: {\r\n        value: \"identifier\",\r\n        label: \"name\",\r\n        children: \"children\"\r\n      },\r\n      // 选中的分类\r\n      cateArr: [],\r\n      //货主数据\r\n      ownerData: [],\r\n      //自定义筛选\r\n      logicTypeArr: [\r\n        {\r\n          id: 0,\r\n          value: \"小于\"\r\n        },\r\n        {\r\n          id: 1,\r\n          value: \"等于\"\r\n        },\r\n        {\r\n          id: 2,\r\n          value: \"大于\"\r\n        },\r\n        {\r\n          id: 3,\r\n          value: \"小于等于\"\r\n        },\r\n        {\r\n          id: 4,\r\n          value: \"大于等于\"\r\n        }\r\n      ],\r\n      quantityTypeArr: [\r\n        {\r\n          id: 0,\r\n          value: \"可用数量\"\r\n        },\r\n        {\r\n          id: 1,\r\n          value: \"冻结数量\"\r\n        },\r\n        {\r\n          id: 2,\r\n          value: \"总数量\"\r\n        }\r\n      ],\r\n      //标记临时得选项名称\r\n      tempTabName: -1,\r\n      //表数据\r\n      tableListData: {},\r\n      //表格数据\r\n      tableData: [],\r\n      totalCount: 1,\r\n      multipleSelectionData: [{ statementSn: \"0101010\" }]\r\n    };\r\n  },\r\n  //监听器\r\n  watch: {\r\n    qualityStatus(newVal, oldVal) {\r\n      // this.tempTabName = newVal;\r\n      // switch (this.signData.qualityStatus) {\r\n      //   case \"1\":\r\n      //     console.log(\"合格品====\");\r\n      //     break;\r\n      //   case \"2\":\r\n      //     console.log(\"残次品====\");\r\n      //     break;\r\n      // }\r\n      // this.getStatementListData();\r\n    }\r\n  },\r\n  computed: {\r\n    //季节波段\r\n    seasonalStyleOptions() {\r\n      let codeSet = this.$store.getters.codeData;\r\n      console.log(codeSet);\r\n      if (codeSet.PRO001) {\r\n        return codeSet.PRO001.codeItemList;\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getOrganizationListData();\r\n    this.getTableListData();\r\n    this.getBrandOptionsData();\r\n    this.getColorData();\r\n    this.getClassData();\r\n  },\r\n  methods: {\r\n    //得到组织机构数据\r\n    async getOrganizationListData() {\r\n      let info = await this.request(this.api.user.get_userinfo, {}, true);\r\n      console.log(info);\r\n      //得到部门Id\r\n      // this.shop_user.relationDepId = info.departId;\r\n\r\n      this.request(this.api.user.userCompany_getUserOrgByUserId, {\r\n        userId: info.userId,\r\n        type: 0\r\n      }).then(data => {\r\n        //获取货主列表\r\n        this.getGoodsOwnerListData(data.id);\r\n        //得到仓库数据\r\n        this.getWarehouseList(data.id);\r\n      });\r\n    },\r\n    //得到表格数据\r\n    getTableListData() {\r\n      this.request(\r\n        this.api.warehouse.warehouseBase_inventory_list,\r\n        this.signData\r\n      ).then(res => {\r\n        console.log(res);\r\n        res.data.data.forEach(item => {\r\n          item.isType = 1;\r\n          item.isShow = true;\r\n        });\r\n        this.tableListData = res;\r\n        this.tableData = res.data.data;\r\n        this.totalCount = res.data.totalCount;\r\n      });\r\n    },\r\n    //得到品牌数据\r\n    getBrandOptionsData() {\r\n      this.request(this.api.product.productBrand_list, {}, true).then(data => {\r\n        let _data = data.data;\r\n        this.brandData = _data;\r\n      });\r\n    },\r\n    //得到颜色数据\r\n    getColorData() {\r\n      this.request(this.api.product.color_list, {}, true).then(res => {\r\n        let _data = res.data;\r\n        this.colorData = _data;\r\n      });\r\n    },\r\n    //得到仓库数据\r\n    getWarehouseList(orgId) {\r\n      this.request(this.api.warehouse.warehouseBase_warehouse_list, {\r\n        isValid: true\r\n      }).then(data => {\r\n        this.warehouseArr = data.data;\r\n      });\r\n    },\r\n    //获取货主列表\r\n    getGoodsOwnerListData(orgId) {\r\n      this.request(this.api.warehouse.warehouseBase_goodsOwner_list, {\r\n        valid: true\r\n      }).then(res => {\r\n        this.ownerData = res.data;\r\n      });\r\n    },\r\n    // 获取商品分类数据\r\n    getClassData() {\r\n      //分类类型（1：标准分类，2：定制分类，3：原料分类或者称为属性分类）\r\n      this.$common.getClassSelect(this, 1).then(res => {\r\n        this.classData = res.ztree;\r\n        this.classList = res.list;\r\n      });\r\n    },\r\n    // 商品分类Change\r\n    classChange(e) {\r\n      let cateId = JSON.parse(JSON.stringify(e)).pop();\r\n      let obj = this.classList.find(item => item.identifier == cateId);\r\n      this.signData.cateIdentifier = obj.identifier;\r\n    },\r\n    //搜索\r\n    onSearchContent() {\r\n      this.signData.productId = \"\";\r\n      this.signData.pageIndex = 1;\r\n      //刷新数据\r\n      this.getTableListData();\r\n    },\r\n    //重置\r\n    resetForm(ruleForm) {\r\n      this.$refs[ruleForm].resetFields();\r\n      this.cateArr = [];\r\n      this.signData.cateIdentifier = \"\";\r\n      this.signData.productId = \"\";\r\n    },\r\n    //选项卡切换事件\r\n    activeTabClickEvent(tab, event) {\r\n      if (this.tempTabName != this.signData.inventoryStatus) {\r\n        this.getTableListData();\r\n        this.tempTabName = this.signData.inventoryStatus;\r\n      }\r\n    },\r\n    //导出\r\n    exportExcel() {\r\n      this.exportExcelSelectData();\r\n    },\r\n    //导出选中的数据\r\n    exportExcelSelectData() {\r\n      require.ensure([], () => {\r\n        let { export_json_to_excel } = require(\"@/vendor/Export2Excel\");\r\n        let tHeader = [\r\n          \"商品款号\",\r\n          \"货号\",\r\n          \"商品名称\",\r\n          \"商品图片\",\r\n          \"原始款号\",\r\n          \"颜色\",\r\n          \"规格\",\r\n          \"品牌\",\r\n          \"库存总量\",\r\n          \"冻结库存\",\r\n          \"可用库存\",\r\n          \"在途库存\"\r\n        ];\r\n        // 上面设置Excel的表格第一行的标题\r\n        let filterVal = [\r\n          \"spu\",\r\n          \"sku\",\r\n          \"name\",\r\n          \"image\",\r\n          \"原始款号\",\r\n          \"colorName\",\r\n          \"sizeName\",\r\n          \"brandName\",\r\n          \"quantity\",\r\n          \"frozenQuantity\",\r\n          \"availableQuantity\",\r\n          \"inTransitQuantity\"\r\n        ];\r\n        // 上面的index、nickName、name是tableData里对象的属性\r\n        let list = this.multipleSelectionData; //把data里的multipleSelectionData存到list\r\n        let data = this.formatJson(filterVal, list);\r\n        export_json_to_excel(tHeader, data, \"门店待对账表单\");\r\n      });\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => v[j]));\r\n    },\r\n    //点击获取子元素插入数组\r\n    childrenIsShow(row) {\r\n      console.log(row);\r\n      let _id = row.id; //当前数据ID\r\n      let _type = row.isType; //状态 1 关闭 0 打开\r\n      if (_type == \"1\") {\r\n        //当前为关闭状态 需请求接口获取子元素\r\n        row.isType = 0;\r\n        this.getChildData(row, _id);\r\n      } else {\r\n        //当前为打开状态 需删除子元素\r\n        row.isType = 1;\r\n        this.removeChildData(row);\r\n      }\r\n    },\r\n    //获取子集\r\n    getChildData(row, _id) {\r\n      console.log(_id);\r\n\r\n      this.signData.productId = _id;\r\n      // {\r\n      //       productId: _id,\r\n      //       inventoryStatus: this.signData.inventoryStatus\r\n      //     }\r\n      let _index = this.tableData.findIndex(item => item.id == _id);\r\n      if (!row._chilren) {\r\n        this.request(\r\n          this.api.warehouse\r\n            .warehouseBase_inventory_getProductGoodsInventoryByProductCode,\r\n          this.signData\r\n        ).then(res => {\r\n          let _data = res.data;\r\n          let _dataLen = _data.length;\r\n          for (let i = 0; i < _dataLen; i++) {\r\n            _data[i].subCode = _data[i].code;\r\n            _data[i].code = null;\r\n          }\r\n          row._chilren = _data;\r\n          //根据下标插入进去 获取ID 在数组中的下标\r\n          this.tableData.splice(_index + 1, 0, ..._data);\r\n          //获取子集id存入 元素属性\r\n          let arr = [];\r\n          for (let { id } of _data) {\r\n            arr.push(id);\r\n          }\r\n          row._cid = arr.join();\r\n        });\r\n      } else {\r\n        this.tableData.splice(_index + 1, 0, ...row._chilren);\r\n      }\r\n    },\r\n    //删除子集\r\n    removeChildData(row) {\r\n      let cid = row._cid;\r\n      let cidArr = cid.split(\",\");\r\n      let _table = this.tableData,\r\n        tableLen = _table.length;\r\n      for (let i = 0; i < cidArr.length; i++) {\r\n        for (let j = 0; j < this.tableData.length; j++) {\r\n          if (cidArr[i] == this.tableData[j].id) {\r\n            this.tableData.splice(j, 1);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    //每页条数改变时\r\n    handleSizeChange(page) {\r\n      this.signData.pageSize = page;\r\n      this.getTableListData();\r\n    },\r\n    //当前页改变时\r\n    handleCurrentChange(page) {\r\n      this.signData.productId = \"\";\r\n      this.signData.pageIndex = page;\r\n      this.getTableListData();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.content-from {\r\n  background-color: #fff;\r\n  padding-top: 20px;\r\n  margin: 0 10px;\r\n}\r\n.content-table {\r\n  background-color: #fff;\r\n  padding: 10px 20px;\r\n  margin: 10px;\r\n}\r\n.page_div {\r\n  margin-top: 20px;\r\n  padding-bottom: 10px;\r\n  margin-right: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.pagination {\r\n  margin-top: 20px;\r\n  padding-bottom: 10px;\r\n  margin-right: 20px;\r\n  text-align: right;\r\n}\r\n</style>"],"sourceRoot":"src/views/warehouse/stock_center/stock_manager"}]}