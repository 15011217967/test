{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\components\\editor\\UploadVideo.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\components\\editor\\UploadVideo.vue","mtime":1572415127780},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TcVod from 'vod-js-sdk-v6/lib/tc_vod';\nexport default {\n  name: 'upload-video',\n  props: {\n    // 是否单选\n    isRadio: {\n      type: Boolean,\n      default: true\n    },\n    callBack: {\n      type: Function\n    },\n    value: {\n      default: \"\"\n    },\n    // 上传的视频list\n    videoList: {\n      type: Array\n    },\n    // 单个视频的信息\n    videoInfoParams: {\n      type: Object\n    }\n  },\n  // 数据\n  data: function data() {\n    return {\n      // 上传实例\n      tcVod: '',\n      videoInfoOld: null,\n      videoInfo: null,\n      // 最终后台参数\n      videoParams: null,\n      // 页面回显路径\n      videoUrl: '',\n      // 签名\n      signature: null,\n      loading: false\n    };\n  },\n  // 组件\n  components: {},\n  created: function created() {\n    this.init(); // 编辑\n\n    if (this.videoInfoParams && this.videoInfoParams.info) {\n      this.videoParams = this.videoInfoParams.info;\n      this.videoUrl = this.videoInfoParams.info.mediaUrl;\n    }\n\n    this.videoUrl = this.value;\n  },\n  // 初始化数据\n  mounted: function mounted() {\n    this.$nextTick(function () {});\n  },\n  // 方法\n  methods: {\n    // 初始化\n    init: function init() {\n      this.videoInfoOld = null;\n      this.videoInfo = null;\n      this.videoParams = {};\n      this.videoUrl = '';\n      this.tcVod = new TcVod({\n        getSignature: this.getSignature\n      });\n    },\n    // 获取签名\n    getSignature: function getSignature() {\n      var _this = this;\n\n      if (this.signature) {\n        return this.signature;\n      } else {\n        this.request(this.api.contentCore.picture_get, {}).then(function (data) {\n          _this.signature = data.signature;\n          return data.signature;\n        });\n      }\n    },\n    // 添加视频\n    addVideo: function addVideo() {\n      if (this.loading) return;\n      this.$refs.videoInput.click();\n    },\n    // 判断上传文件是否是视频\n    checkVideoType: function checkVideoType(type) {\n      if (!type) {\n        this.$message.error('视频类型必须是,mp4中的一种');\n        this.loading = false;\n        return false;\n      }\n\n      var str = type.split('/')[1].toLowerCase();\n\n      if (!str.match(/mp4/)) {\n        this.loading = false;\n        this.$message.error('视频类型必须是,mp4中的一种');\n        return false;\n      } else {\n        return true;\n      }\n    },\n    // 上传的视频信息\n    setVideoInfo: function setVideoInfo() {\n      this.loading = true;\n      this.videoInfo = this.$refs.videoInput.files[0]; // 解决 chrome input 上传取消bug\n\n      if (!this.videoInfo) {\n        this.videoInfo = this.videoInfoOld.get(\"imgInfo\");\n      } else {\n        this.videoInfoOld = new FormData();\n        this.videoInfoOld.set(\"imgInfo\", this.videoInfo);\n      }\n\n      var flag = this.checkVideoType(this.videoInfo.type);\n\n      if (flag) {\n        this.addUpload();\n      }\n    },\n    // 上传过程\n    addUpload: function addUpload() {\n      var self = this;\n      var uploader = this.tcVod.upload({\n        mediaFile: this.videoInfo\n      }); // 视频上传进度\n\n      uploader.on('media_progress', function (info) {}); // 视频上传完成时\n\n      uploader.on('media_upload', function (info) {}); // 完成回调\n\n      uploader.done().then(function (doneResult) {\n        self.videoSave(doneResult);\n      }).then(function (videoUrl) {});\n    },\n    // 保存视频\n    videoSave: function videoSave(params) {\n      var _this2 = this;\n\n      setTimeout(function () {\n        _this2.loading = false;\n        _this2.videoParams = {\n          fileId: params.fileId,\n          mediaUrl: params.video.url\n        };\n\n        if (!_this2.isRadio) {\n          _this2.videoList.push({\n            fileId: params.fileId,\n            url: params.video.url\n          });\n\n          _this2.init();\n\n          _this2.videoUrl = '';\n\n          _this2.$refs.upLoadForm.reset();\n        } else {\n          _this2.videoUrl = _this2.videoParams.mediaUrl;\n\n          _this2.$emit('input', _this2.videoParams.mediaUrl);\n\n          if (_this2.callBack) {\n            _this2.callBack(_this2.videoParams);\n          }\n\n          if (_this2.videoInfoParams) {\n            _this2.videoInfoParams.info = _this2.videoParams;\n          }\n        }\n      }, 5000);\n    },\n    getUploadVideoInfo: function getUploadVideoInfo() {\n      return this.videoParams;\n    }\n  },\n  // 计算属性\n  computed: {},\n  // 监听数据变化\n  watch: {}\n};",{"version":3,"sources":["UploadVideo.vue"],"names":[],"mappings":"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","sourcesContent":["<style lang=\"less\" scoped>\r\n  .upload-video{;width: 80px;height: 80px;display: inline-block;overflow: hidden;\r\n    .content{\r\n          .content-item{height: 80px;width: 80px;border-radius: 5px;border: 1px dashed #d9d9d9;cursor: pointer;float: left;margin-right: 20px;\r\n            img{width: 80px;height: 80px;}\r\n            video{width: 80px;height: 80px;}\r\n            span{display: block;line-height: 80px;color: #333;text-align: center;font-size: 14px;}\r\n          }\r\n      .content-item:hover{border: 1px dashed #409EFF;}\r\n    }\r\n  }\r\n</style>\r\n<template>\r\n  <div class=\"upload-video\">\r\n    <form ref=\"upLoadForm\">\r\n      <input type=\"file\" style=\"display: none;\" ref=\"videoInput\" @change=\"setVideoInfo()\"/>\r\n    </form>\r\n    <div class=\"content clearfix\">\r\n      <div class=\"content-item\"  @click.stop=\"addVideo\" v-loading=\"loading\">\r\n        <video :src=\"videoUrl\" v-show=\"videoUrl\"></video>\r\n        <span v-show=\"!videoUrl\">上传视频</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n  import TcVod from 'vod-js-sdk-v6/lib/tc_vod'\r\n  export default {\r\n    name: 'upload-video',\r\n    props:{\r\n      // 是否单选\r\n      isRadio: {\r\n        type: Boolean,\r\n        default: true\r\n      },\r\n      callBack: {\r\n        type: Function\r\n      },\r\n      value: {\r\n        default: \"\"\r\n      },\r\n      // 上传的视频list\r\n      videoList: {\r\n        type: Array\r\n      },\r\n      // 单个视频的信息\r\n      videoInfoParams: {\r\n        type: Object\r\n      }\r\n    },\r\n    // 数据\r\n    data() {\r\n      return {\r\n        // 上传实例\r\n        tcVod: '',\r\n        videoInfoOld: null,\r\n        videoInfo: null,\r\n        // 最终后台参数\r\n        videoParams: null,\r\n        // 页面回显路径\r\n        videoUrl: '',\r\n        // 签名\r\n        signature: null,\r\n        loading: false\r\n      }\r\n    },\r\n    // 组件\r\n    components: {\r\n\r\n    },\r\n    created(){\r\n      this.init()\r\n      // 编辑\r\n      if(this.videoInfoParams && this.videoInfoParams.info){\r\n        this.videoParams = this.videoInfoParams.info\r\n        this.videoUrl = this.videoInfoParams.info.mediaUrl\r\n      }\r\n      this.videoUrl = this.value\r\n    },\r\n\r\n    // 初始化数据\r\n    mounted() {\r\n      this.$nextTick(() => {\r\n\r\n      })\r\n    },\r\n    // 方法\r\n    methods: {\r\n      // 初始化\r\n      init(){\r\n        this.videoInfoOld = null\r\n        this.videoInfo = null\r\n        this.videoParams = {}\r\n        this.videoUrl = ''\r\n        this.tcVod = new TcVod({\r\n          getSignature: this.getSignature\r\n        })\r\n      },\r\n      // 获取签名\r\n      getSignature(){\r\n        if(this.signature){\r\n          return this.signature\r\n        }else {\r\n          this.request(this.api.contentCore.picture_get, {}).then(data => {\r\n            this.signature = data.signature\r\n            return data.signature\r\n          });\r\n        }\r\n      },\r\n      // 添加视频\r\n      addVideo() {\r\n        if(this.loading) return\r\n        this.$refs.videoInput.click()\r\n      },\r\n      // 判断上传文件是否是视频\r\n      checkVideoType(type){\r\n        if(!type){\r\n          this.$message.error('视频类型必须是,mp4中的一种');\r\n          this.loading = false\r\n          return false\r\n        }\r\n        const str = type.split('/')[1].toLowerCase()\r\n        if (!str.match(/mp4/)) {\r\n          this.loading = false\r\n          this.$message.error('视频类型必须是,mp4中的一种');\r\n          return false;\r\n        }else {\r\n          return true\r\n        }\r\n      },\r\n      // 上传的视频信息\r\n      setVideoInfo() {\r\n        this.loading = true\r\n        this.videoInfo = this.$refs.videoInput.files[0];\r\n        // 解决 chrome input 上传取消bug\r\n        if(!this.videoInfo){\r\n          this.videoInfo =  this.videoInfoOld.get(\"imgInfo\")\r\n        }else{\r\n          this.videoInfoOld = new FormData()\r\n          this.videoInfoOld.set(\"imgInfo\", this.videoInfo);\r\n        }\r\n        const flag = this.checkVideoType(this.videoInfo.type)\r\n        if(flag){\r\n          this.addUpload()\r\n        }\r\n      },\r\n      // 上传过程\r\n      addUpload() {\r\n        let self = this;\r\n        let uploader = this.tcVod.upload({\r\n          mediaFile: this.videoInfo\r\n        })\r\n        // 视频上传进度\r\n        uploader.on('media_progress', function(info) {\r\n\r\n        })\r\n        // 视频上传完成时\r\n        uploader.on('media_upload', function(info) {\r\n\r\n        })\r\n        // 完成回调\r\n        uploader.done().then(function (doneResult) {\r\n          self.videoSave(doneResult)\r\n\r\n        }).then(function (videoUrl) {\r\n\r\n        })\r\n      },\r\n\r\n\r\n      // 保存视频\r\n      videoSave(params){\r\n        setTimeout(()=>{\r\n          this.loading = false\r\n          this.videoParams = {\r\n            fileId: params.fileId,\r\n            mediaUrl: params.video.url\r\n          }\r\n          if(!this.isRadio){\r\n            this.videoList.push({\r\n              fileId: params.fileId,\r\n              url: params.video.url\r\n            })\r\n            this.init()\r\n            this.videoUrl = ''\r\n            this.$refs.upLoadForm.reset()\r\n          }else{\r\n            this.videoUrl = this.videoParams.mediaUrl\r\n            this.$emit('input', this.videoParams.mediaUrl )\r\n            if(this.callBack){\r\n              this.callBack(this.videoParams)\r\n            }\r\n            if(this.videoInfoParams){\r\n              this.videoInfoParams.info = this.videoParams\r\n            }\r\n          }\r\n        },5000)\r\n      },\r\n      getUploadVideoInfo(){\r\n        return  this.videoParams\r\n      }\r\n\r\n    },\r\n    // 计算属性\r\n    computed: {},\r\n    // 监听数据变化\r\n    watch: {\r\n\r\n    }\r\n  }\r\n</script>\r\n"],"sourceRoot":"src/components/editor"}]}