{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\collocation\\tag\\tag_group.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\collocation\\tag\\tag_group.vue","mtime":1574160264773},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport GroupDialog from \"../components/group_dialog\";\nexport default {\n  inject: [\"reload\"],\n  data: function data() {\n    return {\n      filtersData: {\n        pageIndex: 1,\n        //当前页码\n        pageSize: 10,\n        //每页数量\n        searchWords: \"\",\n        //检索关键字\n        tagsCountGE: null,\n        tagsCountLE: null,\n        createTimeGE: null,\n        createTimeLE: null,\n        valid: null //有效状态\n\n      },\n      total: 0,\n      //品类Data 以后可能使用VUx 读取看具体需求，当多处调用时存入VUX；\n      CategoryOptions: [],\n      //品牌\n      brandOptions: [],\n      //设计商\n      designCompanyOptions: [],\n      //table列表数据\n      tableListData: []\n    };\n  },\n  created: function created() {\n    this.getTableList();\n  },\n  methods: {\n    //获取列表\n    getTableList: function getTableList() {\n      var _this = this;\n\n      var filter = this.$common.deepCopy(this.filtersData);\n\n      if (filter.createTimeLE != null) {\n        var date = new Date(filter.createTimeLE);\n        var t = (date.getTime() / 1000 + 86399) * 1000;\n        filter.createTimeLE = new Date(t);\n      }\n\n      this.request(this.api.collocation.collocationTagGroup_list, filter).then(function (data) {\n        //   console.log(data);\n        var _data = data.data,\n            _dataLen = _data.length;\n        _this.tableListData = _data;\n        _this.total = data.totalCount;\n      });\n      filter = null;\n    },\n    //搜索\n    handleSearch: function handleSearch() {\n      var filter = this.filtersData;\n\n      if (filter.tagsCountGE != null && filter.tagsCountLE != null) {\n        if (filter.tagsCountGE > filter.tagsCountLE) {\n          this.$message.error(\"包含标签数区间下限不能大于区间上限!\");\n          return;\n        }\n      }\n\n      this.filtersData.pageIndex = 1;\n      this.getTableList();\n    },\n    //清空重置\n    handleResetFilters: function handleResetFilters(formName) {\n      this.$refs[formName].resetFields();\n      this.filtersData.createTimeLE = \"\";\n      this.filtersData.tagsCountLE = \"\";\n    },\n    //排序\n    tableSortChange: function tableSortChange(obj) {\n      //descending 倒序\n      //ascending正序\n      var _order = obj.order != null ? obj.order == \"ascending\" ? \"asc\" : \"desc\" : null;\n\n      this.filtersData.orderBy = obj.prop;\n      this.filtersData.sortBy = _order;\n      this.getTableList();\n    },\n    //滑块开关\n    switchValid: function switchValid(params) {\n      var _this2 = this;\n\n      this.request(this.api.collocation.collocationTagGroup_save, params).then(function (res) {\n        _this2.$message.success(\"保存成功！\");\n      });\n    },\n    //新增标签分组\n    openAdd: function openAdd() {\n      this.$refs.groupRef.popupInit(\"add\", \"新增标签分组\");\n    },\n    // 修改标签分组\n    handleEditClick: function handleEditClick(_id) {\n      this.$refs.groupRef.popupInit(\"edit\", \"修改标签分组\", _id);\n    },\n    // 查看标签分组\n    handleShowClick: function handleShowClick(_id) {\n      this.$refs.groupRef.popupInit(\"show\", \"查看标签分组\", _id);\n    },\n    //当前页数修改时发生改变\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.filtersData.pageIndex = val;\n      this.getTableList();\n    },\n    // 每页显示多少条时发生改变\n    handleSizeChange: function handleSizeChange(val) {\n      this.filtersData.pageSize = val;\n      this.getTableList();\n    },\n    //子组件传参刷新 父组件\n    refreshList: function refreshList() {\n      this.reload();\n    }\n  },\n  components: {\n    GroupDialog: GroupDialog\n  }\n};",{"version":3,"sources":["tag_group.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"item-margin\">\r\n      <el-form\r\n        class=\"item-form\"\r\n        :model=\"filtersData\"\r\n        label-width=\"100px\"\r\n        size=\"small\"\r\n        ref=\"filtersForm\"\r\n        inline\r\n      >\r\n        <el-form-item prop=\"valid\" label=\"使用状态：\">\r\n          <el-select class=\"input-w\" placeholder=\"请选择\" v-model=\"filtersData.valid\">\r\n            <el-option\r\n              v-for=\"item in this,$common.getValidOptions()\"\r\n              :key=\"item.status_id\"\r\n              :label=\"item.status_name\"\r\n              :value=\"item.status_id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item prop=\"createTimeGE\" label=\"创建时间：\">\r\n          <el-col :span=\"11\">\r\n            <el-date-picker\r\n              v-model=\"filtersData.createTimeGE\"\r\n              type=\"date\"\r\n              class=\"input-w\"\r\n              placeholder=\"请选择区间下限\"\r\n            ></el-date-picker>\r\n          </el-col>\r\n          <el-col :span=\"1\">&nbsp;&nbsp;</el-col>\r\n          <el-col :span=\"11\">\r\n            <el-date-picker\r\n              v-model=\"filtersData.createTimeLE\"\r\n              type=\"date\"\r\n              class=\"input-w\"\r\n              placeholder=\"请选择区间上限\"\r\n            ></el-date-picker>\r\n          </el-col>\r\n        </el-form-item>\r\n        <el-form-item prop=\"tagsCountGE\" label=\"包含标签数：\">\r\n          <el-col :span=\"11\">\r\n            <el-input class=\"input-w\" placeholder=\"请输入最小值\" v-model=\"filtersData.tagsCountGE\"></el-input>\r\n          </el-col>\r\n          <el-col :span=\"1\">&nbsp;&nbsp;</el-col>\r\n          <el-col :span=\"11\">\r\n            <el-input class=\"input-w\" placeholder=\"请输入最大值\" v-model=\"filtersData.tagsCountLE\"></el-input>\r\n          </el-col>\r\n        </el-form-item>\r\n        <el-form-item prop=\"searchWords\" label=\"综合搜索：\">\r\n          <el-input class=\"input-w\" placeholder=\"分组名称或者创建人\" v-model=\"filtersData.searchWords\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button size=\"small\" @click=\"handleSearch\" type=\"primary\" plain>搜索</el-button>\r\n          <el-button size=\"small\" @click=\"handleResetFilters('filtersForm')\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n    <!--table  -->\r\n    <div class=\"item-margin\">\r\n      <div class=\"item-cont\">\r\n        <el-button size=\"small\" type=\"primary\" @click=\"openAdd\">新增分组</el-button>\r\n      </div>\r\n      <div class=\"item-table\">\r\n        <el-table\r\n          :data=\"tableListData\"\r\n          stripe\r\n          empty-text=\"暂无数据\"\r\n          header-align=\"center\"\r\n          header-row-class-name=\"item-table-header\"\r\n          :highlight-current-row=\"true\"\r\n          @sort-change=\"tableSortChange\"\r\n        >\r\n          <el-table-column prop=\"sort\" sortable=\"custom\" align=\"center\" label=\"排序\" min-width=\"80\"></el-table-column>\r\n          <el-table-column prop=\"name\" align=\"center\" label=\"分组名称\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"tagsCount\" align=\"center\" label=\"包含标签数\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"description\" align=\"center\" label=\"分组描述\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"usingCount\" align=\"center\" label=\"使用次数\" min-width=\"80\"></el-table-column>\r\n          <el-table-column prop=\"valid\" align=\"center\" label=\"使用状态\" width=\"120\">\r\n            <template slot-scope=\"scope\">\r\n              <el-switch\r\n                :disabled=\"scope.row.status == 5\"\r\n                v-model=\"scope.row.valid\"\r\n                active-color=\"#13ce66\"\r\n                @change=\"switchValid(scope.row)\"\r\n                inactive-color=\"#9d9d9d\"\r\n              ></el-switch>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"creatorName\" align=\"center\" label=\"创建人\" min-width=\"120\"></el-table-column>\r\n          <el-table-column\r\n            prop=\"createTime\"\r\n            sortable=\"custom\"\r\n            align=\"center\"\r\n            label=\"创建时间\"\r\n            min-width=\"120\"\r\n          >\r\n            <template slot-scope=\"scope\">\r\n              <p>{{scope.row.createTime | timestampToTime}}</p>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column\r\n            fixed=\"right\"\r\n            label-class-name=\"text-center\"\r\n            class-name=\"text-center\"\r\n            align=\"center\"\r\n            label=\"操作\"\r\n            width=\"100\"\r\n          >\r\n            <template slot-scope=\"scope\">\r\n              <el-button @click=\"handleShowClick(scope.row.id)\" type=\"text\" size=\"small\">查看</el-button>\r\n              <el-button\r\n                :disabled=\"scope.row.status == 5\"\r\n                @click=\"handleEditClick(scope.row.id)\"\r\n                type=\"text\"\r\n                size=\"small\"\r\n              >修改</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n        <div class=\"pagination mt-10 mb-20\">\r\n          <el-pagination\r\n            class=\"mr-20\"\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"filtersData.pageIndex\"\r\n            :page-sizes=\"[10,20,30,40,50]\"\r\n            :page-size=\"filtersData.pageSize\"\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=\"total\"\r\n          ></el-pagination>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!--table END  -->\r\n    <!-- 弹框 -->\r\n    <group-dialog @refreshItem=\"refreshList\" ref=\"groupRef\"></group-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\nimport GroupDialog from \"../components/group_dialog\";\r\nexport default {\r\n  inject: [\"reload\"],\r\n  data() {\r\n    return {\r\n      filtersData: {\r\n        pageIndex: 1, //当前页码\r\n        pageSize: 10, //每页数量\r\n        searchWords: \"\", //检索关键字\r\n        tagsCountGE: null,\r\n        tagsCountLE: null,\r\n        createTimeGE: null,\r\n        createTimeLE: null,\r\n        valid: null //有效状态\r\n      },\r\n      total: 0,\r\n      //品类Data 以后可能使用VUx 读取看具体需求，当多处调用时存入VUX；\r\n      CategoryOptions: [],\r\n      //品牌\r\n      brandOptions: [],\r\n      //设计商\r\n      designCompanyOptions: [],\r\n      //table列表数据\r\n      tableListData: []\r\n    };\r\n  },\r\n  created() {\r\n    this.getTableList();\r\n  },\r\n\r\n  methods: {\r\n    //获取列表\r\n    getTableList() {\r\n      let filter = this.$common.deepCopy(this.filtersData);\r\n      if(filter.createTimeLE != null){\r\n        let date = new Date(filter.createTimeLE);\r\n        let t = (date.getTime() / 1000 + 86399) * 1000;\r\n        filter.createTimeLE = new Date(t);\r\n      }\r\n      this.request(\r\n        this.api.collocation.collocationTagGroup_list,\r\n       filter\r\n      ).then(data => {\r\n        //   console.log(data);\r\n        let _data = data.data,\r\n          _dataLen = _data.length;\r\n        this.tableListData = _data;\r\n        this.total = data.totalCount;\r\n      });\r\n      filter=null;\r\n    },\r\n\r\n    //搜索\r\n    handleSearch() {\r\n      let filter = this.filtersData;\r\n      if (filter.tagsCountGE != null && filter.tagsCountLE != null) {\r\n        if (filter.tagsCountGE > filter.tagsCountLE) {\r\n          this.$message.error(\"包含标签数区间下限不能大于区间上限!\");\r\n          return;\r\n        }\r\n      }\r\n      this.filtersData.pageIndex = 1;\r\n      this.getTableList();\r\n    },\r\n\r\n    //清空重置\r\n    handleResetFilters(formName) {\r\n      this.$refs[formName].resetFields();\r\n      this.filtersData.createTimeLE = \"\";\r\n      this.filtersData.tagsCountLE = \"\";\r\n    },\r\n    //排序\r\n    tableSortChange(obj) {\r\n      //descending 倒序\r\n      //ascending正序\r\n      let _order =\r\n        obj.order != null ? (obj.order == \"ascending\" ? \"asc\" : \"desc\") : null;\r\n      this.filtersData.orderBy = obj.prop;\r\n      this.filtersData.sortBy = _order;\r\n      this.getTableList();\r\n    },\r\n    //滑块开关\r\n    switchValid(params) {\r\n      this.request(this.api.collocation.collocationTagGroup_save, params).then(\r\n        res => {\r\n          this.$message.success(\"保存成功！\");\r\n        }\r\n      );\r\n    },\r\n    //新增标签分组\r\n    openAdd() {\r\n      this.$refs.groupRef.popupInit(\"add\", \"新增标签分组\");\r\n    },\r\n    // 修改标签分组\r\n    handleEditClick(_id) {\r\n      this.$refs.groupRef.popupInit(\"edit\", \"修改标签分组\", _id);\r\n    },\r\n    // 查看标签分组\r\n    handleShowClick(_id) {\r\n      this.$refs.groupRef.popupInit(\"show\", \"查看标签分组\", _id);\r\n    },\r\n    //当前页数修改时发生改变\r\n    handleCurrentChange(val) {\r\n      this.filtersData.pageIndex = val;\r\n      this.getTableList();\r\n    },\r\n    // 每页显示多少条时发生改变\r\n    handleSizeChange(val) {\r\n      this.filtersData.pageSize = val;\r\n      this.getTableList();\r\n    },\r\n\r\n    //子组件传参刷新 父组件\r\n    refreshList() {\r\n      this.reload();\r\n    }\r\n  },\r\n  components: {\r\n    GroupDialog\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n</style>\r\n"],"sourceRoot":"src/views/collocation/tag"}]}