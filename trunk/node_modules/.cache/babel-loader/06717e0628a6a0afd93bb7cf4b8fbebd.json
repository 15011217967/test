{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\product\\components\\BtchReplaceImg.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\product\\components\\BtchReplaceImg.vue","mtime":1585053690054},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getToken } from \"@/utils/auth\";\nvar token = getToken();\nexport default {\n  data: function data() {\n    return {\n      hideUpload: false,\n      filtersForm: {\n        colorCode: '',\n        color: \"\",\n        imgUrl: ''\n      },\n      dialogVisible: false,\n      colorList: [],\n      // 图片\n      imgDialogVisible: false,\n      dialogImageUrl: \"\",\n      productImgs: [],\n      isMultiple: false,\n      tokenHeaders: {\n        accessToken: token\n      },\n      uploadData: {\n        catalog: \"product\"\n      }\n    };\n  },\n  created: function created() {},\n  methods: {\n    propInit: function propInit(arr) {\n      for (var k = 0; k < arr.length; k++) {\n        arr[k].isSelected = false;\n      }\n\n      this.colorList = arr;\n      this.dialogVisible = true;\n    },\n    colorClick: function colorClick(item, index) {\n      item.isSelected = !item.isSelected;\n      this.filtersForm.color = item.isSelected ? item.color : \"\";\n      this.filtersForm.colorCode = item.isSelected ? item.colorCode : \"\";\n      this.noColorClick(item);\n    },\n    // 置灰其他未选\n    noColorClick: function noColorClick(item) {\n      for (var i = 0; i < this.colorList.length; i++) {\n        if (item.colorCode != this.colorList[i].colorCode) {\n          this.colorList[i].isSelected = false;\n        }\n      }\n    },\n    action: function action() {\n      return this.api.FN_ALLPATH(this.api.content.picture_upload);\n    },\n    handleRemove: function handleRemove(file, fileList) {\n      //移除图片\n      console.log(file, fileList);\n      this.hideUpload = false; //  this.request(\n      //     this.api.product.enterpriseArchivalInformation_logicDelete,\n      //     { id: file.uid },true\n      //   );\n    },\n    handlePictureCardPreview: function handlePictureCardPreview(file) {\n      //预览图片时调用\n      console.log(file);\n      this.dialogImageUrl = file.url;\n      this.imgDialogVisible = true;\n    },\n    beforeAvatarUpload: function beforeAvatarUpload(file) {\n      //文件上传之前调用做一些拦截限制\n      var isJPG = true;\n      var isLt1M = file.size / 1024 / 1024 < 1;\n\n      if (!isLt1M) {\n        this.$message.error(\"上传图片大小不能超过 1MB!\");\n      }\n\n      this.hideUpload = true;\n      return isJPG && isLt1M;\n    },\n    handleAvatarSuccess: function handleAvatarSuccess(res, file) {\n      //图片上传成功\n      // console.log(res.data.imageUrl);\n      this.filtersForm.imgUrl = res.data.imageUrl; // this.imageUrl = URL.createObjectURL(file.raw);\n    },\n    handleExceed: function handleExceed(files, fileList) {\n      //图片上传超过数量限制\n      this.$message.error(\"logo只能上传一张!\");\n    },\n    imgUploadError: function imgUploadError(err, file, fileList) {\n      //图片上传失败调用\n      this.$message.error(\"上传图片失败!\");\n      this.hideUpload = true;\n    },\n    submit: function submit() {\n      if (!this.filtersForm.color) {\n        this.$message.error(\"请选择颜色！\");\n        return false;\n      }\n\n      if (!this.filtersForm.imgUrl) {\n        this.$message.error(\"请上传图片！\");\n        return false;\n      }\n\n      this.$emit('imgChange', this.filtersForm);\n      this.closeDialog();\n    },\n    closeDialog: function closeDialog() {\n      this.dialogVisible = false;\n    }\n  }\n};",{"version":3,"sources":["BtchReplaceImg.vue"],"names":[],"mappings":"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","sourcesContent":["<!--\r\n * @Author: elephant\r\n * @Date: 2020-02-12 10:01:50\r\n * @LastEditTime : 2020-02-14 09:45:42\r\n * @LastEditors  : Please set LastEditors\r\n * @Description: 批量修改图片\r\n * @custom_string_obkoro: 看看写点什么\r\n -->\r\n<template>\r\n  <div>\r\n    <el-dialog title=\"批量更新图片：\" :visible.sync=\"dialogVisible\" class=\"alarmPopup\" width=\"600px\">\r\n      <div>\r\n        <div class=\"color-wrap\">\r\n          <h5>选择颜色：</h5>\r\n          <ul class=\"color\">\r\n            <li\r\n              v-for=\"(item,index) in colorList\"\r\n              :key=\"index\"\r\n              @click=\"colorClick(item,index)\"\r\n              :class=\"{'active':item.isSelected}\"\r\n            >{{item.color}}</li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"update-wrap\">\r\n          <h5>更新图片：</h5>\r\n          <div class=\"update\">\r\n          <el-upload\r\n            :class=\"{hide:hideUpload}\"\r\n            :action=\"action()\"\r\n            list-type=\"picture-card\"\r\n            accept=\"image/*\"\r\n            :limit=\"1\"\r\n            :headers=\"tokenHeaders\"\r\n            :file-list=\"productImgs\"\r\n            :on-preview=\"handlePictureCardPreview\"\r\n            :on-remove=\"handleRemove\"\r\n            :on-success=\"handleAvatarSuccess\"\r\n            :data=\"uploadData\"\r\n            :before-upload=\"beforeAvatarUpload\"\r\n            :on-exceed=\"handleExceed\"\r\n            :on-error=\"imgUploadError\"\r\n          >\r\n            <i class=\"el-icon-plus\" ></i>\r\n          </el-upload>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"item-right mt-10\">\r\n        <el-button size=\"small\" @click=\"closeDialog\">取消</el-button>\r\n        <el-button size=\"small\" @click=\"submit()\" type=\"primary\">确认</el-button>\r\n      </div>\r\n    </el-dialog>\r\n     <el-dialog :visible.sync=\"imgDialogVisible\">\r\n      <img width=\"100%\" :src=\"dialogImageUrl\" alt />\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { getToken } from \"@/utils/auth\";\r\nlet token = getToken(); \r\nexport default {\r\n  data() {\r\n    return {\r\n      hideUpload: false,\r\n      filtersForm:{\r\n        colorCode:'',\r\n        color: \"\",\r\n        imgUrl:'',\r\n      },\r\n      dialogVisible: false,\r\n      colorList: [],\r\n      // 图片\r\n      imgDialogVisible:false,\r\n      dialogImageUrl: \"\",\r\n      productImgs: [],\r\n      isMultiple: false,\r\n      tokenHeaders: { accessToken: token },\r\n      uploadData: { catalog: \"product\" },\r\n    };\r\n  },\r\n  created() {},\r\n  methods: {\r\n    propInit(arr) {\r\n      for (let k = 0; k < arr.length; k++) {\r\n        arr[k].isSelected = false;\r\n      }\r\n      this.colorList = arr;\r\n      this.dialogVisible = true;\r\n    },\r\n    colorClick(item, index) {\r\n      item.isSelected = !item.isSelected;\r\n      this.filtersForm.color = item.isSelected ? item.color : \"\";\r\n      this.filtersForm.colorCode = item.isSelected ? item.colorCode : \"\";\r\n      this.noColorClick(item);\r\n    },\r\n    // 置灰其他未选\r\n    noColorClick(item) {\r\n      for (let i = 0; i < this.colorList.length; i++) {\r\n        if (item.colorCode != this.colorList[i].colorCode) {\r\n          this.colorList[i].isSelected = false;\r\n        }\r\n      }\r\n    },\r\n    action() {\r\n      return this.api.FN_ALLPATH(this.api.content.picture_upload);\r\n    },\r\n    handleRemove(file, fileList) {\r\n      //移除图片\r\n      console.log(file, fileList);\r\n      this.hideUpload=false;\r\n      //  this.request(\r\n      //     this.api.product.enterpriseArchivalInformation_logicDelete,\r\n      //     { id: file.uid },true\r\n      //   );\r\n    },\r\n    handlePictureCardPreview(file) {\r\n      //预览图片时调用\r\n      console.log(file);\r\n      this.dialogImageUrl = file.url;\r\n      this.imgDialogVisible = true;\r\n    },\r\n    beforeAvatarUpload(file) {\r\n      //文件上传之前调用做一些拦截限制\r\n      const isJPG = true;\r\n      const isLt1M = file.size / 1024 / 1024 < 1;\r\n      if (!isLt1M) {\r\n        this.$message.error(\"上传图片大小不能超过 1MB!\");\r\n      }\r\n      this.hideUpload=true;\r\n      return isJPG && isLt1M;\r\n    },\r\n    handleAvatarSuccess(res, file) {\r\n      //图片上传成功\r\n     // console.log(res.data.imageUrl);\r\n      this.filtersForm.imgUrl = res.data.imageUrl;\r\n      \r\n      // this.imageUrl = URL.createObjectURL(file.raw);\r\n    },\r\n    handleExceed(files, fileList) {\r\n      //图片上传超过数量限制\r\n      this.$message.error(\"logo只能上传一张!\");\r\n    },\r\n    imgUploadError(err, file, fileList) {\r\n      //图片上传失败调用\r\n      this.$message.error(\"上传图片失败!\");\r\n      this.hideUpload=true;\r\n    },\r\n    submit() {\r\n      if (!this.filtersForm.color) {\r\n        this.$message.error(\"请选择颜色！\");\r\n        return false;\r\n      }\r\n      if (!this.filtersForm.imgUrl) {\r\n        this.$message.error(\"请上传图片！\");\r\n        return false;\r\n      }\r\n      this.$emit('imgChange',this.filtersForm);\r\n      this.closeDialog();\r\n    },\r\n    closeDialog() {\r\n      this.dialogVisible = false;\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.color-wrap {\r\n  display: flex;\r\n  align-items: flex-start;\r\n  > h5 {\r\n    width: 75px;\r\n    font-weight: 100;\r\n    min-width: 75px;\r\n  }\r\n  .color {\r\n    > li {\r\n      display: inline-block;\r\n      border: 1px solid #eeeeee;\r\n      border-radius: 4px;\r\n      padding: 2px 12px;\r\n      cursor: pointer;\r\n      margin: 0 10px 10px 0;\r\n    }\r\n    > li.active {\r\n      border-radius: 4px;\r\n      background-color: #2290e8;\r\n    }\r\n    > li.disabled {\r\n      cursor: not-allowed;\r\n      color: #e8e8e8;\r\n    }\r\n  }\r\n}\r\n.update-wrap{\r\n  display: flex;\r\n  align-items: flex-start;\r\n  > h5 {\r\n    width: 75px;\r\n    font-weight: 100;\r\n    min-width: 75px;\r\n  }\r\n}\r\n.hide /deep/ .el-upload--picture-card {\r\n    display: none;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/product/components"}]}