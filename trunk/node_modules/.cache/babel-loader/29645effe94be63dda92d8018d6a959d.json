{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\collocation\\transfer_slip\\transfer_slip_list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\collocation\\transfer_slip\\transfer_slip_list.vue","mtime":1574160264851},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\EDZ\\\\Desktop\\\\\\u7814\\u53D1\\u9879\\u76EE\\\\vue-project\\\\trunk\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport PageTable from \"@/views/collocation/components/PageTable\";\nimport TimeIntervalCheck from \"@/components/TimeIntervalCheck\";\nimport keepAliveMixin from \"@/mixins/keepAliveMixin\";\nexport default {\n  name: 'transfer_slip_list',\n  mixins: [keepAliveMixin],\n  // 数据\n  data: function data() {\n    return {\n      // 标识是否是零售门店进入\n      enterTypeFlag: false,\n      // 查询参数\n      formData: {\n        // 页面模块ID\n        menuId: '',\n        // 区分调用地方  0 门店  1 订单中心和智能搭配\n        requestLocation: 1,\n        // 单据状态\n        orderStatus: '',\n        // 发货门店\n        outStoreId: '',\n        // 收货门店\n        inStoreId: '',\n        // 收货差异\n        difference: '',\n        // 时间\n        createTimeBegin: '',\n        createTimeEnd: '',\n        pageIndex: 1,\n        pageSize: 10\n      },\n      // 收货差异\n      differenceList: [{\n        name: '是',\n        id: 1\n      }, {\n        name: '否',\n        id: 0\n      }],\n      // 发货门店列表\n      outStoreList: [],\n      // 收货门店列表\n      inStoreList: [],\n      // 单据状态\n      billType: this.$common.getBillType('transferSlip'),\n      // 表格数据\n      tableData: {},\n      // 选中的表格数据\n      checkedTableData: [],\n      // 备注弹窗\n      remarksDialog: false,\n      remarksFormData: {\n        id: '',\n        operationRemarks: ''\n      },\n      rules: {\n        operationRemarks: [{\n          type: 'string',\n          required: true,\n          message: '请输入内容',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  // 组件\n  components: {\n    PageTable: PageTable,\n    TimeIntervalCheck: TimeIntervalCheck\n  },\n  created: function created() {\n    // 删除子页面的门店缓存\n    sessionStorage.removeItem('TRANSFER_SLIP_APP_INFO'); // 获取模块id\n\n    this.formData.menuId = this.$route.meta.currentid; // 控制台的零售门店进来的时候\n\n    if (this.$route.path === '/store/transfer_slip/transfer_slip_list') {\n      this.formData.requestLocation = 0;\n      this.enterTypeFlag = true;\n    }\n  },\n  // 初始化数据\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      _this.getInStoreList();\n\n      _this.getOutStoreList();\n\n      _this.getTableData();\n    });\n  },\n  // 方法\n  methods: {\n    // keepAlive 返回初始化\n    activatedInit: function activatedInit() {\n      this.getTableData();\n    },\n    // 导出\n    exportExcel: function exportExcel() {\n      var _this2 = this;\n\n      if (this.checkedTableData.length === 0) {\n        this.$notify.error({\n          title: '错误',\n          message: '请选择数据'\n        });\n        return;\n      }\n\n      require.ensure([], function () {\n        var _require = require(\"@/vendor/Export2Excel\"),\n            export_json_to_excel = _require.export_json_to_excel;\n\n        var tHeader = [\"调拨单号\", \"发货门店\", \"收货门店\", \"提交时间\", \"调拨金额\", \"调拨数量\", \"实发数量\", \"实收数量\", \"收货差异\", \"差异数量\", \"备注\", \"单据状态\"]; // 上面设置Excel的表格第一行的标题\n\n        var filterVal = [\"orderSn\", \"outStoreName\", \"inStoreName\", \"_createTime\", \"_amount\", \"quantity\", \"shipmentsQty\", \"receiveQty\", \"_difference\", \"_differenceQty\", \"operationRemarks\", \"_orderStatus\"]; // 上面的index、nickName、name是tableData里对象的属性\n\n        var list = _this2.checkedTableData; //把data里的tableData存到list\n\n        var data = _this2.formatJson(filterVal, list);\n\n        export_json_to_excel(tHeader, data, \"调拨单\");\n      });\n    },\n    formatJson: function formatJson(filterVal, jsonData) {\n      return jsonData.map(function (v) {\n        return filterVal.map(function (j) {\n          return v[j];\n        });\n      });\n    },\n    // 行商品详情导出\n    downloadItem: function downloadItem(row) {\n      var _this3 = this;\n\n      this.request(this.api.order.storeAllotOrderProductInfo_list, {\n        orderSn: row.orderSn\n      }).then(function (data) {\n        _this3.downloadDataInit(data.data);\n\n        var downloadData = data.data;\n\n        require.ensure([], function () {\n          var _require2 = require(\"@/vendor/Export2Excel\"),\n              export_json_to_excel = _require2.export_json_to_excel;\n\n          var tHeader = [\"商品款号\", \"商品货号\", \"名称\", \"品牌\", \"吊牌价\", \"调拨单价\", \"调拨数量\", \"调拨金额\", \"门店实发数量\", \"门店实收数量\"]; // 上面设置Excel的表格第一行的标题\n\n          var filterVal = [\"productCode\", \"goodsCode\", \"goodsName\", \"brandName\", \"_retailPrice\", \"_allotPrice\", \"quantity\", \"_amount\", \"shipmentsQty\", \"receiveQty\"]; // 上面的index、nickName、name是tableData里对象的属性\n\n          var list = downloadData; //把data里的tableData存到list\n\n          var data = _this3.formatJson(filterVal, list);\n\n          export_json_to_excel(tHeader, data, \"调拨商品信息\");\n        });\n      });\n    },\n    downloadDataInit: function downloadDataInit(data) {\n      if (data && data.length) {\n        data.forEach(function (item) {\n          item._retailPrice = '￥' + item.retailPrice.toFixed(2);\n          item._allotPrice = '￥' + item.allotPrice.toFixed(2);\n          item._amount = '￥' + (item.quantity * item.allotPrice).toFixed(2);\n        });\n      }\n    },\n    // 点击搜索\n    searchTableData: function searchTableData() {\n      this.formData.pageIndex = 1;\n      this.getTableData();\n    },\n    // 获取列表数据\n    getTableData: function getTableData() {\n      var _this4 = this;\n\n      this.request(this.api.order.storeAllotGoodsOrder_list, this.formData).then(function (data) {\n        _this4.initTableData(data.data);\n\n        _this4.tableData = data;\n      });\n    },\n    // 初始化数据 导出使用\n    initTableData: function initTableData(data) {\n      var _this5 = this;\n\n      if (data && data.length) {\n        data.forEach(function (item) {\n          item._createTime = _this5.$options.filters.timestampToTime(item.createTime);\n          item._amount = '￥' + item.amount;\n          item._difference = item.difference === null ? '--' : item.difference ? '是' : '否';\n          item._differenceQty = item.differenceQty === null ? '--' : item.differenceQty;\n          item._orderStatus = _this5.statusToName(item.orderStatus);\n        });\n      }\n    },\n    // 获取表格选中的\n    tableCheckChange: function tableCheckChange(val) {\n      this.checkedTableData = val;\n    },\n    // 初始查询条件\n    initFormData: function initFormData() {\n      this.$refs.formData.resetFields();\n    },\n    // 新增\n    addItem: function addItem() {\n      var module = '/' + this.$route.path.split('/')[1];\n      this.$router.push({\n        path: module + '/transfer_slip/transfer_slip_add'\n      });\n    },\n    // 查看\n    seeItem: function seeItem(row) {\n      var module = '/' + this.$route.path.split('/')[1];\n      this.$router.push({\n        path: module + '/transfer_slip/transfer_slip_details',\n        query: {\n          id: row.id,\n          orderSn: row.orderSn\n        }\n      });\n    },\n    // 编辑\n    editItem: function editItem(row) {\n      var module = '/' + this.$route.path.split('/')[1];\n      this.$router.push({\n        path: module + '/transfer_slip/transfer_slip_add',\n        query: {\n          id: row.id,\n          orderSn: row.orderSn,\n          outStoreId: row.outStoreId\n        }\n      });\n    },\n    // 作废\n    delItem: function delItem(row) {\n      var _this6 = this;\n\n      this.$confirm('作废后该单据将失效，是否要将该单据作废？', '提示', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        showClose: false\n      }).then(function () {\n        _this6.request(_this6.api.order.storeAllotGoodsOrder_cancel, {\n          id: row.id\n        }).then(function (data) {\n          _this6.$notify.success({\n            title: '成功',\n            message: '作废成功'\n          });\n\n          _this6.getTableData();\n        });\n      }).catch(function () {});\n    },\n    // 强制完成\n    finishItem: function finishItem(row) {\n      var _this7 = this;\n\n      this.$confirm('确定强制完成吗？', '提示', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        showClose: false\n      }).then(function () {\n        _this7.request(_this7.api.order.storeAllotGoodsOrder_enforcementFinished, {\n          id: row.id\n        }).then(function (data) {\n          _this7.$notify.success({\n            title: '成功',\n            message: '完成成功'\n          });\n\n          _this7.getTableData();\n        });\n      }).catch(function () {});\n    },\n    // 备注显示\n    remarksItem: function remarksItem(row) {\n      this.remarksFormData.id = row.id;\n      this.remarksFormData.operationRemarks = row.operationRemarks;\n      this.remarksDialog = true;\n    },\n    // 备注提交\n    remarksSub: function remarksSub() {\n      var _this8 = this;\n\n      this.$refs.remarksForm.validate(function (valid) {\n        if (valid) {\n          _this8.request(_this8.api.order.storeAllotGoodsOrder_insertRemarks, _this8.remarksFormData).then(function (data) {\n            _this8.$notify.success({\n              title: '成功',\n              message: '备注成功'\n            });\n\n            _this8.remarksDialog = false;\n\n            _this8.getTableData();\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    // 状态转name\n    statusToName: function statusToName(val) {\n      if (!val && val !== 0) return;\n      var item = this.billType.find(function (item) {\n        return item.id === val;\n      });\n\n      if (item) {\n        return item.name;\n      } else {\n        return val;\n      }\n    },\n    // 获取发货门店数据\n    getOutStoreList: function () {\n      var _getOutStoreList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this9 = this;\n\n        var info, organization;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.request(this.api.user.get_userinfo, {}, true);\n\n              case 2:\n                info = _context.sent;\n                _context.next = 5;\n                return this.request(this.api.user.userCompany_getUserOrgByUserId, {\n                  userId: info.userId\n                }, true);\n\n              case 5:\n                organization = _context.sent;\n                // enableAllocation: 1  (启用门店调拨 后端需要)\n                this.request(this.api.retailStore.storeBasic_listBase, {\n                  organizationId: organization.id,\n                  enableAllocation: 1\n                }).then(function (data) {\n                  _this9.outStoreList = data.data;\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getOutStoreList() {\n        return _getOutStoreList.apply(this, arguments);\n      }\n\n      return getOutStoreList;\n    }(),\n    // 获取收货门店数据\n    getInStoreList: function getInStoreList() {\n      var _this10 = this;\n\n      this.request(this.api.store.storeBasic_list, {}).then(function (data) {\n        _this10.inStoreList = data.data;\n      });\n    }\n  },\n  filters: {},\n  // 计算属性\n  computed: {},\n  // 监听数据变化\n  watch: {}\n};",{"version":3,"sources":["transfer_slip_list.vue"],"names":[],"mappings":"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","sourcesContent":["<style lang=\"less\" scoped></style>\r\n<template>\r\n  <div class=\"transfer_slip_list\">\r\n    <div class=\"item-margin\">\r\n      <el-form class=\"item-form\" :model=\"formData\" label-width=\"90px\" size=\"small\" ref=\"formData\" inline>\r\n        <el-form-item label=\"单据状态：\" prop=\"orderStatus\">\r\n          <el-select placeholder=\"请选择\" class=\"input-w\" v-model=\"formData.orderStatus\" filterable clearable>\r\n            <el-option\r\n                v-for=\"item in billType\"\r\n                :key=\"item.id\"\r\n                :label=\"item.name\"\r\n                :value=\"item.id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"发货门店：\" prop=\"outStoreId\">\r\n          <el-select v-model=\"formData.outStoreId\" placeholder=\"请选择\" class=\"input-w\" filterable clearable>\r\n            <el-option v-for=\"item in outStoreList\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"收货门店：\" prop=\"inStoreId\">\r\n          <el-select v-model=\"formData.inStoreId\" placeholder=\"请选择\" class=\"input-w\" filterable clearable>\r\n            <el-option v-for=\"item in inStoreList\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"收货差异：\" prop=\"difference\">\r\n          <el-select v-model=\"formData.difference\" placeholder=\"请选择\" class=\"input-w\" filterable clearable>\r\n            <el-option v-for=\"item in differenceList\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <time-interval-check :form-data=\"formData\" label=\"提交时间：\"></time-interval-check>\r\n        <el-form-item>\r\n          <el-button @click=\"searchTableData\" type=\"primary\" plain>搜索</el-button>\r\n          <el-button @click=\"initFormData\" plain>重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n    <div class=\"item-margin item-cont\">\r\n      <div v-if=\"!enterTypeFlag\">\r\n        <el-button size=\"small\" type=\"primary\" @click=\"addItem\">新增</el-button>\r\n      </div>\r\n      <page-table :form-data=\"formData\" :get-data=\"getTableData\" :table-data=\"tableData\">\r\n        <el-table :data=\"tableData.data\" style=\"width: 100%\" row-key=\"id\" @selection-change=\"tableCheckChange\" id=\"table-data\">\r\n          <el-table-column prop=\"orderSn\" label=\"调拨单号\" width=\"200\"></el-table-column>\r\n          <el-table-column prop=\"outStoreName\" label=\"发货门店\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n          <el-table-column prop=\"inStoreName\" label=\"收货门店\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n          <el-table-column prop=\"_createTime\" label=\"提交时间\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n          <el-table-column prop=\"_amount\" label=\"调拨金额\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n          <el-table-column prop=\"quantity\" label=\"调拨数量\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n          <el-table-column prop=\"shipmentsQty\" label=\"实发数量\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n          <el-table-column prop=\"receiveQty\" label=\"实收数量\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n          <el-table-column prop=\"_difference\" label=\"收货差异\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n          <el-table-column prop=\"_differenceQty\" label=\"差异数量\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n          <el-table-column prop=\"operationRemarks\" label=\"备注\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n          <el-table-column prop=\"_orderStatus\" label=\"单据状态\"></el-table-column>\r\n          <el-table-column label=\"操作\" width=\"260\">\r\n            <template slot-scope=\"scope\">\r\n              <el-button type=\"text\" size=\"small\" @click=\"seeItem(scope.row)\">查看</el-button>\r\n              <template v-if=\"!enterTypeFlag\">\r\n                <el-button type=\"text\" size=\"small\" @click=\"editItem(scope.row)\" v-if=\"scope.row.orderStatus === 13\">编辑</el-button>\r\n                <el-button type=\"text\" size=\"small\" @click=\"delItem(scope.row)\" v-if=\"scope.row.orderStatus === 0\">作废</el-button>\r\n                <el-button type=\"text\" size=\"small\" @click=\"finishItem(scope.row)\" v-if=\"scope.row.orderStatus === 2\">强制完成</el-button>\r\n                <el-button type=\"text\" size=\"small\" @click=\"remarksItem(scope.row)\" v-if=\"scope.row.orderStatus === 3\">备注</el-button>\r\n              </template>\r\n              <el-button type=\"text\" size=\"small\" @click=\"downloadItem(scope.row)\">导出</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </page-table>\r\n    </div>\r\n    <!--备注-->\r\n    <el-dialog title=\"备注\" :visible.sync=\"remarksDialog\" width=\"40%\" :close-on-click-modal=\"false\">\r\n      <el-form :model=\"remarksFormData\" :rules=\"rules\" ref=\"remarksForm\" label-width=\"80px\" class=\"demo-ruleForm\">\r\n        <el-form-item label=\"备注：\" prop=\"reason\">\r\n          <el-input type=\"textarea\" maxlength=\"120\"  show-word-limit :rows=\"3\" placeholder=\"请输入内容\" v-model=\"remarksFormData.operationRemarks\">\r\n          </el-input>\r\n          <p>最大长度为120个字符</p>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"remarksDialog = false\" size=\"small\">取 消</el-button>\r\n        <el-button @click=\"remarksSub\" type=\"primary\" size=\"small\">确定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\n  import PageTable from \"@/views/collocation/components/PageTable\";\r\n  import TimeIntervalCheck from \"@/components/TimeIntervalCheck\";\r\n  import keepAliveMixin from \"@/mixins/keepAliveMixin\";\r\n  export default {\r\n    name: 'transfer_slip_list',\r\n    mixins: [keepAliveMixin],\r\n    // 数据\r\n    data() {\r\n      return {\r\n        // 标识是否是零售门店进入\r\n        enterTypeFlag: false,\r\n        // 查询参数\r\n        formData: {\r\n          // 页面模块ID\r\n          menuId: '',\r\n          // 区分调用地方  0 门店  1 订单中心和智能搭配\r\n          requestLocation: 1,\r\n          // 单据状态\r\n          orderStatus: '',\r\n          // 发货门店\r\n          outStoreId: '',\r\n          // 收货门店\r\n          inStoreId: '',\r\n          // 收货差异\r\n          difference: '',\r\n          // 时间\r\n          createTimeBegin: '',\r\n          createTimeEnd: '',\r\n          pageIndex: 1,\r\n          pageSize: 10\r\n        },\r\n        // 收货差异\r\n        differenceList: [\r\n          {name: '是', id: 1},\r\n          {name: '否', id: 0}\r\n        ],\r\n        // 发货门店列表\r\n        outStoreList: [],\r\n        // 收货门店列表\r\n        inStoreList: [],\r\n        // 单据状态\r\n        billType: this.$common.getBillType('transferSlip'),\r\n        // 表格数据\r\n        tableData: {},\r\n        // 选中的表格数据\r\n        checkedTableData: [],\r\n\r\n        // 备注弹窗\r\n        remarksDialog: false,\r\n        remarksFormData: {\r\n          id: '',\r\n          operationRemarks: ''\r\n        },\r\n        rules: {\r\n          operationRemarks: [\r\n            {type: 'string',required: true, message: '请输入内容', trigger: 'blur'}\r\n          ]\r\n        },\r\n      }\r\n    },\r\n    // 组件\r\n    components: {\r\n      PageTable,\r\n      TimeIntervalCheck\r\n    },\r\n    created(){\r\n      // 删除子页面的门店缓存\r\n      sessionStorage.removeItem('TRANSFER_SLIP_APP_INFO');\r\n      // 获取模块id\r\n      this.formData.menuId = this.$route.meta.currentid;\r\n      // 控制台的零售门店进来的时候\r\n      if(this.$route.path === '/store/transfer_slip/transfer_slip_list'){\r\n        this.formData.requestLocation = 0;\r\n        this.enterTypeFlag = true\r\n      }\r\n    },\r\n    // 初始化数据\r\n    mounted() {\r\n      this.$nextTick(() => {\r\n        this.getInStoreList();\r\n        this.getOutStoreList();\r\n        this.getTableData();\r\n      })\r\n    },\r\n    // 方法\r\n    methods: {\r\n      // keepAlive 返回初始化\r\n      activatedInit(){\r\n        this.getTableData();\r\n      },\r\n      // 导出\r\n      exportExcel() {\r\n        if(this.checkedTableData.length === 0){\r\n          this.$notify.error({ title: '错误',message: '请选择数据'});\r\n          return\r\n        }\r\n        require.ensure([], () => {\r\n          let { export_json_to_excel } = require(\"@/vendor/Export2Excel\");\r\n          let tHeader = [\r\n            \"调拨单号\",\r\n            \"发货门店\",\r\n            \"收货门店\",\r\n            \"提交时间\",\r\n            \"调拨金额\",\r\n            \"调拨数量\",\r\n            \"实发数量\",\r\n            \"实收数量\",\r\n            \"收货差异\",\r\n            \"差异数量\",\r\n            \"备注\",\r\n            \"单据状态\",\r\n          ];\r\n          // 上面设置Excel的表格第一行的标题\r\n          let filterVal = [\r\n            \"orderSn\",\r\n            \"outStoreName\",\r\n            \"inStoreName\",\r\n            \"_createTime\",\r\n            \"_amount\",\r\n            \"quantity\",\r\n            \"shipmentsQty\",\r\n            \"receiveQty\",\r\n            \"_difference\",\r\n            \"_differenceQty\",\r\n            \"operationRemarks\",\r\n            \"_orderStatus\"\r\n          ];\r\n          // 上面的index、nickName、name是tableData里对象的属性\r\n          let list = this.checkedTableData; //把data里的tableData存到list\r\n          let data = this.formatJson(filterVal, list);\r\n          export_json_to_excel(tHeader, data, \"调拨单\");\r\n        });\r\n      },\r\n      formatJson(filterVal, jsonData) {\r\n        return jsonData.map(v => filterVal.map(j => v[j]));\r\n      },\r\n      // 行商品详情导出\r\n      downloadItem(row){\r\n        this.request(this.api.order.storeAllotOrderProductInfo_list, {\r\n          orderSn: row.orderSn,\r\n        }).then(data => {\r\n          this.downloadDataInit(data.data);\r\n          let downloadData = data.data;\r\n          require.ensure([], () => {\r\n            let { export_json_to_excel } = require(\"@/vendor/Export2Excel\");\r\n            let tHeader = [\r\n              \"商品款号\",\r\n              \"商品货号\",\r\n              \"名称\",\r\n              \"品牌\",\r\n              \"吊牌价\",\r\n              \"调拨单价\",\r\n              \"调拨数量\",\r\n              \"调拨金额\",\r\n              \"门店实发数量\",\r\n              \"门店实收数量\",\r\n            ];\r\n            // 上面设置Excel的表格第一行的标题\r\n            let filterVal = [\r\n              \"productCode\",\r\n              \"goodsCode\",\r\n              \"goodsName\",\r\n              \"brandName\",\r\n              \"_retailPrice\",\r\n              \"_allotPrice\",\r\n              \"quantity\",\r\n              \"_amount\",\r\n              \"shipmentsQty\",\r\n              \"receiveQty\"\r\n            ];\r\n            // 上面的index、nickName、name是tableData里对象的属性\r\n            let list = downloadData; //把data里的tableData存到list\r\n            let data = this.formatJson(filterVal, list);\r\n            export_json_to_excel(tHeader, data, \"调拨商品信息\");\r\n          });\r\n        });\r\n      },\r\n      downloadDataInit(data){\r\n        if(data && data.length){\r\n          data.forEach(item => {\r\n            item._retailPrice = '￥' + item.retailPrice.toFixed(2);\r\n            item._allotPrice = '￥' + item.allotPrice.toFixed(2);\r\n            item._amount =  '￥' + (item.quantity * item.allotPrice).toFixed(2);\r\n          })\r\n        }\r\n      },\r\n      // 点击搜索\r\n      searchTableData(){\r\n        this.formData.pageIndex = 1;\r\n        this.getTableData();\r\n      },\r\n      // 获取列表数据\r\n      getTableData(){\r\n        this.request(this.api.order.storeAllotGoodsOrder_list, this.formData).then(data => {\r\n          this.initTableData(data.data);\r\n          this.tableData = data\r\n        });\r\n      },\r\n      // 初始化数据 导出使用\r\n      initTableData(data){\r\n        if(data && data.length){\r\n          data.forEach(item => {\r\n            item._createTime = this.$options.filters.timestampToTime(item.createTime);\r\n            item._amount = '￥' + item.amount;\r\n            item._difference =  item.difference === null ? '--': item.difference ? '是' : '否';\r\n            item._differenceQty =  item.differenceQty === null ? '--': item.differenceQty;\r\n            item._orderStatus = this.statusToName(item.orderStatus);\r\n          })\r\n        }\r\n      },\r\n      // 获取表格选中的\r\n      tableCheckChange(val){\r\n        this.checkedTableData = val;\r\n      },\r\n      // 初始查询条件\r\n      initFormData(){\r\n        this.$refs.formData.resetFields();\r\n      },\r\n      // 新增\r\n      addItem(){\r\n        let module = '/' + this.$route.path.split('/')[1];\r\n        this.$router.push({\r\n          path: module + '/transfer_slip/transfer_slip_add'\r\n        });\r\n      },\r\n      // 查看\r\n      seeItem(row){\r\n        let module = '/' + this.$route.path.split('/')[1];\r\n        this.$router.push({\r\n          path: module + '/transfer_slip/transfer_slip_details',\r\n          query: {\r\n            id: row.id,\r\n            orderSn: row.orderSn\r\n          }\r\n        });\r\n      },\r\n      // 编辑\r\n      editItem(row){\r\n        let module = '/' + this.$route.path.split('/')[1];\r\n        this.$router.push({\r\n          path: module + '/transfer_slip/transfer_slip_add',\r\n          query: {\r\n            id: row.id,\r\n            orderSn: row.orderSn,\r\n            outStoreId: row.outStoreId\r\n          }\r\n        });\r\n      },\r\n      // 作废\r\n      delItem(row){\r\n        this.$confirm('作废后该单据将失效，是否要将该单据作废？', '提示', {\r\n          confirmButtonText: '确认',\r\n          cancelButtonText: '取消',\r\n          showClose:false\r\n        }).then(() => {\r\n          this.request(this.api.order.storeAllotGoodsOrder_cancel, {id: row.id}).then(data => {\r\n            this.$notify.success({ title: '成功',message: '作废成功'});\r\n            this.getTableData();\r\n          });\r\n        }).catch(() => {\r\n        });\r\n      },\r\n      // 强制完成\r\n      finishItem(row){\r\n        this.$confirm('确定强制完成吗？', '提示', {\r\n          confirmButtonText: '确认',\r\n          cancelButtonText: '取消',\r\n          showClose:false\r\n        }).then(() => {\r\n          this.request(this.api.order.storeAllotGoodsOrder_enforcementFinished, {id: row.id}).then(data => {\r\n            this.$notify.success({ title: '成功',message: '完成成功'});\r\n            this.getTableData();\r\n          });\r\n        }).catch(() => {\r\n        });\r\n      },\r\n      // 备注显示\r\n      remarksItem(row){\r\n        this.remarksFormData.id = row.id;\r\n        this.remarksFormData.operationRemarks = row.operationRemarks;\r\n        this.remarksDialog = true;\r\n      },\r\n      // 备注提交\r\n      remarksSub(){\r\n        this.$refs.remarksForm.validate((valid) => {\r\n          if (valid) {\r\n            this.request(this.api.order.storeAllotGoodsOrder_insertRemarks, this.remarksFormData).then(data => {\r\n              this.$notify.success({ title: '成功',message: '备注成功'});\r\n              this.remarksDialog = false;\r\n              this.getTableData();\r\n            });\r\n          } else {\r\n            return false;\r\n          }\r\n        });\r\n\r\n      },\r\n      // 状态转name\r\n      statusToName(val){\r\n        if(!val && val !== 0) return;\r\n        let item = this.billType.find(item => {\r\n          return item.id === val\r\n        });\r\n        if(item){\r\n          return item.name;\r\n        }else {\r\n          return val\r\n        }\r\n      },\r\n      // 获取发货门店数据\r\n      async getOutStoreList() {\r\n        // 获取userId\r\n        let info = await this.request(this.api.user.get_userinfo, {}, true);\r\n        // 获取直属机构\r\n        let organization = await this.request(this.api.user.userCompany_getUserOrgByUserId, {userId: info.userId}, true);\r\n        // enableAllocation: 1  (启用门店调拨 后端需要)\r\n        this.request(this.api.retailStore.storeBasic_listBase, {organizationId: organization.id, enableAllocation: 1}).then(data => {\r\n          this.outStoreList = data.data;\r\n        });\r\n      },\r\n      // 获取收货门店数据\r\n      getInStoreList() {\r\n        this.request(this.api.store.storeBasic_list, {}).then(data => {\r\n          this.inStoreList = data.data;\r\n        });\r\n      }\r\n    },\r\n    filters: {\r\n\r\n    },\r\n    // 计算属性\r\n    computed: {},\r\n    // 监听数据变化\r\n    watch: {}\r\n  }\r\n</script>\r\n"],"sourceRoot":"src/views/collocation/transfer_slip"}]}