{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\store\\store\\store_info_list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\store\\store\\store_info_list.vue","mtime":1574160264516},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport { getToken } from '@/utils/auth';\nimport codeSet from '@/components/codeSet';\nimport treeDept from '@/components/treeDept';\nimport { filter } from 'minimatch';\nimport { get } from 'http';\nvar token = getToken();\nexport default {\n  name: 'store_info_list',\n  data: function data() {\n    return {\n      data_obj: {},\n      getStoreList_data: {},\n      // 选中的表格数据\n      checkedTableData: [],\n      // 营业状态\n      businessStatus_list: [{\n        id: 1,\n        name: '营业中'\n      }, {\n        id: 0,\n        name: '休息中'\n      }],\n      // 门店类型\n      store_list: [],\n      // 检索\n      filtersData: {\n        pageIndex: 1,\n        // 当前页码\n        pageSize: 10,\n        // 每页数量\n        name: '',\n        // 门店名称\n        organizationId: '',\n        // 隶属机构\n        businessStatus: '',\n        // 营业状态\n        type: '',\n        // 门店类型\n        createBegin: '',\n        // 创建时间开始\n        createEnd: '' // 创建时间结束\n\n      }\n    };\n  },\n  created: function created() {\n    var that = this;\n    this.getList();\n    this.getStoreList();\n    this.getAllCode();\n  },\n  mounted: function mounted() {},\n  activated: function activated() {\n    this.getList();\n  },\n  methods: {\n    //导出\n    exportExcel: function exportExcel() {\n      var _this = this;\n\n      if (this.checkedTableData.length === 0) {\n        this.$notify.error({\n          title: '错误',\n          message: '请选择数据'\n        });\n        return;\n      }\n\n      require.ensure([], function () {\n        var _require = require(\"@/vendor/Export2Excel\"),\n            export_json_to_excel = _require.export_json_to_excel,\n            export_table_to_excel = _require.export_table_to_excel;\n\n        var tHeader = [\"门店名称\", \"隶属机构\", \"门店地址\", \"门店营业状态\", \"门店类型\", \"门店负责人\", \"门店人员数量\", \"创建人\", \"创建时间\"]; // 上面设置Excel的表格第一行的标题\n\n        var filterVal = [\"name\", \"organizationName\", \"_addressInfo\", \"businessStatus\", \"type\", \"principalName\", \"personNum\", \"createName\", \"createTime\"]; // 上面的index、nickName、name是tableData里对象的属性\n\n        var list = _this.checkedTableData; //把data里的tableData存到list\n\n        var data = _this.formatJson(filterVal, list);\n\n        export_json_to_excel(tHeader, data, \"零售门店信息列表\");\n      });\n    },\n    formatJson: function formatJson(filterVal, jsonData) {\n      return jsonData.map(function (v) {\n        return filterVal.map(function (j) {\n          return v[j];\n        });\n      });\n    },\n    tableCheckChange: function tableCheckChange(val) {\n      this.checkedTableData = val;\n    },\n\n    /**\r\n     * 获取字典项\r\n     */\n    getAllCode: function getAllCode() {\n      var _this2 = this;\n\n      this.request(this.api.system.ALL_CODESET_POST).then(function (res) {\n        res.forEach(function (item, index) {\n          switch (item.name) {\n            case 'STO001':\n              // 门店类型列表\n              item.codeItemList.forEach(function (itemk, indexk) {\n                itemk.checked = false;\n              });\n              _this2.store_list = item.codeItemList;\n              break;\n          }\n        }); // 获取门店信息\n\n        if (_this2.isEcho) {\n          _this2.getStoreInfo(_this2.$route.query.id);\n        }\n\n        ;\n      });\n    },\n\n    /**\r\n     * 编辑\r\n     * @param { Object } item 当前对象\r\n     * @param { Boolean } isRead 是否可对写\r\n     * @property { Boolean }isEcho 是否是编辑\r\n     * @return { Object } Obj 返回对象\r\n     */\n    hrefStoreEdit: function hrefStoreEdit(item, isRead) {\n      var Obj = {};\n      this.href('store/store/store_info_edit', {\n        isEcho: true,\n        id: item.id,\n        isRead: isRead\n      });\n      return Obj;\n    },\n\n    /**\r\n     * 查看\r\n     */\n    hrefStoreShow: function hrefStoreShow(item, isRead) {\n      var Obj = {};\n      this.href('store/store/store_info_show', {\n        isEcho: true,\n        id: item.id,\n        isRead: isRead\n      });\n      return Obj;\n    },\n\n    /**\r\n     * 查询列表\r\n     */\n    getList: function getList() {\n      var _this3 = this;\n\n      var that = this;\n      this.request(that.api.store.storeBasic_list, this.filtersData).then(function (res) {\n        console.log(res);\n        that.data_obj = res; // 处理数据，导出数据用\n\n        res.data.forEach(function (item, index) {\n          // 门店地址\n          item._addressInfo = item.provinceName + item.cityName + item.areaName + item.addressInfo; // 营业状态\n\n          item.businessStatus = item.businessStatus ? '营业中' : '休息中'; // 门店类型\n\n          item.type = _this3.$options.filters.codeToName(\"STO001\", item.type); // 创建时间\n\n          item.createTime = _this3.$options.filters.timestampToTime(item.createTime);\n        });\n      });\n    },\n\n    /**\r\n     * 查询门店列表\r\n     */\n    getStoreList: function getStoreList() {\n      var that = this;\n      this.request(that.api.store.storeBasic_list).then(function (res) {\n        that.getStoreList_data = res;\n      });\n    },\n\n    /**\r\n     * 跳转工单详情\r\n     */\n    href: function href(routeName, param) {\n      this.$router.push({\n        path: '/' + routeName,\n        query: param\n      });\n    },\n\n    /**\r\n     * 模糊搜索\r\n     */\n    handleSearch: function handleSearch() {\n      this.filtersData.pageIndex = 1;\n      this.filtersData.name = this.filtersData.name.replace(/(^\\s)|(\\s$)/g, '');\n      this.getList();\n    },\n\n    /**\r\n     * 搜索重置\r\n     */\n    handleResetFilters: function handleResetFilters() {\n      Object.assign(this.filtersData, {\n        pageIndex: 1,\n        // 当前页码\n        pageSize: 10,\n        // 每页数量\n        name: '',\n        // 门店名称\n        organizationId: '',\n        // 隶属机构\n        businessStatus: '',\n        // 营业状态\n        type: '',\n        // 门店类型\n        createBegin: '',\n        // 创建时间开始\n        createEnd: '' // 创建时间结束\n\n      });\n    },\n\n    /**\r\n     * 点击页数\r\n     * @param { Number } pageIndex 当前页\r\n     */\n    handleCurrentChange: function handleCurrentChange(pageIndex) {\n      this.filtersData.pageIndex = pageIndex;\n      this.getList();\n    },\n\n    /**\r\n     *  选择每页多少条数\r\n     *  @param { Number } pageSize 每页条数\r\n     */\n    handleSizeChange: function handleSizeChange(pageSize) {\n      this.filtersData.pageSize = pageSize;\n      this.getList();\n    }\n  },\n  components: {\n    codeSet: codeSet,\n    treeDept: treeDept\n  }\n};",{"version":3,"sources":["store_info_list.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n   <div>\r\n      <!-- 模糊搜索 -->\r\n      <div class=\"item-margin\">\r\n         <el-form\r\n            class=\"item-form\"\r\n            size=\"small\"\r\n            :inline=\"true\"\r\n            :model=\"filtersData\">\r\n            <!-- 模糊查询 -->\r\n            <el-form-item label=\"门店名称：\">\r\n              <el-select v-model=\"filtersData.name\" clearable filterable>\r\n                 <el-option v-for=\"(item, index) in getStoreList_data.data\" :label=\"item.name\" :key=\"index\" :value=\"item.name\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"隶属机构：\">\r\n                <tree-dept\r\n                  type=\"0\"\r\n                  v-model=\"filtersData.organizationId\"\r\n                  val-type=\"id\"\r\n                  :default-expand-all=\"true\"\r\n                  ref=\"organizationName\"\r\n                ></tree-dept>\r\n            </el-form-item>\r\n            <el-form-item label=\"营业状态：\">\r\n               <el-select v-model=\"filtersData.businessStatus\" clearable>\r\n                  <el-option v-for=\"(item, index) in businessStatus_list\" :key=\"index\" :label=\"item.name\" :value=\"item.id\"></el-option>\r\n               </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"门店类型：\">\r\n              <el-select v-model=\"filtersData.type\" placeholder=\"请选择门店类型\">\r\n                <el-option :label=\"item.name\" :value=\"item.code\" :key=\"index\" v-for=\"(item, index) in store_list\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <br/>\r\n            <!-- 选择时间 -->\r\n            <el-form-item label=\"创建时间：\" prop=\"startDate\">\r\n               <el-date-picker  v-model=\"filtersData.createBegin\" type=\"date\" placeholder=\"开始日期\"></el-date-picker>\r\n            </el-form-item>\r\n            <el-form-item prop=\"endDate\">\r\n               <el-date-picker  v-model=\"filtersData.createEnd\" type=\"date\" placeholder=\"结束日期\"></el-date-picker>\r\n            </el-form-item>\r\n            <!-- 搜索，重置 -->\r\n            <el-form-item>\r\n               <el-button size=\"small\" @click=\"handleSearch\" type=\"primary\" plain>搜索</el-button>\r\n               <el-button size=\"small\" @click=\"handleResetFilters\">重置</el-button>\r\n            </el-form-item>\r\n         </el-form>\r\n      </div>\r\n      <!-- 模糊搜索 -->\r\n      <!-- 列表 -->\r\n      <div class=\"item-margin\">\r\n         <div class=\"item-table\">\r\n            <el-button size=\"small\" type=\"primary\" class=\"ml-20 mt-24\" @click=\"href('store/store/store_info_detail')\">创建新门店</el-button>\r\n            <el-button size=\"small\" type=\"primary\" @click=\"exportExcel\">导出</el-button>\r\n            <el-table\r\n                class=\"mt-20\"\r\n               :data=\"data_obj.data\"\r\n               stripe\r\n               empty-text=\"暂无数据\"\r\n               header-align=\"center\"\r\n               header-row-class-name=\"item-table-header\"\r\n               @selection-change=\"tableCheckChange\"\r\n               :highlight-current-row=\"true\">\r\n               <el-table-column type=\"selection\" width=\"45\"></el-table-column>\r\n               <el-table-column prop=\"\" :show-overflow-tooltip=\"true\" label=\"门店名称\" min-width=\"100\">\r\n                  <template  slot-scope=\"scope\">{{ scope.row.name || '--' }}</template>\r\n               </el-table-column>\r\n              <el-table-column prop=\"\" :show-overflow-tooltip=\"true\" label=\"隶属机构\" min-width=\"100\">\r\n                  <template  slot-scope=\"scope\">{{ scope.row.organizationName || '--' }}</template>\r\n               </el-table-column>\r\n               <el-table-column prop=\"\" :show-overflow-tooltip=\"true\" label=\"门店地址\" min-width=\"130\">\r\n                  <template  slot-scope=\"scope\">{{ scope.row._addressInfo || '' }}</template>\r\n               </el-table-column>\r\n               <el-table-column prop=\"\" :show-overflow-tooltip=\"true\" label=\"门店营业状态\" min-width=\"100\">\r\n                  <template  slot-scope=\"scope\">{{ scope.row.businessStatus  }}</template>\r\n               </el-table-column>\r\n               <el-table-column prop=\"\" :show-overflow-tooltip=\"true\" label=\"门店类型\" min-width=\"90\">\r\n                  <template  slot-scope=\"scope\">{{ scope.row.type }}</template>\r\n               </el-table-column>\r\n               <el-table-column prop=\"\" :show-overflow-tooltip=\"true\" label=\"门店负责人\" min-width=\"90\">\r\n                  <template  slot-scope=\"scope\">{{ scope.row.principalName }}</template>\r\n               </el-table-column>\r\n               <el-table-column prop=\"\" :show-overflow-tooltip=\"true\" label=\"门店人员数量\" min-width=\"90\">\r\n                  <template  slot-scope=\"scope\">{{ scope.row.personNum }}</template>\r\n               </el-table-column>\r\n               <el-table-column prop=\"\" :show-overflow-tooltip=\"true\" label=\"创建人\" min-width=\"90\">\r\n                  <template  slot-scope=\"scope\">{{ scope.row.createName || '--' }}</template>\r\n               </el-table-column>\r\n               <el-table-column prop=\"\" :show-overflow-tooltip=\"true\" label=\"创建时间\" min-width=\"100\">\r\n                  <template slot-scope=\"scope\">\r\n                     {{ scope.row.createTime }}\r\n                  </template>\r\n               </el-table-column>\r\n               <!-- 操作 -->\r\n               <el-table-column\r\n                  fixed=\"right\"\r\n                  label-class-name=\"text-center\"\r\n                  class-name=\"text-center\"\r\n                  align=\"center\"\r\n                  label=\"操作\"\r\n                  width=\"130\">\r\n                  <template slot-scope=\"scope\">\r\n                     <el-button type=\"text\" size=\"small\" @click=\"hrefStoreShow(scope.row, true)\">查看</el-button>\r\n                     <el-button type=\"text\" size=\"small\" @click=\"hrefStoreEdit(scope.row)\">修改</el-button>\r\n                  </template>\r\n               </el-table-column>\r\n            </el-table>\r\n            <div class=\"pagination mt-10 mb-20\">\r\n               <!-- 分页 -->\r\n               <el-pagination\r\n                  class=\"mr-20\"\r\n                  @size-change=\"handleSizeChange\"\r\n                  @current-change=\"handleCurrentChange\"\r\n                  :current-page=\"filtersData.pageIndex\"\r\n                  :page-sizes=\"[10,20,30,40,50]\"\r\n                  :page-size=\"filtersData.pageSize\"\r\n                  layout=\"total, sizes, prev, pager, next, jumper\"\r\n                  :total=\"data_obj.totalCount\"\r\n               ></el-pagination>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport {getToken} from '@/utils/auth'\r\nimport codeSet from '@/components/codeSet'\r\nimport treeDept from '@/components/treeDept'\r\nimport { filter } from 'minimatch';\r\nimport { get } from 'http';\r\n\r\nlet token=getToken()\r\n\r\nexport default {\r\n   name:'store_info_list',\r\n   data() {\r\n      return{\r\n         data_obj:{},\r\n         getStoreList_data:{},\r\n         // 选中的表格数据\r\n         checkedTableData: [],\r\n         // 营业状态\r\n         businessStatus_list:[{\r\n            id:1,\r\n            name:'营业中'\r\n            },{\r\n            id:0,\r\n            name:'休息中'\r\n         }],\r\n         // 门店类型\r\n         store_list:[],\r\n         // 检索\r\n         filtersData:{\r\n            pageIndex: 1,// 当前页码\r\n            pageSize: 10,// 每页数量\r\n            name:'',// 门店名称\r\n            organizationId:'',// 隶属机构\r\n            businessStatus:'',// 营业状态\r\n            type:'',// 门店类型\r\n            createBegin:'',// 创建时间开始\r\n            createEnd:''// 创建时间结束\r\n         }\r\n      }\r\n   },\r\n   created() {\r\n\r\n      const that = this;\r\n      this.getList();\r\n      this.getStoreList();\r\n      this.getAllCode();\r\n   },\r\n   mounted(){\r\n\r\n   },\r\n   activated() {\r\n      this.getList();\r\n   },\r\n   methods: {\r\n      //导出\r\n      exportExcel() {\r\n        if(this.checkedTableData.length === 0){\r\n          this.$notify.error({ title: '错误',message: '请选择数据'});\r\n          return\r\n        }\r\n        require.ensure([], () => {\r\n          let { export_json_to_excel, export_table_to_excel } = require(\"@/vendor/Export2Excel\");\r\n          let tHeader = [\r\n            \"门店名称\",\r\n            \"隶属机构\",\r\n            \"门店地址\",\r\n            \"门店营业状态\",\r\n            \"门店类型\",\r\n            \"门店负责人\",\r\n            \"门店人员数量\",\r\n            \"创建人\",\r\n            \"创建时间\",\r\n          ];\r\n          // 上面设置Excel的表格第一行的标题\r\n          let filterVal = [\r\n            \"name\",\r\n            \"organizationName\",\r\n            \"_addressInfo\",\r\n            \"businessStatus\",\r\n            \"type\",\r\n            \"principalName\",\r\n            \"personNum\",\r\n            \"createName\",\r\n            \"createTime\",\r\n          ];\r\n          // 上面的index、nickName、name是tableData里对象的属性\r\n          let list = this.checkedTableData; //把data里的tableData存到list\r\n          let data = this.formatJson(filterVal, list);\r\n          export_json_to_excel(tHeader, data, \"零售门店信息列表\");\r\n        });\r\n      },\r\n      formatJson(filterVal, jsonData) {\r\n        return jsonData.map(v => filterVal.map(j => v[j]));\r\n      },\r\n      tableCheckChange(val){\r\n        this.checkedTableData = val;\r\n      },\r\n      /**\r\n       * 获取字典项\r\n       */\r\n      getAllCode() {\r\n         this.request(\r\n         this.api.system.ALL_CODESET_POST\r\n         ).then(res => {\r\n         res.forEach((item, index) => {\r\n            switch(item.name) {\r\n               case 'STO001':\r\n               // 门店类型列表\r\n               item.codeItemList.forEach((itemk, indexk) => {\r\n                  itemk.checked = false;\r\n               });\r\n               this.store_list = item.codeItemList;\r\n               break;\r\n            }\r\n         });\r\n         // 获取门店信息\r\n         if(this.isEcho) {\r\n            this.getStoreInfo(this.$route.query.id);\r\n         };\r\n         });\r\n      },\r\n      /**\r\n       * 编辑\r\n       * @param { Object } item 当前对象\r\n       * @param { Boolean } isRead 是否可对写\r\n       * @property { Boolean }isEcho 是否是编辑\r\n       * @return { Object } Obj 返回对象\r\n       */\r\n      hrefStoreEdit(item, isRead) {\r\n         var Obj = {};\r\n         this.href('store/store/store_info_edit',{\r\n            isEcho:true,\r\n            id:item.id,\r\n            isRead\r\n         })\r\n         return Obj;\r\n      },\r\n      /**\r\n       * 查看\r\n       */\r\n      hrefStoreShow(item, isRead) {\r\n         var Obj = {};\r\n         this.href('store/store/store_info_show',{\r\n            isEcho:true,\r\n            id:item.id,\r\n            isRead\r\n         })\r\n         return Obj;\r\n      },\r\n      /**\r\n       * 查询列表\r\n       */\r\n      getList() {\r\n         const that = this;\r\n\r\n         this.request(\r\n         that.api.store.storeBasic_list,\r\n         this.filtersData\r\n         ).then(res => {\r\n            console.log(res)\r\n            that.data_obj = res;\r\n            // 处理数据，导出数据用\r\n            res.data.forEach((item, index) => {\r\n               // 门店地址\r\n               item._addressInfo = item.provinceName + item.cityName + item.areaName + item.addressInfo;\r\n               // 营业状态\r\n               item.businessStatus = item.businessStatus ? '营业中' : '休息中';\r\n               // 门店类型\r\n               item.type = this.$options.filters.codeToName(\"STO001\", item.type);\r\n               // 创建时间\r\n               item.createTime = this.$options.filters.timestampToTime(item.createTime);\r\n            });\r\n         });\r\n      },\r\n      /**\r\n       * 查询门店列表\r\n       */\r\n      getStoreList() {\r\n         const that = this;\r\n\r\n         this.request(\r\n         that.api.store.storeBasic_list\r\n         ).then(res => {\r\n            that.getStoreList_data = res;\r\n         });\r\n      },\r\n      /**\r\n       * 跳转工单详情\r\n       */\r\n      href(routeName, param) {\r\n         this.$router.push({\r\n            path: '/' + routeName,\r\n            query: param\r\n         })\r\n      },\r\n      /**\r\n       * 模糊搜索\r\n       */\r\n      handleSearch() {\r\n         this.filtersData.pageIndex = 1;\r\n         this.filtersData.name = this.filtersData.name.replace(/(^\\s)|(\\s$)/g, '');\r\n         this.getList();\r\n      },\r\n      /**\r\n       * 搜索重置\r\n       */\r\n      handleResetFilters() {\r\n         Object.assign(this.filtersData,{\r\n            pageIndex: 1,// 当前页码\r\n            pageSize: 10,// 每页数量\r\n            name:'',// 门店名称\r\n            organizationId:'',// 隶属机构\r\n            businessStatus:'',// 营业状态\r\n            type:'',// 门店类型\r\n            createBegin:'',// 创建时间开始\r\n            createEnd:''// 创建时间结束\r\n         });\r\n      },\r\n      /**\r\n       * 点击页数\r\n       * @param { Number } pageIndex 当前页\r\n       */\r\n      handleCurrentChange(pageIndex){\r\n         this.filtersData.pageIndex = pageIndex;\r\n         this.getList();\r\n      },\r\n      /**\r\n       *  选择每页多少条数\r\n       *  @param { Number } pageSize 每页条数\r\n       */\r\n      handleSizeChange(pageSize){\r\n         this.filtersData.pageSize = pageSize;\r\n         this.getList();\r\n      },\r\n   },\r\n   components:{\r\n      codeSet,\r\n      treeDept\r\n   },\r\n}\r\n</script>\r\n<style  lang=\"less\" scoped>\r\n   #container{\r\n      width: 500px;\r\n      height: 500px;\r\n      border: 1px solid #000;\r\n   }\r\n   .previewVisible-list{\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      .item{\r\n         width: 50%;\r\n         margin-right: 0;\r\n         text-align: right;\r\n      }\r\n   }\r\n   .blueness{\r\n      color: #1E90FF;\r\n   }\r\n   h5 {\r\n     color: #222;\r\n     margin-left: -15px;\r\n   }\r\n   .test {\r\n     color: #9d9d9d;\r\n   }\r\n</style>\r\n"],"sourceRoot":"src/views/store/store"}]}