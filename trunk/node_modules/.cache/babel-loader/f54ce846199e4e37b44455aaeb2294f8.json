{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\utils\\validate.js","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\utils\\validate.js","mtime":1576223072099},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.match\";\n\n/* 合法uri*/\nexport function validateURL(textval) {\n  var urlregex = /^(https?|ftp):\\/\\/([a-zA-Z0-9.-]+(:[a-zA-Z0-9.&%$-]+)*@)*((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]?)(\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])){3}|([a-zA-Z0-9-]+\\.)*[a-zA-Z0-9-]+\\.(com|edu|gov|int|mil|net|org|biz|arpa|info|name|pro|aero|coop|museum|[a-zA-Z]{2}))(:[0-9]+)*(\\/($|[a-zA-Z0-9.,?'\\\\+&%$#=~_-]+))*$/;\n  return urlregex.test(textval);\n}\n/* 小写字母*/\n\nexport function validateLowerCase(str) {\n  var reg = /^[a-z]+$/;\n  return reg.test(str);\n}\n/* 大写字母*/\n\nexport function validateUpperCase(str) {\n  var reg = /^[A-Z]+$/;\n  return reg.test(str);\n}\n/* 大小写字母*/\n\nexport function validatAlphabets(str) {\n  var reg = /^[A-Za-z]+$/;\n  return reg.test(str);\n}\n/** 版本号 */\n\nexport function validatVersion(rule, value, callback) {\n  var reg = /^\\d+\\.\\d+\\.\\d+$/;\n\n  if (!reg.test(value)) {\n    callback(new Error('请输入正确的版本号'));\n  }\n\n  callback();\n}\n/** 版本升级URL */\n\nexport function validatDwnloadUrl(rule, value, callback) {\n  var reg = /(http|https|ftp):\\/\\/([\\w.]+\\/?)\\S*/;\n\n  if (!reg.test(value)) {\n    callback(new Error('请输入正确的下载地址'));\n  }\n\n  callback();\n}\n/* 大小写英文字母+数字组合 6位到18位 支持下划线 */\n\nexport function validatePass(rule, value, callback) {\n  var reg = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d_]{6,18}$/;\n\n  if ((rule.skipAdmin == undefined || rule.skipAdmin == false) && value === 'admin') {\n    callback();\n    return;\n  }\n\n  if (value.trim() === '') {\n    callback(new Error('不能为空'));\n    return;\n  }\n\n  if (value.trim().length < 6) {\n    callback(new Error('长度最小6位'));\n    return;\n  }\n\n  if (!reg.test(value)) {\n    callback(new Error('必须包含大小写英文字母+数字组合 6位到18位 支持下划线'));\n    return;\n  }\n\n  callback();\n}\n/** 账号规则  */\n\nexport function validateUserName(rule, value, callback) {\n  var reg = /^[0-9a-zA-Z]{1,35}$/;\n\n  if ((rule.skipAdmin == undefined || rule.skipAdmin == false) && value === 'admin') {\n    callback();\n    return;\n  }\n\n  if (value.trim() === '') {\n    callback(new Error('不能为空'));\n    return;\n  }\n\n  if (!reg.test(value)) {\n    callback(new Error('账号必须是大小写英文字母或数字'));\n    return;\n  }\n\n  callback();\n}\n/** 规格规则验证 */\n\nexport function validateSpecificationCode(rule, value, callback) {\n  var reg = /^[0-9A-Z]{1,2}$/;\n  var regTwo = /^[0-9A-Z]{2,2}$/;\n\n  if (value.trim() === '') {\n    callback(new Error('不能为空'));\n    return;\n  }\n\n  if (!reg.test(value)) {\n    callback(new Error('必须是大写英文字母或数字'));\n    return;\n  }\n\n  if (!regTwo.test(value)) {\n    callback(new Error('必须两位'));\n    return;\n  }\n\n  callback();\n}\n/**\n * @Date: 2019-11-07 17:30:14\n * @description: 商品中心=>商品颜色编码验证只能是两位数字\n * @author: elephant\n * @param {type} \n * @return: callback\n */\n\nexport function validateColorCode(rule, value, callback) {\n  var reg = /^[0-9]{1,2}$/;\n  var regTwo = /^[0-9]{2,2}$/;\n\n  if (value.trim() === '') {\n    callback(new Error('不能为空'));\n    return;\n  }\n\n  if (!reg.test(value)) {\n    callback(new Error('必须是数字'));\n    return;\n  }\n\n  if (!regTwo.test(value)) {\n    callback(new Error('必须两位'));\n    return;\n  }\n\n  callback();\n}\n/**\n * @description: 卡券 => 面额验证   自然数 大于0 小于10000\n * @author: elephant\n * @param {type} \n * @return: callback\n * @Date: 2019-10-12 16:27:30\n */\n\nexport function validateNaturalNumber(rule, value, callback) {\n  var reg = /^[0-9]*$/;\n\n  if (value <= 0) {\n    callback(new Error('不能输入小于0'));\n    return;\n  }\n\n  if (rule.field == \"validityPeriod\") {\n    if (value > 100) {\n      callback(new Error('不能输入大于100'));\n      return;\n    }\n  } else {\n    if (value > 10000) {\n      callback(new Error('不能输入大于10000'));\n      return;\n    }\n  }\n\n  if (!reg.test(value)) {\n    callback(new Error('请输入自然数'));\n    return;\n  }\n\n  callback();\n}\n/**\n * @description: 卡券 => 折扣验证   0.1> str <9.9\n * @author: elephant\n * @param {type} \n * @return: callback\n * @Date: 2019-10-12 16:27:30\n */\n\nexport function validateDiscount(rule, value, callback) {\n  //const reg =/^(?=0\\.[1-9]|[1-9]\\.\\d).{3}$|^([2-9])$/;\n  var reg = /^\\d(\\.\\d?)?$/g;\n\n  if (value <= 0) {\n    callback(new Error('不能输入小于0'));\n    return;\n  }\n\n  if (!reg.test(value)) {\n    callback(new Error('不能大于9.9或小于0.1'));\n    return;\n  }\n\n  callback();\n}\n/**正数 */\n\nexport function validatePositiveNumber(rule, value, callback) {\n  if (value <= 0) {\n    callback(new Error('不能输入小于0'));\n    return;\n  }\n\n  callback();\n}\n/** 小数点 */\n\nexport function numberPrice(e) {\n  // 通过正则过滤小数点后两位\n  e.target.value = e.target.value.match(/^\\d*(\\.?\\d{0,2})/g)[0] || null;\n}\n/** 纯数字 */\n\nexport function inputNumber(e) {\n  // 通过正则过滤小数点后两位\n  e.target.value = e.target.value.match(/^[0-9]*/g)[0] || null;\n} //手机号验证\n\nexport function isvalidPhone(str) {\n  var reg = /^1[0-9][0-9]\\d{8}$/;\n  return reg.test(str);\n}\n/** 正数  验证可用库存限制 */\n\nexport function validatePositiveValNumber(rule, value, callback, val) {\n  var reg = /^[0-9]*$/;\n\n  if (value <= 0) {\n    callback(new Error('不能输入小于0'));\n    return;\n  }\n\n  if (!val) {\n    callback(new Error('无可用库存！'));\n    return;\n  }\n\n  if (value > val) {\n    callback(new Error('计划出库不可大于可用库存'));\n    return;\n  }\n\n  if (value > 100000) {\n    callback(new Error('不能输入大于100000'));\n    return;\n  }\n\n  if (!reg.test(value)) {\n    callback(new Error('请输入自然数'));\n    return;\n  }\n\n  callback();\n} //银行账号验证\n\nexport function isBankAccount(str) {\n  var reg = /(\\d{4}\\s){4}\\d{3}/;\n  return reg.test(str);\n} // 验证纯数字\n\nexport function validateNumber(rule, value, callback) {\n  var reg = /^[0-9]*$/;\n\n  if (!value) {\n    callback(new Error('必录'));\n    return;\n  }\n\n  if (!reg.test(value)) {\n    callback(new Error('必须是数字组成'));\n    return;\n  }\n\n  callback();\n}",{"version":3,"sources":["C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\utils\\validate.js"],"names":["validateURL","textval","urlregex","test","validateLowerCase","str","reg","validateUpperCase","validatAlphabets","validatVersion","rule","value","callback","Error","validatDwnloadUrl","validatePass","skipAdmin","undefined","trim","length","validateUserName","validateSpecificationCode","regTwo","validateColorCode","validateNaturalNumber","field","validateDiscount","validatePositiveNumber","numberPrice","e","target","match","inputNumber","isvalidPhone","validatePositiveValNumber","val","isBankAccount","validateNumber"],"mappings":"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","sourcesContent":["\n\n/* 合法uri*/\nexport function validateURL(textval) {\n  const urlregex = /^(https?|ftp):\\/\\/([a-zA-Z0-9.-]+(:[a-zA-Z0-9.&%$-]+)*@)*((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]?)(\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])){3}|([a-zA-Z0-9-]+\\.)*[a-zA-Z0-9-]+\\.(com|edu|gov|int|mil|net|org|biz|arpa|info|name|pro|aero|coop|museum|[a-zA-Z]{2}))(:[0-9]+)*(\\/($|[a-zA-Z0-9.,?'\\\\+&%$#=~_-]+))*$/\n  return urlregex.test(textval)\n}\n\n/* 小写字母*/\nexport function validateLowerCase(str) {\n  const reg = /^[a-z]+$/\n  return reg.test(str)\n}\n\n/* 大写字母*/\nexport function validateUpperCase(str) {\n  const reg = /^[A-Z]+$/\n  return reg.test(str)\n}\n\n/* 大小写字母*/\nexport function validatAlphabets(str) {\n  const reg = /^[A-Za-z]+$/\n  return reg.test(str)\n}\n/** 版本号 */\nexport function validatVersion(rule, value, callback) {\n  const reg = /^\\d+\\.\\d+\\.\\d+$/\n  if (!reg.test(value)) { callback(new Error('请输入正确的版本号')); }\n  callback();\n}\n/** 版本升级URL */\nexport function validatDwnloadUrl(rule, value, callback) {\n  const reg =  /(http|https|ftp):\\/\\/([\\w.]+\\/?)\\S*/\n  if (!reg.test(value)) { callback(new Error('请输入正确的下载地址')); }\n  callback();\n}\n/* 大小写英文字母+数字组合 6位到18位 支持下划线 */\nexport function validatePass(rule, value, callback) {\n  const reg = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d_]{6,18}$/;\n  if ((rule.skipAdmin == undefined || rule.skipAdmin == false) && value === 'admin') { callback(); return; }\n  if (value.trim() === '') { callback(new Error('不能为空')); return; }\n  if (value.trim().length < 6) { callback(new Error('长度最小6位')); return; }\n  if (!reg.test(value)) { callback(new Error('必须包含大小写英文字母+数字组合 6位到18位 支持下划线')); return; }\n  callback();\n}\n/** 账号规则  */\nexport function validateUserName(rule, value, callback) {\n  const reg = /^[0-9a-zA-Z]{1,35}$/;\n  if ((rule.skipAdmin == undefined || rule.skipAdmin == false) && value === 'admin') { callback(); return; }\n  if (value.trim() === '') { callback(new Error('不能为空')); return; }\n  if (!reg.test(value)) { callback(new Error('账号必须是大小写英文字母或数字')); return; }\n  callback();\n}\n/** 规格规则验证 */\nexport function validateSpecificationCode(rule, value, callback) {\n  const reg = /^[0-9A-Z]{1,2}$/;\n  const regTwo = /^[0-9A-Z]{2,2}$/;\n  if (value.trim() === '') { callback(new Error('不能为空')); return; }\n  if (!reg.test(value)) { callback(new Error('必须是大写英文字母或数字')); return; }\n  if (!regTwo.test(value)) { callback(new Error('必须两位')); return; }\n  callback();\n}\n/**\n * @Date: 2019-11-07 17:30:14\n * @description: 商品中心=>商品颜色编码验证只能是两位数字\n * @author: elephant\n * @param {type} \n * @return: callback\n */\nexport function validateColorCode(rule, value, callback) {\n  const reg = /^[0-9]{1,2}$/;\n  const regTwo = /^[0-9]{2,2}$/;\n  if (value.trim() === '') { callback(new Error('不能为空')); return; }\n  if (!reg.test(value)) { callback(new Error('必须是数字')); return; }\n  if (!regTwo.test(value)) { callback(new Error('必须两位')); return; }\n  callback();\n}\n/**\n * @description: 卡券 => 面额验证   自然数 大于0 小于10000\n * @author: elephant\n * @param {type} \n * @return: callback\n * @Date: 2019-10-12 16:27:30\n */\nexport function validateNaturalNumber(rule, value, callback) {\n  const reg = /^[0-9]*$/;\n  if (value <= 0 ) { callback(new Error('不能输入小于0')); return; }\n  if(rule.field == \"validityPeriod\"){\n    if (value > 100 ) { callback(new Error('不能输入大于100')); return; }\n  }else{\n    if (value > 10000 ) { callback(new Error('不能输入大于10000')); return; }\n  }\n  if (!reg.test(value)) { callback(new Error('请输入自然数')); return; }\n  callback();\n}\n/**\n * @description: 卡券 => 折扣验证   0.1> str <9.9\n * @author: elephant\n * @param {type} \n * @return: callback\n * @Date: 2019-10-12 16:27:30\n */\nexport function validateDiscount(rule, value, callback) {\n  //const reg =/^(?=0\\.[1-9]|[1-9]\\.\\d).{3}$|^([2-9])$/;\n  const reg =/^\\d(\\.\\d?)?$/g;\n  if (value <= 0 ) { callback(new Error('不能输入小于0')); return; }\n  if (!reg.test(value)) { callback(new Error('不能大于9.9或小于0.1')); return; }\n  callback();\n}\n/**正数 */\nexport function validatePositiveNumber(rule, value, callback) {\n  if (value <= 0 ) { callback(new Error('不能输入小于0')); return; }\n  callback();\n}\n/** 小数点 */\nexport function numberPrice(e) {\n  // 通过正则过滤小数点后两位\n  e.target.value = (e.target.value.match(/^\\d*(\\.?\\d{0,2})/g)[0]) || null\n}\n/** 纯数字 */\nexport function inputNumber(e) {\n  // 通过正则过滤小数点后两位\n  e.target.value = (e.target.value.match(/^[0-9]*/g)[0]) || null\n}\n//手机号验证\nexport function isvalidPhone(str) {\n  const reg = /^1[0-9][0-9]\\d{8}$/\n  return reg.test(str)\n}\n/** 正数  验证可用库存限制 */\nexport function validatePositiveValNumber(rule, value, callback, val) {\n  const reg = /^[0-9]*$/;\n  if (value <= 0) { callback(new Error('不能输入小于0')); return; }\n  if (!val) {\n    callback(new Error('无可用库存！')); return;\n  }\n  if (value > val) {\n    callback(new Error('计划出库不可大于可用库存')); return;\n  }\n  if (value > 100000) { callback(new Error('不能输入大于100000')); return; }\n  if (!reg.test(value)) { callback(new Error('请输入自然数')); return; }\n  callback();\n}\n//银行账号验证\nexport function isBankAccount(str) {\n  const reg =/(\\d{4}\\s){4}\\d{3}/\n  return reg.test(str)\n}\n// 验证纯数字\nexport function validateNumber(rule, value, callback) {\n  const reg = /^[0-9]*$/\n  if (!value) {\n    callback(new Error('必录'));\n    return;\n  }\n  if (!reg.test(value)) {\n    callback(new Error('必须是数字组成'));\n    return;\n  }\n  callback();\n}\n"]}]}