{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\permission.js","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\permission.js","mtime":1574385237063},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\EDZ\\\\Desktop\\\\\\u7814\\u53D1\\u9879\\u76EE\\\\vue-project\\\\trunk\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport Vue from 'vue';\nimport router from \"./router\";\nimport store from \"./store\";\nimport * as auth from '@/utils/auth';\nimport el from \"element-ui/src/locale/lang/el\"; // 白名单\n\nvar whiteList = ['/', '/login', '/allManagement', '/applicationVersion/version/version_list', '/applicationVersion/version/upgrade_list', '/applicationVersion/version/add_version', '/applicationVersion/version/edit_version', '/applicationVersion/version/add_upgrade', '/applicationVersion/version/edit_upgrade']; // 路由拦截器\n\nrouter.beforeEach(\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(to, from, next) {\n    var checkToken, whiteFlag, redirect, permissionRoutes, moduleMenu, keepAlive, menuId, subMenu, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, menuItem, toPathSplit, allModules, moduleInfo, modulePath, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, moduleItem, moduleRoutes;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // 是否有token\n            checkToken = auth.checkToken();\n\n            if (checkToken) {\n              _context.next = 6;\n              break;\n            }\n\n            // 判断是否白名单\n            whiteFlag = whiteList.includes(to.path);\n\n            if (whiteFlag) {\n              next();\n            } else {\n              redirect = to.fullPath;\n              router.replace({\n                path: '/login',\n                query: {\n                  redirect: redirect\n                }\n              });\n            }\n\n            _context.next = 89;\n            break;\n\n          case 6:\n            if (!(to.path === \"/login\" || to.path === \"/\")) {\n              _context.next = 10;\n              break;\n            }\n\n            next({\n              path: \"/home\"\n            });\n            _context.next = 89;\n            break;\n\n          case 10:\n            if (!(to.path === \"/home\")) {\n              _context.next = 14;\n              break;\n            }\n\n            next();\n            _context.next = 89;\n            break;\n\n          case 14:\n            // 判断是否有路由权限\n            permissionRoutes = store.getters.permissionRoutes;\n            moduleMenu = store.getters.permissionMenus;\n\n            if (!(permissionRoutes && permissionRoutes.length > 0)) {\n              _context.next = 51;\n              break;\n            }\n\n            // 判断是否缓存页面\n            keepAlive = to.meta.keepAlive;\n\n            if (keepAlive) {\n              store.dispatch('cachedViews/cachedViewAdd', to.name);\n            } // 设置header选中的menuId 和 设置左侧菜单\n\n\n            menuId = to.meta.parentId, subMenu = [];\n            _iteratorNormalCompletion = true;\n            _didIteratorError = false;\n            _iteratorError = undefined;\n            _context.prev = 23;\n            _iterator = moduleMenu[Symbol.iterator]();\n\n          case 25:\n            if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n              _context.next = 33;\n              break;\n            }\n\n            menuItem = _step.value;\n\n            if (!(menuItem.id === menuId)) {\n              _context.next = 30;\n              break;\n            }\n\n            subMenu = menuItem.sublist;\n            return _context.abrupt(\"break\", 33);\n\n          case 30:\n            _iteratorNormalCompletion = true;\n            _context.next = 25;\n            break;\n\n          case 33:\n            _context.next = 39;\n            break;\n\n          case 35:\n            _context.prev = 35;\n            _context.t0 = _context[\"catch\"](23);\n            _didIteratorError = true;\n            _iteratorError = _context.t0;\n\n          case 39:\n            _context.prev = 39;\n            _context.prev = 40;\n\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n\n          case 42:\n            _context.prev = 42;\n\n            if (!_didIteratorError) {\n              _context.next = 45;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 45:\n            return _context.finish(42);\n\n          case 46:\n            return _context.finish(39);\n\n          case 47:\n            store.dispatch('permission/setSubMenuInfo', {\n              menuId: menuId,\n              subMenu: subMenu\n            });\n            Vue.prototype.$nextTick(function () {\n              next();\n            });\n            _context.next = 89;\n            break;\n\n          case 51:\n            // 获取模块信息\n            toPathSplit = to.path.split('/'); // 获取有权限的中台\n\n            _context.next = 54;\n            return Vue.prototype.request(Vue.prototype.api.system.APPLICATION_GETLISTBYAUTH, {});\n\n          case 54:\n            allModules = _context.sent;\n            // 模块信息\n            moduleInfo = {};\n            modulePath = \"/\".concat(toPathSplit[1]);\n            _iteratorNormalCompletion2 = true;\n            _didIteratorError2 = false;\n            _iteratorError2 = undefined;\n            _context.prev = 60;\n            _iterator2 = allModules[Symbol.iterator]();\n\n          case 62:\n            if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n              _context.next = 70;\n              break;\n            }\n\n            moduleItem = _step2.value;\n\n            if (!(moduleItem.routePath === modulePath)) {\n              _context.next = 67;\n              break;\n            }\n\n            moduleInfo = moduleItem;\n            return _context.abrupt(\"break\", 70);\n\n          case 67:\n            _iteratorNormalCompletion2 = true;\n            _context.next = 62;\n            break;\n\n          case 70:\n            _context.next = 76;\n            break;\n\n          case 72:\n            _context.prev = 72;\n            _context.t1 = _context[\"catch\"](60);\n            _didIteratorError2 = true;\n            _iteratorError2 = _context.t1;\n\n          case 76:\n            _context.prev = 76;\n            _context.prev = 77;\n\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n\n          case 79:\n            _context.prev = 79;\n\n            if (!_didIteratorError2) {\n              _context.next = 82;\n              break;\n            }\n\n            throw _iteratorError2;\n\n          case 82:\n            return _context.finish(79);\n\n          case 83:\n            return _context.finish(76);\n\n          case 84:\n            _context.next = 86;\n            return store.dispatch('permission/getModuleRoutes', moduleInfo);\n\n          case 86:\n            moduleRoutes = _context.sent;\n            router.addRoutes(moduleRoutes);\n            router.replace({\n              path: to.path,\n              query: to.query\n            });\n\n          case 89:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[23, 35, 39, 47], [40,, 42, 46], [60, 72, 76, 84], [77,, 79, 83]]);\n  }));\n\n  return function (_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}());",{"version":3,"sources":["C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\permission.js"],"names":["Vue","router","store","auth","el","whiteList","beforeEach","to","from","next","checkToken","whiteFlag","includes","path","redirect","fullPath","replace","query","permissionRoutes","getters","moduleMenu","permissionMenus","length","keepAlive","meta","dispatch","name","menuId","parentId","subMenu","menuItem","id","sublist","prototype","$nextTick","toPathSplit","split","request","api","system","APPLICATION_GETLISTBYAUTH","allModules","moduleInfo","modulePath","moduleItem","routePath","moduleRoutes","addRoutes"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport router from './router'\nimport store from './store'\nimport * as auth from '@/utils/auth'\nimport el from \"element-ui/src/locale/lang/el\";\n\n// 白名单\nconst whiteList = ['/', '/login', '/allManagement', '/applicationVersion/version/version_list', '/applicationVersion/version/upgrade_list', '/applicationVersion/version/add_version', '/applicationVersion/version/edit_version', '/applicationVersion/version/add_upgrade', '/applicationVersion/version/edit_upgrade' ];\n\n// 路由拦截器\nrouter.beforeEach(async (to, from, next) => {\n\n  // 是否有token\n  let checkToken = auth.checkToken();\n  if(!checkToken){\n    // 判断是否白名单\n    let whiteFlag = whiteList.includes(to.path);\n    if(whiteFlag) {\n      next();\n    }else {\n      let redirect = to.fullPath;\n      router.replace({path: '/login',query: { redirect: redirect }});\n    }\n  } else {\n    if(to.path === \"/login\" || to.path === \"/\") {\n      next({ path: \"/home\" });\n    }else if(to.path === \"/home\") {\n      next();\n    }else {\n      // 判断是否有路由权限\n      const permissionRoutes = store.getters.permissionRoutes;\n      const moduleMenu = store.getters.permissionMenus;\n      if(permissionRoutes && permissionRoutes.length > 0){\n        // 判断是否缓存页面\n        let keepAlive = to.meta.keepAlive;\n        if(keepAlive){\n          store.dispatch('cachedViews/cachedViewAdd', to.name);\n        }\n        // 设置header选中的menuId 和 设置左侧菜单\n        let menuId = to.meta.parentId, subMenu = [];\n        for(let menuItem of moduleMenu){\n          if(menuItem.id === menuId){\n            subMenu = menuItem.sublist;\n            break;\n          }\n        }\n        store.dispatch('permission/setSubMenuInfo', {menuId, subMenu});\n        Vue.prototype.$nextTick(() => {\n          next();\n        })\n      }else {\n        // 获取模块信息\n        let toPathSplit = to.path.split('/');\n        // 获取有权限的中台\n        let allModules = await Vue.prototype.request(Vue.prototype.api.system.APPLICATION_GETLISTBYAUTH, {});\n        // 模块信息\n        let moduleInfo = {};\n        let modulePath = `/${toPathSplit[1]}`;\n        for (let moduleItem of allModules) {\n          if (moduleItem.routePath === modulePath) {\n            moduleInfo = moduleItem;\n            break\n          }\n        }\n        // 获取路由\n        const moduleRoutes = await store.dispatch('permission/getModuleRoutes', moduleInfo);\n        router.addRoutes(moduleRoutes);\n        router.replace({path:to.path, query: to.query});\n      }\n    }\n\n  }\n})\n\n"]}]}