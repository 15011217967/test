{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\store\\data\\goods_sell_list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\store\\data\\goods_sell_list.vue","mtime":1572415124730},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport selectDate from \"../components/selectDate\"; // 引入基本模板\n\nvar eCharts = require('echarts/lib/echarts'); // 引入柱状图组件\n\n\nrequire('echarts/lib/chart/bar'); // 引入饼状图图组件\n\n\nrequire('echarts/lib/chart/pie'); // 引入提示框和title组件\n\n\nrequire('echarts/lib/component/tooltip');\n\nrequire('echarts/lib/component/title'); // 引入legend组件\n\n\nrequire(\"echarts/lib/component/legend\");\n\nrequire(\"echarts/lib/component/dataZoom\");\n\nexport default {\n  name: '',\n  // 数据\n  data: function data() {\n    return {\n      colorList: ['#2eddc1', '#FCCE10', '#E87C25', '#277bbb', '#E87fff', '#277aaa', '#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n      // 图表类型 0 分布图 1 汇总图\n      chartType: 0,\n      // 参数\n      formData: {\n        dimension: 1,\n        storeIdList: [],\n        startTime: '',\n        endTime: '',\n        productType: ''\n      },\n      // 动态表格\n      tableThList: [],\n      // 门店列表\n      storeList: [],\n      // 表格数据\n      tableData: [],\n      // 商品类型\n      goodsType: [{\n        status: 1,\n        name: '商品品类'\n      }, {\n        status: 2,\n        name: '商品颜色'\n      }, {\n        status: 3,\n        name: '商品尺码'\n      }, {\n        status: 4,\n        name: '商品价格'\n      }, {\n        status: 5,\n        name: '商品品牌'\n      }],\n      goodsTypeParams: {\n        1: 'productType',\n        2: 'color',\n        3: 'size',\n        4: 'priceRange',\n        5: 'brandName'\n      },\n      // 柱状图dom\n      chartBar: {\n        dom: null,\n        checked: null,\n        legendData: null,\n        xData: null,\n        seriesList: null\n      }\n    };\n  },\n  // 组件\n  components: {\n    selectDate: selectDate\n  },\n  // 初始化数据\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      // 柱状图准备\n      _this.chartBarBefore(); // 获取门店\n\n\n      _this.getStoreList();\n    });\n  },\n  // 方法\n  methods: {\n    // 导出\n    exportExcel: function exportExcel() {\n      var _this2 = this;\n\n      require.ensure([], function () {\n        var _require = require(\"@/vendor/Export2Excel\"),\n            export_json_to_excel = _require.export_json_to_excel;\n\n        var tHeader = [\"门店名称\", \"指标\"]; // 上面设置Excel的表格第一行的标题\n\n        var filterVal = [\"storeName\", \"dimension\"];\n\n        _this2.tableThList.forEach(function (item) {\n          tHeader.push(item.name);\n          filterVal.push(item.prop);\n        }); // 上面的index、nickName、name是tableData里对象的属性\n\n\n        var list = _this2.tableData; //把data里的tableData存到list\n\n        var data = _this2.formatJson(filterVal, list);\n\n        export_json_to_excel(tHeader, data, \"销售商品结构分析\");\n      });\n    },\n    formatJson: function formatJson(filterVal, jsonData) {\n      return jsonData.map(function (v) {\n        return filterVal.map(function (j) {\n          return v[j];\n        });\n      });\n    },\n    // 获取门店数据\n    getStoreList: function getStoreList() {\n      var _this3 = this;\n\n      this.request(this.api.store.storeBasic_list, {}).then(function (data) {\n        _this3.storeList = data.data;\n      });\n    },\n    // 改变日期\n    changeDate: function changeDate(val) {\n      if (!val) return;\n      this.formData.startTime = val[0];\n      this.formData.endTime = val[1]; // 获取数据\n\n      this.getChartData();\n    },\n    // 图类型切换\n    selectChart: function selectChart(val) {\n      if (!val && val !== 0) return;\n      this.chartType = val; // 获取数据\n\n      this.getChartData();\n    },\n    // 获取数据\n    getChartData: function getChartData() {\n      var _this4 = this;\n\n      this.chartBar.checked = null;\n      this.chartBar.xData = null;\n      this.chartBar.seriesList = null;\n      this.chartBar.legendData = null;\n      this.tableThList = [];\n      this.formData.productType = '';\n\n      if (this.chartType === 0) {\n        this.getStoreDataStatisticsStockDetailed().then(function (data) {\n          _this4.tableData = data.data;\n          _this4.tableThList = data.tableThList;\n\n          if (_this4.formData.storeIdList.length > 0) {\n            _this4.chartBarInit(data.xData, data.seriesList, data.legendData);\n          }\n        });\n        this.getStoreDataStatisticsStockSummary().then(function (data) {\n          _this4.chartPieInit(data.pieData);\n\n          if (_this4.formData.storeIdList.length === 0) {\n            _this4.chartBarInit(data.xData, data.seriesList, []);\n          }\n        });\n      }\n\n      if (this.chartType === 1) {\n        this.getStoreDataStatisticsStockSummary().then(function (data) {\n          console.log(data);\n          _this4.tableData = data.data;\n          _this4.tableThList = data.tableThList;\n\n          _this4.chartPieInit(data.pieData);\n\n          _this4.chartBarInit(data.xData, data.seriesList, []);\n        });\n      }\n    },\n    // 查询销售订单列表（分布图）\n    getStoreDataStatisticsStockDetailed: function getStoreDataStatisticsStockDetailed() {\n      var _this5 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this5.request(_this5.api.store.storeDataStatistics_listSaleProductGoods, _this5.formData).then(function (data) {\n          // 表格th\n          var tableThList = []; // x轴数据\n\n          var xData = []; // series数据\n\n          var seriesList = []; // legend数据\n\n          var legendData = [];\n\n          if (data && data.length) {\n            data.forEach(function (store, storeIndex) {\n              store.dimension = _this5.$refs.dimension.selectedLabel;\n              legendData.push(store.storeName);\n\n              if (store.infoList && store.infoList.length) {\n                if (_this5.goodsTypeParams[_this5.formData.dimension] === 'priceRange') {\n                  store.infoList.sort(function (x, y) {\n                    return x.priceRange - y.priceRange;\n                  });\n                }\n\n                var ary = [];\n                store.infoList.forEach(function (info, infoIndex) {\n                  if (storeIndex === 0) {\n                    var name = _this5.priceNameInit(info[_this5.goodsTypeParams[_this5.formData.dimension]]);\n\n                    xData.push(name);\n                    tableThList.push({\n                      name: name,\n                      prop: 'value' + infoIndex\n                    });\n                  }\n\n                  store['value' + infoIndex] = info.quantity;\n                  ary.push(info.quantity);\n                });\n                seriesList.push({\n                  name: store.storeName,\n                  type: 'bar',\n                  barMaxWidth: 30,\n                  itemStyle: {\n                    color: function color(params) {\n                      if (_this5.chartBar.checked === params.dataIndex + '' + params.seriesIndex) {\n                        return 'red';\n                      } else {\n                        return _this5.colorList[params.seriesIndex];\n                      }\n                    }\n                  },\n                  data: ary\n                });\n              }\n            });\n          }\n\n          resolve({\n            data: data,\n            legendData: legendData,\n            xData: xData,\n            seriesList: seriesList,\n            tableThList: tableThList\n          });\n        });\n      });\n    },\n    // 查询销售订单列表（汇总图）\n    getStoreDataStatisticsStockSummary: function getStoreDataStatisticsStockSummary() {\n      var _this6 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this6.request(_this6.api.store.storeDataStatistics_listSaleProductGoodsSum, _this6.formData).then(function (data) {\n          // 表格th\n          var tableThList = [];\n          var xData = [];\n          var tableItem = {\n            storeName: '全部门店',\n            dimension: _this6.$refs.dimension.selectedLabel\n          };\n          var seriesList = [];\n          var pieData = [];\n          var ary = [];\n\n          if (data && data.length) {\n            if (_this6.goodsTypeParams[_this6.formData.dimension] === 'priceRange') {\n              data.sort(function (x, y) {\n                return x.priceRange - y.priceRange;\n              });\n            }\n\n            data.forEach(function (item, index) {\n              ary.push(item.quantity);\n              tableItem['value' + index] = item.quantity;\n\n              var name = _this6.priceNameInit(item[_this6.goodsTypeParams[_this6.formData.dimension]]);\n\n              pieData.push({\n                value: item.quantity,\n                name: name\n              });\n              xData.push(name);\n              tableThList.push({\n                name: name,\n                prop: 'value' + index\n              });\n            });\n            seriesList.push({\n              name: '',\n              type: 'bar',\n              barMaxWidth: 30,\n              itemStyle: {\n                color: function color(params) {\n                  if (_this6.chartBar.checked === params.dataIndex + '' + params.seriesIndex) {\n                    return 'red';\n                  } else {\n                    return _this6.colorList[params.seriesIndex];\n                  }\n                }\n              },\n              data: ary\n            });\n          }\n\n          resolve({\n            data: [tableItem],\n            xData: xData,\n            seriesList: seriesList,\n            pieData: pieData,\n            tableThList: tableThList\n          });\n        });\n      });\n    },\n    // 销售商品--根据商品类型统计分类明细\n    getStoreDataStatisticsStockCategoryDetailed: function getStoreDataStatisticsStockCategoryDetailed(urlConfig, storeName) {\n      var _this7 = this;\n\n      var params = {};\n\n      if (storeName) {\n        var store = this.storeList.find(function (item) {\n          return item.name === storeName;\n        });\n        params = JSON.parse(JSON.stringify(this.formData));\n        params.storeIdList = [store.id];\n      } else {\n        params = this.formData;\n      }\n\n      this.request(urlConfig, params).then(function (data) {\n        var pieData = [];\n\n        if (data && data.length) {\n          data.forEach(function (item) {\n            var name = _this7.priceNameInit(item[_this7.goodsTypeParams[_this7.formData.dimension]]);\n\n            pieData.push({\n              name: name,\n              value: item.quantity\n            });\n          });\n        }\n\n        _this7.chartPieInit(pieData);\n      });\n    },\n    // 初始价格区间\n    priceNameInit: function priceNameInit(name) {\n      var newName;\n\n      if (this.goodsTypeParams[this.formData.dimension] === 'priceRange') {\n        switch (name) {\n          case '499':\n            newName = '0-499';\n            break;\n\n          case '999':\n            newName = '500-999';\n            break;\n\n          case '1499':\n            newName = '1000-1499';\n            break;\n\n          case '1999':\n            newName = '1500-1999';\n            break;\n\n          case '2999':\n            newName = '2000-2999';\n            break;\n\n          case '3000':\n            newName = '3000及以上';\n            break;\n\n          default:\n            newName = name;\n        }\n      } else {\n        newName = name;\n      }\n\n      return newName;\n    },\n    // 因echarts 重复渲染click事件重复添加 暂时解决 先获取dom添加click事件\n    chartBarBefore: function chartBarBefore() {\n      var _this8 = this;\n\n      this.chartBar.dom = eCharts.init(this.$refs.chartBar);\n      this.chartBar.dom.on('click', function (params) {\n        if (_this8.formData.dimension === 3 || _this8.formData.dimension === 4) return;\n        var storeName = params.seriesName;\n        _this8.chartBar.checked = params.dataIndex + '' + params.seriesIndex;\n\n        _this8.chartBarInit(_this8.chartBar.xData, _this8.chartBar.seriesList, _this8.chartBar.legendData);\n\n        if (_this8.formData.dimension === 1) {\n          _this8.formData.productType = params.name;\n          var urlConfig = _this8.api.store.storeDataStatistics_saleProductGoodsTypeDetailed;\n\n          _this8.getStoreDataStatisticsStockCategoryDetailed(urlConfig, storeName);\n        }\n\n        if (_this8.formData.dimension === 2) {\n          _this8.formData.color = params.name;\n          var _urlConfig = _this8.api.store.storeDataStatistics_saleProductGoodsColorDetailed;\n\n          _this8.getStoreDataStatisticsStockCategoryDetailed(_urlConfig, storeName);\n        }\n      });\n    },\n\n    /**\n     * 门店信息柱状图显示\n     * @param xData   x轴data\n     * @param seriesList series数据\n     * @param legendData legend数据\n     */\n    chartBarInit: function chartBarInit(xData, seriesList, legendData) {\n      this.chartBar.xData = xData;\n      this.chartBar.legendData = legendData;\n      this.chartBar.seriesList = seriesList;\n      var option = {\n        animation: false,\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            // 坐标轴指示器，坐标轴触发有效\n            type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n\n          }\n        },\n        dataZoom: [{\n          type: 'slider',\n          show: true,\n          xAxisIndex: [0],\n          start: 0,\n          end: 100\n        }, {\n          type: 'inside',\n          xAxisIndex: [0],\n          start: 0,\n          end: 100\n        }],\n        legend: {\n          data: legendData\n        },\n        grid: {\n          top: '6%',\n          left: '3%',\n          right: '4%',\n          bottom: '12%',\n          containLabel: true\n        },\n        xAxis: [{\n          type: 'category',\n          // 坐标轴轴线相关设置\n          axisLine: {\n            lineStyle: {\n              color: '#dcdfe6'\n            }\n          },\n          // 坐标轴刻度相关设置\n          axisTick: {\n            show: false\n          },\n          // 坐标轴在 grid 区域中的分隔线\n          splitLine: {\n            show: false\n          },\n          // 坐标轴刻度标签的相关设置\n          axisLabel: {\n            show: true,\n            color: '#555'\n          },\n          data: xData\n        }],\n        yAxis: [{\n          type: 'value',\n          // 坐标轴轴线相关设置\n          axisLine: {\n            show: false,\n            lineStyle: {\n              color: '#dcdfe6'\n            }\n          },\n          // 坐标轴刻度相关设置\n          axisTick: {\n            show: false\n          },\n          // 坐标轴在 grid 区域中的分隔线\n          splitLine: {\n            show: true,\n            lineStyle: {\n              type: 'solid'\n            }\n          },\n          // 坐标轴刻度标签的相关设置\n          axisLabel: {\n            show: true,\n            color: '#555'\n          }\n        }],\n        series: seriesList\n      };\n      this.chartBar.dom.clear();\n      this.chartBar.dom.setOption(option);\n    },\n\n    /**\n     * 门店信息饼状图显示\n     * @param data 显示数据\n     */\n    chartPieInit: function chartPieInit(data) {\n      var chartPie = eCharts.init(this.$refs.chartPie);\n      var option = {\n        tooltip: {\n          trigger: 'item'\n        },\n        series: [{\n          type: 'pie',\n          radius: '55%',\n          center: ['50%', '60%'],\n          data: data,\n          label: {\n            formatter: '{b}: {d}%'\n          },\n          itemStyle: {\n            emphasis: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          }\n        }],\n        color: this.colorList\n      };\n      chartPie.clear();\n      chartPie.setOption(option);\n    }\n  },\n  // 计算属性\n  computed: {},\n  // 监听数据变化\n  watch: {}\n};",{"version":3,"sources":["goods_sell_list.vue"],"names":[],"mappings":"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","sourcesContent":["<style lang=\"less\" scoped>\r\n  .goods-sell-list{\r\n    .chart-list {height: 400px;padding-top: 20px;\r\n      .chart-bar {width: 60%;height: 100%;float: left;}\r\n      .chart-pig {width: 40%;height: 100%;float: left;}\r\n      .input-w-2 {width: 300px;}\r\n    }\r\n    .time-check{position: relative;}\r\n  }\r\n</style>\r\n<template>\r\n  <div class=\"goods-sell-list\">\r\n    <div class=\"item-margin\">\r\n      <el-form class=\"item-form\" :model=\"formData\" label-width=\"90px\" size=\"small\" ref=\"formData\" inline>\r\n        <el-form-item label=\"指标：\" prop=\"dimension\">\r\n          <el-select placeholder=\"请选择\" class=\"input-w\" v-model=\"formData.dimension\" ref=\"dimension\" @change=\"getChartData\">\r\n            <el-option v-for=\"item in goodsType\" :key=\"item.status\" :label=\"item.name\" :value=\"item.status\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"筛选门店：\" prop=\"storeIdList\">\r\n          <el-select placeholder=\"请选择\" class=\"input-w-5\" v-model=\"formData.storeIdList\" filterable clearable multiple\r\n                     :multiple-limit=\"3\" @change=\"getChartData\">\r\n            <el-option v-for=\"item in storeList\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n<!--        <el-form-item>-->\r\n<!--          <el-button @click=\"getChartData\" type=\"primary\" plain>搜索</el-button>-->\r\n<!--        </el-form-item>-->\r\n      </el-form>\r\n    </div>\r\n    <div class=\"item-margin item-cont\">\r\n      <select-date @changeDate=\"changeDate\" @selectChart=\"selectChart\" :isMonthSelect=\"false\"></select-date>\r\n      <div class=\"chart-list clearfix\">\r\n        <div class=\"chart-bar\" ref=\"chartBar\"></div>\r\n        <div class=\"chart-pig\" ref=\"chartPie\" v-show=\"formData.dimension != 5\"></div>\r\n      </div>\r\n    </div>\r\n    <div class=\"item-margin item-cont\">\r\n      <div>\r\n        <el-button size=\"small\" type=\"primary\" @click=\"exportExcel\">导出</el-button>\r\n      </div>\r\n      <el-table :data=\"tableData\" style=\"width: 100%\" row-key=\"id\" id=\"table-data\">\r\n        <el-table-column prop=\"storeName\" label=\"门店名称\" :show-overflow-tooltip=\"true\" fixed=\"left\"></el-table-column>\r\n        <el-table-column prop=\"dimension\" label=\"指标\" :show-overflow-tooltip=\"true\" fixed=\"left\"></el-table-column>\r\n        <el-table-column :prop=\"item.prop\" :label=\"item.name\" :show-overflow-tooltip=\"true\" v-for=\"(item, index) in tableThList\" :key=\"item.prop\"></el-table-column>\r\n      </el-table>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n  import selectDate from '../components/selectDate';\r\n  // 引入基本模板\r\n  let eCharts = require('echarts/lib/echarts');\r\n  // 引入柱状图组件\r\n  require('echarts/lib/chart/bar');\r\n  // 引入饼状图图组件\r\n  require('echarts/lib/chart/pie');\r\n  // 引入提示框和title组件\r\n  require('echarts/lib/component/tooltip');\r\n  require('echarts/lib/component/title');\r\n  // 引入legend组件\r\n  require(\"echarts/lib/component/legend\");\r\n  require(\"echarts/lib/component/dataZoom\");\r\n  export default {\r\n    name: '',\r\n    // 数据\r\n    data() {\r\n      return {\r\n        colorList: ['#2eddc1','#FCCE10','#E87C25','#277bbb','#E87fff','#277aaa','#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\r\n        // 图表类型 0 分布图 1 汇总图\r\n        chartType: 0,\r\n        // 参数\r\n        formData: {\r\n          dimension: 1,\r\n          storeIdList: [],\r\n          startTime: '',\r\n          endTime: '',\r\n          productType: ''\r\n        },\r\n        // 动态表格\r\n        tableThList: [],\r\n        // 门店列表\r\n        storeList: [],\r\n        // 表格数据\r\n        tableData: [],\r\n        // 商品类型\r\n        goodsType: [\r\n          {status: 1, name: '商品品类'},\r\n          {status: 2, name: '商品颜色'},\r\n          {status: 3, name: '商品尺码'},\r\n          {status: 4, name: '商品价格'},\r\n          {status: 5, name: '商品品牌'}\r\n        ],\r\n        goodsTypeParams: {\r\n          1: 'productType',\r\n          2: 'color',\r\n          3: 'size',\r\n          4: 'priceRange',\r\n          5: 'brandName'\r\n        },\r\n        // 柱状图dom\r\n        chartBar: {\r\n          dom: null,\r\n          checked: null,\r\n          legendData: null,\r\n          xData: null,\r\n          seriesList: null\r\n        }\r\n      }\r\n    },\r\n    // 组件\r\n    components: {\r\n      selectDate\r\n    },\r\n    // 初始化数据\r\n    mounted() {\r\n      this.$nextTick(() => {\r\n        // 柱状图准备\r\n        this.chartBarBefore();\r\n        // 获取门店\r\n        this.getStoreList();\r\n      })\r\n    },\r\n    // 方法\r\n    methods: {\r\n      // 导出\r\n      exportExcel() {\r\n        require.ensure([], () => {\r\n          let {export_json_to_excel} = require(\"@/vendor/Export2Excel\");\r\n          let tHeader = [\r\n            \"门店名称\",\r\n            \"指标\",\r\n          ];\r\n          // 上面设置Excel的表格第一行的标题\r\n          let filterVal = [\r\n            \"storeName\",\r\n            \"dimension\"\r\n          ];\r\n          this.tableThList.forEach(item => {\r\n            tHeader.push(item.name);\r\n            filterVal.push(item.prop)\r\n          });\r\n          // 上面的index、nickName、name是tableData里对象的属性\r\n          let list = this.tableData; //把data里的tableData存到list\r\n          let data = this.formatJson(filterVal, list);\r\n          export_json_to_excel(tHeader, data, \"销售商品结构分析\");\r\n        });\r\n      },\r\n      formatJson(filterVal, jsonData) {\r\n        return jsonData.map(v => filterVal.map(j => v[j]));\r\n      },\r\n      // 获取门店数据\r\n      getStoreList() {\r\n        this.request(this.api.store.storeBasic_list, {}).then(data => {\r\n          this.storeList = data.data;\r\n        });\r\n      },\r\n      // 改变日期\r\n      changeDate(val) {\r\n        if(!val) return;\r\n        this.formData.startTime = val[0];\r\n        this.formData.endTime = val[1];\r\n        // 获取数据\r\n        this.getChartData();\r\n      },\r\n      // 图类型切换\r\n      selectChart(val) {\r\n        if(!val && val !== 0) return;\r\n        this.chartType = val;\r\n        // 获取数据\r\n        this.getChartData();\r\n      },\r\n      // 获取数据\r\n      getChartData() {\r\n        this.chartBar.checked = null;\r\n        this.chartBar.xData = null;\r\n        this.chartBar.seriesList = null;\r\n        this.chartBar.legendData = null;\r\n        this.tableThList = [];\r\n        this.formData.productType = '';\r\n        if(this.chartType === 0){\r\n          this.getStoreDataStatisticsStockDetailed().then(data => {\r\n            this.tableData = data.data;\r\n            this.tableThList = data.tableThList;\r\n            if(this.formData.storeIdList.length > 0){\r\n              this.chartBarInit(data.xData, data.seriesList, data.legendData)\r\n            }\r\n          });\r\n          this.getStoreDataStatisticsStockSummary().then(data => {\r\n            this.chartPieInit(data.pieData);\r\n            if(this.formData.storeIdList.length === 0){\r\n              this.chartBarInit(data.xData, data.seriesList, []);\r\n            }\r\n          });\r\n        }\r\n        if(this.chartType === 1){\r\n          this.getStoreDataStatisticsStockSummary().then(data => {\r\n            console.log(data)\r\n            this.tableData = data.data;\r\n            this.tableThList = data.tableThList;\r\n            this.chartPieInit(data.pieData);\r\n            this.chartBarInit(data.xData, data.seriesList, []);\r\n          });\r\n        }\r\n      },\r\n      // 查询销售订单列表（分布图）\r\n      getStoreDataStatisticsStockDetailed() {\r\n        return new Promise((resolve, reject) => {\r\n          this.request(this.api.store.storeDataStatistics_listSaleProductGoods, this.formData).then(data => {\r\n            // 表格th\r\n            let tableThList = [];\r\n            // x轴数据\r\n            let xData = [];\r\n            // series数据\r\n            let seriesList = [];\r\n            // legend数据\r\n            let legendData = [];\r\n            if(data && data.length){\r\n              data.forEach((store, storeIndex) => {\r\n                store.dimension = this.$refs.dimension.selectedLabel;\r\n                legendData.push(store.storeName)\r\n                if(store.infoList && store.infoList.length){\r\n                  if(this.goodsTypeParams[this.formData.dimension] === 'priceRange'){\r\n                    store.infoList.sort((x, y) => {\r\n                      return x.priceRange - y.priceRange\r\n                    })\r\n                  }\r\n                  let ary = [];\r\n                  store.infoList.forEach((info, infoIndex) => {\r\n                    if(storeIndex === 0){\r\n                      let name = this.priceNameInit(info[this.goodsTypeParams[this.formData.dimension]]);\r\n                      xData.push(name);\r\n                      tableThList.push({\r\n                        name: name,\r\n                        prop: 'value' + infoIndex\r\n                      })\r\n                    }\r\n                    store['value' + infoIndex] = info.quantity;\r\n                    ary.push(info.quantity)\r\n                  });\r\n                  seriesList.push({\r\n                    name: store.storeName,\r\n                    type: 'bar',\r\n                    barMaxWidth: 30,\r\n                    itemStyle: {\r\n                      color: (params) => {\r\n                        if(this.chartBar.checked === params.dataIndex + '' + params.seriesIndex){\r\n                          return 'red'\r\n                        }else {\r\n                          return this.colorList[params.seriesIndex]\r\n                        }\r\n                      },\r\n                    },\r\n                    data: ary\r\n                  })\r\n                }\r\n              });\r\n            }\r\n            resolve({\r\n              data,\r\n              legendData,\r\n              xData,\r\n              seriesList,\r\n              tableThList\r\n            })\r\n          });\r\n        })\r\n      },\r\n      // 查询销售订单列表（汇总图）\r\n      getStoreDataStatisticsStockSummary() {\r\n        return new Promise((resolve, reject) => {\r\n          this.request(this.api.store.storeDataStatistics_listSaleProductGoodsSum, this.formData).then(data => {\r\n            // 表格th\r\n            let tableThList = [];\r\n            let xData = [];\r\n            let tableItem = {\r\n              storeName: '全部门店',\r\n              dimension: this.$refs.dimension.selectedLabel\r\n            };\r\n            let seriesList = [];\r\n            let pieData = [];\r\n            let ary = [];\r\n            if(data && data.length){\r\n              if(this.goodsTypeParams[this.formData.dimension] === 'priceRange'){\r\n                data.sort((x, y) => {\r\n                  return x.priceRange - y.priceRange\r\n                })\r\n              }\r\n              data.forEach((item, index) => {\r\n                ary.push(item.quantity);\r\n                tableItem['value' + index] = item.quantity;\r\n                let name = this.priceNameInit(item[this.goodsTypeParams[this.formData.dimension]]);\r\n                pieData.push({\r\n                  value: item.quantity,\r\n                  name: name\r\n                });\r\n                xData.push(name);\r\n                tableThList.push({\r\n                  name: name,\r\n                  prop: 'value' + index\r\n                })\r\n              });\r\n              seriesList.push({\r\n                name: '',\r\n                type: 'bar',\r\n                barMaxWidth: 30,\r\n                itemStyle: {\r\n                  color: (params) => {\r\n                    if(this.chartBar.checked === params.dataIndex + '' + params.seriesIndex){\r\n                      return 'red'\r\n                    }else {\r\n                      return this.colorList[params.seriesIndex]\r\n                    }\r\n                  },\r\n                },\r\n                data: ary\r\n              });\r\n            }\r\n            resolve({\r\n              data: [tableItem],\r\n              xData,\r\n              seriesList,\r\n              pieData,\r\n              tableThList\r\n            })\r\n          });\r\n        });\r\n      },\r\n      // 销售商品--根据商品类型统计分类明细\r\n      getStoreDataStatisticsStockCategoryDetailed(urlConfig, storeName) {\r\n        let params = {};\r\n        if(storeName){\r\n          let store = this.storeList.find(item => {\r\n            return item.name === storeName\r\n          });\r\n          params = JSON.parse(JSON.stringify(this.formData));\r\n          params.storeIdList = [store.id]\r\n        }else{\r\n          params = this.formData\r\n        }\r\n        this.request(urlConfig, params).then(data => {\r\n          let pieData = [];\r\n          if(data && data.length){\r\n            data.forEach( item => {\r\n              let name = this.priceNameInit(item[this.goodsTypeParams[this.formData.dimension]]);\r\n              pieData.push({\r\n                name: name,\r\n                value: item.quantity\r\n              })\r\n            })\r\n          }\r\n          this.chartPieInit(pieData);\r\n        });\r\n      },\r\n      // 初始价格区间\r\n      priceNameInit(name){\r\n        let newName;\r\n        if(this.goodsTypeParams[this.formData.dimension] === 'priceRange'){\r\n          switch(name) {\r\n            case '499':\r\n              newName = '0-499';\r\n              break;\r\n            case '999':\r\n              newName = '500-999';\r\n              break;\r\n            case '1499':\r\n              newName = '1000-1499';\r\n              break;\r\n            case '1999':\r\n              newName = '1500-1999';\r\n              break;\r\n            case '2999':\r\n              newName = '2000-2999';\r\n              break;\r\n            case '3000':\r\n              newName = '3000及以上';\r\n              break;\r\n            default:\r\n              newName = name\r\n          }\r\n        }else {\r\n          newName = name\r\n        }\r\n        return newName\r\n      },\r\n      // 因echarts 重复渲染click事件重复添加 暂时解决 先获取dom添加click事件\r\n      chartBarBefore(){\r\n        this.chartBar.dom = eCharts.init(this.$refs.chartBar);\r\n        this.chartBar.dom.on('click',params => {\r\n          if(this.formData.dimension === 3 || this.formData.dimension === 4) return;\r\n          let storeName = params.seriesName;\r\n          this.chartBar.checked = params.dataIndex + '' + params.seriesIndex;\r\n          this.chartBarInit(this.chartBar.xData, this.chartBar.seriesList, this.chartBar.legendData);\r\n          if(this.formData.dimension === 1){\r\n            this.formData.productType = params.name;\r\n            let urlConfig = this.api.store.storeDataStatistics_saleProductGoodsTypeDetailed;\r\n            this.getStoreDataStatisticsStockCategoryDetailed(urlConfig, storeName)\r\n          }\r\n          if(this.formData.dimension === 2){\r\n            this.formData.color = params.name;\r\n            let urlConfig = this.api.store.storeDataStatistics_saleProductGoodsColorDetailed;\r\n            this.getStoreDataStatisticsStockCategoryDetailed(urlConfig, storeName)\r\n          }\r\n        });\r\n      },\r\n      /**\r\n       * 门店信息柱状图显示\r\n       * @param xData   x轴data\r\n       * @param seriesList series数据\r\n       * @param legendData legend数据\r\n       */\r\n      chartBarInit(xData, seriesList, legendData) {\r\n        this.chartBar.xData = xData;\r\n        this.chartBar.legendData = legendData;\r\n        this.chartBar.seriesList = seriesList;\r\n        let option = {\r\n          animation: false,\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {            // 坐标轴指示器，坐标轴触发有效\r\n              type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n            }\r\n          },\r\n          dataZoom: [\r\n            {\r\n              type: 'slider',\r\n              show: true,\r\n              xAxisIndex: [0],\r\n              start: 0,\r\n              end: 100\r\n            },\r\n            {\r\n              type: 'inside',\r\n              xAxisIndex: [0],\r\n              start: 0,\r\n              end: 100\r\n            }\r\n          ],\r\n          legend: {\r\n            data: legendData\r\n          },\r\n          grid: {\r\n            top: '6%',\r\n            left: '3%',\r\n            right: '4%',\r\n            bottom: '12%',\r\n            containLabel: true\r\n          },\r\n          xAxis: [\r\n            {\r\n              type: 'category',\r\n              // 坐标轴轴线相关设置\r\n              axisLine: {\r\n                lineStyle: {\r\n                  color: '#dcdfe6'\r\n                }\r\n              },\r\n              // 坐标轴刻度相关设置\r\n              axisTick: {\r\n                show: false\r\n              },\r\n              // 坐标轴在 grid 区域中的分隔线\r\n              splitLine: {\r\n                show: false\r\n              },\r\n              // 坐标轴刻度标签的相关设置\r\n              axisLabel: {\r\n                show: true,\r\n                color: '#555'\r\n              },\r\n              data: xData\r\n            }\r\n          ],\r\n          yAxis: [\r\n            {\r\n              type: 'value',\r\n              // 坐标轴轴线相关设置\r\n              axisLine: {\r\n                show: false,\r\n                lineStyle: {\r\n                  color: '#dcdfe6'\r\n                }\r\n              },\r\n              // 坐标轴刻度相关设置\r\n              axisTick: {\r\n                show: false\r\n              },\r\n              // 坐标轴在 grid 区域中的分隔线\r\n              splitLine: {\r\n                show: true,\r\n                lineStyle: {\r\n                  type: 'solid'\r\n                }\r\n              },\r\n              // 坐标轴刻度标签的相关设置\r\n              axisLabel: {\r\n                show: true,\r\n                color: '#555'\r\n              },\r\n            }\r\n          ],\r\n          series: seriesList\r\n        };\r\n        this.chartBar.dom.clear();\r\n        this.chartBar.dom.setOption(option);\r\n      },\r\n      /**\r\n       * 门店信息饼状图显示\r\n       * @param data 显示数据\r\n       */\r\n      chartPieInit(data) {\r\n        let chartPie = eCharts.init(this.$refs.chartPie);\r\n        let option = {\r\n          tooltip: {\r\n            trigger: 'item'\r\n          },\r\n          series: [\r\n            {\r\n              type: 'pie',\r\n              radius: '55%',\r\n              center: ['50%', '60%'],\r\n              data: data,\r\n              label: {\r\n                formatter: '{b}: {d}%'\r\n              },\r\n              itemStyle: {\r\n                emphasis: {\r\n                  shadowBlur: 10,\r\n                  shadowOffsetX: 0,\r\n                  shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                }\r\n              }\r\n            }\r\n          ],\r\n          color: this.colorList\r\n        };\r\n        chartPie.clear();\r\n        chartPie.setOption(option);\r\n      }\r\n    },\r\n    // 计算属性\r\n    computed: {},\r\n    // 监听数据变化\r\n    watch: {}\r\n  }\r\n</script>\r\n"],"sourceRoot":"src/views/store/data"}]}