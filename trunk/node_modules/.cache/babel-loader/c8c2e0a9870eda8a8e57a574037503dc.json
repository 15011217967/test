{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\router\\config.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\router\\config.vue","mtime":1578298135680},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\EDZ\\\\Desktop\\\\\\u7814\\u53D1\\u9879\\u76EE\\\\vue-project\\\\trunk\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/web.dom.iterable\";\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// 数字补0操作\nfunction addZero(num) {\n  return num < 10 ? '0' + num : num;\n}\n\nexport default {\n  name: 'router_config',\n  // 组件\n  components: {},\n  // 数据\n  data: function data() {\n    return {\n      // 表格数据\n      tableList: [],\n      // 新增还是编辑\n      isAddItem: true,\n      // 是否显示弹窗\n      dialogVisible: false,\n      // 操作的行数据\n      checkedRowData: {},\n      // 新增或编辑参数\n      addAndEditFormData: {},\n      // 新增或编辑的类型\n      addAntEditType: ''\n    };\n  },\n  // 初始化数据\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      _this.getAppData();\n    });\n  },\n  // 方法\n  methods: {\n    // 获取顶级中台列表\n    getAppData: function getAppData() {\n      var _this2 = this;\n\n      this.request(this.api.system.application_List, {}).then(function (data) {\n        if (data.data && data.data.length) {\n          data.data.forEach(function (item) {\n            item.hasChildren = true;\n          });\n          _this2.tableList = data.data;\n        } else {\n          _this2.tableList = [];\n        }\n      });\n    },\n    // 加载子菜单\n    tableLoad: function tableLoad(tree, treeNode, resolve) {\n      var _this3 = this;\n\n      // 判断是否动态子集\n      if (tree.code) {\n        resolve(tree.sublist);\n      } else {\n        var appId = tree.id;\n        this.request(this.api.system.menu_getListMap, {\n          appId: appId\n        }).then(function (data) {\n          if (data && data.length) {\n            _this3.tableDataInit(data);\n\n            resolve(data);\n          } else {\n            resolve([]);\n          }\n        });\n      }\n    },\n    // 子菜单初始化 增加hasChildren\n    tableDataInit: function tableDataInit(data) {\n      var _this4 = this;\n\n      if (data && data.length) {\n        data.forEach(function (item) {\n          if (item.sublist && item.sublist.length) {\n            item.hasChildren = true;\n\n            _this4.tableDataInit(item.sublist);\n          } else {\n            item.sublist = [];\n            item.hasChildren = false;\n          }\n        });\n      }\n    },\n\n    /**\n     * 新增\n     * @param type   新增类型  app -> 顶级菜单   menu -> 左侧菜单   auth -> 页面按钮\n     * @param row    点击的当前父级行   如果没有为新增顶级\n     */\n    addItem: function () {\n      var _addItem = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(type, row) {\n        var _this5 = this;\n\n        var userInfo, code, max;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // 保存点击的行数据\n                if (row) {\n                  this.checkedRowData = row;\n                }\n\n                this.isAddItem = true;\n                this.dialogVisible = true;\n                this.addAntEditType = type;\n                _context.t0 = type;\n                _context.next = _context.t0 === 'app' ? 7 : _context.t0 === 'menu' ? 9 : _context.t0 === 'auth' ? 15 : 20;\n                break;\n\n              case 7:\n                this.addAndEditFormData = {\n                  name: '',\n                  routePath: '',\n                  modulePath: '',\n                  meta: ''\n                };\n                return _context.abrupt(\"break\", 20);\n\n              case 9:\n                _context.next = 11;\n                return this.request(this.api.user.get_userinfo, {}, true);\n\n              case 11:\n                userInfo = _context.sent;\n                this.addAndEditFormData = {\n                  name: '',\n                  code: '',\n                  routePath: '',\n                  modulePath: '',\n                  meta: '',\n                  type: 0,\n                  appId: row.appId || row.id,\n                  parentId: '',\n                  parentCode: '',\n                  tenantId: userInfo.tenantId\n                }; // 判断是否是menu的最大一级 app是父级时没有code\n\n                if (!row.code) {\n                  // 获取menu最大值\n                  this.request(this.api.system.menu_getMaxMenuCode, {}).then(function (data) {\n                    _this5.addAndEditFormData.code = Number(data) + 1;\n                  });\n                } else {\n                  this.addAndEditFormData.parentId = row.id;\n                  this.addAndEditFormData.parentCode = row.code;\n\n                  if (row.sublist && row.sublist.length === 0) {\n                    this.addAndEditFormData.code = row.code + '.01';\n                  }\n\n                  if (row.sublist && row.sublist.length > 0) {\n                    // 取最大值\n                    code = '0';\n                    row.sublist.forEach(function (item) {\n                      var numAry = item.code.split('.');\n                      var maxAry = code.split('.');\n                      var num = Number(numAry[numAry.length - 1]);\n                      var max = Number(maxAry[maxAry.length - 1]);\n\n                      if (num >= max) {\n                        numAry[numAry.length - 1] = addZero(num + 1);\n                        code = numAry.join('.');\n                      }\n                    });\n                    this.addAndEditFormData.code = code;\n                  }\n                }\n\n                return _context.abrupt(\"break\", 20);\n\n              case 15:\n                this.addAndEditFormData = {\n                  menuId: row.id,\n                  code: '',\n                  name: '',\n                  routePath: '',\n                  modulePath: '',\n                  meta: ''\n                };\n\n                if (!row.authlist) {\n                  this.$set(row, 'authlist', []);\n                }\n\n                if (row.authlist && row.authlist.length === 0) {\n                  this.addAndEditFormData.code = '01';\n                }\n\n                if (row.authlist && row.authlist.length > 0) {\n                  // 取最大值\n                  max = '0';\n                  row.authlist.forEach(function (item) {\n                    var num = Number(item.code);\n\n                    if (num >= Number(max)) {\n                      max = addZero(num + 1);\n                    }\n                  });\n                  this.addAndEditFormData.code = max;\n                }\n\n                return _context.abrupt(\"break\", 20);\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function addItem(_x, _x2) {\n        return _addItem.apply(this, arguments);\n      }\n\n      return addItem;\n    }(),\n\n    /**\n     * 编辑\n     * @param type   新增类型  app -> 顶级菜单   menu -> 左侧菜单   auth -> 页面按钮\n     * @param row    点击的当前父级行\n     */\n    editItem: function editItem(type, row) {\n      this.checkedRowData = row;\n      this.isAddItem = false;\n      this.dialogVisible = true;\n      this.addAntEditType = type;\n      this.addAndEditFormData = JSON.parse(JSON.stringify(row));\n    },\n\n    /**\n     * 保存\n     */\n    dialogVisibleSub: function dialogVisibleSub() {\n      var _this6 = this;\n\n      var url = '';\n\n      switch (this.addAntEditType) {\n        case 'app':\n          url = this.api.system.application_save;\n          break;\n\n        case 'menu':\n          url = this.api.system.menu_save;\n          break;\n\n        case 'auth':\n          url = this.api.system.auth_save;\n          break;\n      }\n\n      this.request(url, this.addAndEditFormData).then(function (data) {\n        _this6.$notify.success({\n          title: '成功',\n          message: '操作成功'\n        });\n\n        switch (_this6.addAntEditType) {\n          case 'app':\n            _this6.getAppData();\n\n            break;\n\n          case 'menu':\n            // 判断是新增还是编辑  提交表单有id视为编辑\n            if (_this6.addAndEditFormData.id) {\n              // 编辑\n              _this6.checkedRowData.name = data.name;\n              _this6.checkedRowData.code = data.code;\n              _this6.checkedRowData.routePath = data.routePath;\n              _this6.checkedRowData.modulePath = data.modulePath;\n              _this6.checkedRowData.meta = data.meta;\n              _this6.checkedRowData.type = data.type;\n            } else {\n              // 新增\n              var id = _this6.checkedRowData.id;\n              data.sublist = [];\n              data.hasChildren = false;\n\n              if (_this6.$refs.table.store.states.lazyTreeNodeMap[id]) {\n                _this6.$refs.table.store.states.lazyTreeNodeMap[id].push(data);\n              } else {\n                _this6.checkedRowData.hasChildren = true;\n\n                if (_this6.checkedRowData.sublist) {\n                  _this6.checkedRowData.sublist.push(data);\n                }\n              }\n            }\n\n            break;\n\n          case 'auth':\n            // 判断是新增还是编辑  提交表单有id视为编辑\n            if (_this6.addAndEditFormData.id) {\n              // 编辑\n              _this6.checkedRowData.name = data.name;\n              _this6.checkedRowData.code = data.code;\n              _this6.checkedRowData.routePath = data.routePath;\n              _this6.checkedRowData.modulePath = data.modulePath;\n              _this6.checkedRowData.meta = data.meta;\n            } else {\n              // 新增\n              _this6.checkedRowData.authlist.push(data);\n            }\n\n            break;\n        }\n\n        _this6.dialogVisible = false;\n      });\n    }\n  },\n  // 计算属性\n  computed: {},\n  // 监听数据变化\n  watch: {}\n};",{"version":3,"sources":["config.vue"],"names":[],"mappings":"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","sourcesContent":["<style lang=\"less\" scoped></style>\r\n<template>\r\n  <div class=\"router-config\">\r\n    <div class=\"item-cont\">\r\n      <div class=\"item-cont\">\r\n        <el-button size=\"small\" type=\"primary\" @click=\"addItem('app')\">新增APP</el-button>\r\n      </div>\r\n      <el-table ref=\"table\" :data=\"tableList\" style=\"width: 100%;\" row-key=\"id\" size=\"mini\" border lazy :load=\"tableLoad\" :tree-props=\"{children: 'sublist', hasChildren: 'hasChildren'}\">\r\n        <el-table-column prop=\"name\" label=\"名称\"></el-table-column>\r\n        <el-table-column prop=\"code\" label=\"编码\" width=\"120\"></el-table-column>\r\n        <el-table-column prop=\"routePath\" label=\"路由地址\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n        <el-table-column prop=\"modulePath\" label=\"模块地址\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n        <el-table-column prop=\"meta\" label=\"元信息\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n        <el-table-column label=\"按钮权限\">\r\n          <template slot-scope=\"scope\" v-if=\"scope.row.authlist && scope.row.authlist.length\">\r\n            <el-button type=\"text\" size=\"small\" @click=\"editItem('auth', item)\" v-for=\"item in scope.row.authlist\" :key=\"item.id\">{{ item.name }}</el-button>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"250\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button type=\"text\" size=\"small\" @click=\"editItem('menu', scope.row)\" v-if=\"scope.row.code\">编辑</el-button>\r\n            <el-button type=\"text\" size=\"small\" @click=\"editItem('app', scope.row)\" v-else>编辑</el-button>\r\n            <el-button type=\"text\" size=\"small\" @click=\"addItem('menu', scope.row)\">新增子菜单</el-button>\r\n            <el-button type=\"text\" size=\"small\" @click=\"addItem('auth', scope.row)\" v-if=\"(!scope.row.sublist || scope.row.sublist.length === 0) && scope.row.code\">新增按钮</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </div>\r\n    <!--弹窗-->\r\n    <el-dialog :title=\"isAddItem ? '新增' : '编辑' \" :visible.sync=\"dialogVisible\" width=\"500px\" :close-on-click-modal=\"false\">\r\n      <el-form ref=\"form\" :model=\"addAndEditFormData\" label-width=\"80px\">\r\n        <el-form-item label=\"编码\" v-if=\"addAntEditType != 'app'\">\r\n          <el-input v-model=\"addAndEditFormData.code\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"名称\">\r\n          <el-input v-model=\"addAndEditFormData.name\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"类型\">\r\n          <el-input v-model=\"addAndEditFormData.type\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"路由地址\">\r\n          <el-input type=\"textarea\" v-model=\"addAndEditFormData.routePath\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"模块地址\">\r\n          <el-input type=\"textarea\" v-model=\"addAndEditFormData.modulePath\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"元信息\">\r\n          <el-input type=\"textarea\" v-model=\"addAndEditFormData.meta\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"\">\r\n          <el-button type=\"primary\" @click=\"dialogVisibleSub\" size=\"small\">确定</el-button>\r\n          <el-button @click=\"dialogVisible = false\" size=\"small\">取消</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\n  // 数字补0操作\r\n  function addZero(num) {\r\n    return num < 10 ? '0' + num : num;\r\n  }\r\n\r\n  export default {\r\n    name: 'router_config',\r\n    // 组件\r\n    components: {},\r\n    // 数据\r\n    data() {\r\n      return {\r\n        // 表格数据\r\n        tableList: [],\r\n        // 新增还是编辑\r\n        isAddItem: true,\r\n        // 是否显示弹窗\r\n        dialogVisible: false,\r\n        // 操作的行数据\r\n        checkedRowData: {},\r\n        // 新增或编辑参数\r\n        addAndEditFormData: {},\r\n        // 新增或编辑的类型\r\n        addAntEditType: ''\r\n      }\r\n    },\r\n    // 初始化数据\r\n    mounted() {\r\n      this.$nextTick(() => {\r\n        this.getAppData()\r\n      })\r\n    },\r\n    // 方法\r\n    methods: {\r\n      // 获取顶级中台列表\r\n      getAppData(){\r\n        this.request(this.api.system.application_List, {}).then(data => {\r\n          if(data.data && data.data.length) {\r\n            data.data.forEach(item => {\r\n              item.hasChildren = true\r\n            });\r\n            this.tableList = data.data;\r\n          }else {\r\n            this.tableList = [];\r\n          }\r\n        });\r\n      },\r\n      // 加载子菜单\r\n      tableLoad(tree, treeNode, resolve) {\r\n        // 判断是否动态子集\r\n        if(tree.code){\r\n          resolve(tree.sublist)\r\n        }else {\r\n          let appId = tree.id;\r\n          this.request(this.api.system.menu_getListMap, {appId: appId}).then(data => {\r\n            if(data && data.length) {\r\n              this.tableDataInit(data);\r\n              resolve(data)\r\n            }else {\r\n              resolve([])\r\n            }\r\n          });\r\n        }\r\n      },\r\n      // 子菜单初始化 增加hasChildren\r\n      tableDataInit(data){\r\n        if(data && data.length) {\r\n          data.forEach(item => {\r\n            if(item.sublist && item.sublist.length){\r\n              item.hasChildren = true;\r\n              this.tableDataInit(item.sublist);\r\n            }else {\r\n              item.sublist = [];\r\n              item.hasChildren = false;\r\n            }\r\n          })\r\n        }\r\n      },\r\n      /**\r\n       * 新增\r\n       * @param type   新增类型  app -> 顶级菜单   menu -> 左侧菜单   auth -> 页面按钮\r\n       * @param row    点击的当前父级行   如果没有为新增顶级\r\n       */\r\n      async addItem(type, row) {\r\n        // 保存点击的行数据\r\n        if(row){\r\n          this.checkedRowData = row;\r\n        }\r\n        this.isAddItem = true;\r\n        this.dialogVisible = true;\r\n        this.addAntEditType = type;\r\n        switch (type) {\r\n          case 'app':\r\n            this.addAndEditFormData = {\r\n              name: '',\r\n              routePath: '',\r\n              modulePath: '',\r\n              meta: '',\r\n            };\r\n            break;\r\n          case 'menu':\r\n            // 获取用户信息\r\n            let userInfo = await this.request(this.api.user.get_userinfo, {}, true);\r\n            this.addAndEditFormData = {\r\n              name: '',\r\n              code: '',\r\n              routePath: '',\r\n              modulePath: '',\r\n              meta: '',\r\n              type: 0,\r\n              appId: row.appId || row.id,\r\n              parentId: '',\r\n              parentCode: '',\r\n              tenantId: userInfo.tenantId\r\n            };\r\n            // 判断是否是menu的最大一级 app是父级时没有code\r\n            if(!row.code){\r\n              // 获取menu最大值\r\n              this.request(this.api.system.menu_getMaxMenuCode, {}).then(data => {\r\n                this.addAndEditFormData.code = Number(data) + 1\r\n              });\r\n            }else {\r\n              this.addAndEditFormData.parentId = row.id;\r\n              this.addAndEditFormData.parentCode = row.code;\r\n              if(row.sublist && row.sublist.length === 0){\r\n                this.addAndEditFormData.code = row.code + '.01'\r\n              }\r\n              if(row.sublist && row.sublist.length > 0){\r\n                // 取最大值\r\n                let code = '0';\r\n                row.sublist.forEach(item => {\r\n                  let numAry = item.code.split('.');\r\n                  let maxAry = code.split('.');\r\n                  let num = Number(numAry[numAry.length - 1]);\r\n                  let max = Number(maxAry[maxAry.length - 1]);\r\n                  if(num >= max) {\r\n                    numAry[numAry.length - 1] = addZero(num + 1);\r\n                    code = numAry.join('.');\r\n                  }\r\n                });\r\n                this.addAndEditFormData.code = code;\r\n              }\r\n            }\r\n            break;\r\n          case 'auth':\r\n            this.addAndEditFormData = {\r\n              menuId: row.id,\r\n              code: '',\r\n              name: '',\r\n              routePath: '',\r\n              modulePath: '',\r\n              meta: ''\r\n            };\r\n            if(!row.authlist) {\r\n              this.$set(row, 'authlist', []);\r\n            }\r\n            if(row.authlist && row.authlist.length === 0){\r\n              this.addAndEditFormData.code = '01'\r\n            }\r\n            if(row.authlist && row.authlist.length > 0){\r\n              // 取最大值\r\n              let max = '0';\r\n              row.authlist.forEach(item => {\r\n                let num = Number(item.code);\r\n                if(num >= Number(max)) {\r\n                  max = addZero(num + 1);\r\n                }\r\n              });\r\n              this.addAndEditFormData.code = max;\r\n            }\r\n            break;\r\n        }\r\n      },\r\n      /**\r\n       * 编辑\r\n       * @param type   新增类型  app -> 顶级菜单   menu -> 左侧菜单   auth -> 页面按钮\r\n       * @param row    点击的当前父级行\r\n       */\r\n      editItem(type, row) {\r\n        this.checkedRowData = row;\r\n        this.isAddItem = false;\r\n        this.dialogVisible = true;\r\n        this.addAntEditType = type;\r\n        this.addAndEditFormData = JSON.parse(JSON.stringify(row))\r\n      },\r\n      /**\r\n       * 保存\r\n       */\r\n      dialogVisibleSub() {\r\n        let url = '';\r\n        switch (this.addAntEditType) {\r\n          case 'app':\r\n            url = this.api.system.application_save;\r\n            break;\r\n          case 'menu':\r\n            url = this.api.system.menu_save;\r\n            break;\r\n          case 'auth':\r\n            url = this.api.system.auth_save;\r\n            break;\r\n        }\r\n        this.request(url, this.addAndEditFormData).then(data => {\r\n          this.$notify.success({ title: '成功',message: '操作成功'});\r\n          switch (this.addAntEditType) {\r\n            case 'app':\r\n              this.getAppData();\r\n              break;\r\n            case 'menu':\r\n              // 判断是新增还是编辑  提交表单有id视为编辑\r\n              if(this.addAndEditFormData.id) { // 编辑\r\n                this.checkedRowData.name = data.name;\r\n                this.checkedRowData.code = data.code;\r\n                this.checkedRowData.routePath = data.routePath;\r\n                this.checkedRowData.modulePath = data.modulePath;\r\n                this.checkedRowData.meta = data.meta;\r\n                this.checkedRowData.type = data.type;\r\n              }else { // 新增\r\n                const id = this.checkedRowData.id;\r\n                data.sublist = [];\r\n                data.hasChildren = false;\r\n                if(this.$refs.table.store.states.lazyTreeNodeMap[id]) {\r\n                  this.$refs.table.store.states.lazyTreeNodeMap[id].push(data);\r\n                }else {\r\n                  this.checkedRowData.hasChildren = true;\r\n                  if(this.checkedRowData.sublist){\r\n                    this.checkedRowData.sublist.push(data)\r\n                  }\r\n                }\r\n              }\r\n              break;\r\n            case 'auth':\r\n              // 判断是新增还是编辑  提交表单有id视为编辑\r\n              if(this.addAndEditFormData.id) { // 编辑\r\n                this.checkedRowData.name = data.name;\r\n                this.checkedRowData.code = data.code;\r\n                this.checkedRowData.routePath = data.routePath;\r\n                this.checkedRowData.modulePath = data.modulePath;\r\n                this.checkedRowData.meta = data.meta;\r\n              }else { // 新增\r\n                this.checkedRowData.authlist.push(data);\r\n              }\r\n              break;\r\n          }\r\n          this.dialogVisible = false;\r\n        });\r\n      }\r\n    },\r\n    // 计算属性\r\n    computed: {},\r\n    // 监听数据变化\r\n    watch: {}\r\n  }\r\n</script>\r\n"],"sourceRoot":"src/views/router"}]}