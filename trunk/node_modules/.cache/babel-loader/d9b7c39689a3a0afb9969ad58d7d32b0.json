{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\fmis\\fund\\cashPledge.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\fmis\\fund\\cashPledge.vue","mtime":1576682604154},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\EDZ\\\\Desktop\\\\\\u7814\\u53D1\\u9879\\u76EE\\\\vue-project\\\\trunk\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nimport ElUploadImg from \"@/components/uploadImg/el_upload_img_multi\";\nimport codeSet from '@/components/codeSet';\nexport default {\n  data: function data() {\n    return {\n      // 支付方式\n      payList: [],\n      // 上传图片路径\n      imgApi: this.api.content.aLiYun_upload,\n      LssUpimgLimit: 1,\n      // 上传图片描述\n      storeImgs_describe: '',\n      // 新增押金账号弹框\n      dialogTableVisible: false,\n      // 新增的押金账户\n      checkCashPledgeUser: {},\n      // 充值弹框\n      dialogForm: false,\n      // 充值对象\n      recharge_obj: {},\n      // 账户状态\n      accountStatusList: {\n        0: \"已停用\",\n        1: \"已启用\"\n      },\n      // 渠道类型状态\n      channelTypeStatusList: {\n        1: \"零售商\",\n        2: \"经销商\"\n      },\n      // data数据\n      getList_data: {},\n      // 渠道商列表\n      channelList_data: {},\n      // 订单数据统计\n      storeRetailOrder_pcListStatistics_data: {},\n      // 选中的表格数据\n      checkedTableData: [],\n      // 获取门店信列表\n      getStoreList_data: [],\n      formInline: {\n        user: \"\",\n        region: \"\"\n      },\n      // 充值\n      ruleForm: {\n        id: '',\n        \"accountStatus\": 1,\n        // 账户状态\n        \"channelTypeName\": '零售商',\n        // 渠道类型名称\n        \"channelTypeStatus\": 1,\n        // 渠道类型状态\n        receiptTypeName: '押金充值',\n        receiptTypeStatus: '01',\n        channelId: '',\n        // 渠道id\n        accountName: '',\n        // 充值账户\n        notAccountEntryCopy: '',\n        // 充值金额\n        paymentMethod: '',\n        // 付款方式\n        paymentAccount: '',\n        // 付款账户\n        annex: '',\n        // 上传付款凭证\n        storeImgs_list: [] // 上传附件地址\n\n      },\n      rules: {\n        notAccountEntryCopy: [{\n          required: true,\n          validator: function validator(rule, value, callback) {\n            if (!value) {\n              callback(new Error('请输入付款金额！'));\n            } else {\n              var reg = /^\\d+(\\.\\d{1,2})?$/g;\n\n              if (reg.test(value)) {\n                callback();\n              } else {\n                callback(new Error('请输入正确的金额！'));\n              }\n            }\n          },\n          trigger: 'change'\n        }],\n        paymentMethod: [{\n          required: true,\n          message: '请选择付款方式！',\n          trigger: 'change'\n        }],\n        paymentAccount: [{\n          required: true,\n          message: '请输入付款账户！',\n          trigger: 'change'\n        }],\n        storeImgs_list: [{\n          type: 'array',\n          required: true,\n          message: '请上传付款凭证！',\n          trigger: 'change'\n        }]\n      },\n      filtersData: {\n        \"filter\": null,\n        // 模糊搜索\n        \"accountStatus\": null,\n        // 账户状态\n        \"channelTypeName\": null,\n        // 渠道类型名称\n        \"channelTypeStatus\": null,\n        // 渠道类型状态\n        \"orderBy\": \"\",\n        // 排序\n        pageIndex: 1,\n        pageSize: 10,\n        \"pageStart\": 0\n      },\n      info: null\n    };\n  },\n  computed: {\n    storeImgs_list: function storeImgs_list() {\n      return this.ruleForm.storeImgs_list;\n    }\n  },\n  watch: {\n    /**\r\n     * 监听上传附件图片\r\n     */\n    storeImgs_list: function storeImgs_list(value) {\n      if (value && value.length > 0) {\n        this.$refs.ruleForm.clearValidate('storeImgs_list');\n      } else {\n        this.$refs.ruleForm.validateField('storeImgs_list');\n      }\n    }\n  },\n  created: function created() {\n    var that = this;\n    this.getList();\n    this.getChannelList_data();\n    this.userinfo(); // 获取所有字典内容\n\n    this.getAllCode();\n  },\n  methods: {\n    /**\r\n    * 获取字典项\r\n    */\n    getAllCode: function getAllCode() {\n      var _this = this;\n\n      this.request(this.api.system.ALL_CODESET_POST, {}, true).then(function (res) {\n        res.forEach(function (item, index) {\n          switch (item.name) {\n            case 'COM003':\n              // 门店类型列表\n              item.codeItemList.forEach(function (itemk, indexk) {\n                itemk.checked = false;\n              });\n              _this.payList = item.codeItemList;\n              break;\n          }\n        });\n      });\n    },\n    userinfo: function () {\n      var _userinfo = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.request(this.api.user.get_userinfo, {}, true);\n\n              case 2:\n                this.info = _context.sent;\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function userinfo() {\n        return _userinfo.apply(this, arguments);\n      }\n\n      return userinfo;\n    }(),\n\n    /**\r\n     * 新增押金账户\r\n     */\n    handleDialogMap: function handleDialogMap() {\n      var _this2 = this;\n\n      if (JSON.stringify(this.checkCashPledgeUser) != '{}') {\n        this.request(this.api.financial.channelDepositAccount_save, {\n          \"accountName\": this.checkCashPledgeUser.name,\n          // 渠道账户名称 \n          \"accountStatus\": 1,\n          // 账户状态\n          \"channelId\": this.checkCashPledgeUser.id,\n          // 渠道ID\n          \"channelTypeName\": '零售商',\n          // 渠道类型名称\n          \"channelTypeStatus\": 1,\n          // 渠道类型状态\n          \"createByName\": this.info.name // 开户人名称\n\n        }).then(function (res) {\n          _this2.checkCashPledgeUser = {};\n          _this2.dialogTableVisible = false;\n\n          _this2.warn('新增押金账号成功！');\n\n          _this2.getList();\n\n          _this2.getChannelList_data();\n        });\n      } else {\n        this.warn('请选择添加的账户！');\n      }\n\n      ;\n    },\n\n    /** \r\n     * 充值弹框\r\n     */\n    recharge: function recharge(obj) {\n      this.dialogForm = true;\n      this.ruleForm.accountName = obj.accountName;\n      this.ruleForm.channelId = obj.channelId;\n      this.ruleForm.id = obj.id;\n    },\n    // 充值\n    submitForm: function submitForm(formName) {\n      var _this3 = this;\n\n      var data = JSON.parse(JSON.stringify(this.ruleForm));\n      data.annex = data.storeImgs_list[0] && data.storeImgs_list[0].url;\n      delete data.storeImgs_list;\n      this.$refs.ruleForm.validate(function (valid) {\n        if (valid) {\n          _this3.request(_this3.api.financial.channelDepositAccount_recharge, data).then(function (res) {\n            _this3.checkCashPledgeUser = {};\n            _this3.dialogForm = false;\n\n            _this3.warn('充值成功！');\n\n            _this3.getList();\n\n            Object.assign(_this3.ruleForm, {\n              id: '',\n              \"accountStatus\": 1,\n              // 账户状态\n              \"channelTypeName\": '零售商',\n              // 渠道类型名称\n              \"channelTypeStatus\": 1,\n              // 渠道类型状态\n              receiptTypeName: '押金充值',\n              receiptTypeStatus: '01',\n              channelId: '',\n              // 渠道id\n              accountName: '',\n              // 充值账户\n              notAccountEntryCopy: '',\n              // 充值金额\n              paymentMethod: '',\n              // 付款方式\n              paymentAccount: '',\n              // 付款账户\n              annex: '',\n              // 上传付款凭证\n              storeImgs_list: [] // 上传附件地址\n\n            });\n          });\n        }\n      });\n    },\n    // 取消充值\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    open: function open(row) {\n      var _this4 = this;\n\n      var text = row.accountStatus ? '停用押款账户后，渠道商将不可订货，确定停用吗？' : '确定启用吗？';\n      this.$confirm(text, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        _this4.request(_this4.api.financial.channelDepositAccount_save, {\n          \"id\": row.id,\n          // 渠道账户名称 \n          \"accountStatus\": row.accountStatus ? 0 : 1 // 账户状态\n\n        }).then(function (res) {\n          _this4.getList();\n\n          _this4.$message({\n            type: 'success',\n            message: row.accountStatus ? '停用成功!' : '启用成功!'\n          });\n        });\n      }).catch(function () {\n        _this4.$message({\n          type: 'info',\n          message: '已取消!'\n        });\n      });\n    },\n\n    /**\r\n     * 导出销售订单\r\n     */\n    exportExcelOrder: function exportExcelOrder() {\n      this.exportExcel({\n        title: \"押金账号列表\",\n        checkedTableData: this.checkedTableData.length > 0 ? this.checkedTableData : this.getList_data.dataList.data,\n        tHeader: [\"账号名称\", \"渠道类型\", \"押金贷款\", \"充值未入账金额\", \"可用贷款\", \"冻结货款\", \"开户人\", \"开户时间\", \"账户状态\"],\n        filterVal: [\"accountName\", \"channelTypeStatus\", \"depositCopy\", \"notAccountEntryCopy\", \"availablePaymentCopy\", \"freezePaymentCopy\", \"createByName\", \"createTime\", \"_accountStatus\"]\n      });\n    },\n    //导出\n    exportExcel: function exportExcel(obj) {\n      var _this5 = this;\n\n      require.ensure([], function () {\n        var _require = require(\"@/vendor/Export2Excel\"),\n            export_json_to_excel = _require.export_json_to_excel,\n            export_table_to_excel = _require.export_table_to_excel;\n\n        var tHeader = obj.tHeader; // 上面设置Excel的表格第一行的标题\n\n        var filterVal = obj.filterVal; // 上面的index、nickName、name是tableData里对象的属性\n\n        var list = obj.checkedTableData; //把data里的tableData存到list\n\n        var data = _this5.formatJson(filterVal, list);\n\n        export_json_to_excel(tHeader, data, obj.title);\n      });\n    },\n    formatJson: function formatJson(filterVal, jsonData) {\n      return jsonData.map(function (v) {\n        return filterVal.map(function (j) {\n          return v[j];\n        });\n      });\n    },\n    tableCheckChange: function tableCheckChange(val) {\n      this.checkedTableData = val;\n    },\n\n    /**\r\n     *\r\n     */\n    fnDialogTableVisible: function fnDialogTableVisible() {\n      console.log(this.ls);\n      this.workOrderPoolAssign();\n      this.dialogTableVisible = false;\n    },\n    // 点击页数\n    handleCurrentChange: function handleCurrentChange(pageIndex) {\n      this.filtersData.pageIndex = pageIndex;\n      this.getList();\n    },\n    // 点击每页多少条数\n    handleSizeChange: function handleSizeChange(pageSize) {\n      this.filtersData.pageSize = pageSize;\n      this.getList();\n    },\n\n    /**\r\n     * 获取table列表\r\n     */\n    getList: function getList() {\n      var _this6 = this;\n\n      var that = this;\n      this.request(that.api.financial.channelDepositAccount_list, this.filtersData).then(function (res) {\n        that.getList_data = res;\n        res.dataList.data.forEach(function (item) {\n          item.channelTypeStatus = _this6.channelTypeStatusList[item.channelTypeStatus];\n          item.createTime = _this6.$options.filters.timestampToTime(item.createTime);\n          item._accountStatus = _this6.accountStatusList[item.accountStatus];\n        });\n      });\n    },\n\n    /**\r\n     * 获取渠道押金账户管理列表\r\n     */\n    getChannelList_data: function getChannelList_data() {\n      var that = this;\n      this.request(that.api.financial.channelDepositAccount_channelList, {\n        \"pageIndex\": null,\n        \"pageSize\": null\n      }).then(function (res) {\n        that.channelList_data = res;\n      });\n    },\n\n    /**\r\n     * 查询门店销售订单列表\r\n     */\n    storeRetailOrder_pcListStatistics: function storeRetailOrder_pcListStatistics() {\n      var that = this;\n      this.request(that.api.store.storeRetailOrder_pcListStatistics, this.filtersData).then(function (res) {\n        that.storeRetailOrder_pcListStatistics_data = res;\n      });\n    },\n\n    /**\r\n     * 跳转工单详情\r\n     */\n    href: function href(routeName, param) {\n      var module = this.$route.path.split(\"/\")[1];\n      this.$router.push({\n        path: \"/\" + module + routeName,\n        query: param\n      });\n    },\n\n    /**\r\n     * 提示\r\n     * @param { String } message 提示文案\r\n     * @param { String } type 提示类型\r\n     */\n    warn: function warn(message, type) {\n      this.$message({\n        message: message,\n        type: type || 'success'\n      });\n    },\n\n    /**\r\n     * 模糊搜索\r\n     */\n    handleSearch: function handleSearch() {\n      this.filtersData.pageIndex = 1;\n      this.getList();\n    },\n\n    /**\r\n     * 搜索重置\r\n     */\n    handleResetFilters: function handleResetFilters() {\n      Object.assign(this.filtersData, {\n        \"filter\": null,\n        // 模糊搜索\n        \"accountStatus\": null,\n        // 账户状态\n        \"channelTypeName\": null,\n        // 渠道类型名称\n        \"channelTypeStatus\": null,\n        // 渠道类型状态\n        \"orderBy\": \"\",\n        // 排序\n        pageIndex: 1,\n        pageSize: 10,\n        \"pageStart\": 0\n      });\n    }\n  },\n  components: {\n    ElUploadImg: ElUploadImg,\n    codeSet: codeSet\n  }\n};",{"version":3,"sources":["cashPledge.vue"],"names":[],"mappings":"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","sourcesContent":["\r\n<template>\r\n  <div>\r\n    <!-- 新增押金账户 -->\r\n    <el-dialog width=\"750px\" title=\"新增押金账户\" :visible.sync=\"dialogTableVisible\">\r\n      <p>&nbsp;&nbsp;&nbsp;&nbsp;请选择开通渠道商户：</p>\r\n      <el-table :data=\"channelList_data.data\" max-height=\"350\" class=\"mt-10\">\r\n        <el-table-column label=\"单选\" align=\"center\" min-width=\"30\">\r\n          <template slot-scope=\"scope\">\r\n            <el-radio-group v-model=\"checkCashPledgeUser\">\r\n              <el-radio :disabled=\"scope.row.status == 9\" :label=\"scope.row\">&nbsp;</el-radio>\r\n            </el-radio-group>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"渠道名称\" align=\"center\" min-width=\"90\">\r\n          <template slot-scope=\"scope\">{{ scope.row.name }}</template>\r\n        </el-table-column>\r\n        <el-table-column label=\"渠道类型\" align=\"center\" min-width=\"90\">\r\n          <template slot-scope=\"scope\">零售商</template>\r\n        </el-table-column>\r\n        <el-table-column label=\"所在省/直辖市\" align=\"center\" min-width=\"90\">\r\n          <template slot-scope=\"scope\">{{ scope.row.provinceName }}</template>\r\n        </el-table-column>\r\n        <el-table-column label=\"市/区\" align=\"center\" min-width=\"90\">\r\n          <template slot-scope=\"scope\">{{ scope.row.cityName }}</template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogTableVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleDialogMap\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n    <!-- 充值弹框 -->\r\n    <el-dialog title=\"充值\" width=\"600px\" :visible.sync=\"dialogForm\" v-if=\"dialogForm\">\r\n      <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"170px\">\r\n        <el-form-item label=\"充值账户：\" prop=\"accountName\">{{ ruleForm.accountName }}</el-form-item>\r\n        <el-form-item label=\"充值金额：\" prop=\"notAccountEntryCopy\">\r\n          <el-input v-model=\"ruleForm.notAccountEntryCopy\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"付款方式：\" prop=\"paymentMethod\">\r\n          <el-select v-model=\"ruleForm.paymentMethod\">\r\n            <el-option v-for=\"(item, index) in payList\" :key=\"index\" :label=\"item.name\" :value=\"item.code\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"付款账户：\" prop=\"paymentAccount\">\r\n          <el-input v-model=\"ruleForm.paymentAccount\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"上传付款凭证：\" prop=\"storeImgs_list\" res=\"uploadElement\">\r\n          <el-upload-img\r\n            v-model=\"ruleForm.storeImgs_list\"\r\n            :EchoDisplayImages=\"ruleForm.storeImgs_list\"\r\n            CatalogName=\"store\"\r\n            :imgApi=\"imgApi\"\r\n            :describe=\"storeImgs_describe\"\r\n            :LssUpimgLimit=\"LssUpimgLimit\"\r\n          ></el-upload-img>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogForm = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n    <!-- 模糊搜索 -->\r\n    <div class=\"item-margin\">\r\n      <el-form class=\"item-form\" size=\"small\" :inline=\"true\" :model=\"filtersData\">\r\n        <!-- 模糊查询 -->\r\n        <el-form-item label=\"模糊查询：\">\r\n          <el-input\r\n            v-model=\"filtersData.filter\"\r\n            @keyup.enter.native=\"handleSearch\"\r\n            style=\"width:310px;\"\r\n            placeholder=\"账户名称/开户人\"\r\n            clearable\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"渠道类型：\">\r\n          <el-select v-model=\"filtersData.channelTypeStatus\" clearable filterable>\r\n            <el-option\r\n              v-for=\"(item, index) in channelTypeStatusList\"\r\n              :label=\"item\"\r\n              :key=\"index\"\r\n              :value=\"index\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <!-- 新增 -->\r\n        <el-form-item label=\"账户状态：\">\r\n          <el-select v-model=\"filtersData.accountStatus\" clearable filterable>\r\n            <el-option\r\n              v-for=\"(item, index) in accountStatusList\"\r\n              :label=\"item\"\r\n              :key=\"index\"\r\n              :value=\"index\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <!-- 搜索，重置 -->\r\n        <el-form-item>\r\n          <el-button @click=\"handleSearch\" type=\"primary\" plain size=\"small\">搜索</el-button>\r\n          <el-button @click=\"handleResetFilters\" size=\"small\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n    <!-- 模糊搜索 -->\r\n    <!-- 列表 -->\r\n    <div class=\"box\">\r\n      <el-button size=\"small\" type=\"primary\" @click=\"dialogTableVisible = true\">新增押金账户</el-button>\r\n      <el-button size=\"small\" @click=\"exportExcelOrder\">导出</el-button>\r\n      <el-table\r\n        :data=\"getList_data.dataList.data\"\r\n        stripe\r\n        empty-text=\"暂无数据\"\r\n        header-align=\"center\"\r\n        header-row-class-name=\"item-table-header\"\r\n        @selection-change=\"tableCheckChange\"\r\n        :highlight-current-row=\"true\"\r\n        class=\"mt-10\">\r\n        <el-table-column type=\"selection\" width=\"45\"></el-table-column>\r\n        <el-table-column align=\"left\" :show-overflow-tooltip=\"true\" label=\"账户名称\" min-width=\"130\">\r\n          <template slot-scope=\"scope\">{{ scope.row.accountName || '--' }}</template>\r\n        </el-table-column>\r\n        <el-table-column align=\"left\" :show-overflow-tooltip=\"true\" label=\"渠道类型\" min-width=\"60\">\r\n          <template slot-scope=\"scope\">{{ scope.row.channelTypeStatus  }}</template>\r\n        </el-table-column>\r\n        <el-table-column align=\"left\" :show-overflow-tooltip=\"true\" label=\"押金货款\" min-width=\"60\">\r\n          <template slot-scope=\"scope\">{{ scope.row.depositCopy  }}</template>\r\n        </el-table-column>\r\n        <el-table-column :show-overflow-tooltip=\"true\" align=\"left\" label=\"充值未入账金额\" min-width=\"90\">\r\n          <template slot-scope=\"scope\">{{ scope.row.notAccountEntryCopy }}</template>\r\n        </el-table-column>\r\n        <el-table-column align=\"left\" :show-overflow-tooltip=\"true\" label=\"可用货款\" min-width=\"60\">\r\n          <template slot-scope=\"scope\">{{ scope.row.availablePaymentCopy }}</template>\r\n        </el-table-column>\r\n        <el-table-column align=\"left\" :show-overflow-tooltip=\"true\" label=\"冻结货款\" min-width=\"60\">\r\n          <template slot-scope=\"scope\">{{ scope.row.freezePaymentCopy }}</template>\r\n        </el-table-column>\r\n        <el-table-column align=\"left\" :show-overflow-tooltip=\"true\" label=\"开户人\" min-width=\"60\">\r\n          <template slot-scope=\"scope\">{{ scope.row.createByName || '--' }}</template>\r\n        </el-table-column>\r\n        <el-table-column align=\"left\" :show-overflow-tooltip=\"true\" label=\"开户时间\" min-width=\"120\">\r\n          <template slot-scope=\"scope\">{{ scope.row.createTime }}</template>\r\n        </el-table-column>\r\n        <!-- 新增 -->\r\n        <el-table-column align=\"left\" :show-overflow-tooltip=\"true\" label=\"账户状态\" min-width=\"60\">\r\n          <template slot-scope=\"scope\">{{ scope.row._accountStatus }}</template>\r\n        </el-table-column>\r\n        <!-- 操作 -->\r\n        <el-table-column\r\n          fixed=\"right\"\r\n          label-class-name=\"text-left\"\r\n          class-name=\"text-left\"\r\n          align=\"left\"\r\n          label=\"操作\"\r\n          width=\"110\"\r\n        >\r\n          <template slot-scope=\"scope\">\r\n            <el-button\r\n              type=\"text\"\r\n              @click=\"recharge(scope.row)\"\r\n              size=\"small\"\r\n            >充值</el-button>\r\n            <el-button\r\n              type=\"text\"\r\n              @click=\"open(scope.row)\"\r\n              size=\"small\"\r\n            >{{ scope.row.accountStatus ? '停用' : '启用' }}</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <div\r\n        class=\"pagination mt-10\"\r\n        :class=\"{ 'justify-content': getList_data.dataList.data && getList_data.dataList.data.length > 0 }\">\r\n        <div v-if=\"getList_data.dataList.data && getList_data.dataList.data.length > 0\">\r\n          累计渠道数：\r\n          <span>{{ getList_data.info.channelCount }}</span>累计押金金额：\r\n          <span>￥{{ getList_data.info.depositSum }}</span>累计冻结货款：\r\n          <span>￥{{ getList_data.info.freezePaymentSum }}</span>\r\n        </div>\r\n        <!-- 分页 -->\r\n        <el-pagination\r\n          class=\"mr-20\"\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page=\"filtersData.pageIndex\"\r\n          :page-sizes=\"[10,20,30,40,50]\"\r\n          :page-size=\"filtersData.pageSize\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"getList_data.dataList.totalCount\"\r\n        ></el-pagination>\r\n      </div>\r\n    </div>\r\n    <!-- 列表 -->\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\nimport ElUploadImg from \"@/components/uploadImg/el_upload_img_multi\";\r\nimport codeSet from '@/components/codeSet'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 支付方式\r\n      payList:[],\r\n      // 上传图片路径\r\n      imgApi:this.api.content.aLiYun_upload,\r\n      LssUpimgLimit:1,\r\n      // 上传图片描述\r\n      storeImgs_describe:'',\r\n      // 新增押金账号弹框\r\n      dialogTableVisible: false,\r\n      // 新增的押金账户\r\n      checkCashPledgeUser: {},\r\n      // 充值弹框\r\n      dialogForm: false,\r\n      // 充值对象\r\n      recharge_obj:{},\r\n      // 账户状态\r\n      accountStatusList: {\r\n        0: \"已停用\",\r\n        1: \"已启用\"\r\n      },\r\n      // 渠道类型状态\r\n      channelTypeStatusList: {\r\n        1: \"零售商\",\r\n        2: \"经销商\"\r\n      },\r\n      // data数据\r\n      getList_data: {},\r\n      // 渠道商列表\r\n      channelList_data: {},\r\n      // 订单数据统计\r\n      storeRetailOrder_pcListStatistics_data: {},\r\n      // 选中的表格数据\r\n      checkedTableData: [],\r\n      // 获取门店信列表\r\n      getStoreList_data: [],\r\n      formInline: {\r\n        user: \"\",\r\n        region: \"\"\r\n      },\r\n      // 充值\r\n      ruleForm: {\r\n        id:'',\r\n        \"accountStatus\": 1, // 账户状态\r\n        \"channelTypeName\":'零售商', // 渠道类型名称\r\n        \"channelTypeStatus\": 1, // 渠道类型状态\r\n        receiptTypeName:'押金充值',\r\n        receiptTypeStatus:'01',\r\n        channelId:'',// 渠道id\r\n        accountName:'',// 充值账户\r\n        notAccountEntryCopy: '',// 充值金额\r\n        paymentMethod:'',// 付款方式\r\n        paymentAccount:'',// 付款账户\r\n        annex:'',// 上传付款凭证\r\n        storeImgs_list:[]// 上传附件地址\r\n      },\r\n      rules: {\r\n        notAccountEntryCopy: [{ required: true,validator: (rule, value, callback) => {\r\n          if(!value) {\r\n            callback(new Error('请输入付款金额！'));\r\n          }else{    \r\n            const reg = /^\\d+(\\.\\d{1,2})?$/g;\r\n            if(reg.test(value)) {\r\n             callback();\r\n            }else{\r\n              callback(new Error('请输入正确的金额！'));\r\n            }\r\n          }\r\n        }, trigger: 'change' }],\r\n        paymentMethod: [{ required: true, message: '请选择付款方式！', trigger: 'change' }],\r\n        paymentAccount: [{ required: true, message: '请输入付款账户！', trigger: 'change' }],\r\n        storeImgs_list: [{type:'array', required: true, message: '请上传付款凭证！', trigger: 'change' }],\r\n      },\r\n      filtersData: {\r\n        \"filter\": null, // 模糊搜索\r\n       \t\"accountStatus\": null, // 账户状态\r\n\t      \"channelTypeName\": null, // 渠道类型名称\r\n        \"channelTypeStatus\": null, // 渠道类型状态\r\n\t      \"orderBy\": \"\", // 排序\r\n        pageIndex: 1,\r\n        pageSize: 10,\r\n        \"pageStart\": 0\r\n      },\r\n      info:null\r\n    };\r\n  },\r\n  computed:{\r\n    storeImgs_list() {\r\n      return this.ruleForm.storeImgs_list;\r\n    }\r\n  },\r\n  watch:{\r\n    /**\r\n     * 监听上传附件图片\r\n     */\r\n    storeImgs_list(value) {\r\n      if(value && value.length > 0) {\r\n        this.$refs.ruleForm.clearValidate('storeImgs_list');\r\n      }else{\r\n        this.$refs.ruleForm.validateField('storeImgs_list');\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    const that = this;\r\n\r\n    this.getList();\r\n    this.getChannelList_data();\r\n    this.userinfo();\r\n    // 获取所有字典内容\r\n    this.getAllCode();\r\n  },\r\n  methods: {\r\n     /**\r\n     * 获取字典项\r\n     */\r\n    getAllCode() {\r\n      this.request(\r\n        this.api.system.ALL_CODESET_POST,\r\n        {},\r\n        true\r\n      ).then(res => {\r\n        res.forEach((item, index) => {\r\n          switch(item.name) {\r\n            case 'COM003':\r\n              // 门店类型列表\r\n              item.codeItemList.forEach((itemk, indexk) => {\r\n                itemk.checked = false;\r\n              });\r\n              this.payList = item.codeItemList;\r\n              break;\r\n          }\r\n        });\r\n      });\r\n    },\r\n    async userinfo() {\r\n      this.info = await this.request(this.api.user.get_userinfo, {}, true); // 获取用户信息\r\n    },\r\n    /**\r\n     * 新增押金账户\r\n     */\r\n    handleDialogMap() {\r\n      if(JSON.stringify(this.checkCashPledgeUser) != '{}') {\r\n        this.request(\r\n          this.api.financial.channelDepositAccount_save,\r\n        {\r\n          \"accountName\": this.checkCashPledgeUser.name, // 渠道账户名称 \r\n          \"accountStatus\": 1, // 账户状态\r\n          \"channelId\": this.checkCashPledgeUser.id, // 渠道ID\r\n          \"channelTypeName\":'零售商', // 渠道类型名称\r\n          \"channelTypeStatus\": 1, // 渠道类型状态\r\n          \"createByName\": this.info.name, // 开户人名称\r\n        }\r\n      ).then(\r\n        res => {\r\n          this.checkCashPledgeUser = {};\r\n          this.dialogTableVisible = false;\r\n          this.warn('新增押金账号成功！');\r\n          this.getList();\r\n          this.getChannelList_data();\r\n        }\r\n      );\r\n     \r\n      }else{\r\n        this.warn('请选择添加的账户！');\r\n      };\r\n    },\r\n    /** \r\n     * 充值弹框\r\n     */\r\n    recharge(obj) {\r\n      this.dialogForm = true;\r\n      this.ruleForm.accountName = obj.accountName;\r\n      this.ruleForm.channelId = obj.channelId;\r\n      this.ruleForm.id = obj.id;\r\n    },\r\n    // 充值\r\n    submitForm(formName) {\r\n      let data = JSON.parse(JSON.stringify(this.ruleForm)); \r\n      data.annex = data.storeImgs_list[0] && data.storeImgs_list[0].url;\r\n      delete data.storeImgs_list;\r\n      this.$refs.ruleForm.validate((valid) => {\r\n        if (valid) {\r\n          this.request(\r\n            this.api.financial.channelDepositAccount_recharge,\r\n            data\r\n          ).then(res => {\r\n            this.checkCashPledgeUser = {};\r\n            this.dialogForm = false;\r\n            this.warn('充值成功！');\r\n            this.getList();\r\n            Object.assign(this.ruleForm, {\r\n              id:'',\r\n              \"accountStatus\": 1, // 账户状态\r\n              \"channelTypeName\":'零售商', // 渠道类型名称\r\n              \"channelTypeStatus\": 1, // 渠道类型状态\r\n              receiptTypeName:'押金充值',\r\n              receiptTypeStatus:'01',\r\n              channelId:'',// 渠道id\r\n              accountName:'',// 充值账户\r\n              notAccountEntryCopy: '',// 充值金额\r\n              paymentMethod:'',// 付款方式\r\n              paymentAccount:'',// 付款账户\r\n              annex:'',// 上传付款凭证\r\n              storeImgs_list:[]// 上传附件地址\r\n            });\r\n          });\r\n        }\r\n      });\r\n    },\r\n    // 取消充值\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields();\r\n    },\r\n    open(row) {\r\n      const text = row.accountStatus ? '停用押款账户后，渠道商将不可订货，确定停用吗？' : '确定启用吗？';\r\n\r\n      this.$confirm(text, '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.request(\r\n          this.api.financial.channelDepositAccount_save,\r\n        {\r\n          \"id\": row.id, // 渠道账户名称 \r\n          \"accountStatus\": row.accountStatus ? 0 : 1, // 账户状态\r\n        }\r\n      ).then(\r\n        res => {\r\n          this.getList();\r\n          this.$message({\r\n            type: 'success',\r\n            message: row.accountStatus ? '停用成功!' : '启用成功!'\r\n          });\r\n        }\r\n      );\r\n     \r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消!'\r\n        });          \r\n      });\r\n    },\r\n    /**\r\n     * 导出销售订单\r\n     */\r\n    exportExcelOrder() {\r\n      this.exportExcel({\r\n        title: \"押金账号列表\",\r\n        checkedTableData:\r\n          this.checkedTableData.length > 0\r\n            ? this.checkedTableData\r\n            : this.getList_data.dataList.data,\r\n        tHeader: [\r\n          \"账号名称\",\r\n          \"渠道类型\",\r\n          \"押金贷款\",\r\n          \"充值未入账金额\",\r\n          \"可用贷款\",\r\n          \"冻结货款\",\r\n          \"开户人\",\r\n          \"开户时间\",\r\n          \"账户状态\"\r\n        ],\r\n        filterVal: [\r\n          \"accountName\",\r\n          \"channelTypeStatus\",\r\n          \"depositCopy\",\r\n          \"notAccountEntryCopy\",\r\n          \"availablePaymentCopy\",\r\n          \"freezePaymentCopy\",\r\n          \"createByName\",\r\n          \"createTime\",\r\n          \"_accountStatus\"\r\n        ]\r\n      });\r\n    },\r\n    //导出\r\n    exportExcel(obj) {\r\n      require.ensure([], () => {\r\n        let {\r\n          export_json_to_excel,\r\n          export_table_to_excel\r\n        } = require(\"@/vendor/Export2Excel\");\r\n        let tHeader = obj.tHeader;\r\n        // 上面设置Excel的表格第一行的标题\r\n        let filterVal = obj.filterVal;\r\n        // 上面的index、nickName、name是tableData里对象的属性\r\n        let list = obj.checkedTableData; //把data里的tableData存到list\r\n        let data = this.formatJson(filterVal, list);\r\n        export_json_to_excel(tHeader, data, obj.title);\r\n      });\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => v[j]));\r\n    },\r\n    tableCheckChange(val) {\r\n      this.checkedTableData = val;\r\n    },\r\n    /**\r\n     *\r\n     */\r\n    fnDialogTableVisible() {\r\n      console.log(this.ls);\r\n      this.workOrderPoolAssign();\r\n      this.dialogTableVisible = false;\r\n    },\r\n    // 点击页数\r\n    handleCurrentChange(pageIndex) {\r\n      this.filtersData.pageIndex = pageIndex;\r\n      this.getList();\r\n    },\r\n    // 点击每页多少条数\r\n    handleSizeChange(pageSize) {\r\n      this.filtersData.pageSize = pageSize;\r\n      this.getList();\r\n    },\r\n    /**\r\n     * 获取table列表\r\n     */\r\n    getList() {\r\n      const that = this;\r\n\r\n      this.request(\r\n        that.api.financial.channelDepositAccount_list,\r\n        this.filtersData\r\n      ).then(res => {\r\n          that.getList_data = res;\r\n          res.dataList.data.forEach(item => {\r\n            item.channelTypeStatus = this.channelTypeStatusList[item.channelTypeStatus];\r\n            item.createTime = this.$options.filters.timestampToTime(item.createTime);\r\n            item._accountStatus = this.accountStatusList[item.accountStatus];\r\n          });\r\n        }\r\n      );\r\n    },\r\n    /**\r\n     * 获取渠道押金账户管理列表\r\n     */\r\n    getChannelList_data() {\r\n      const that = this;\r\n\r\n      this.request(\r\n        that.api.financial.channelDepositAccount_channelList,\r\n        {\r\n          \"pageIndex\": null,\r\n\t        \"pageSize\": null,\r\n        }\r\n      ).then(\r\n        res => {\r\n          that.channelList_data = res;\r\n        }\r\n      );\r\n    },\r\n    /**\r\n     * 查询门店销售订单列表\r\n     */\r\n    storeRetailOrder_pcListStatistics() {\r\n      const that = this;\r\n\r\n      this.request(\r\n        that.api.store.storeRetailOrder_pcListStatistics,\r\n        this.filtersData\r\n      ).then(res => {\r\n        that.storeRetailOrder_pcListStatistics_data = res;\r\n      });\r\n    },\r\n    /**\r\n     * 跳转工单详情\r\n     */\r\n    href(routeName, param) {\r\n      let module = this.$route.path.split(\"/\")[1];\r\n\r\n      this.$router.push({\r\n        path: \"/\" + module + routeName,\r\n        query: param\r\n      });\r\n    },\r\n    /**\r\n     * 提示\r\n     * @param { String } message 提示文案\r\n     * @param { String } type 提示类型\r\n     */\r\n    warn(message, type) {\r\n      this.$message({\r\n        message: message,\r\n        type: type || 'success'\r\n      });\r\n    },\r\n    /**\r\n     * 模糊搜索\r\n     */\r\n    handleSearch() {\r\n      this.filtersData.pageIndex = 1;\r\n      this.getList();\r\n    },\r\n    /**\r\n     * 搜索重置\r\n     */\r\n    handleResetFilters() {\r\n      Object.assign(this.filtersData, {\r\n        \"filter\": null, // 模糊搜索\r\n       \t\"accountStatus\": null, // 账户状态\r\n\t      \"channelTypeName\": null, // 渠道类型名称\r\n        \"channelTypeStatus\": null, // 渠道类型状态\r\n\t      \"orderBy\": \"\", // 排序\r\n        pageIndex: 1,\r\n        pageSize: 10,\r\n        \"pageStart\": 0\r\n      });\r\n    }\r\n  },\r\n  components: {\r\n    ElUploadImg,\r\n    codeSet\r\n  }\r\n};\r\n</script>\r\n<style  lang=\"less\" scoped>\r\n.el-dialog__body .el-input /deep/ .el-input__inner{\r\n  width: 198px;\r\n}\r\n.demo-ruleForm{\r\n  width: 750px;\r\n}\r\n.justify-content {\r\n  justify-content: space-between;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n  span {\r\n    margin-right: 15px;\r\n  }\r\n}\r\n.box {\r\n  padding: 20px;\r\n  margin: 8px;\r\n  background: #fff;\r\n}\r\n.blueness {\r\n  color: #1e90ff;\r\n}\r\n.warningType {\r\n  width: 20px;\r\n  height: 20px;\r\n  line-height: 20px;\r\n  display: inline-block;\r\n  background: red;\r\n  color: #fff;\r\n  font-size: 12px;\r\n  border-radius: 4px;\r\n  margin-left: 10px;\r\n  text-align: center;\r\n}\r\n.color {\r\n  background: #ff6347;\r\n}\r\nh5 {\r\n  color: #222;\r\n  margin-left: -15px;\r\n}\r\n.test {\r\n  color: #9d9d9d;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/fmis/fund"}]}