{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\fmis\\cycle\\cycle.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\fmis\\cycle\\cycle.vue","mtime":1572415124937},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\EDZ\\\\Desktop\\\\\\u7814\\u53D1\\u9879\\u76EE\\\\vue-project\\\\trunk\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { constants } from \"crypto\";\nexport default {\n  data: function data() {\n    return {\n      signData: {\n        //组织机构Id集合(包括直属机构还有关联机构)\n        organizationIds: [],\n        //当前页数\n        pageIndex: 1,\n        //每页要显示的数据条数,默认10条\n        pageSize: 10\n      },\n      //得到权限Code\n      codeData: [],\n      //存储表格选择项改变时的数据\n      multipleSelectionData: [],\n      //表格数据\n      tableData: [],\n      //总条数\n      totalCount: 1,\n      //标识是否显示新增对账周期表单\n      showCycleFrom: false,\n      //新增表单数据\n      cycleFromData: {\n        //对账周期名称\n        name: '',\n        //对账周期Code\n        taskCode: '',\n        //店铺类型Code\n        merchantType: \"\",\n        //上传给后台的自定义日期\n        nodeDays: '',\n        //标识选择的结算日期\n        tagDays: [],\n        //适用门店Id\n        merchantId: '',\n        //适用门店name\n        merchant: '',\n        //组织机构id\n        organizationId: ''\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: \"对账周期名称不能为空\",\n          trigger: \"blur\"\n        }],\n        taskCode: [{\n          required: true,\n          message: \"对账周期不能为空\",\n          trigger: \"change\"\n        }],\n        merchantType: [{\n          required: true,\n          message: \"店铺类型不能为空\",\n          trigger: \"change\"\n        }],\n        tagDays: [{\n          required: true,\n          message: \"自定义结算日不能为空\",\n          trigger: \"change\"\n        }],\n        merchantId: [{\n          required: true,\n          message: \"适用门店不能为空\",\n          trigger: \"change\"\n        }]\n      },\n      //标识店铺类型是否有数据\n      storeState: false,\n      //标识自定义日期是否显示\n      tagDaysState: false,\n      //结算日期数组\n      dayArr: [],\n      //得到对账周期数据\n      statementCycleTypeListData: [],\n      //店铺类型数据\n      storeData: [],\n      //得到适用门店数据\n      merchantStoreData: [],\n      // 选中的日期\n      dayArrChecked: '',\n      placeholderStr: '请选择',\n      //标识是新增还是编辑\n      tag: '',\n      title: \"新增对账周期配置\"\n    };\n  },\n  filters: {\n    //过滤常规结算周期\n    filterTaskCode: function filterTaskCode(val) {\n      switch (val) {\n        case '05001':\n          return '日结';\n          break;\n\n        case '05002':\n          return '周结';\n          break;\n\n        case '05004':\n          return '月结';\n          break;\n\n        case '05010':\n          return '自定义';\n          break;\n\n        default:\n          return '--';\n          break;\n      }\n    },\n    //过滤店铺类型\n    filterMerchantType: function filterMerchantType(val) {\n      switch (val) {\n        case '06002':\n          return '网销店铺';\n          break;\n\n        case '06001':\n          return '零售店铺';\n          break;\n\n        default:\n          return '--';\n          break;\n      }\n    }\n  },\n  mounted: function mounted() {\n    //得到日期数据\n    this.getDataArr(); //得到组织机构数据\n\n    this.getOrganizationListData(); //得到对账周期数据\n\n    this.getStatementCycleTypeListData(); //得到店铺数据\n\n    this.getStoreTypeListData();\n  },\n  methods: {\n    //得到组织机构数据\n    getOrganizationListData: function () {\n      var _getOrganizationListData = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        var info;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.request(this.api.user.get_userinfo, {}, true);\n\n              case 2:\n                info = _context.sent;\n                console.log(info); //得到部门Id\n                // this.signData.relationDepId = info.departId;\n                //得到当前登录人的直属机构id\n\n                this.request(this.api.user.userCompany_getUserOrgByUserId, {\n                  userId: info.userId,\n                  type: 0\n                }).then(function (data) {\n                  console.log(data); //得到机构id\n\n                  _this.cycleFromData.organizationId = data.id;\n                }); //得到关联机构（type-0 机构 type-1 部门）\n\n                this.request(this.api.user.userCompany_getUserAllDepartByUserId, {\n                  userId: info.userId,\n                  type: 0\n                }).then(function (data) {\n                  //得到组织机构数据\n                  _this.organizationListData = data;\n                  console.log(data);\n                  _this.signData.organizationIds = [];\n                  data.forEach(function (item) {\n                    _this.signData.organizationIds.push(item.id);\n                  }); //得到列表数据\n\n                  _this.getCycleListData();\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getOrganizationListData() {\n        return _getOrganizationListData.apply(this, arguments);\n      }\n\n      return getOrganizationListData;\n    }(),\n    // 得到code码，用来限制是否显示按钮\n    getCodeLimitToBtnStatus: function getCodeLimitToBtnStatus(codeId) {\n      var _this2 = this;\n\n      this.request(this.api.user.crm_userCompany_authList, {\n        menuId: codeId\n      }).then(function (res) {\n        console.log(res);\n        _this2.codeData = res;\n      });\n    },\n    //结算日期的item的点击事件\n    dayArrItemClickEvent: function dayArrItemClickEvent(item) {\n      var _this3 = this;\n\n      item.flag = !item.flag;\n      this.$nextTick(function () {\n        _this3.placeholderStr = '';\n        _this3.cycleFromData.tagDays = _this3.dayArr.filter(function (item) {\n          return item.flag;\n        });\n\n        _this3.cycleFromData.tagDays.forEach(function (item) {\n          item.day = item.id + \"日\";\n        });\n      });\n    },\n    //得到自定义结算日数据\n    getDataArr: function getDataArr() {\n      //添加日期数组\n      var ary = [];\n\n      for (var i = 0; i < 28; i++) {\n        var str = null;\n\n        if (i < 9) {\n          str = \"0\" + (i + 1);\n        } else {\n          str = i + 1 + \"\";\n        }\n\n        ary[i] = {\n          id: str,\n          flag: false\n        };\n      }\n\n      this.dayArr = ary;\n    },\n    //得到列表数据\n    getCycleListData: function getCycleListData() {\n      var _this4 = this;\n\n      this.request(this.api.financial.financialConfig_list, this.signData).then(function (data) {\n        console.log(data);\n        _this4.totalCount = data.totalCount;\n        _this4.tableData = data.data;\n      }); //得到按钮操作权限数据\n\n      this.getCodeLimitToBtnStatus(this.$route.meta.currentid);\n    },\n    storeFocus: function storeFocus() {\n      console.log(\"changStoreNamr........\");\n\n      if (!this.cycleFromData.merchantType) {\n        this.storeState = true;\n      } else {\n        console.log(\"fale===========\");\n        this.storeState = false;\n      }\n    },\n    //得到对账周期数据\n    getStatementCycleTypeListData: function getStatementCycleTypeListData() {\n      var _this5 = this;\n\n      this.request(this.api.financial.financialBase_statementCycleTypeList, {}).then(function (data) {\n        console.log(data);\n        _this5.statementCycleTypeListData = data;\n      });\n    },\n    //得到店铺类型数据\n    getStoreTypeListData: function getStoreTypeListData() {\n      var _this6 = this;\n\n      this.request(this.api.financial.financialBase_merchantTypeList, {}).then(function (data) {\n        console.log(data);\n        _this6.storeData = data;\n      });\n    },\n    //得到适用门店数据\n    getMerchantStoreListByType: function getMerchantStoreListByType(organizationId, merchantType) {\n      var _this7 = this;\n\n      this.request(this.api.financial.financialBase_merchantListByType, {\n        organizationId: organizationId,\n        merchantType: merchantType\n      }).then(function (data) {\n        console.log(data);\n        data.forEach(function (item) {\n          if (item.storeName) {\n            item.name = item.storeName;\n          }\n        });\n        _this7.merchantStoreData = data;\n      });\n    },\n    //switch改变时的事件\n    switchChangeState: function switchChangeState(row) {\n      console.log(row);\n\n      if (row.valid) {\n        var time = this.$options.filters.timestampToTimeOfSwitchToStart(new Date());\n        this.showMessageBox(\"启用后，账单生成开始时间为\" + time, row.id, row.valid);\n      } else {\n        var time = this.$options.filters.timestampToTimeOfSwitchToEnd(new Date());\n        this.showMessageBox(\"停用后，系统会把之前未对账的交易生成对账单,上次账单生成结束时间\" + time, row.id, row.valid);\n      }\n    },\n    //输入\n    nameInputChangeValue: function nameInputChangeValue(val) {\n      if (val.length > 20) {\n        this.cycleFromData.name = val.substr(0, 20);\n      }\n    },\n    //切换对账周期的事件\n    changeTaskCode: function changeTaskCode(val) {\n      this.placeholderStr = '请选择';\n\n      if (val != '05010') {\n        this.cycleFromData.tagDays = [];\n        this.dayArr.forEach(function (item) {\n          item.flag = false;\n        });\n        this.tagDaysState = false;\n      } else {\n        this.tagDaysState = true;\n      }\n    },\n    //切换店铺时的事件\n    changeStoreName: function changeStoreName(val) {\n      console.log(val);\n      this.storeState = false;\n      this.cycleFromData.merchantId = ''; //  this.cycleFromData.merchant=''\n      //清空适用门店数据\n\n      this.getMerchantStoreListByType(this.cycleFromData.organizationId, val);\n    },\n    //适用门店的选择事件\n    changeMarchantName: function changeMarchantName(val) {\n      console.log(val);\n      this.storeState = false;\n      this.cycleFromData.merchant = this.merchantStoreData.find(function (item) {\n        return item.id == val;\n      }).name;\n    },\n    //新增\n    addBtnClickEvent: function addBtnClickEvent() {\n      console.log(\"addBtnClickEvent\"); //标识是新增还是编辑\n\n      this.tag = 'add';\n      this.title = '新增对账周期配置';\n      this.showCycleFrom = true;\n    },\n    //表格选择项改变时触发\n    selectionChange: function selectionChange(val) {\n      this.multipleSelectionData = val;\n    },\n    //编辑Btn的事件\n    editorBtnClick: function editorBtnClick(row) {\n      var _this8 = this;\n\n      //标识是新增还是编辑\n      this.tag = 'editor';\n      this.title = '编辑对账周期配置';\n      console.log(\"editorBtnClick....\");\n      this.request(this.api.financial.financialConfig_getByPrimary, {\n        configId: row.id\n      }).then(function (data) {\n        console.log(data);\n\n        if (data.taskCode == '05010') {\n          _this8.tagDaysState = true;\n        }\n\n        _this8.getMerchantStoreListByType(_this8.cycleFromData.organizationId, data.merchantType);\n\n        var tagDataArr = [];\n\n        if (data.nodeDays) {\n          var tagDays = data.nodeDays.split(',');\n          console.log(tagDays);\n          tagDays.forEach(function (item, index) {\n            tagDataArr.push({\n              id: item.substring(0, 2),\n              day: item,\n              flag: false\n            });\n          });\n          _this8.placeholderStr = '';\n          tagDataArr.forEach(function (item) {\n            _this8.dayArr.forEach(function (dateItem) {\n              if (item.id == dateItem.id) {\n                dateItem.flag = true;\n              }\n            });\n          });\n        }\n\n        _this8.$set(data, 'tagDays', tagDataArr);\n\n        _this8.cycleFromData = data;\n        _this8.showCycleFrom = true;\n      });\n    },\n    //删除Btn的事件\n    deleteBtnClick: function deleteBtnClick(row) {\n      var _this9 = this;\n\n      console.log(\"删除Btn的事件\");\n      this.$confirm('确认删除吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        _this9.request(_this9.api.financial.financialConfig_logicDelete, {\n          configId: row.id\n        }).then(function (data) {\n          console.log(data); //更新数据\n\n          _this9.getCycleListData();\n        });\n      }).catch(function () {\n        console.log(\"取消。。。。。。\");\n      });\n    },\n    //每页条数改变时 \n    handleSizeChange: function handleSizeChange(page) {\n      this.signData.pageSize = page;\n      this.getCycleListData();\n    },\n    //当前页改变时\n    handleCurrentChange: function handleCurrentChange(page) {\n      this.signData.pageIndex = page;\n      this.getCycleListData();\n    },\n    //取消\n    cancelClickEvent: function cancelClickEvent(cycleFromData) {\n      this.hideDialog();\n    },\n    //确定新增对账表单\n    sureAddFromOfCycle: function sureAddFromOfCycle() {\n      var _this10 = this;\n\n      if (this.cycleFromData.tagDays) {\n        var nodeDays = '';\n        this.cycleFromData.tagDays.forEach(function (item, index) {\n          if (index != _this10.cycleFromData.tagDays.length - 1) {\n            nodeDays += item.day + ',';\n          } else {\n            nodeDays += item.day;\n          }\n        });\n        this.cycleFromData.nodeDays = nodeDays;\n      }\n\n      this.$refs['cycleFromData'].validate(function (valid) {\n        if (valid) {\n          switch (_this10.tag) {\n            case 'add':\n              _this10.request(_this10.api.financial.financialConfig_insert, _this10.cycleFromData).then(function (data) {\n                console.log('新增保存成功。。。');\n                _this10.showCycleFrom = false; //刷新列表\n\n                _this10.getCycleListData();\n              });\n\n              break;\n\n            case 'editor':\n              _this10.request(_this10.api.financial.financialConfig_updateByPrimary, _this10.cycleFromData).then(function (data) {\n                console.log('编辑保存成功。。。');\n                _this10.showCycleFrom = false;\n\n                _this10.hideDialog(); //刷新列表\n\n\n                _this10.getCycleListData();\n              });\n\n              break;\n          }\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    //隐藏dialog\n    hideDialog: function hideDialog() {\n      console.log(\"hidePopover\");\n      this.$refs.cycleFromData.resetFields();\n      this.placeholderStr = '请选择';\n      this.storeState = false;\n      this.tagDaysState = false;\n      this.showCycleFrom = false;\n      this.tag = \"\";\n      this.cycleFromData.nodeDays = '';\n      this.merchantStoreData = [];\n      this.cycleFromData.merchant = ''; //对账周期名称\n\n      this.cycleFromData.name = '', //对账周期Code\n      this.cycleFromData.taskCode = '', //店铺类型Code\n      this.cycleFromData.merchantType = \"\", //标识选择的结算日期\n      this.cycleFromData.tagDays = [], //适用门店Id\n      this.cycleFromData.merchantId = '', this.dayArr.forEach(function (item) {\n        item.flag = false;\n      });\n    },\n    //显示信息提示框\n    showMessageBox: function showMessageBox(msg, configId, valid) {\n      var _this11 = this;\n\n      this.$confirm(msg, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        _this11.request(_this11.api.financial.financialConfig_updateValid, {\n          configId: configId,\n          symbol: valid\n        }).then(function (data) {\n          console.log(data);\n        });\n      }).catch(function () {\n        console.log(\"取消。。。。。。\");\n\n        _this11.tableData.forEach(function (item) {\n          if (item.id == configId) {\n            item.valid = !item.valid;\n          }\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["cycle.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"table_div\">\r\n      <el-button type=\"primary\" @click=\"addBtnClickEvent\" size=\"small\" v-auth=\"codeData\"\r\n      data-code=\"170101\">新增</el-button>\r\n      <el-table\r\n        ref=\"multipleTable\"\r\n        :data=\"tableData\"\r\n        tooltip-effect=\"dark\"\r\n        style=\"width: 100%\"\r\n        header-row-class-name=\"item-table-header\"\r\n        @selection-change=\"selectionChange\"\r\n      >\r\n        <!-- <el-table-column type=\"selection\"></el-table-column> -->\r\n        <el-table-column label=\"结算周期名称\">\r\n          <template slot-scope=\"scope\">{{ scope.row.name?scope.row.name:'--' }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop label=\"常规结算周期\">\r\n          <template slot-scope=\"scope\">{{ scope.row.taskCode | filterTaskCode}}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"nodeDays\" label=\"自定义结算周期\" show-overflow-tooltip>\r\n          <template slot-scope=\"scope\">{{ scope.row.nodeDays?scope.row.nodeDays:'--' }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"merchantType\" label=\"店铺类型\">\r\n          <template slot-scope=\"scope\">{{ scope.row.merchantType | filterMerchantType }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"merchant\" label=\"适用门店\">\r\n          <template slot-scope=\"scope\">{{ scope.row.merchant?scope.row.merchant:'--' }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"updateTime\" label=\"更新时间\">\r\n          <template slot-scope=\"scope\">{{ scope.row.updateTime | timestampToTime }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"valid\" label=\"启停状态\">\r\n          <template slot-scope=\"scope\">\r\n            <el-switch v-auth=\"codeData\"\r\n              data-code=\"170104\" v-model=\"scope.row.valid\" active-color=\"#13ce66\" inactive-color=\"#ff4949\" @change=\"switchChangeState(scope.row)\"></el-switch>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column fixed=\"right\" label=\"操作\" width=\"160\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button @click=\"editorBtnClick(scope.row)\" type=\"text\" size=\"small\" :disabled='scope.row.valid' v-auth=\"codeData\"\r\n              data-code=\"170102\">编辑</el-button>\r\n            <el-button @click=\"deleteBtnClick(scope.row)\" type=\"text\" size=\"small\" :disabled='scope.row.valid' v-auth=\"codeData\"\r\n              data-code=\"170103\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <div style=\"margin-top:20px;padding-bottom:10px;margin-right:20px;\">\r\n        <el-pagination\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page.sync=\"signData.pageIndex\"\r\n          :page-sizes=\"[10, 20, 30, 40]\"\r\n          :page-size=\"signData.pageSize\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"totalCount\"\r\n        ></el-pagination>\r\n      </div>\r\n    </div>\r\n    <el-dialog :title=\"title\" :visible.sync=\"showCycleFrom\" width=\"500px\" @close='hideDialog'>\r\n      <el-form :model=\"cycleFromData\" ref=\"cycleFromData\" :rules=\"rules\">\r\n        <el-form-item label=\"对账周期名称：\" label-width=\"120px\" prop=\"name\">\r\n          <el-input v-model=\"cycleFromData.name\" style=\"width:200px;\" placeholder=\"请输入内容\" @input=\"nameInputChangeValue\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"选择对账周期：\" label-width=\"120px\" prop='taskCode'>\r\n          <el-select v-model=\"cycleFromData.taskCode\" placeholder=\"请选择\" @change=\"changeTaskCode\">\r\n            <el-option v-for='item in statementCycleTypeListData' :key=\"item.id\" :label=\"item.description\" :value=\"item.code\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"自定义结算日：\" label-width=\"120px\" prop='tagDays' v-if=\"tagDaysState\">\r\n          <el-popover placement=\"bottom\" width=\"200\" trigger=\"click\">\r\n            <div class=\"day-arr-check input-w\" slot=\"reference\" style=\"height: 32px;border: 1px solid #DCDFE6;overflow-y: auto;border-radius:5px;\">\r\n              <el-tag\r\n                  v-for=\"tag in cycleFromData.tagDays\"\r\n                  :key=\"tag.id\"\r\n                  closable\r\n                  size=\"mini\"\r\n                  @close=\"dayArrItemClickEvent(tag)\"\r\n                  class='tag_date'\r\n              >\r\n                {{tag.day}}\r\n              </el-tag>\r\n              <i class=\"el-icon-arrow-down icon\"></i>\r\n              <span class='span_style'>{{placeholderStr}}</span>\r\n            </div>\r\n            <div class=\"list\">\r\n              <ul class=\"clearfix ul_style\">\r\n                <li v-for=\"item in dayArr\" :key=\"item.id\" class='li_style' @click=\"dayArrItemClickEvent(item)\" :class=\"{check : item.flag}\">{{ item.id }}</li>\r\n              </ul>\r\n            </div>\r\n          </el-popover>\r\n        </el-form-item>\r\n        <el-form-item label=\"适用店铺类型：\" label-width=\"120px\" prop='merchantType'>\r\n          <el-select v-model=\"cycleFromData.merchantType\" placeholder=\"请选择\" @change=\"changeStoreName\" :class=\"{store_type:storeState}\">\r\n            <el-option v-for='item in storeData' :key=\"item.id\" :label='item.description' :value='item.code'></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"适用门店：\" label-width=\"120px\" prop='merchantId'> \r\n          <el-select v-model=\"cycleFromData.merchantId\" placeholder=\"请选择\"  @focus=\"storeFocus\" @change=\"changeMarchantName\">\r\n            <el-option v-for='item in merchantStoreData' :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"cancelClickEvent('cycleFromData')\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"sureAddFromOfCycle\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { constants } from \"crypto\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      signData: {\r\n        //组织机构Id集合(包括直属机构还有关联机构)\r\n        organizationIds:[],\r\n        //当前页数\r\n        pageIndex: 1,\r\n        //每页要显示的数据条数,默认10条\r\n        pageSize: 10\r\n      },\r\n      //得到权限Code\r\n      codeData: [],\r\n      //存储表格选择项改变时的数据\r\n      multipleSelectionData: [],\r\n      //表格数据\r\n      tableData: [],\r\n      //总条数\r\n      totalCount: 1,\r\n      //标识是否显示新增对账周期表单\r\n      showCycleFrom: false,\r\n      //新增表单数据\r\n      cycleFromData: {\r\n        //对账周期名称\r\n        name:'',\r\n        //对账周期Code\r\n        taskCode:'',\r\n        //店铺类型Code\r\n        merchantType: \"\",\r\n        //上传给后台的自定义日期\r\n        nodeDays:'',\r\n        //标识选择的结算日期\r\n        tagDays: [],\r\n        //适用门店Id\r\n        merchantId: '',\r\n        //适用门店name\r\n        merchant:'',\r\n        //组织机构id\r\n        organizationId:'',\r\n      },\r\n      rules: {\r\n        name: [\r\n          { required: true, message: \"对账周期名称不能为空\", trigger: \"blur\" }\r\n        ],\r\n        taskCode: [\r\n          { required: true, message: \"对账周期不能为空\", trigger: \"change\" }\r\n        ],\r\n        merchantType: [\r\n          { required: true, message: \"店铺类型不能为空\", trigger: \"change\" }\r\n        ],\r\n        tagDays: [\r\n          { required: true, message: \"自定义结算日不能为空\", trigger: \"change\" }\r\n        ],\r\n        merchantId: [\r\n          { required: true, message: \"适用门店不能为空\", trigger: \"change\" }\r\n        ]\r\n      },\r\n      //标识店铺类型是否有数据\r\n      storeState:false,\r\n      //标识自定义日期是否显示\r\n      tagDaysState:false,\r\n      //结算日期数组\r\n      dayArr: [],\r\n      //得到对账周期数据\r\n      statementCycleTypeListData:[],\r\n      //店铺类型数据\r\n      storeData:[],\r\n      //得到适用门店数据\r\n      merchantStoreData:[],\r\n      // 选中的日期\r\n      dayArrChecked: '',\r\n      placeholderStr:'请选择',\r\n      //标识是新增还是编辑\r\n      tag:'',\r\n      title:\"新增对账周期配置\"\r\n    };\r\n  },\r\n  filters: {\r\n    //过滤常规结算周期\r\n    filterTaskCode(val){\r\n      switch (val) {\r\n        case '05001':\r\n          return '日结';\r\n          break;\r\n        case '05002':\r\n          return '周结';\r\n          break;\r\n        case '05004':\r\n          return '月结';\r\n          break;\r\n        case '05010':\r\n          return '自定义';\r\n          break;\r\n        default:\r\n          return '--';\r\n          break;\r\n      }\r\n    },\r\n    //过滤店铺类型\r\n    filterMerchantType(val){\r\n      switch (val) {\r\n        case '06002':\r\n          return '网销店铺';\r\n          break;\r\n        case '06001':\r\n          return '零售店铺';          \r\n          break;\r\n        default:\r\n          return '--';\r\n          break;\r\n      }\r\n    }, \r\n  },\r\n  mounted() {\r\n    //得到日期数据\r\n    this.getDataArr();\r\n    //得到组织机构数据\r\n    this.getOrganizationListData();\r\n    //得到对账周期数据\r\n    this.getStatementCycleTypeListData();\r\n    //得到店铺数据\r\n    this.getStoreTypeListData();\r\n  },\r\n  methods: {\r\n    //得到组织机构数据\r\n    async getOrganizationListData() {\r\n      let info = await this.request(this.api.user.get_userinfo, {}, true);\r\n      console.log(info);\r\n      //得到部门Id\r\n      // this.signData.relationDepId = info.departId;\r\n      //得到当前登录人的直属机构id\r\n      this.request(this.api.user.userCompany_getUserOrgByUserId, {\r\n        userId: info.userId,\r\n        type: 0\r\n      }).then(data => {\r\n        console.log(data);\r\n        //得到机构id\r\n        this.cycleFromData.organizationId=data.id;\r\n      });\r\n      //得到关联机构（type-0 机构 type-1 部门）\r\n      this.request(this.api.user.userCompany_getUserAllDepartByUserId, {\r\n        userId: info.userId,\r\n        type: 0\r\n      }).then(data => {\r\n        //得到组织机构数据\r\n        this.organizationListData=data;\r\n        console.log(data);\r\n        this.signData.organizationIds=[]\r\n        data.forEach(item => {\r\n          this.signData.organizationIds.push(item.id);\r\n        });\r\n        //得到列表数据\r\n        this.getCycleListData();\r\n      });\r\n    },\r\n    // 得到code码，用来限制是否显示按钮\r\n    getCodeLimitToBtnStatus(codeId) {\r\n      this.request(this.api.user.crm_userCompany_authList, {\r\n        menuId: codeId\r\n      }).then(res => {\r\n        console.log(res);\r\n        this.codeData = res;\r\n      });\r\n    },\r\n    //结算日期的item的点击事件\r\n    dayArrItemClickEvent(item){\r\n      item.flag = !item.flag\r\n      this.$nextTick(() => {\r\n        this.placeholderStr=''\r\n        this.cycleFromData.tagDays = this.dayArr.filter(item => {\r\n          return item.flag\r\n        })\r\n        this.cycleFromData.tagDays.forEach(item=>{\r\n          item.day=item.id+\"日\"\r\n        })\r\n      })\r\n    },\r\n    //得到自定义结算日数据\r\n    getDataArr(){\r\n      //添加日期数组\r\n      let ary = []\r\n      for (var i = 0; i < 28; i++) {\r\n        var str = null;\r\n        if (i < 9) {\r\n          str = \"0\" + (i + 1);\r\n        } else {\r\n          str = i + 1 + \"\";\r\n        }\r\n        ary[i] = {\r\n          id:str,\r\n          flag: false\r\n        };\r\n      }\r\n      this.dayArr = ary;\r\n    },\r\n    //得到列表数据\r\n    getCycleListData() {\r\n      this.request(this.api.financial.financialConfig_list, this.signData).then(\r\n        data => {\r\n          console.log(data);\r\n          this.totalCount = data.totalCount;\r\n          this.tableData = data.data;\r\n        }\r\n      );\r\n      //得到按钮操作权限数据\r\n      this.getCodeLimitToBtnStatus(this.$route.meta.currentid);\r\n    },\r\n    storeFocus(){\r\n      console.log(\"changStoreNamr........\")\r\n      if(!this.cycleFromData.merchantType){\r\n        this.storeState=true\r\n      }else{\r\n        console.log(\"fale===========\")\r\n        this.storeState=false\r\n      }\r\n    },\r\n    //得到对账周期数据\r\n    getStatementCycleTypeListData(){\r\n      this.request(this.api.financial.financialBase_statementCycleTypeList,{}).then(\r\n        data=>{\r\n          console.log(data)\r\n          this.statementCycleTypeListData=data\r\n        }\r\n      )\r\n    },\r\n    //得到店铺类型数据\r\n    getStoreTypeListData(){\r\n      this.request(this.api.financial.financialBase_merchantTypeList,{}).then(\r\n        data=>{\r\n          console.log(data)\r\n          this.storeData=data\r\n        }\r\n      )\r\n    },\r\n    //得到适用门店数据\r\n    getMerchantStoreListByType(organizationId,merchantType){\r\n      this.request(this.api.financial.financialBase_merchantListByType,{organizationId:organizationId,merchantType:merchantType}).then(\r\n        data=>{\r\n          console.log(data)\r\n          data.forEach(item=>{\r\n            if(item.storeName){\r\n              item.name=item.storeName\r\n            }\r\n          })\r\n          this.merchantStoreData=data\r\n        }\r\n      )\r\n    },\r\n    //switch改变时的事件\r\n    switchChangeState(row){\r\n     console.log(row)\r\n      if(row.valid){\r\n        var time=this.$options.filters.timestampToTimeOfSwitchToStart(new Date())\r\n        this.showMessageBox(\"启用后，账单生成开始时间为\"+time,row.id,row.valid)\r\n      }else{\r\n        var time=this.$options.filters.timestampToTimeOfSwitchToEnd(new Date())\r\n        this.showMessageBox(\"停用后，系统会把之前未对账的交易生成对账单,上次账单生成结束时间\"+time,row.id,row.valid)\r\n      }\r\n    },\r\n    //输入\r\n    nameInputChangeValue(val){\r\n      if (val.length > 20) {\r\n        this.cycleFromData.name = val.substr(0, 20);\r\n      }\r\n    },\r\n    //切换对账周期的事件\r\n    changeTaskCode(val){\r\n      this.placeholderStr='请选择'\r\n      if(val!='05010'){\r\n        this.cycleFromData.tagDays=[]\r\n        this.dayArr.forEach(item => {\r\n        item.flag=false\r\n      });\r\n        this.tagDaysState=false\r\n      }else{\r\n        this.tagDaysState=true\r\n      }\r\n    },\r\n    //切换店铺时的事件\r\n    changeStoreName(val){\r\n     console.log(val)\r\n     this.storeState=false\r\n     this.cycleFromData.merchantId=''\r\n    //  this.cycleFromData.merchant=''\r\n     //清空适用门店数据\r\n     this.getMerchantStoreListByType(this.cycleFromData.organizationId,val) \r\n    },\r\n    //适用门店的选择事件\r\n    changeMarchantName(val){\r\n     console.log(val)\r\n     this.storeState=false\r\n     this.cycleFromData.merchant=this.merchantStoreData.find(item=>item.id==val).name\r\n    },    \r\n    //新增\r\n    addBtnClickEvent() {\r\n      console.log(\"addBtnClickEvent\");\r\n      //标识是新增还是编辑\r\n      this.tag='add'\r\n      this.title='新增对账周期配置'\r\n      this.showCycleFrom = true;\r\n    },\r\n    //表格选择项改变时触发\r\n    selectionChange(val) {\r\n      this.multipleSelectionData = val;\r\n    },\r\n    //编辑Btn的事件\r\n    editorBtnClick(row) {\r\n      //标识是新增还是编辑\r\n      this.tag='editor'\r\n      this.title='编辑对账周期配置'\r\n      console.log(\"editorBtnClick....\");\r\n      this.request(this.api.financial.financialConfig_getByPrimary,{configId:row.id}).then(data=>{\r\n        console.log(data)\r\n        if(data.taskCode=='05010'){\r\n          this.tagDaysState=true\r\n        }\r\n        this.getMerchantStoreListByType(this.cycleFromData.organizationId,data.merchantType)\r\n        var tagDataArr=[]\r\n        if(data.nodeDays){\r\n          var tagDays=data.nodeDays.split(',')\r\n          console.log(tagDays)\r\n          tagDays.forEach((item,index) => {\r\n            tagDataArr.push({\r\n              id:item.substring(0,2),\r\n              day:item,\r\n              flag:false\r\n            })\r\n          });\r\n          this.placeholderStr=''\r\n          tagDataArr.forEach(item=>{\r\n            this.dayArr.forEach(dateItem => {\r\n              if(item.id==dateItem.id){\r\n                dateItem.flag=true\r\n              }\r\n            })\r\n          })\r\n        }\r\n\r\n        this.$set(data,'tagDays',tagDataArr)\r\n        this.cycleFromData=data\r\n        this.showCycleFrom = true;\r\n      })\r\n    },\r\n    //删除Btn的事件\r\n    deleteBtnClick(row) {\r\n      console.log(\"删除Btn的事件\");\r\n      this.$confirm('确认删除吗?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          this.request(this.api.financial.financialConfig_logicDelete,{configId:row.id}).then(data=>{\r\n            console.log(data)\r\n            //更新数据\r\n            this.getCycleListData()\r\n          })\r\n        }).catch(() => {\r\n          console.log(\"取消。。。。。。\")  \r\n        });\r\n    },\r\n    //每页条数改变时 \r\n    handleSizeChange(page) {\r\n      this.signData.pageSize = page;\r\n      this.getCycleListData();\r\n    },\r\n    //当前页改变时\r\n    handleCurrentChange(page) {\r\n      this.signData.pageIndex = page;\r\n      this.getCycleListData();\r\n    },\r\n    //取消\r\n    cancelClickEvent(cycleFromData){\r\n      this.hideDialog()\r\n    },\r\n    //确定新增对账表单\r\n    sureAddFromOfCycle() {\r\n      if(this.cycleFromData.tagDays){\r\n        var nodeDays=''\r\n        this.cycleFromData.tagDays.forEach((item,index)=>{\r\n          if(index!=this.cycleFromData.tagDays.length-1){\r\n            nodeDays+=item.day+','\r\n          }else{\r\n            nodeDays+=item.day\r\n          }\r\n        })\r\n        this.cycleFromData.nodeDays=nodeDays\r\n      }\r\n      this.$refs['cycleFromData'].validate((valid) => {\r\n        if (valid) {\r\n          switch(this.tag){\r\n            case 'add':\r\n              this.request(this.api.financial.financialConfig_insert,this.cycleFromData).then(data=>{\r\n                console.log('新增保存成功。。。')\r\n                this.showCycleFrom=false\r\n                //刷新列表\r\n                this.getCycleListData()\r\n              })\r\n              break;\r\n            case 'editor':\r\n                this.request(this.api.financial.financialConfig_updateByPrimary,this.cycleFromData).then(data=>{\r\n                  console.log('编辑保存成功。。。')\r\n                  this.showCycleFrom=false\r\n                  this.hideDialog()\r\n                  //刷新列表\r\n                  this.getCycleListData()\r\n                })\r\n              break;\r\n          }\r\n        \r\n        } else {\r\n          console.log('error submit!!');\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    //隐藏dialog\r\n    hideDialog(){\r\n      console.log(\"hidePopover\")\r\n      this.$refs.cycleFromData.resetFields();\r\n      this.placeholderStr='请选择'\r\n      this.storeState=false\r\n      this.tagDaysState=false\r\n      this.showCycleFrom=false\r\n      this.tag=\"\"\r\n      this.cycleFromData.nodeDays=''\r\n      this.merchantStoreData=[]\r\n      this.cycleFromData.merchant=''\r\n      //对账周期名称\r\n      this.cycleFromData.name='',\r\n      //对账周期Code\r\n      this.cycleFromData.taskCode='',\r\n      //店铺类型Code\r\n      this.cycleFromData.merchantType= \"\",\r\n      //标识选择的结算日期\r\n      this.cycleFromData.tagDays= [],\r\n      //适用门店Id\r\n      this.cycleFromData.merchantId= '',\r\n      this.dayArr.forEach(item => {\r\n        item.flag=false\r\n      });\r\n    },\r\n    //显示信息提示框\r\n    showMessageBox(msg,configId,valid){\r\n      this.$confirm(msg, '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          this.request(this.api.financial.financialConfig_updateValid,{configId:configId,symbol:valid}).then(data=>{\r\n            console.log(data)\r\n          })\r\n        }).catch(() => {\r\n          console.log(\"取消。。。。。。\")\r\n          this.tableData.forEach(item => {\r\n            if(item.id==configId){\r\n              item.valid=!item.valid\r\n            }\r\n          })      \r\n        });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.check{\r\n  background: #00abee;\r\n}\r\n.table_div {\r\n  margin: 10px;\r\n  background-color: #fff;\r\n  padding-top: 20px;\r\n  padding-left: 10px;\r\n}\r\n.icon{\r\n  height:32px;\r\n  line-height: 32px;\r\n  position: absolute;\r\n  right:150px;\r\n  top:0;\r\n  color:#C0C4CC;\r\n  /* background:#C0C4CC; */\r\n}\r\n.ul_style{\r\n  width: 176px;\r\n  border:1px solid #ccc;\r\n  border-bottom:none;  \r\n  border-right:none;\r\n}\r\n.li_style{\r\n  width: 35px;\r\n  height: 20px;\r\n  float: left;\r\n  text-align: center;\r\n  line-height: 20px;\r\n  cursor: pointer;\r\n  border-right:1px solid #ccc;\r\n  border-bottom:1px solid #ccc;\r\n}\r\n.span_style{\r\n  height:32px;\r\n  position: absolute;\r\n  left:15px;\r\n  top:0;\r\n  color:#C0C4CC;\r\n  line-height: 32px;\r\n}\r\n.tag_date{\r\n  margin-left:1px;\r\n  margin-bottom:3px;\r\n  margin-top:3px;\r\n  height: 19px;\r\n  padding: 0 5px;\r\n  line-height: 19px;\r\n  float:left;\r\n}\r\n.store_type /deep/ .el-input .el-input__inner{\r\n  border: 1px solid red;\r\n}\r\n</style>\r\n\r\n\r\n"],"sourceRoot":"src/views/fmis/cycle"}]}