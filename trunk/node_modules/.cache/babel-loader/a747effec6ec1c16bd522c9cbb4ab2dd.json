{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\components\\SKUAssembly\\add_new_sku.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\components\\SKUAssembly\\add_new_sku.vue","mtime":1572415127952},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["import _toConsumableArray from \"C:\\\\Users\\\\EDZ\\\\Desktop\\\\\\u7814\\u53D1\\u9879\\u76EE\\\\vue-project\\\\trunk\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ElUploadImg from \"@/components/uploadImg/el_upload_img\";\nexport default {\n  name: \"tp-new-sku\",\n  props: {\n    placeholder: \"请选择\",\n    value: \"\"\n  },\n  data: function data() {\n    return {\n      SKUDialogVisible: false,\n      filtersData: {\n        image: \"\",\n        name: \"\",\n        valid: null,\n        price: 0,\n        productGoodsMaterials: []\n      },\n      skuType: \"\",\n      skuIndex: null,\n      skuProps: {\n        key: \"materialId\",\n        label: '_label'\n      },\n      showDisabled: false,\n      //验证\n      rules: {\n        name: [{\n          required: true,\n          message: \"请输入SKU名称\",\n          trigger: \"blur\"\n        }],\n        image: [{\n          required: true,\n          message: \"请上传图片\",\n          trigger: \"blur\"\n        }],\n        valid: [{\n          required: true,\n          message: \"请选择状态\",\n          trigger: \"change\"\n        }]\n      },\n      skuListData: [],\n      //数据是[{},{}]\n      //已选SKU数据\n      selectedSKUData: [],\n      //存的是IDS\n      productImages: []\n    };\n  },\n  created: function created() {},\n  methods: {\n    /*\r\n    * @params: type 增加还是修改等类型 String\r\n                    default null\r\n              list  原料工艺数据 Array\r\n                    default null\r\n    */\n    popupInit: function popupInit(type, mtList) {\n      this.skuType = type; //感觉此处最好带过来参数\n      //this.init();\n\n      for (var i = 0; i < mtList.length; i++) {\n        mtList[i].disabled = false;\n        mtList[i]._label = \"\".concat(mtList[i].name, \"/\").concat(mtList[i].code);\n      }\n\n      this.skuListData = mtList;\n      this.resetMTList();\n      this.SKUDialogVisible = true;\n    },\n    //修改时初始化\n    editPopupInit: function editPopupInit(type, mtList, skuItem, skuIndex, isEchoDisplay) {\n      this.skuType = type; //初始化禁选状态\n\n      for (var i = 0; i < mtList.length; i++) {\n        mtList[i].disabled = false;\n        mtList[i]._label = \"\".concat(mtList[i].name, \"/\").concat(mtList[i].code);\n      }\n\n      this.skuListData = mtList;\n      this.resetMTList(isEchoDisplay);\n      var item = JSON.parse(JSON.stringify(skuItem));\n      this.filtersData = item;\n      var itemMaterials = item.productGoodsMaterials;\n      var arr = [];\n\n      for (var _i = 0; _i < itemMaterials.length; _i++) {\n        arr.push(itemMaterials[_i].materialId);\n      }\n\n      this.selectedSKUData = [].concat(arr);\n      this.skuIndex = skuIndex;\n\n      if (!!item.image) {\n        this.productImages = [{\n          url: item.image\n        }];\n      } //相同属性分类互斥\n\n\n      this.skuHandleMaterialCateMutex([]); //调取接口获取互斥\n\n      this.getRequestMutex([]);\n\n      if (isEchoDisplay == 'show') {\n        this.showDisabled = true;\n      } else {\n        this.showDisabled = false;\n      }\n\n      this.SKUDialogVisible = true;\n    },\n    getParentParams: function getParentParams() {//对象还需初始化\n      // switch (this._skuType.toString()) {\n      //   case \"add\": //新增\n      //     break;\n      //   case \"edit\": //修改\n      //     break;\n      //   case \"show\": //查看\n      //     break;\n      // }\n    },\n\n    /**\r\n     * 数据发生变动\r\n     * value 右侧全部数据   direction 向左或向右移动\r\n     * movedkeys 移动的数据\r\n     */\n    skuHandleChange: function skuHandleChange(value, direction, movedkeys) {\n      //数据向左侧传输\n      if (direction == \"left\") {\n        //初始化disabled\n        this.resetMTList(); //相同属性分类互斥\n\n        this.skuHandleMaterialCateMutex(value); //调取接口获取互斥\n\n        this.getRequestMutex(value); //修改时改变使用状态\n\n        if (this.skuType == 'edit') {\n          this.$message({\n            message: '已选数据发生改变将改变使用状态',\n            type: 'warning'\n          });\n          this.filtersData.valid = false;\n        }\n      } else {//数据向右边传输\n      }\n    },\n\n    /**\r\n     * 右侧勾选的时候 不做处理\r\n     * 因为发生互斥变化的时候 只取左侧勾选数据 和右侧已有数据\r\n     *\r\n     */\n    skuRightChange: function skuRightChange(itemAll, item) {// console.log(itemAll);\n      // console.log(item);\n    },\n\n    /**\r\n     * 左侧被勾选触发，\r\n     * 1、当被勾选时 拿到右侧的数据和当前的数据先进行属性分类互斥 ，\r\n     * 2、再进行调用接口互斥；\r\n     */\n    skuLeftChange: function skuLeftChange(itemAll, item) {\n      this.resetMTList(); //相同属性分类互斥\n      // for (let i = 0; i < this.skuListData.length; i++) {\n      //   console.log(this.skuListData[i].id +'------'+this.skuListData[i].materialId);\n      // }\n      // console.log(itemAll);\n\n      this.skuHandleMaterialCateMutex(itemAll); //调取接口获取互斥\n\n      this.getRequestMutex(itemAll);\n    },\n    //处理属性分类互斥\n    skuHandleMaterialCateMutex: function skuHandleMaterialCateMutex(itemAll) {\n      //数据集合\n      var listAll = [].concat(_toConsumableArray(itemAll), _toConsumableArray(this.selectedSKUData));\n      var skuList = this.skuListData; //处理数据集合\n\n      var itemData = this.getIdsListData(listAll);\n\n      if (listAll.length > 0) {\n        //对数据对象进行循环 判别出属性分类互斥\n        for (var i = 0; i < itemData.length; i++) {\n          var itemCateId = itemData[i].materialCateId;\n          var itemMaterialId = itemData[i].materialId;\n\n          for (var k = 0; k < skuList.length; k++) {\n            var skuCateId = skuList[k].materialCateId;\n            var skuMaterialId = skuList[k].materialId;\n\n            if (itemCateId == skuCateId && itemMaterialId != skuMaterialId) {\n              skuList[k].disabled = true;\n            }\n          }\n        }\n      }\n    },\n    //调用互斥接口 获取互斥ID\n    getRequestMutex: function getRequestMutex(itemAll) {\n      var _this = this;\n\n      console.log(itemAll);\n      var listAll = [].concat(_toConsumableArray(itemAll), _toConsumableArray(this.selectedSKUData));\n\n      if (listAll.length > 0) {\n        this.request(this.api.product.customizedProductMaterial_listExclusionMaterial, {\n          selectedMaterialIds: listAll\n        }).then(function (res) {\n          //互斥ID数组\n          var _data = res.data,\n              _dataLen = _data.length;\n          var skuList = _this.skuListData,\n              skuListLen = skuList.length;\n\n          for (var i = 0; i < skuListLen; i++) {\n            for (var k = 0; k < _dataLen; k++) {\n              if (skuList[i].materialId == _data[k]) {\n                skuList[i].disabled = true;\n              }\n            }\n          }\n        });\n      }\n    },\n    //点击加号重置左侧分类 增加type 判断是否右侧清空\n    resetMTList: function resetMTList(isEchoDisplay) {\n      var skuList = this.skuListData;\n\n      if (isEchoDisplay != 'show') {\n        for (var k = 0; k < skuList.length; k++) {\n          skuList[k].disabled = false;\n        }\n      } else {\n        for (var _k = 0; _k < skuList.length; _k++) {\n          skuList[_k].disabled = true;\n        }\n      }\n    },\n    //保存时判断\n    submitForm: function submitForm(formName) {\n      this.addAndEditForm(formName);\n    },\n    //修改保存 和新增数据不一样  还有 当在回显修改时 数据还要做判断\n    editForm: function editForm(formName) {\n      if (this.skuType == 'edit') {\n        this.addAndEditForm(formName, 'edit');\n      }\n    },\n    //新增和保存   回显还单独做处理\n    addAndEditForm: function addAndEditForm(formName, addType) {\n      var _this2 = this;\n\n      var skuData = this.selectedSKUData;\n\n      if (skuData <= 0) {\n        this.$message({\n          message: \"请勾选分类\",\n          type: \"error\"\n        });\n        return false;\n      }\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var selectedIdsData = _this2.getIdsListData(skuData);\n\n          var zType = false,\n              mType = false;\n\n          for (var i = 0; i < selectedIdsData.length; i++) {\n            if (selectedIdsData[i].type == 1) {\n              zType = true;\n            } else if (selectedIdsData[i].type == 2) {\n              mType = true;\n            }\n\n            if (zType && mType) {\n              break;\n            }\n          }\n\n          if (!zType || !mType) {\n            _this2.$message({\n              message: \"已选必须含有一条原料及一条工艺\",\n              type: \"error\"\n            });\n\n            return false;\n          } //处理数据 productGoodsId 问题\n\n\n          var csPGS = _this2.filtersData.productGoodsMaterials;\n\n          for (var _i2 = 0; _i2 < csPGS.length; _i2++) {\n            for (var k = 0; k < selectedIdsData.length; k++) {\n              if (csPGS[_i2].materialId == selectedIdsData[k].materialId) {\n                selectedIdsData[k] = csPGS[_i2];\n              }\n            }\n          } //计算价格\n\n\n          var ptGsMs = selectedIdsData;\n\n          for (var _k2 = 0; _k2 < ptGsMs.length; _k2++) {\n            _this2.filtersData.price += ptGsMs[_k2].usageAmount * ptGsMs[_k2].unitPrice;\n          }\n\n          if (addType == 'edit') {\n            for (var _i3 = 0; _i3 < selectedIdsData.length; _i3++) {\n              if (!selectedIdsData[_i3].productGoodsId) {\n                selectedIdsData[_i3].id = null;\n              }\n            }\n\n            _this2.filtersData.productGoodsMaterials = selectedIdsData;\n\n            _this2.$emit(\"setParentEditSKUData\", JSON.parse(JSON.stringify(_this2.filtersData)), addType, _this2.skuIndex);\n          } else {\n            _this2.filtersData.productGoodsMaterials = selectedIdsData;\n\n            _this2.$emit(\"setParentSKUData\", _this2.filtersData);\n          }\n\n          _this2.closeDialog();\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    },\n    //根据已选ID 获取原数据\n    getIdsListData: function getIdsListData(_ids) {\n      var skuList = this.skuListData;\n      var ids = _ids;\n      var idsArr = [];\n\n      for (var i = 0; i < ids.length; i++) {\n        for (var k = 0; k < skuList.length; k++) {\n          if (ids[i] == skuList[k].materialId) {\n            idsArr.push(skuList[k]);\n            break;\n          }\n        }\n      }\n\n      return idsArr;\n    },\n    closeDialog: function closeDialog() {\n      this.init();\n      this.SKUDialogVisible = false;\n    },\n    handleClose: function handleClose(done) {\n      this.init();\n      done();\n      this.SKUDialogVisible = false;\n    },\n    init: function init() {\n      this.filtersData = {\n        image: \"\",\n        name: \"\",\n        valid: null,\n        price: 0,\n        productGoodsMaterials: []\n      };\n      this.skuType = \"\";\n      this.skuIndex = null;\n      this.skuListData = []; //数据是[{},{}]\n\n      this.selectedSKUData = []; //存的是IDS\n\n      this.productImages = [];\n    },\n    filterMethod: function filterMethod(query, item) {\n      return item._label.toUpperCase().indexOf(query.toUpperCase()) > -1;\n    },\n    //处理数据\n    renderFunc: function renderFunc(h, option) {\n      return h(\"span\", [option.name, \" / \", option.code]);\n    }\n  },\n  components: {\n    ElUploadImg: ElUploadImg\n  }\n};",{"version":3,"sources":["add_new_sku.vue"],"names":[],"mappings":"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","sourcesContent":["number<template>\r\n  <el-dialog\r\n    v-if=\"SKUDialogVisible\"\r\n    title=\"SKU\"\r\n    :visible.sync=\"SKUDialogVisible\"\r\n    class=\"alarmPopup new-sku\"\r\n    width=\"1000px\"\r\n    append-to-body\r\n    :before-close=\"handleClose\"\r\n  >\r\n    <el-form\r\n      :model=\"filtersData\"\r\n      label-width=\"100px\"\r\n      size=\"small\"\r\n      ref=\"filtersForm\"\r\n      inline\r\n      :rules=\"rules\"\r\n    >\r\n      <el-row>\r\n        <el-col :span=\"10\">\r\n          <el-form-item prop=\"name\" label=\"SKU名称：\">\r\n            <el-input :disabled=\"showDisabled\" class=\"input-w\" placeholder=\"请输入内容\" v-model=\"filtersData.name\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item prop=\"image\" label=\"SKU图片：\">\r\n            <el-upload-img\r\n             :disabled=\"showDisabled\"\r\n              v-model=\"filtersData.image\"\r\n              :EchoDisplayImages=\"productImages\"\r\n              CatalogName=\"product\"\r\n            ></el-upload-img>\r\n          </el-form-item>\r\n          <el-form-item prop=\"valid\" label=\"使用状态：\">\r\n            <el-select :disabled=\"showDisabled\" class=\"input-w\" placeholder=\"请选择\" v-model=\"filtersData.valid\">\r\n              <el-option\r\n                v-for=\"item in this.$common.getValidLowerOptions()\"\r\n                :key=\"item.status_id\"\r\n                :label=\"item.status_name\"\r\n                :value=\"item.status_id\"\r\n              ></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n        </el-col>\r\n        <el-col class=\"transfer-wrap\" :span=\"14\">\r\n          <el-transfer\r\n            v-model=\"selectedSKUData\"\r\n            :data=\"skuListData\"\r\n            :props=\"skuProps\"\r\n            :titles=\"['可选', '已选']\"\r\n            @change=\"skuHandleChange\"\r\n            @left-check-change=\"skuLeftChange\"\r\n            @right-check-change=\"skuRightChange\"\r\n            filterable\r\n            :filter-method=\"filterMethod\"\r\n            filter-placeholder=\"请输入\"\r\n          ></el-transfer>\r\n\r\n          <!-- 不要删除空DIV  :render-content=\"renderFunc\" -->\r\n          <div class=\"transfer-one\"></div><div class=\"transfer-two\"></div>\r\n        </el-col>\r\n      </el-row>\r\n    </el-form>\r\n    <div class=\"item-right\">\r\n      <el-button size=\"small\" @click=\"closeDialog('filtersForm')\">取消</el-button>\r\n      <el-button\r\n        v-if=\"skuType == 'add'\"\r\n        size=\"small\"\r\n        @click=\"submitForm('filtersForm')\"\r\n        type=\"primary\"\r\n      >确定</el-button>\r\n      <el-button\r\n        v-else-if=\"skuType == 'edit'\"\r\n        size=\"small\"\r\n        @click=\"editForm('filtersForm')\"\r\n        type=\"primary\"\r\n      >修改</el-button>\r\n    </div>\r\n  </el-dialog>\r\n</template>\r\n<script>\r\nimport ElUploadImg from \"@/components/uploadImg/el_upload_img\";\r\nexport default {\r\n  name: \"tp-new-sku\",\r\n  props: {\r\n    placeholder: \"请选择\",\r\n    value: \"\"\r\n  },\r\n  data() {\r\n    return {\r\n      SKUDialogVisible: false,\r\n      filtersData: {\r\n        image: \"\",\r\n        name: \"\",\r\n        valid: null,\r\n         price:0,\r\n         productGoodsMaterials:[]\r\n      },\r\n      skuType: \"\",\r\n      skuIndex: null,\r\n      skuProps: {\r\n        key: \"materialId\",\r\n        label:'_label'\r\n      },\r\n      showDisabled:false,\r\n      //验证\r\n      rules: {\r\n        name: [{ required: true, message: \"请输入SKU名称\", trigger: \"blur\" }],\r\n        image: [{ required: true, message: \"请上传图片\", trigger: \"blur\" }],\r\n        valid: [{ required: true, message: \"请选择状态\", trigger: \"change\" }]\r\n      },\r\n      skuListData: [], //数据是[{},{}]\r\n      //已选SKU数据\r\n      selectedSKUData: [], //存的是IDS\r\n      productImages: []\r\n    };\r\n  },\r\n  created () {\r\n  },\r\n  methods: {\r\n    /*\r\n    * @params: type 增加还是修改等类型 String\r\n                    default null\r\n              list  原料工艺数据 Array\r\n                    default null\r\n    */\r\n    popupInit(type, mtList) {\r\n      this.skuType = type;\r\n      //感觉此处最好带过来参数\r\n      //this.init();\r\n      for (let i = 0; i < mtList.length; i++) {\r\n        mtList[i].disabled=false;\r\n        mtList[i]._label=`${mtList[i].name}/${mtList[i].code}`;\r\n\r\n      }\r\n      this.skuListData = mtList;\r\n      this.resetMTList();\r\n      this.SKUDialogVisible = true;\r\n    },\r\n    //修改时初始化\r\n    editPopupInit(type, mtList, skuItem, skuIndex,isEchoDisplay) {\r\n      this.skuType = type;\r\n      //初始化禁选状态\r\n      for (let i = 0; i < mtList.length; i++) {\r\n        mtList[i].disabled=false;\r\n        mtList[i]._label=`${mtList[i].name}/${mtList[i].code}`;\r\n      }\r\n      this.skuListData = mtList;\r\n      this.resetMTList(isEchoDisplay);\r\n      let item = JSON.parse(JSON.stringify(skuItem));\r\n      this.filtersData = item;\r\n      let itemMaterials = item.productGoodsMaterials;\r\n      let arr = [];\r\n      for (let i = 0; i < itemMaterials.length; i++) {\r\n        arr.push(itemMaterials[i].materialId);\r\n      }\r\n      this.selectedSKUData = [...arr];\r\n      this.skuIndex = skuIndex;\r\n      if (!!item.image) {\r\n        this.productImages = [{ url: item.image }];\r\n      }\r\n      //相同属性分类互斥\r\n      this.skuHandleMaterialCateMutex([]);\r\n      //调取接口获取互斥\r\n      this.getRequestMutex([]);\r\n      if(isEchoDisplay == 'show'){\r\n        this.showDisabled = true;\r\n      }else{\r\n        this.showDisabled = false;\r\n      }\r\n      this.SKUDialogVisible = true;\r\n    },\r\n    getParentParams() {\r\n      //对象还需初始化\r\n      // switch (this._skuType.toString()) {\r\n      //   case \"add\": //新增\r\n      //     break;\r\n      //   case \"edit\": //修改\r\n      //     break;\r\n      //   case \"show\": //查看\r\n      //     break;\r\n      // }\r\n    },\r\n    /**\r\n     * 数据发生变动\r\n     * value 右侧全部数据   direction 向左或向右移动\r\n     * movedkeys 移动的数据\r\n     */\r\n    skuHandleChange(value, direction, movedkeys) {\r\n      //数据向左侧传输\r\n      if (direction == \"left\") {\r\n        //初始化disabled\r\n        this.resetMTList();\r\n        //相同属性分类互斥\r\n        this.skuHandleMaterialCateMutex(value);\r\n        //调取接口获取互斥\r\n        this.getRequestMutex(value);\r\n        //修改时改变使用状态\r\n        if(this.skuType == 'edit'){\r\n          this.$message({\r\n            message: '已选数据发生改变将改变使用状态',\r\n            type: 'warning'\r\n          });\r\n          this.filtersData.valid=false;\r\n        }\r\n      } else {\r\n        //数据向右边传输\r\n      }\r\n    },\r\n    /**\r\n     * 右侧勾选的时候 不做处理\r\n     * 因为发生互斥变化的时候 只取左侧勾选数据 和右侧已有数据\r\n     *\r\n     */\r\n    skuRightChange(itemAll, item) {\r\n      // console.log(itemAll);\r\n      // console.log(item);\r\n    },\r\n    /**\r\n     * 左侧被勾选触发，\r\n     * 1、当被勾选时 拿到右侧的数据和当前的数据先进行属性分类互斥 ，\r\n     * 2、再进行调用接口互斥；\r\n     */\r\n    skuLeftChange(itemAll, item) {\r\n      this.resetMTList();\r\n      //相同属性分类互斥\r\n      // for (let i = 0; i < this.skuListData.length; i++) {\r\n      //   console.log(this.skuListData[i].id +'------'+this.skuListData[i].materialId);\r\n\r\n\r\n      // }\r\n      // console.log(itemAll);\r\n      this.skuHandleMaterialCateMutex(itemAll);\r\n      //调取接口获取互斥\r\n      this.getRequestMutex(itemAll);\r\n    },\r\n    //处理属性分类互斥\r\n    skuHandleMaterialCateMutex(itemAll) {\r\n      //数据集合\r\n      let listAll = [...itemAll, ...this.selectedSKUData];\r\n      let skuList = this.skuListData;\r\n      //处理数据集合\r\n      let itemData = this.getIdsListData(listAll);\r\n      if (listAll.length > 0) {\r\n        //对数据对象进行循环 判别出属性分类互斥\r\n        for (let i = 0; i < itemData.length; i++) {\r\n          let itemCateId = itemData[i].materialCateId;\r\n          let itemMaterialId = itemData[i].materialId;\r\n          for (let k = 0; k < skuList.length; k++) {\r\n            let skuCateId = skuList[k].materialCateId;\r\n            let skuMaterialId = skuList[k].materialId;\r\n            if (itemCateId == skuCateId && itemMaterialId != skuMaterialId) {\r\n              skuList[k].disabled = true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    //调用互斥接口 获取互斥ID\r\n    getRequestMutex(itemAll) {\r\n      console.log(itemAll);\r\n      let listAll = [...itemAll, ...this.selectedSKUData];\r\n      if (listAll.length > 0) {\r\n        this.request(\r\n          this.api.product.customizedProductMaterial_listExclusionMaterial,\r\n          { selectedMaterialIds: listAll }\r\n        ).then(res => {\r\n          //互斥ID数组\r\n          let _data = res.data,\r\n            _dataLen = _data.length;\r\n          let skuList = this.skuListData,\r\n            skuListLen = skuList.length;\r\n          for (let i = 0; i < skuListLen; i++) {\r\n            for (let k = 0; k < _dataLen; k++) {\r\n              if (skuList[i].materialId == _data[k]) {\r\n                skuList[i].disabled = true;\r\n\r\n              }\r\n            }\r\n          }\r\n\r\n        });\r\n      }\r\n    },\r\n    //点击加号重置左侧分类 增加type 判断是否右侧清空\r\n    resetMTList(isEchoDisplay) {\r\n      let skuList = this.skuListData;\r\n      if(isEchoDisplay != 'show'){\r\n        for (let k = 0; k < skuList.length; k++) {\r\n          skuList[k].disabled = false;\r\n        }\r\n      }else{\r\n        for (let k = 0; k < skuList.length; k++) {\r\n          skuList[k].disabled = true;\r\n        }\r\n      }\r\n    },\r\n    //保存时判断\r\n    submitForm(formName) {\r\n      this.addAndEditForm(formName)\r\n    },\r\n    //修改保存 和新增数据不一样  还有 当在回显修改时 数据还要做判断\r\n    editForm(formName){\r\n      if(this.skuType == 'edit'){\r\n        this.addAndEditForm(formName,'edit')\r\n      }\r\n    },\r\n    //新增和保存   回显还单独做处理\r\n    addAndEditForm(formName,addType){\r\n       let skuData = this.selectedSKUData;\r\n      if (skuData <= 0) {\r\n        this.$message({\r\n          message: \"请勾选分类\",\r\n          type: \"error\"\r\n        });\r\n        return false;\r\n      }\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          let selectedIdsData = this.getIdsListData(skuData);\r\n          let zType = false,\r\n            mType = false;\r\n          for (let i = 0; i < selectedIdsData.length; i++) {\r\n            if (selectedIdsData[i].type == 1) {\r\n              zType = true;\r\n            } else if (selectedIdsData[i].type == 2) {\r\n              mType = true;\r\n            }\r\n            if (zType && mType) {\r\n              break;\r\n            }\r\n          }\r\n          if (!zType || !mType) {\r\n            this.$message({\r\n              message: \"已选必须含有一条原料及一条工艺\",\r\n              type: \"error\"\r\n            });\r\n            return false;\r\n          }\r\n          //处理数据 productGoodsId 问题\r\n          let csPGS= this.filtersData.productGoodsMaterials;\r\n          for (let i = 0; i < csPGS.length; i++) {\r\n            for (let k = 0; k < selectedIdsData.length; k++) {\r\n             if(csPGS[i].materialId == selectedIdsData[k].materialId){\r\n                selectedIdsData[k]=csPGS[i]\r\n             }\r\n            }\r\n          }\r\n          //计算价格\r\n          let ptGsMs=selectedIdsData;\r\n          for (let k = 0; k < ptGsMs.length; k++) {\r\n              this.filtersData.price += ptGsMs[k].usageAmount * ptGsMs[k].unitPrice\r\n          }\r\n          if(addType == 'edit'){\r\n            for (let i = 0; i < selectedIdsData.length; i++) {\r\n              if(!selectedIdsData[i].productGoodsId){\r\n                 selectedIdsData[i].id=null;\r\n              }\r\n            }\r\n            this.filtersData.productGoodsMaterials = selectedIdsData;\r\n            this.$emit(\"setParentEditSKUData\", JSON.parse(JSON.stringify(this.filtersData)),addType,this.skuIndex);\r\n          }else{\r\n            this.filtersData.productGoodsMaterials = selectedIdsData;\r\n            this.$emit(\"setParentSKUData\", this.filtersData);\r\n          }\r\n\r\n          this.closeDialog();\r\n        } else {\r\n          console.log(\"error submit!!\");\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    //根据已选ID 获取原数据\r\n    getIdsListData(_ids) {\r\n      let skuList = this.skuListData;\r\n      let ids = _ids;\r\n      let idsArr = [];\r\n      for (let i = 0; i < ids.length; i++) {\r\n        for (let k = 0; k < skuList.length; k++) {\r\n          if (ids[i] == skuList[k].materialId) {\r\n            idsArr.push(skuList[k]);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      return idsArr;\r\n    },\r\n    closeDialog() {\r\n      this.init();\r\n      this.SKUDialogVisible = false;\r\n    },\r\n    handleClose(done) {\r\n      this.init();\r\n      done();\r\n      this.SKUDialogVisible = false;\r\n    },\r\n    init() {\r\n      this.filtersData = {\r\n        image: \"\",\r\n        name: \"\",\r\n        valid: null,\r\n        price:0,\r\n        productGoodsMaterials:[]\r\n      };\r\n      this.skuType = \"\";\r\n      this.skuIndex = null;\r\n      this.skuListData = []; //数据是[{},{}]\r\n      this.selectedSKUData = []; //存的是IDS\r\n      this.productImages = [];\r\n    },\r\n    filterMethod(query, item) {\r\n      return item._label.toUpperCase().indexOf(query.toUpperCase()) > -1;\r\n    },\r\n    //处理数据\r\n    renderFunc(h, option) {\r\n      return (\r\n        <span>\r\n          {option.name} / {option.code}\r\n        </span>\r\n      );\r\n    }\r\n  },\r\n  components: {\r\n    ElUploadImg\r\n  }\r\n};\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.new-sku /deep/ .el-transfer-panel__header .el-checkbox .el-checkbox__input {\r\n  display: none;\r\n}\r\n.transfer-wrap{\r\n  position: relative;\r\n  .transfer-one{\r\n    position: absolute;\r\n    width: 200px;\r\n    height: 40px;\r\n    left: 0;\r\n    top: 0;\r\n  }\r\n   .transfer-two{\r\n    position: absolute;\r\n    width: 200px;\r\n    height: 40px;\r\n    left:295px;\r\n    top: 0;\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/SKUAssembly"}]}