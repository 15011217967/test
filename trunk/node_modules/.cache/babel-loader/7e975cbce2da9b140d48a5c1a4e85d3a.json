{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\product\\format\\single_details.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\product\\format\\single_details.vue","mtime":1572415124078},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["import _defineProperty from \"C:\\\\Users\\\\EDZ\\\\Desktop\\\\\\u7814\\u53D1\\u9879\\u76EE\\\\vue-project\\\\trunk\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.set\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.search\";\nimport _toConsumableArray from \"C:\\\\Users\\\\EDZ\\\\Desktop\\\\\\u7814\\u53D1\\u9879\\u76EE\\\\vue-project\\\\trunk\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find\";\n\nvar _components;\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SingleMaterialDialog from \"@/components/customAttribute/single_material_dialog\";\nimport SingleTechnologyDialog from \"@/components/customAttribute/single_technology_dialog\";\nimport NewSku from \"@/components/SKUAssembly/add_new_sku\";\n/**\r\n * TODO  一些地方用不掉... 深复制\r\n * 如优化 需去掉\r\n */\n\n/**\r\n * 父组件已选原料镜像\r\n */\n\nvar middlewareMaterialList = [];\n/**\r\n * 父组件已选工艺镜像\r\n */\n\nvar middlewareTechnologyList = [];\n/**\r\n * 原料和工艺数据合并生成的新数据\r\n */\n\nvar materialAndTechnologyList = [];\nvar cusCateType = false,\n    cusTableType = false;\nexport default {\n  data: function data() {\n    return {\n      filtersData: {},\n      activeName: \"material\",\n      //切换\n      rules: {\n        //规则验证\n        valid: [{\n          required: true,\n          message: \"请选择状态\",\n          trigger: \"change\"\n        }],\n        name: [{\n          required: true,\n          message: \"请输入商品名称\",\n          trigger: \"blur\"\n        }, {\n          max: 24,\n          message: \"最长24个汉字\",\n          trigger: \"blur\"\n        }]\n      },\n      editDisabled: false,\n      showDisabled: false,\n      materialTableListData: [],\n      //原料table列表\n      technologyTableListData: [],\n      //工艺 table 列表\n      fullCateName: \"\",\n      //分类显示\n      //定制分类搜索\n      classData: [],\n      classList: [],\n      //属性分类数据\n      attrClassData: [],\n      attrListData: [],\n      //定制分类\n      cateArr: [],\n      //属性分类\n      materialAttrCateArr: [],\n      //工艺分类\n      technologyAttrCateArr: [],\n      props: {\n        value: \"id\",\n        label: \"name\",\n        children: \"children\"\n      },\n      //原料搜索字段\n      materialForm: {\n        materialCateId: \"\",\n        searchWords: \"\"\n      },\n      //工艺搜索字段\n      technologyForm: {\n        materialCateId: \"\",\n        searchWords: \"\"\n      },\n      _type: \"\",\n      _id: \"\",\n      //定制货品信息列表\n      productGoodses: [],\n      cusPlaceholder: \"请选择定制分类\",\n      setCateIdentifier: \"\" //后台获取的定制分类\n\n    };\n  },\n  created: function created() {\n    this.init();\n    this.getClassData();\n    this.getQueryparams();\n  },\n  methods: {\n    init: function init() {\n      middlewareMaterialList = [];\n      middlewareTechnologyList = [];\n      materialAndTechnologyList = [];\n      this.filtersData = {};\n      this.materialTableListData = []; //原料table列表\n\n      this.technologyTableListData = [];\n      this.productGoodses = [];\n      this.materialForm = {\n        materialCateId: \"\",\n        searchWords: \"\"\n      }; //工艺搜索字段\n\n      this.technologyForm = {\n        materialCateId: \"\",\n        searchWords: \"\"\n      };\n      cusCateType = false;\n      cusTableType = false;\n    },\n    getClassData: function getClassData() {\n      var _this = this;\n\n      //分类类型（1：标准分类，2：定制分类，3：原料分类或者称为属性分类）\n      this.$common.getClassSelect(this, 2).then(function (res) {\n        _this.classData = res.ztree;\n        _this.classList = res.list;\n        cusCateType = true;\n\n        _this.setCusCateName();\n      }); //获取属性分类  type 3\n\n      this.$common.getClassSelect(this, 3).then(function (res) {\n        _this.attrClassData = res.ztree;\n        _this.attrListData = res.list;\n      });\n    },\n    //定制分类\n    cascaderGet: function cascaderGet(e) {\n      var cateId = JSON.parse(JSON.stringify(e)).pop();\n      var obj = this.classList.find(function (item) {\n        return item.id == cateId;\n      });\n      this.filtersData.cusCateIdentifier = obj.identifier;\n      this.filtersData.cusCateId = obj.id;\n      this.filtersData.cusCateName = obj.name;\n      this.filtersData.cusFullCateName = obj.fullCateName;\n    },\n    //原料属性分类\n    materialAttrCascaderGet: function materialAttrCascaderGet(e) {\n      var cateId = JSON.parse(JSON.stringify(e)).pop();\n      var obj = this.attrListData.find(function (item) {\n        return item.id == cateId;\n      });\n      this.materialForm.materialCateId = obj.id; // this.materialForm.materialCateIdentifier = obj.identifier;\n    },\n    //工艺属性分类\n    technologyAttrCascaderGet: function technologyAttrCascaderGet(e) {\n      var cateId = JSON.parse(JSON.stringify(e)).pop();\n      var obj = this.attrListData.find(function (item) {\n        return item.id == cateId;\n      });\n      this.technologyForm.materialCateId = obj.id;\n    },\n    //获取上页面参数\n    getQueryparams: function getQueryparams() {\n      var params = this.$route.query;\n      this._type = params._type;\n      this._id = params._id;\n      var itemStatus = this._type;\n\n      switch (itemStatus.toString()) {\n        case \"add\":\n          //新增\n          this.editDisabled = false;\n          this.showDisabled = false;\n          this.fullCateName = params.fullCateName;\n          var filters = this.filtersData;\n          filters.cateId = params.cateId;\n          filters.cateName = params.cateName;\n          filters.cateIdentifier = params.cateIdentifier;\n          filters.fullCateName = params.fullCateName;\n          break;\n\n        case \"edit\":\n          //修改\n          this.editDisabled = true;\n          this.showDisabled = false;\n          this.getData();\n          break;\n\n        case \"show\":\n          //查看\n          this.editDisabled = true;\n          this.showDisabled = true;\n          this.getData();\n          break;\n      }\n    },\n    //添加sku\n    addSkuBtn: function addSkuBtn() {\n      if (middlewareMaterialList.length <= 0) {\n        this.$message.error(\"请选择原料\");\n        return false;\n      }\n\n      if (middlewareTechnologyList.length <= 0) {\n        this.$message.error(\"请选择工艺\");\n        return false;\n      }\n\n      var List = this.arrCopy(materialAndTechnologyList);\n      this.$refs.skuRef.popupInit(\"add\", List);\n    },\n    //获取SKU子组件返回的数据\n    getSubSKUData: function getSubSKUData(skuData) {\n      this.productGoodses.push(skuData);\n\n      if (this.productGoodses.length == 1) {\n        this.productGoodses[0].defaultStatus = true;\n      }\n    },\n    //获取SKU子组件编辑后返回的数据\n    getSubEditSKUData: function getSubEditSKUData(editSkuData, subType, subIndex) {\n      if (subType == \"edit\") {\n        this.productGoodses.splice(subIndex, 1, editSkuData);\n      }\n    },\n    //编辑当前的sku\n    skuEditItem: function skuEditItem(item, _index) {\n      if (middlewareMaterialList.length <= 0) {\n        this.$message.error(\"请选择原料\");\n        return false;\n      }\n\n      if (middlewareTechnologyList.length <= 0) {\n        this.$message.error(\"请选择工艺\");\n        return false;\n      }\n\n      var List = this.arrCopy(materialAndTechnologyList);\n      var skuItem = JSON.parse(JSON.stringify(item)),\n          skuIndex = _index;\n      this.$refs.skuRef.editPopupInit(\"edit\", List, skuItem, skuIndex, this._type);\n    },\n    //删除当前的SKU\n    skuIconRemove: function skuIconRemove(item, _index) {\n      this.productGoodses.splice(_index, 1);\n    },\n    //添加原料\n    openAddMaterial: function openAddMaterial() {\n      this.$refs.materialDialogRef.popupInit(this.filtersData.cateIdentifier, this._type, this.arrCopy(middlewareMaterialList), this.arrCopy(this.productGoodses));\n    },\n    //子组件传回的已选数据\n    getSubMaterialList: function getSubMaterialList(list, productGoodsesIds) {\n      console.log(list);\n      var subMaterialList = list; //假如是新增的情况下 根本不需要做很多判断 直接放入\n\n      this.materialTableListData = subMaterialList;\n      middlewareMaterialList = _toConsumableArray(subMaterialList);\n      materialAndTechnologyList = [].concat(_toConsumableArray(middlewareMaterialList), _toConsumableArray(middlewareTechnologyList));\n      this.SPUReset(\"material\", this.materialForm);\n      this.SPUSearch(\"material\", this.materialForm); //删除已选SKU\n\n      this.arrRemoveSelectedSku(productGoodsesIds);\n    },\n    //添加工艺\n    openAddTechnology: function openAddTechnology() {\n      //当点添加的时候 存个当前的数据\n      this.$refs.technologyDialogRef.popupInit(this.filtersData.cateIdentifier, this._type, this.arrCopy(middlewareTechnologyList), this.arrCopy(this.productGoodses));\n    },\n    //工艺添加成功后返回的数据\n    getSubTechnologyList: function getSubTechnologyList(list, productGoodsesIds) {\n      var subMaterialList = list; //假如是新增的情况下 根本不需要做很多判断 直接放入\n\n      this.technologyTableListData = subMaterialList;\n      middlewareTechnologyList = _toConsumableArray(subMaterialList);\n      materialAndTechnologyList = [].concat(_toConsumableArray(middlewareMaterialList), _toConsumableArray(middlewareTechnologyList));\n      this.SPUReset(\"technology\", this.technologyForm);\n      this.SPUSearch(\"technology\", this.technologyForm); //删除已选SKU\n\n      this.arrRemoveSelectedSku(productGoodsesIds);\n    },\n    //原料搜索及原料重置  TODO //以后和工艺合并\n    SPUSearch: function SPUSearch(SPUType, SPUForm) {\n      var filters = SPUForm;\n\n      if (filters.materialCateId == \"\" && filters.searchWords == \"\") {\n        if (SPUType == \"material\") {\n          this.materialTableListData = _toConsumableArray(middlewareMaterialList);\n        } else {\n          this.technologyTableListData = _toConsumableArray(middlewareTechnologyList);\n        }\n\n        filters = null;\n        return false;\n      } //镜像数据 搜索时拿到全部的数据 也就是镜像数据;\n\n\n      var middleTableList = SPUType == \"material\" ? _toConsumableArray(middlewareMaterialList) : _toConsumableArray(middlewareTechnologyList);\n      var filtersList = [];\n\n      if (!!filters.materialCateId) {\n        for (var i = 0; i < middleTableList.length; i++) {\n          if (middleTableList[i].materialCateId.search(filters.materialCateId) != -1) {\n            filtersList.push(middleTableList[i]); // break;\n          }\n        }\n      } else {\n        filtersList = SPUType == \"material\" ? _toConsumableArray(middlewareMaterialList) : _toConsumableArray(middlewareTechnologyList);\n      }\n\n      var List = [];\n\n      if (!!filters.searchWords) {\n        for (var _i = 0; _i < filtersList.length; _i++) {\n          var str = \"\".concat(filtersList[_i].name).concat(filtersList[_i].code);\n\n          if (str.toUpperCase().search(filters.searchWords.toUpperCase()) != -1) {\n            List.push(filtersList[_i]); // break;\n          }\n        }\n      } else {\n        List = filtersList;\n      }\n\n      if (SPUType == \"material\") {\n        this.materialTableListData = List;\n      } else {\n        this.technologyTableListData = List;\n      }\n\n      filtersList = null;\n      List = null;\n      middleTableList = null;\n    },\n    SPUReset: function SPUReset(SPUType, SPUForm) {\n      if (SPUType == \"material\") {\n        this.materialForm = {\n          materialCateId: \"\",\n          searchWords: \"\"\n        };\n        this.materialAttrCateArr = [];\n      } else {\n        this.technologyForm = {\n          materialCateId: \"\",\n          searchWords: \"\"\n        };\n        this.technologyAttrCateArr = [];\n      }\n    },\n    //新增\n    submitForm: function submitForm(formName) {\n      var _this2 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var filters = _this2.filtersData;\n          filters.productGoodses = _toConsumableArray(_this2.productGoodses);\n          filters.productMaterials = _toConsumableArray(materialAndTechnologyList);\n          console.log(_this2.filtersData);\n\n          _this2.request(_this2.api.product.customizedProduct_save, _this2.filtersData).then(function (data) {\n            _this2.$message.success(\"保存成功\");\n\n            setTimeout(function () {\n              _this2.routerback();\n            }, 500);\n          });\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    },\n    //修改保存\n    submitEditForm: function submitEditForm(formName) {\n      var _this3 = this;\n\n      console.log(materialAndTechnologyList);\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var filters = JSON.parse(JSON.stringify(_this3.filtersData)); //处理已选数组\n\n          var mirrorFilters = JSON.parse(JSON.stringify(_this3.filtersData));\n          var mirrorMTMR = mirrorFilters.productMaterials;\n          var MTMR = materialAndTechnologyList;\n          var deleteMTMR = []; //已删除已有ID的数据\n\n          for (var i = 0; i < mirrorMTMR.length; i++) {\n            var flag = false;\n\n            for (var k = 0; k < MTMR.length; k++) {\n              if (mirrorMTMR[i].materialId == MTMR[k].materialId && MTMR[k].id != null) {\n                flag = true;\n              }\n            }\n\n            if (!flag) {\n              //此处是已删除的数据 但不正确 还要知道当前数据是不是删除后又新增的\n              mirrorMTMR[i].status = 9;\n              deleteMTMR.push(mirrorMTMR[i]);\n            }\n          } //处理SKU  镜像sku数据\n\n\n          var mirrorPtGs = mirrorFilters.productGoodses; //当前sku数据\n\n          var ptGs = _toConsumableArray(_this3.productGoodses);\n\n          var deleteGoodses = [];\n\n          for (var _i2 = 0; _i2 < mirrorPtGs.length; _i2++) {\n            //镜像skuI\n            var mirrorPtGsMs = mirrorPtGs[_i2].productGoodsMaterials;\n            var parentFlag = false;\n\n            for (var _k = 0; _k < ptGs.length; _k++) {\n              //skuk\n              var ptGsMs = ptGs[_k].productGoodsMaterials; //SKU已选数据判断循环\n\n              if (mirrorPtGs[_i2].id == ptGs[_k].id && ptGs[_k].id != null) {\n                parentFlag = true;\n                var deleteArr = [];\n\n                for (var o = 0; o < mirrorPtGsMs.length; o++) {\n                  var _flag = false;\n\n                  for (var l = 0; l < ptGsMs.length; l++) {\n                    if (mirrorPtGsMs[o].materialId == ptGsMs[l].materialId && ptGsMs[l].id != null) {\n                      _flag = true;\n                    }\n                  }\n\n                  if (!_flag) {\n                    //此处是已删除的数据 但不正确 还要知道当前数据是不是删除后又新增的\n                    mirrorPtGsMs[o].status = 9;\n                    deleteArr.push(mirrorPtGsMs[o]);\n                  }\n                } //当前的数据\n\n\n                ptGs[_k].productGoodsMaterials = [].concat(_toConsumableArray(ptGsMs), deleteArr);\n              } //子集循环完成\n\n            }\n\n            if (!parentFlag) {\n              mirrorPtGs[_i2].status = 9;\n              deleteGoodses.push(mirrorPtGs[_i2]);\n            }\n          }\n\n          filters.productGoodses = [].concat(_toConsumableArray(ptGs), deleteGoodses);\n          filters.productMaterials = [].concat(_toConsumableArray(materialAndTechnologyList), deleteMTMR);\n\n          _this3.request(_this3.api.product.customizedProduct_save, filters).then(function (data) {\n            _this3.$message.success(\"保存成功\");\n\n            setTimeout(function () {\n              _this3.routerback();\n            }, 500);\n          });\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    },\n    //删除原料数据\n    removeMaterialAndTechnology: function removeMaterialAndTechnology(itemId, listType) {\n      var _this4 = this;\n\n      var names = [];\n      var productGoodses = this.productGoodses;\n\n      for (var i = 0; i < productGoodses.length; i++) {\n        var materials = productGoodses[i].productGoodsMaterials;\n\n        for (var k = 0; k < materials.length; k++) {\n          if (materials[k].materialId == itemId) {\n            names.push(productGoodses[i].name);\n            break;\n          }\n        }\n      }\n\n      if (names.length > 0) {\n        var strName = names.join(\"/\");\n        this.$confirm(\"sku\".concat(strName, \"\\u5DF2\\u4F7F\\u7528\\u5230\\u8BE5\\u9879\\uFF0C\\u662F\\u5426\\u786E\\u8BA4\\u5220\\u9664!\"), \"提示\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }).then(function () {\n          //删除操作的时候还需要判断 productGoodsMaterials 的长度 如果为0\n          for (var _i3 = 0; _i3 < productGoodses.length; _i3++) {\n            var _materials = productGoodses[_i3].productGoodsMaterials;\n\n            for (var _k2 = 0; _k2 < _materials.length; _k2++) {\n              if (_materials[_k2].materialId == itemId) {\n                _materials.splice(_k2, 1);\n\n                productGoodses[_i3].valid = false; //未使用状态\n\n                break;\n              }\n            }\n          }\n\n          _this4.removeTableAndSku(itemId, listType);\n\n          _this4.$message({\n            type: \"success\",\n            message: \"删除成功!\"\n          });\n        }).catch(function () {\n          _this4.$message({\n            type: \"info\",\n            message: \"已取消删除\"\n          });\n        });\n      } else {\n        //未有用到的原料工艺直接删除\n        this.removeTableAndSku(itemId, listType);\n      }\n    },\n    //回显数据\n    getData: function getData() {\n      var _this5 = this;\n\n      this.request(this.api.product.customizedProduct_get, {\n        id: this._id\n      }).then(function (res) {\n        console.log(res);\n        var _data = res;\n        _this5.filtersData = JSON.parse(JSON.stringify(_data));\n\n        var Materials = _toConsumableArray(_data.productMaterials);\n\n        _this5.fullCateName = _data.fullCateName;\n        var materialsTable = [],\n            technologyTable = [];\n\n        for (var i = 0; i < Materials.length; i++) {\n          if (Materials[i].type == 2) {\n            materialsTable.push(Materials[i]);\n          } else {\n            technologyTable.push(Materials[i]);\n          }\n        } //回显列表数据；\n\n\n        _this5.materialTableListData = materialsTable;\n        middlewareMaterialList = [].concat(materialsTable);\n        _this5.technologyTableListData = technologyTable;\n        middlewareTechnologyList = [].concat(technologyTable);\n        materialAndTechnologyList = [].concat(_toConsumableArray(middlewareMaterialList), _toConsumableArray(middlewareTechnologyList));\n        _this5.productGoodses = _toConsumableArray(_data.productGoodses);\n        _this5.setCateIdentifier = _data.cusCateIdentifier;\n\n        if (!!_data.cusCateIdentifier) {\n          cusTableType = true;\n\n          _this5.setCusCateName();\n        }\n      });\n    },\n    setCusCateName: function setCusCateName() {\n      if (cusCateType && cusTableType) {\n        var arr = [];\n        var ids = this.setCateIdentifier.split('.');\n        var list = this.classList,\n            listLen = list.length;\n\n        for (var k = 0; k < ids.length; k++) {\n          for (var i = 0; i < listLen; i++) {\n            if (ids[k] == list[i].code) {\n              arr.push(list[i].id);\n              break;\n            }\n          }\n        }\n\n        this.cateArr = arr;\n      }\n    },\n    //删除操作列表和sku\n    removeTableAndSku: function removeTableAndSku(itemId, listType) {\n      if (listType == \"material\") {\n        var mlIndex = middlewareMaterialList.findIndex(function (item) {\n          return item.materialId == itemId;\n        });\n        middlewareMaterialList.splice(mlIndex, 1);\n        this.materialTableListData.splice(mlIndex, 1);\n      } else {\n        var mrIndex = middlewareTechnologyList.findIndex(function (item) {\n          return item.materialId == itemId;\n        });\n        middlewareTechnologyList.splice(mrIndex, 1);\n        this.technologyTableListData.splice(mrIndex, 1);\n      }\n\n      var mlmrIndex = materialAndTechnologyList.findIndex(function (item) {\n        return item.materialId == itemId;\n      });\n      materialAndTechnologyList.splice(mlmrIndex, 1);\n    },\n    //数组删除SKU已选数据\n    arrRemoveSelectedSku: function arrRemoveSelectedSku(productGoodsesIds) {\n      var ids = new Set(productGoodsesIds);\n\n      if (ids.length > 0) {\n        var productGoodses = this.productGoodses;\n\n        for (var j = 0; j < ids.length; j++) {\n          for (var i = 0; i < productGoodses.length; i++) {\n            var materials = productGoodses[i].productGoodsMaterials;\n\n            for (var k = 0; k < materials.length; k++) {\n              if (materials[k].materialId == ids[j]) {\n                materials.splice(k, 1);\n                productGoodses[i].valid = false; //未使用状态\n\n                break;\n              }\n            }\n          }\n        }\n      }\n    },\n    //列表用量发生变化 并计算金额\n    usageAmountBlur: function usageAmountBlur(item, _usageAmount) {\n      var productGoodses = this.productGoodses;\n\n      for (var i = 0; i < productGoodses.length; i++) {\n        var materials = productGoodses[i].productGoodsMaterials;\n\n        for (var k = 0; k < materials.length; k++) {\n          if (materials[k].materialId == item.materialId) {\n            materials[k].usageAmount = _usageAmount;\n            productGoodses[i].price += materials[k].usageAmount * materials[k].unitPrice;\n            console.log(productGoodses[i]);\n            break;\n          }\n        }\n      }\n    },\n    //单选框发生改变\n    skuRadioChange: function skuRadioChange(elem, item, skuIndex) {\n      var list = this.productGoodses;\n\n      for (var i = 0; i < list.length; i++) {\n        list[i].defaultStatus = false;\n      }\n\n      item.defaultStatus = true;\n    },\n    routerGo: function routerGo() {\n      this.$router.go(-1);\n    },\n    routerback: function routerback() {\n      if (this._type == \"edit\") {\n        this.$router.go(-1);\n      } else if (this._type == \"add\") {\n        this.$router.go(-2);\n      } else {\n        this.$router.go(-1);\n      }\n    },\n    //数组对象深拷贝\n    arrCopy: function arrCopy(arr) {\n      var copy = [];\n\n      for (var i = 0; i < arr.length; i++) {\n        copy.push(JSON.parse(JSON.stringify(arr[i])));\n      }\n\n      return copy;\n    }\n  },\n  components: (_components = {}, _defineProperty(_components, NewSku.name, NewSku), _defineProperty(_components, SingleMaterialDialog.name, SingleMaterialDialog), _defineProperty(_components, SingleTechnologyDialog.name, SingleTechnologyDialog), _components)\n};",{"version":3,"sources":["single_details.vue"],"names":[],"mappings":"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","sourcesContent":["<!--\r\n * @Description: In User Settings Edit\r\n * @Author: your name\r\n * @Date: 2019-07-01 15:20:22\r\n * @LastEditTime: 2019-07-01 15:20:22\r\n * @LastEditors: your name\r\n -->\r\n\r\n<template>\r\n  <div class=\"bg-fff item-margin\">\r\n    <el-form\r\n      class=\"item-form\"\r\n      :rules=\"rules\"\r\n      :model=\"filtersData\"\r\n      label-width=\"100px\"\r\n      size=\"small\"\r\n      ref=\"filtersForm\"\r\n      inline\r\n    >\r\n      <div>\r\n        当前商品分类：{{fullCateName}}\r\n        <el-button v-if=\"_type == 'add'\" @click=\"routerGo\" type=\"text\">切换分类</el-button>\r\n      </div>\r\n      <h5 class=\"tlogy-title\">基本信息</h5>\r\n      <el-form-item prop=\"name\" label=\"商品名称：\">\r\n        <el-input\r\n          class=\"input-w\"\r\n          placeholder=\"请输入内容\"\r\n          :disabled=\"showDisabled\"\r\n          v-model=\"filtersData.name\"\r\n        ></el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"valid\" label=\"使用状态：\">\r\n        <el-select\r\n          class=\"input-w\"\r\n          placeholder=\"请选择\"\r\n          :disabled=\"showDisabled\"\r\n          v-model=\"filtersData.valid\"\r\n        >\r\n          <el-option\r\n            v-for=\"item in this.$common.getValidOptions()\"\r\n            :key=\"item.status_id\"\r\n            :label=\"item.status_name\"\r\n            :value=\"item.status_id\"\r\n          ></el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item class=\"single-cus-warp\" prop=\"cusCateIdentifier\" label=\"定制分类：\">\r\n        <el-cascader\r\n          :disabled=\"showDisabled\"\r\n          class=\"input-w\"\r\n          :options=\"classData\"\r\n          v-model=\"cateArr\"\r\n          @change=\"cascaderGet\"\r\n          :placeholder=\"cusPlaceholder\"\r\n          :show-all-levels=\"false\"\r\n          :props=\"props\"\r\n          change-on-select\r\n        ></el-cascader>\r\n      </el-form-item>\r\n      <!-- 商品基础内容 -->\r\n      <h5 class=\"tlogy-subtitle\">商品基础内容</h5>\r\n      <el-tabs v-model=\"activeName\" type=\"card\" class=\"basic-wrap\">\r\n        <el-tab-pane label=\"已选原料\" name=\"material\">\r\n          <!-- 原料table -->\r\n          <div class=\"item-cont\">\r\n            <el-button size=\"small\" :disabled=\"showDisabled\" @click=\"openAddMaterial\">选择原料</el-button>\r\n          </div>\r\n          <div class=\"mt-10\">\r\n            <el-form-item label=\"筛选分类：\">\r\n              <el-cascader\r\n                class=\"input-w\"\r\n                :options=\"attrClassData\"\r\n                v-model=\"materialAttrCateArr\"\r\n                :value=\"materialAttrCateArr\"\r\n                @change=\"materialAttrCascaderGet\"\r\n                :show-all-levels=\"false\"\r\n                :props=\"props\"\r\n              ></el-cascader>\r\n            </el-form-item>\r\n            <el-form-item label=\"综合搜索：\">\r\n              <el-input class=\"input-w\" placeholder=\"名称或编码\" v-model.trim=\"materialForm.searchWords\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button @click=\"SPUSearch('material',materialForm)\">筛选</el-button>\r\n              <el-button @click=\"SPUReset('material',materialForm)\">重置</el-button>\r\n            </el-form-item>\r\n          </div>\r\n          <div class=\"item-table\">\r\n            <el-table\r\n              height=\"400\"\r\n              :data=\"materialTableListData\"\r\n              stripe\r\n              empty-text=\"暂无数据\"\r\n              header-align=\"center\"\r\n              header-row-class-name=\"item-table-header\"\r\n              :highlight-current-row=\"true\"\r\n            >\r\n              <el-table-column prop=\"materialCateName\" align=\"center\" label=\"分类\" min-width=\"100\"></el-table-column>\r\n              <el-table-column prop=\"code\" align=\"center\" label=\"标准编码\" min-width=\"100\"></el-table-column>\r\n              <el-table-column prop=\"name\" align=\"center\" label=\"原料名称\" min-width=\"100\"></el-table-column>\r\n              <el-table-column prop=\"image\" align=\"center\" label=\"图片\" width=\"80\">\r\n                <template slot-scope=\"scope\">\r\n                  <img class=\"table-img-wh\" :src=\"scope.row.image\" alt>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"unitPrice\" align=\"center\" label=\"销售价格\" min-width=\"100\"></el-table-column>\r\n              <el-table-column prop=\"usageAmount\" align=\"center\" label=\"用量\" min-width=\"120\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-input\r\n                    v-enter-number\r\n                    type=\"number\"\r\n                    @blur=\"usageAmountBlur(scope.row,scope.row.usageAmount)\"\r\n                    :disabled=\"showDisabled\"\r\n                    v-model.number=\"scope.row.usageAmount\"\r\n                    placeholder=\"请输入\"\r\n                  ></el-input>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column\r\n                fixed=\"right\"\r\n                label-class-name=\"text-center\"\r\n                class-name=\"text-center\"\r\n                align=\"center\"\r\n                label=\"操作\"\r\n                width=\"50\"\r\n              >\r\n                <template slot-scope=\"scope\">\r\n                  <el-button\r\n                    :disabled=\"showDisabled\"\r\n                    @click=\"removeMaterialAndTechnology(scope.row.materialId,'material')\"\r\n                    type=\"text\"\r\n                    size=\"small\"\r\n                  >删除</el-button>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </div>\r\n          <!-- 原料table end  -->\r\n        </el-tab-pane>\r\n        <el-tab-pane label=\"已选工艺\" name=\"technology\">\r\n          <!-- 工艺table  -->\r\n          <div class=\"item-cont\">\r\n            <el-button size=\"small\" :disabled=\"showDisabled\" @click=\"openAddTechnology\">选择工艺</el-button>\r\n          </div>\r\n          <div class=\"mt-10\">\r\n            <el-form-item label=\"筛选分类：\">\r\n              <el-cascader\r\n                class=\"input-w\"\r\n                :options=\"attrClassData\"\r\n                v-model=\"technologyAttrCateArr\"\r\n                :value=\"technologyAttrCateArr\"\r\n                @change=\"technologyAttrCascaderGet\"\r\n                :show-all-levels=\"false\"\r\n                :props=\"props\"\r\n              ></el-cascader>\r\n            </el-form-item>\r\n            <el-form-item label=\"综合搜索：\">\r\n              <el-input class=\"input-w\" placeholder=\"名称或编码\" v-model=\"technologyForm.searchWords\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button @click=\"SPUSearch('technology',technologyForm)\">筛选</el-button>\r\n              <el-button @click=\"SPUReset('technology',technologyForm)\">重置</el-button>\r\n            </el-form-item>\r\n          </div>\r\n          <div class=\"item-table\">\r\n            <el-table\r\n              height=\"400\"\r\n              :data=\"technologyTableListData\"\r\n              stripe\r\n              empty-text=\"暂无数据\"\r\n              header-align=\"center\"\r\n              header-row-class-name=\"item-table-header\"\r\n              :highlight-current-row=\"true\"\r\n            >\r\n              <el-table-column prop=\"materialCateName\" align=\"center\" label=\"分类\" min-width=\"100\"></el-table-column>\r\n              <el-table-column prop=\"code\" align=\"center\" label=\"标准编码\" min-width=\"100\"></el-table-column>\r\n              <el-table-column prop=\"name\" align=\"center\" label=\"工艺名称\" min-width=\"100\"></el-table-column>\r\n              <el-table-column prop=\"image\" align=\"center\" label=\"图片\" width=\"80\">\r\n                <template slot-scope=\"scope\">\r\n                  <img class=\"table-img-wh\" :src=\"scope.row.image\" alt>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"unitPrice\" align=\"center\" label=\"销售价格\" min-width=\"100\"></el-table-column>\r\n              <el-table-column prop=\"usageAmount\" align=\"center\" label=\"用量\" min-width=\"120\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-input\r\n                    v-enter-number\r\n                    type=\"number\"\r\n                    @blur=\"usageAmountBlur(scope.row,scope.row.usageAmount)\"\r\n                    :disabled=\"showDisabled\"\r\n                    v-model.number=\"scope.row.usageAmount\"\r\n                    placeholder=\"请输入\"\r\n                  ></el-input>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column\r\n                fixed=\"right\"\r\n                label-class-name=\"text-center\"\r\n                class-name=\"text-center\"\r\n                align=\"center\"\r\n                label=\"操作\"\r\n                width=\"50\"\r\n              >\r\n                <template slot-scope=\"scope\">\r\n                  <el-button\r\n                    :disabled=\"showDisabled\"\r\n                    @click=\"removeMaterialAndTechnology(scope.row.materialId,'technology')\"\r\n                    type=\"text\"\r\n                    size=\"small\"\r\n                  >删除</el-button>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </div>\r\n          <!-- 工艺table   End-->\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n      <!-- 商品SKU -->\r\n      <h5 class=\"tlogy-title\">商品SKU</h5>\r\n      <div class=\"sku-wrap\">\r\n        <dl class=\"sku-item\" v-for=\"(item,index) in productGoodses\" :key=\"index\">\r\n          <dt @click.stop=\"skuEditItem(item,index)\">\r\n            <img :src=\"item.image\" class=\"sku-img-wh\">\r\n            <div class=\"abs-cont\">\r\n              <p>SKU价格：{{item.price}}</p>\r\n              <p>SKU名称：{{item.name}}</p>\r\n              <i @click.stop=\"skuIconRemove(item,index)\" class=\"el-icon-delete i-index\"></i>\r\n            </div>\r\n          </dt>\r\n          <dd class=\"mt-5\">\r\n            <el-radio\r\n              @change=\"skuRadioChange($event,item,index)\"\r\n              v-model=\"item.defaultStatus\"\r\n              :label=\"true\"\r\n            >设为默认</el-radio>\r\n          </dd>\r\n        </dl>\r\n        <nav\r\n          v-if=\"productGoodses.length <= 9 && _type != 'show'\"\r\n          @click=\"addSkuBtn\"\r\n          class=\"single-btn\"\r\n        >\r\n          <i class=\"el-icon-plus\"></i>\r\n        </nav>\r\n      </div>\r\n      <!-- 商品SKU end -->\r\n    </el-form>\r\n    <div class=\"item-footer\">\r\n      <el-button\r\n        v-if=\"_type == 'add'\"\r\n        size=\"small\"\r\n        @click=\"submitForm('filtersForm')\"\r\n        type=\"primary\"\r\n      >确定</el-button>\r\n      <el-button\r\n        v-else-if=\"_type == 'edit'\"\r\n        size=\"small\"\r\n        @click=\"submitEditForm('filtersForm')\"\r\n        type=\"primary\"\r\n      >修改</el-button>\r\n      <el-button size=\"small\" @click=\"routerback('filtersForm')\">取消</el-button>\r\n    </div>\r\n    <!-- SKU -->\r\n    <tp-new-sku\r\n      @setParentSKUData=\"getSubSKUData\"\r\n      @setParentEditSKUData=\"getSubEditSKUData\"\r\n      ref=\"skuRef\"\r\n    ></tp-new-sku>\r\n    <!-- 原料 setMaterialData 子向父穿的参数 setEchoData 父向子穿的参数  -->\r\n    <tp-material-dialog @setParentMaterialData=\"getSubMaterialList\" ref=\"materialDialogRef\"></tp-material-dialog>\r\n    <!-- 工艺 -->\r\n    <tp-technology-dialog @setParentTechnologyData=\"getSubTechnologyList\" ref=\"technologyDialogRef\"></tp-technology-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\nimport SingleMaterialDialog from \"@/components/customAttribute/single_material_dialog\";\r\nimport SingleTechnologyDialog from \"@/components/customAttribute/single_technology_dialog\";\r\nimport NewSku from \"@/components/SKUAssembly/add_new_sku\";\r\n/**\r\n * TODO  一些地方用不掉... 深复制\r\n * 如优化 需去掉\r\n */\r\n/**\r\n * 父组件已选原料镜像\r\n */\r\nlet middlewareMaterialList = [];\r\n/**\r\n * 父组件已选工艺镜像\r\n */\r\nlet middlewareTechnologyList = [];\r\n/**\r\n * 原料和工艺数据合并生成的新数据\r\n */\r\nlet materialAndTechnologyList = [];\r\nlet cusCateType=false,cusTableType=false;\r\nexport default {\r\n  data() {\r\n    return {\r\n      filtersData: {},\r\n      activeName: \"material\", //切换\r\n      rules: {\r\n        //规则验证\r\n        valid: [{ required: true, message: \"请选择状态\", trigger: \"change\" }],\r\n        name: [{ required: true, message: \"请输入商品名称\", trigger: \"blur\" },\r\n        {max:24, message: \"最长24个汉字\", trigger: \"blur\" }]\r\n      },\r\n\r\n      editDisabled: false,\r\n      showDisabled: false,\r\n      materialTableListData: [], //原料table列表\r\n      technologyTableListData: [], //工艺 table 列表\r\n      fullCateName: \"\", //分类显示\r\n      //定制分类搜索\r\n      classData: [],\r\n      classList: [],\r\n      //属性分类数据\r\n      attrClassData: [],\r\n      attrListData: [],\r\n      //定制分类\r\n      cateArr: [],\r\n      //属性分类\r\n      materialAttrCateArr: [],\r\n      //工艺分类\r\n      technologyAttrCateArr: [],\r\n      props: {\r\n        value: \"id\",\r\n        label: \"name\",\r\n        children: \"children\"\r\n      },\r\n      //原料搜索字段\r\n      materialForm: {\r\n        materialCateId: \"\",\r\n        searchWords: \"\"\r\n      },\r\n      //工艺搜索字段\r\n      technologyForm: {\r\n        materialCateId: \"\",\r\n        searchWords: \"\"\r\n      },\r\n      _type: \"\",\r\n      _id: \"\",\r\n      //定制货品信息列表\r\n      productGoodses: [],\r\n      cusPlaceholder: \"请选择定制分类\",\r\n      setCateIdentifier:\"\",//后台获取的定制分类\r\n    };\r\n  },\r\n  created() {\r\n    this.init();\r\n    this.getClassData();\r\n    this.getQueryparams();\r\n  },\r\n  methods: {\r\n    init(){\r\n      middlewareMaterialList = [];\r\n      middlewareTechnologyList = [];\r\n      materialAndTechnologyList = [];\r\n      this.filtersData={};\r\n      this.materialTableListData=[]; //原料table列表\r\n      this.technologyTableListData=[];\r\n      this.productGoodses=[];\r\n      this.materialForm={\r\n        materialCateId: \"\",\r\n        searchWords: \"\"\r\n      };\r\n      //工艺搜索字段\r\n      this.technologyForm={\r\n        materialCateId: \"\",\r\n        searchWords: \"\"\r\n      };\r\n      cusCateType=false;cusTableType=false;\r\n    },\r\n    getClassData() {\r\n      //分类类型（1：标准分类，2：定制分类，3：原料分类或者称为属性分类）\r\n      this.$common.getClassSelect(this, 2).then(res => {\r\n        this.classData = res.ztree;\r\n        this.classList = res.list;\r\n        cusCateType=true;\r\n        this.setCusCateName();\r\n      });\r\n      //获取属性分类  type 3\r\n      this.$common.getClassSelect(this, 3).then(res => {\r\n        this.attrClassData = res.ztree;\r\n        this.attrListData = res.list;\r\n\r\n      });\r\n    },\r\n    //定制分类\r\n    cascaderGet(e) {\r\n      let cateId = JSON.parse(JSON.stringify(e)).pop();\r\n      let obj = this.classList.find(item => item.id == cateId);\r\n      this.filtersData.cusCateIdentifier = obj.identifier;\r\n      this.filtersData.cusCateId = obj.id;\r\n      this.filtersData.cusCateName = obj.name;\r\n      this.filtersData.cusFullCateName = obj.fullCateName;\r\n    },\r\n    //原料属性分类\r\n    materialAttrCascaderGet(e) {\r\n      let cateId = JSON.parse(JSON.stringify(e)).pop();\r\n      let obj = this.attrListData.find(item => item.id == cateId);\r\n      this.materialForm.materialCateId = obj.id;\r\n      // this.materialForm.materialCateIdentifier = obj.identifier;\r\n    },\r\n    //工艺属性分类\r\n    technologyAttrCascaderGet(e) {\r\n      let cateId = JSON.parse(JSON.stringify(e)).pop();\r\n      let obj = this.attrListData.find(item => item.id == cateId);\r\n      this.technologyForm.materialCateId = obj.id;\r\n    },\r\n    //获取上页面参数\r\n    getQueryparams() {\r\n      let params = this.$route.query;\r\n      this._type = params._type;\r\n      this._id = params._id;\r\n      let itemStatus = this._type;\r\n      switch (itemStatus.toString()) {\r\n        case \"add\": //新增\r\n          this.editDisabled = false;\r\n          this.showDisabled = false;\r\n          this.fullCateName = params.fullCateName;\r\n          let filters = this.filtersData;\r\n          ({\r\n            cateId: filters.cateId,\r\n            cateName: filters.cateName,\r\n            cateIdentifier: filters.cateIdentifier,\r\n            fullCateName: filters.fullCateName\r\n          } = params);\r\n          break;\r\n        case \"edit\": //修改\r\n          this.editDisabled = true;\r\n          this.showDisabled = false;\r\n          this.getData();\r\n          break;\r\n        case \"show\": //查看\r\n          this.editDisabled = true;\r\n          this.showDisabled = true;\r\n          this.getData();\r\n          break;\r\n      }\r\n    },\r\n    //添加sku\r\n    addSkuBtn() {\r\n      if (middlewareMaterialList.length <= 0) {\r\n        this.$message.error(\"请选择原料\");\r\n        return false;\r\n      }\r\n      if (middlewareTechnologyList.length <= 0) {\r\n        this.$message.error(\"请选择工艺\");\r\n        return false;\r\n      }\r\n      let List = this.arrCopy(materialAndTechnologyList);\r\n      this.$refs.skuRef.popupInit(\"add\", List);\r\n    },\r\n    //获取SKU子组件返回的数据\r\n    getSubSKUData(skuData) {\r\n      this.productGoodses.push(skuData);\r\n      if (this.productGoodses.length == 1) {\r\n        this.productGoodses[0].defaultStatus = true;\r\n      }\r\n    },\r\n    //获取SKU子组件编辑后返回的数据\r\n    getSubEditSKUData(editSkuData, subType, subIndex) {\r\n      if (subType == \"edit\") {\r\n        this.productGoodses.splice(subIndex, 1, editSkuData);\r\n      }\r\n    },\r\n    //编辑当前的sku\r\n    skuEditItem(item, _index) {\r\n      if (middlewareMaterialList.length <= 0) {\r\n        this.$message.error(\"请选择原料\");\r\n        return false;\r\n      }\r\n      if (middlewareTechnologyList.length <= 0) {\r\n        this.$message.error(\"请选择工艺\");\r\n        return false;\r\n      }\r\n      let List = this.arrCopy(materialAndTechnologyList);\r\n      let skuItem = JSON.parse(JSON.stringify(item)),\r\n        skuIndex = _index;\r\n      this.$refs.skuRef.editPopupInit(\r\n        \"edit\",\r\n        List,\r\n        skuItem,\r\n        skuIndex,\r\n        this._type\r\n      );\r\n    },\r\n    //删除当前的SKU\r\n    skuIconRemove(item, _index) {\r\n      this.productGoodses.splice(_index, 1);\r\n    },\r\n    //添加原料\r\n    openAddMaterial() {\r\n      this.$refs.materialDialogRef.popupInit(\r\n        this.filtersData.cateIdentifier,\r\n        this._type,\r\n        this.arrCopy(middlewareMaterialList),\r\n        this.arrCopy(this.productGoodses)\r\n      );\r\n    },\r\n    //子组件传回的已选数据\r\n    getSubMaterialList(list, productGoodsesIds) {\r\n      console.log(list);\r\n      let subMaterialList = list;\r\n      //假如是新增的情况下 根本不需要做很多判断 直接放入\r\n      this.materialTableListData = subMaterialList;\r\n      middlewareMaterialList = [...subMaterialList];\r\n      materialAndTechnologyList = [\r\n        ...middlewareMaterialList,\r\n        ...middlewareTechnologyList\r\n      ];\r\n      this.SPUReset(\"material\", this.materialForm);\r\n      this.SPUSearch(\"material\", this.materialForm);\r\n      //删除已选SKU\r\n      this.arrRemoveSelectedSku(productGoodsesIds);\r\n    },\r\n    //添加工艺\r\n    openAddTechnology() {\r\n      //当点添加的时候 存个当前的数据\r\n      this.$refs.technologyDialogRef.popupInit(\r\n        this.filtersData.cateIdentifier,\r\n        this._type,\r\n        this.arrCopy(middlewareTechnologyList),\r\n        this.arrCopy(this.productGoodses)\r\n      );\r\n    },\r\n    //工艺添加成功后返回的数据\r\n    getSubTechnologyList(list, productGoodsesIds) {\r\n      let subMaterialList = list;\r\n      //假如是新增的情况下 根本不需要做很多判断 直接放入\r\n      this.technologyTableListData = subMaterialList;\r\n      middlewareTechnologyList = [...subMaterialList];\r\n      materialAndTechnologyList = [\r\n        ...middlewareMaterialList,\r\n        ...middlewareTechnologyList\r\n      ];\r\n      this.SPUReset(\"technology\", this.technologyForm);\r\n      this.SPUSearch(\"technology\", this.technologyForm);\r\n      //删除已选SKU\r\n      this.arrRemoveSelectedSku(productGoodsesIds);\r\n    },\r\n    //原料搜索及原料重置  TODO //以后和工艺合并\r\n    SPUSearch(SPUType, SPUForm) {\r\n      let filters = SPUForm;\r\n      if (filters.materialCateId == \"\" && filters.searchWords == \"\") {\r\n        if (SPUType == \"material\") {\r\n          this.materialTableListData = [...middlewareMaterialList];\r\n        } else {\r\n          this.technologyTableListData = [...middlewareTechnologyList];\r\n        }\r\n        filters = null;\r\n        return false;\r\n      }\r\n      //镜像数据 搜索时拿到全部的数据 也就是镜像数据;\r\n      let middleTableList =\r\n        SPUType == \"material\"\r\n          ? [...middlewareMaterialList]\r\n          : [...middlewareTechnologyList];\r\n      let filtersList = [];\r\n      if (!!filters.materialCateId) {\r\n        for (let i = 0; i < middleTableList.length; i++) {\r\n          if (\r\n            middleTableList[i].materialCateId.search(filters.materialCateId) !=\r\n            -1\r\n          ) {\r\n            filtersList.push(middleTableList[i]);\r\n           // break;\r\n          }\r\n        }\r\n      } else {\r\n        filtersList =\r\n          SPUType == \"material\"\r\n            ? [...middlewareMaterialList]\r\n            : [...middlewareTechnologyList];\r\n      }\r\n      let List = [];\r\n      if (!!filters.searchWords) {\r\n        for (let i = 0; i < filtersList.length; i++) {\r\n          let str = `${filtersList[i].name}${filtersList[i].code}`;\r\n          if (str.toUpperCase().search(filters.searchWords.toUpperCase()) != -1) {\r\n            List.push(filtersList[i]);\r\n           // break;\r\n          }\r\n        }\r\n      } else {\r\n        List = filtersList;\r\n      }\r\n      if (SPUType == \"material\") {\r\n        this.materialTableListData = List;\r\n      } else {\r\n        this.technologyTableListData = List;\r\n      }\r\n      filtersList = null;\r\n      List = null;\r\n      middleTableList = null;\r\n    },\r\n    SPUReset(SPUType, SPUForm) {\r\n      if (SPUType == \"material\") {\r\n        this.materialForm = {\r\n          materialCateId: \"\",\r\n          searchWords: \"\"\r\n        };\r\n        this.materialAttrCateArr = [];\r\n      } else {\r\n        this.technologyForm = {\r\n          materialCateId: \"\",\r\n          searchWords: \"\"\r\n        };\r\n        this.technologyAttrCateArr = [];\r\n      }\r\n    },\r\n    //新增\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          let filters = this.filtersData;\r\n          filters.productGoodses = [...this.productGoodses];\r\n          filters.productMaterials = [...materialAndTechnologyList];\r\n          console.log(this.filtersData);\r\n          this.request(\r\n            this.api.product.customizedProduct_save,\r\n            this.filtersData\r\n          ).then(data => {\r\n            this.$message.success(\"保存成功\");\r\n            setTimeout(() => {\r\n              this.routerback();\r\n            }, 500);\r\n          });\r\n        } else {\r\n          console.log(\"error submit!!\");\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    //修改保存\r\n    submitEditForm(formName) {\r\n      console.log(materialAndTechnologyList);\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          let filters = JSON.parse(JSON.stringify(this.filtersData));\r\n          //处理已选数组\r\n          let mirrorFilters = JSON.parse(JSON.stringify(this.filtersData));\r\n          let mirrorMTMR = mirrorFilters.productMaterials;\r\n          let MTMR = materialAndTechnologyList;\r\n          let deleteMTMR = []; //已删除已有ID的数据\r\n          for (let i = 0; i < mirrorMTMR.length; i++) {\r\n            let flag = false;\r\n            for (let k = 0; k < MTMR.length; k++) {\r\n              if (\r\n                mirrorMTMR[i].materialId == MTMR[k].materialId &&\r\n                MTMR[k].id != null\r\n              ) {\r\n                flag = true;\r\n              }\r\n            }\r\n            if (!flag) {\r\n              //此处是已删除的数据 但不正确 还要知道当前数据是不是删除后又新增的\r\n              mirrorMTMR[i].status = 9;\r\n              deleteMTMR.push(mirrorMTMR[i]);\r\n            }\r\n          }\r\n          //处理SKU  镜像sku数据\r\n          let mirrorPtGs = mirrorFilters.productGoodses;\r\n          //当前sku数据\r\n          let ptGs = [...this.productGoodses];\r\n          let deleteGoodses = [];\r\n          for (let i = 0; i < mirrorPtGs.length; i++) {\r\n            //镜像skuI\r\n            let mirrorPtGsMs = mirrorPtGs[i].productGoodsMaterials;\r\n            let parentFlag = false;\r\n            for (let k = 0; k < ptGs.length; k++) {\r\n              //skuk\r\n              let ptGsMs = ptGs[k].productGoodsMaterials;\r\n              //SKU已选数据判断循环\r\n              if (mirrorPtGs[i].id == ptGs[k].id && ptGs[k].id != null) {\r\n                parentFlag = true;\r\n                let deleteArr = [];\r\n                for (let o = 0; o < mirrorPtGsMs.length; o++) {\r\n                  let flag = false;\r\n                  for (let l = 0; l < ptGsMs.length; l++) {\r\n                    if (\r\n                      mirrorPtGsMs[o].materialId == ptGsMs[l].materialId &&\r\n                      ptGsMs[l].id != null\r\n                    ) {\r\n                      flag = true;\r\n                    }\r\n                  }\r\n                  if (!flag) {\r\n                    //此处是已删除的数据 但不正确 还要知道当前数据是不是删除后又新增的\r\n                    mirrorPtGsMs[o].status = 9;\r\n                    deleteArr.push(mirrorPtGsMs[o]);\r\n                  }\r\n                }\r\n                //当前的数据\r\n                ptGs[k].productGoodsMaterials = [...ptGsMs, ...deleteArr];\r\n              }\r\n              //子集循环完成\r\n            }\r\n            if (!parentFlag) {\r\n              mirrorPtGs[i].status = 9;\r\n              deleteGoodses.push(mirrorPtGs[i]);\r\n            }\r\n          }\r\n          filters.productGoodses = [...ptGs, ...deleteGoodses];\r\n          filters.productMaterials = [\r\n            ...materialAndTechnologyList,\r\n            ...deleteMTMR\r\n          ];\r\n          this.request(this.api.product.customizedProduct_save, filters).then(\r\n            data => {\r\n              this.$message.success(\"保存成功\");\r\n              setTimeout(() => {\r\n                this.routerback();\r\n              }, 500);\r\n            }\r\n          );\r\n        } else {\r\n          console.log(\"error submit!!\");\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    //删除原料数据\r\n    removeMaterialAndTechnology(itemId, listType) {\r\n      let names = [];\r\n      let productGoodses = this.productGoodses;\r\n      for (let i = 0; i < productGoodses.length; i++) {\r\n        let materials = productGoodses[i].productGoodsMaterials;\r\n        for (let k = 0; k < materials.length; k++) {\r\n          if (materials[k].materialId == itemId) {\r\n            names.push(productGoodses[i].name);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if (names.length > 0) {\r\n        let strName = names.join(\"/\");\r\n        this.$confirm(`sku${strName}已使用到该项，是否确认删除!`, \"提示\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            //删除操作的时候还需要判断 productGoodsMaterials 的长度 如果为0\r\n            for (let i = 0; i < productGoodses.length; i++) {\r\n              let materials = productGoodses[i].productGoodsMaterials;\r\n              for (let k = 0; k < materials.length; k++) {\r\n                if (materials[k].materialId == itemId) {\r\n                  materials.splice(k, 1);\r\n                  productGoodses[i].valid = false; //未使用状态\r\n                  break;\r\n                }\r\n              }\r\n            }\r\n            this.removeTableAndSku(itemId, listType);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"删除成功!\"\r\n            });\r\n          })\r\n          .catch(() => {\r\n            this.$message({\r\n              type: \"info\",\r\n              message: \"已取消删除\"\r\n            });\r\n          });\r\n      } else {\r\n        //未有用到的原料工艺直接删除\r\n        this.removeTableAndSku(itemId, listType);\r\n      }\r\n    },\r\n    //回显数据\r\n    getData() {\r\n      this.request(this.api.product.customizedProduct_get, {\r\n        id: this._id\r\n      }).then(res => {\r\n        console.log(res);\r\n        let _data = res;\r\n        this.filtersData = JSON.parse(JSON.stringify(_data));\r\n        let Materials = [..._data.productMaterials];\r\n        this.fullCateName = _data.fullCateName;\r\n\r\n        let materialsTable = [],\r\n          technologyTable = [];\r\n        for (let i = 0; i < Materials.length; i++) {\r\n          if (Materials[i].type == 2) {\r\n            materialsTable.push(Materials[i]);\r\n          } else {\r\n            technologyTable.push(Materials[i]);\r\n          }\r\n        }\r\n        //回显列表数据；\r\n        this.materialTableListData = materialsTable;\r\n        middlewareMaterialList = [...materialsTable];\r\n        this.technologyTableListData = technologyTable;\r\n        middlewareTechnologyList = [...technologyTable];\r\n        materialAndTechnologyList = [\r\n          ...middlewareMaterialList,\r\n          ...middlewareTechnologyList\r\n        ];\r\n        this.productGoodses = [..._data.productGoodses];\r\n        this.setCateIdentifier = _data.cusCateIdentifier\r\n         if(!!_data.cusCateIdentifier){\r\n          cusTableType=true;\r\n          this.setCusCateName();\r\n        }\r\n\r\n      });\r\n    },\r\n    setCusCateName(){\r\n      if(cusCateType && cusTableType){\r\n        let arr=[];\r\n        let ids=this.setCateIdentifier.split('.');\r\n        let list=this.classList,listLen=list.length;\r\n        for (let k = 0; k < ids.length; k++) {\r\n          for (let i = 0; i < listLen; i++) {\r\n            if(ids[k] == list[i].code){\r\n              arr.push(list[i].id)\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        this.cateArr=arr;\r\n      }\r\n    },\r\n    //删除操作列表和sku\r\n    removeTableAndSku(itemId, listType) {\r\n      if (listType == \"material\") {\r\n        let mlIndex = middlewareMaterialList.findIndex(\r\n          item => item.materialId == itemId\r\n        );\r\n        middlewareMaterialList.splice(mlIndex, 1);\r\n        this.materialTableListData.splice(mlIndex, 1);\r\n      } else {\r\n        let mrIndex = middlewareTechnologyList.findIndex(\r\n          item => item.materialId == itemId\r\n        );\r\n        middlewareTechnologyList.splice(mrIndex, 1);\r\n        this.technologyTableListData.splice(mrIndex, 1);\r\n      }\r\n      let mlmrIndex = materialAndTechnologyList.findIndex(\r\n        item => item.materialId == itemId\r\n      );\r\n      materialAndTechnologyList.splice(mlmrIndex, 1);\r\n    },\r\n    //数组删除SKU已选数据\r\n    arrRemoveSelectedSku(productGoodsesIds) {\r\n      let ids = new Set(productGoodsesIds);\r\n      if (ids.length > 0) {\r\n        let productGoodses = this.productGoodses;\r\n        for (let j = 0; j < ids.length; j++) {\r\n          for (let i = 0; i < productGoodses.length; i++) {\r\n            let materials = productGoodses[i].productGoodsMaterials;\r\n            for (let k = 0; k < materials.length; k++) {\r\n              if (materials[k].materialId == ids[j]) {\r\n                materials.splice(k, 1);\r\n                productGoodses[i].valid = false; //未使用状态\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    //列表用量发生变化 并计算金额\r\n    usageAmountBlur(item, _usageAmount) {\r\n      let productGoodses = this.productGoodses;\r\n      for (let i = 0; i < productGoodses.length; i++) {\r\n        let materials = productGoodses[i].productGoodsMaterials;\r\n        for (let k = 0; k < materials.length; k++) {\r\n          if (materials[k].materialId == item.materialId) {\r\n            materials[k].usageAmount = _usageAmount;\r\n            productGoodses[i].price +=\r\n              materials[k].usageAmount * materials[k].unitPrice;\r\n            console.log(productGoodses[i]);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    //单选框发生改变\r\n    skuRadioChange(elem, item, skuIndex) {\r\n      let list = this.productGoodses;\r\n      for (let i = 0; i < list.length; i++) {\r\n        list[i].defaultStatus = false;\r\n      }\r\n      item.defaultStatus = true;\r\n    },\r\n    routerGo() {\r\n      this.$router.go(-1);\r\n    },\r\n    routerback() {\r\n      if (this._type == \"edit\") {\r\n        this.$router.go(-1);\r\n      } else if (this._type == \"add\") {\r\n        this.$router.go(-2);\r\n      } else {\r\n        this.$router.go(-1);\r\n      }\r\n    },\r\n    //数组对象深拷贝\r\n    arrCopy(arr) {\r\n      let copy = [];\r\n      for (let i = 0; i < arr.length; i++) {\r\n        copy.push(JSON.parse(JSON.stringify(arr[i])));\r\n      }\r\n      return copy;\r\n    }\r\n  },\r\n\r\n  components: {\r\n    [NewSku.name]: NewSku,\r\n    [SingleMaterialDialog.name]: SingleMaterialDialog,\r\n    [SingleTechnologyDialog.name]: SingleTechnologyDialog\r\n  }\r\n};\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.sku-wrap {\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  flex-wrap: wrap;\r\n\r\n  .single-btn {\r\n    width: 150px;\r\n    height: 150px;\r\n    border: 1px dashed #c0ccda;\r\n    border-radius: 6px;\r\n    text-align: center;\r\n    cursor: pointer;\r\n    line-height: 156px;\r\n\r\n    i {\r\n      font-size: 28px;\r\n      color: #8c939d;\r\n    }\r\n  }\r\n  .single-btn:hover {\r\n    border: 1px dashed blueviolet;\r\n  }\r\n}\r\n\r\n.sku-item {\r\n  margin-right: 10px;\r\n  dt {\r\n    cursor: pointer;\r\n    width: 150px;\r\n    height: 150px;\r\n    border-radius: 6px;\r\n    position: relative;\r\n    display: table-cell; //主要是这个属性\r\n    vertical-align: middle;\r\n    text-align: center;\r\n    box-shadow: 5px 5px 5px #999;\r\n    img {\r\n      border-radius: 6px;\r\n      height: 150px;\r\n      width: auto;\r\n      max-width: 150px;\r\n    }\r\n    .abs-cont {\r\n      text-align: left;\r\n      position: absolute;\r\n      left: 0;\r\n      top: 0;\r\n      font-size: 12px;\r\n      color: #ffffff;\r\n      padding: 4px 2px 4px 4px;\r\n      border-radius: 6px;\r\n      width: 100%;\r\n      height: 100%;\r\n      background-color: #000000;\r\n      opacity: 0.5;\r\n      display: none;\r\n      transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);\r\n      i {\r\n        position: absolute;\r\n        right: 10px;\r\n        bottom: 10px;\r\n        cursor: pointer;\r\n        font-size: 18px;\r\n      }\r\n    }\r\n  }\r\n  dt:hover .abs-cont {\r\n    display: block;\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/product/format"}]}