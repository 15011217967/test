{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\product\\components\\videoPlay.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\product\\components\\videoPlay.vue","mtime":1572415123937},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nfunction secToTimer(originalSec) {\n  var min = Math.floor(originalSec / 60);\n  var sec = Math.floor(originalSec % 60);\n  var minStr = min < 10 ? \"0\".concat(min) : String(min);\n  var secStr = sec < 10 ? \"0\".concat(sec) : String(sec);\n  return \"\".concat(minStr, \":\").concat(secStr);\n}\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\nimport { faPlay, faPause, faStop, faVolumeUp, faVolumeMute, faExpand } from \"@fortawesome/free-solid-svg-icons\";\nlibrary.add(faPlay, faPause, faStop, faVolumeUp, faVolumeMute, faExpand);\nexport default {\n  name: \"video-view\",\n  data: function data() {\n    return {\n      video: null,\n      isPaused: true,\n      isMuted: false,\n      videoTime: \"00:00 / 00:00\",\n      isDragging: false,\n      isControlVisible: false,\n      hidingEvent: null,\n      videoProgress: 0,\n      draggingStartX: 0,\n      dotOffsetX: 0,\n      progress: null,\n      videoVisible: false,\n      videoUrl: null\n    };\n  },\n  computed: {\n    videoProgressPercent: function videoProgressPercent() {\n      return \"\".concat(this.videoProgress * 100, \"%\");\n    }\n  },\n  methods: {\n    init: function init() {\n      this.isPaused = true;\n      this.isMuted = false;\n      this.videoTime = \"00:00 / 00:00\";\n      this.isDragging = false;\n      this.isControlVisible = false;\n      this.hidingEvent = null;\n      this.videoProgress = 0;\n      this.draggingStartX = 0;\n      this.dotOffsetX = 0;\n      this.progress = null;\n      this.videoVisible = false;\n      this.videoUrl = null;\n    },\n    videoInit: function videoInit(_url) {\n      var _this = this;\n\n      this.videoUrl = _url;\n      this.videoVisible = true;\n      this.$nextTick(function () {\n        _this.video = _this.$refs.v;\n        _this.progress = _this.$refs.p;\n      });\n    },\n    toggleFullscreen: function toggleFullscreen() {\n      var isFullscreen = document.webkitIsFullScreen || document.fullscreen;\n\n      if (isFullscreen) {\n        var exitFunc = document.exitFullscreen || document.webkitExitFullscreen;\n        exitFunc.call(document);\n      } else {\n        var element = this.$refs.vcontainer;\n        var fullscreenFunc = element.requestFullscreen || element.webkitRequestFullScreen;\n        fullscreenFunc.call(element);\n      }\n    },\n    handleTimeUpdate: function handleTimeUpdate() {\n      this.videoTime = this.refreshTime();\n      this.videoProgress = this.video.currentTime / this.video.duration;\n    },\n    refreshTime: function refreshTime() {\n      if (!this.video) {\n        return \"\".concat(secToTimer(0), \" / \").concat(secToTimer(0));\n      }\n\n      var currTime = this.video.currentTime || 0;\n      var duration = this.video.duration || 0;\n      return \"\".concat(secToTimer(currTime), \" / \").concat(secToTimer(duration));\n    },\n    togglePlaying: function togglePlaying() {\n      if (this.video.paused) {\n        this.playVideo();\n      } else {\n        this.pauseVideo();\n      }\n    },\n    stopPlaying: function stopPlaying() {\n      this.video.currentTime = 0;\n      this.pauseVideo();\n    },\n    toggleMute: function toggleMute() {\n      this.video.muted = !this.video.muted;\n      this.isMuted = this.video.muted;\n    },\n    handleEnd: function handleEnd() {\n      this.pauseVideo();\n    },\n    playVideo: function playVideo() {\n      this.isPaused = false;\n      this.video.play();\n    },\n    pauseVideo: function pauseVideo() {\n      this.isPaused = true;\n      this.video.pause();\n    },\n    setProgress: function setProgress(x) {\n      var progressRect = this.progress.getBoundingClientRect();\n      var progressPercent = (x - progressRect.left) / progressRect.width;\n\n      if (progressPercent < 0) {\n        progressPercent = 0;\n      } else if (progressPercent > 1) {\n        progressPercent = 1;\n      }\n\n      this.video.currentTime = this.video.duration * progressPercent;\n    },\n    hideControlBar: function hideControlBar() {\n      var isFullscreen = document.webkitIsFullScreen || document.fullscreen;\n\n      if (isFullscreen) {\n        this.hideCursor();\n      }\n\n      this.isControlVisible = false;\n    },\n    showControlBar: function showControlBar() {\n      this.isControlVisible = true;\n    },\n    hideCursor: function hideCursor() {\n      document.body.style.cursor = \"none\";\n    },\n    showCursor: function showCursor() {\n      document.body.style.cursor = \"default\";\n    },\n    handleProgressClick: function handleProgressClick(event) {\n      var clickX = event.clientX;\n      this.setProgress(clickX);\n    },\n    startDragging: function startDragging(event) {\n      this.pauseVideo();\n      this.isDragging = true;\n      this.draggingStartX = event.clientX;\n    },\n    moveDragging: function moveDragging(event) {\n      if (this.isDragging) {\n        var offsetX = event.clientX - this.draggingStartX;\n        this.dotOffsetX = offsetX < 0 ? 0 : offsetX;\n        this.setProgress(event.clientX);\n      }\n    },\n    stopDragging: function stopDragging() {\n      this.isDragging = false;\n      this.dotOffsetX = 0;\n    },\n    handleMouseMove: function handleMouseMove(event) {\n      this.showControlBar();\n      this.showCursor();\n\n      if (this.hidingEvent !== null) {\n        clearInterval(this.hidingEvent);\n      }\n\n      this.hidingEvent = setInterval(this.hideControlBar, 3000);\n      this.moveDragging(event);\n    },\n    handleMouseLeave: function handleMouseLeave() {\n      this.hideControlBar();\n      this.stopDragging();\n    },\n    handleMouseEnter: function handleMouseEnter() {\n      this.showControlBar();\n    },\n    //关闭模态\n    closeDialog: function closeDialog() {\n      this.stopPlaying();\n      this.init();\n      this.videoVisible = false;\n    }\n  },\n  components: {\n    FontAwesomeIcon: FontAwesomeIcon\n  }\n};",{"version":3,"sources":["videoPlay.vue"],"names":[],"mappings":"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","sourcesContent":["<!--\r\n * @Description: 视频组件\r\n * @Author: elephant\r\n * @Date: 2019-08-15 16:09:15\r\n * @LastEditTime: 2019-08-22 19:00:48\r\n * @LastEditors: Please set LastEditors\r\n -->\r\n<template>\r\n  <el-dialog title=\"视频播放\" width=\"400px\" :before-close=\"closeDialog\" v-if=\"videoVisible\" :visible.sync=\"videoVisible\" class=\"video-wrap\" append-to-body>\r\n    <div\r\n      class=\"video\"\r\n      @pointermove.prevent=\"handleMouseMove($event)\"\r\n      @pointerup.prevent=\"stopDragging\"\r\n      @pointerleave=\"handleMouseLeave\"\r\n      @pointerenter=\"handleMouseEnter\"\r\n      ref=\"vcontainer\"\r\n    >\r\n      <video class=\"video__player\" ref=\"v\" @timeupdate=\"handleTimeUpdate\" @ended=\"handleEnd\">\r\n        <source :src=\"videoUrl\" />\r\n      </video>\r\n      <div class=\"controller\" v-show=\"isControlVisible\">\r\n        <div class=\"controller__progress-wrapper\">\r\n          <div class=\"controller__progress\" ref=\"p\" @click=\"handleProgressClick($event)\">\r\n            <div\r\n              class=\"controller__progress controller__progress--passed\"\r\n              :style=\"{width: videoProgressPercent}\"\r\n            ></div>\r\n            <div\r\n              class=\"controller__dot\"\r\n              :style=\"{left: videoProgressPercent}\"\r\n              @pointerdown=\"startDragging($event)\"\r\n            >\r\n              <div class=\"controller__inner-dot\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"controller__btn-wrapper\">\r\n          <div class=\"controller__btn\" @click=\"togglePlaying\">\r\n            <font-awesome-icon :icon=\"['fas', 'play']\" v-if=\"isPaused\"></font-awesome-icon>\r\n            <font-awesome-icon :icon=\"['fas', 'pause']\" v-else></font-awesome-icon>\r\n          </div>\r\n          <div class=\"controller__btn\" @click=\"stopPlaying\">\r\n            <font-awesome-icon :icon=\"['fas', 'stop']\"></font-awesome-icon>\r\n          </div>\r\n          <div class=\"controller__btn\" @click=\"toggleMute\">\r\n            <font-awesome-icon :icon=\"['fas', 'volume-up']\" v-if=\"isMuted\"></font-awesome-icon>\r\n            <font-awesome-icon :icon=\"['fas', 'volume-mute']\" v-else></font-awesome-icon>\r\n          </div>\r\n          <div class=\"controller__timer\">{{videoTime}}</div>\r\n          <div class=\"controller__btn controller__btn--fullscreen\" @click=\"toggleFullscreen\">\r\n            <font-awesome-icon :icon=\"['fas', 'expand']\"></font-awesome-icon>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script>\r\nfunction secToTimer(originalSec) {\r\n  const min = Math.floor(originalSec / 60);\r\n  const sec = Math.floor(originalSec % 60);\r\n  const minStr = min < 10 ? `0${min}` : String(min);\r\n  const secStr = sec < 10 ? `0${sec}` : String(sec);\r\n  return `${minStr}:${secStr}`;\r\n}\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faPause,\r\n  faStop,\r\n  faVolumeUp,\r\n  faVolumeMute,\r\n  faExpand\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlibrary.add(faPlay, faPause, faStop, faVolumeUp, faVolumeMute, faExpand);\r\n\r\nexport default {\r\n  name: \"video-view\",\r\n  data() {\r\n    return {\r\n      video: null,\r\n      isPaused: true,\r\n      isMuted: false,\r\n      videoTime: \"00:00 / 00:00\",\r\n      isDragging: false,\r\n      isControlVisible: false,\r\n      hidingEvent: null,\r\n      videoProgress: 0,\r\n      draggingStartX: 0,\r\n      dotOffsetX: 0,\r\n      progress: null,\r\n      videoVisible: false,\r\n      videoUrl: null\r\n    };\r\n  },\r\n  computed: {\r\n    videoProgressPercent() {\r\n      return `${this.videoProgress * 100}%`;\r\n    }\r\n  },\r\n  methods: {\r\n    init(){\r\n      this.isPaused= true;\r\n      this.isMuted=false;\r\n      this.videoTime= \"00:00 / 00:00\";\r\n      this.isDragging= false;\r\n      this.isControlVisible=false;\r\n      this.hidingEvent= null;\r\n      this.videoProgress= 0;\r\n      this.draggingStartX= 0;\r\n      this.dotOffsetX=0;\r\n      this.progress= null;\r\n      this.videoVisible=false;\r\n      this.videoUrl= null\r\n    },\r\n    videoInit(_url) {\r\n      this.videoUrl = _url;\r\n      this.videoVisible = true;\r\n      this.$nextTick(() => {\r\n        this.video = this.$refs.v;\r\n        this.progress = this.$refs.p;\r\n      });\r\n    },\r\n    toggleFullscreen() {\r\n      const isFullscreen = document.webkitIsFullScreen || document.fullscreen;\r\n      if (isFullscreen) {\r\n        const exitFunc =\r\n          document.exitFullscreen || document.webkitExitFullscreen;\r\n        exitFunc.call(document);\r\n      } else {\r\n        const element = this.$refs.vcontainer;\r\n        const fullscreenFunc =\r\n          element.requestFullscreen || element.webkitRequestFullScreen;\r\n        fullscreenFunc.call(element);\r\n      }\r\n    },\r\n    handleTimeUpdate() {\r\n      this.videoTime = this.refreshTime();\r\n      this.videoProgress = this.video.currentTime / this.video.duration;\r\n    },\r\n    refreshTime() {\r\n      if (!this.video) {\r\n        return `${secToTimer(0)} / ${secToTimer(0)}`;\r\n      }\r\n      const currTime = this.video.currentTime || 0;\r\n      const duration = this.video.duration || 0;\r\n      return `${secToTimer(currTime)} / ${secToTimer(duration)}`;\r\n    },\r\n    togglePlaying() {\r\n      if (this.video.paused) {\r\n        this.playVideo();\r\n      } else {\r\n        this.pauseVideo();\r\n      }\r\n    },\r\n    stopPlaying() {\r\n      this.video.currentTime = 0;\r\n      this.pauseVideo();\r\n    },\r\n    toggleMute() {\r\n      this.video.muted = !this.video.muted;\r\n      this.isMuted = this.video.muted;\r\n    },\r\n    handleEnd() {\r\n      this.pauseVideo();\r\n    },\r\n    playVideo() {\r\n      this.isPaused = false;\r\n      this.video.play();\r\n    },\r\n    pauseVideo() {\r\n      this.isPaused = true;\r\n      this.video.pause();\r\n    },\r\n    setProgress(x) {\r\n      const progressRect = this.progress.getBoundingClientRect();\r\n      let progressPercent = (x - progressRect.left) / progressRect.width;\r\n      if (progressPercent < 0) {\r\n        progressPercent = 0;\r\n      } else if (progressPercent > 1) {\r\n        progressPercent = 1;\r\n      }\r\n      this.video.currentTime = this.video.duration * progressPercent;\r\n    },\r\n    hideControlBar() {\r\n      const isFullscreen = document.webkitIsFullScreen || document.fullscreen;\r\n      if (isFullscreen) {\r\n        this.hideCursor();\r\n      }\r\n      this.isControlVisible = false;\r\n    },\r\n    showControlBar() {\r\n      this.isControlVisible = true;\r\n    },\r\n    hideCursor() {\r\n      document.body.style.cursor = \"none\";\r\n    },\r\n    showCursor() {\r\n      document.body.style.cursor = \"default\";\r\n    },\r\n    handleProgressClick(event) {\r\n      const clickX = event.clientX;\r\n      this.setProgress(clickX);\r\n    },\r\n    startDragging(event) {\r\n      this.pauseVideo();\r\n      this.isDragging = true;\r\n      this.draggingStartX = event.clientX;\r\n    },\r\n    moveDragging(event) {\r\n      if (this.isDragging) {\r\n        const offsetX = event.clientX - this.draggingStartX;\r\n        this.dotOffsetX = offsetX < 0 ? 0 : offsetX;\r\n        this.setProgress(event.clientX);\r\n      }\r\n    },\r\n    stopDragging() {\r\n      this.isDragging = false;\r\n      this.dotOffsetX = 0;\r\n    },\r\n    handleMouseMove(event) {\r\n      this.showControlBar();\r\n      this.showCursor();\r\n      if (this.hidingEvent !== null) {\r\n        clearInterval(this.hidingEvent);\r\n      }\r\n      this.hidingEvent = setInterval(this.hideControlBar, 3000);\r\n      this.moveDragging(event);\r\n    },\r\n    handleMouseLeave() {\r\n      this.hideControlBar();\r\n      this.stopDragging();\r\n    },\r\n    handleMouseEnter() {\r\n      this.showControlBar();\r\n    },\r\n    //关闭模态\r\n    closeDialog(){\r\n      this.stopPlaying();\r\n      this.init();\r\n      this.videoVisible=false;\r\n    },\r\n\r\n  },\r\n  components: {\r\n    FontAwesomeIcon\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.video {\r\n  position: relative;\r\n}\r\n.video__player {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n}\r\n.controller {\r\n  flex-direction: column;\r\n  height: 50px;\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n}\r\n.controller__btn-wrapper {\r\n  position: relative;\r\n  height: calc(100% - 5px);\r\n  display: flex;\r\n  align-items: center;\r\n  color: #fff;\r\n  padding: 0 18px;\r\n}\r\n.controller__btn {\r\n  cursor: pointer;\r\n  transition: 0.5s;\r\n  margin: 0 20px;\r\n}\r\n.controller__btn:hover {\r\n  color: #409eff;\r\n}\r\n.controller__timer {\r\n  margin-left: 15px;\r\n}\r\n.controller__btn--fullscreen {\r\n  position: absolute;\r\n  right: 15px;\r\n}\r\n.controller__progress-wrapper {\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.controller__progress {\r\n  height: 5px;\r\n  position: relative;\r\n  width: calc(100% - 30px);\r\n  border-radius: 100px;\r\n  background: #dcdcdc;\r\n  cursor: pointer;\r\n}\r\n.controller__progress--passed {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  background: #409eff;\r\n}\r\n.controller__dot {\r\n  position: absolute;\r\n  z-index: 50;\r\n  left: 0;\r\n  top: -5px;\r\n  width: 15px;\r\n  height: 15px;\r\n  border-radius: 50%;\r\n  background-color: #fff;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.controller__inner-dot {\r\n  width: 5px;\r\n  height: 5px;\r\n  border-radius: 50%;\r\n  background-color: #409eff;\r\n}\r\n.video-wrap /deep/ .el-dialog__body{\r\n    padding: 0;\r\n}\r\n.video-wrap /deep/ .el-dialog__header{\r\n    display: none;\r\n}\r\n</style>"],"sourceRoot":"src/views/product/components"}]}