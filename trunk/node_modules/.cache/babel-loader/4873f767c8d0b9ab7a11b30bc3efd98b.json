{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\product\\commodity\\commodity_details.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\product\\commodity\\commodity_details.vue","mtime":1576675736759},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["import \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _toConsumableArray from \"C:\\\\Users\\\\EDZ\\\\Desktop\\\\\\u7814\\u53D1\\u9879\\u76EE\\\\vue-project\\\\trunk\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.array.find-index\";\nimport _defineProperty from \"C:\\\\Users\\\\EDZ\\\\Desktop\\\\\\u7814\\u53D1\\u9879\\u76EE\\\\vue-project\\\\trunk\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.function.name\";\n\nvar _components;\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//引入基本信息和吊牌信息\nimport CommondityBasicAndTag from \"../components/CommondityBasicAndTag\"; //上传图片\n\nimport ElUploadImg from \"@/components/uploadImg/el_upload_img\"; //table上传图片\n\nimport UpLoadImgTP from \"@/components/uploadImg/table_upload_img.vue\"; //匹配标签\n\nimport TagMatching from \"../components/tagMatching.vue\"; //引入详情描述 图片视频\n\nimport ComDescription from \"../components/commondity_description.vue\"; //条件判断\n\nimport { numberPrice, inputNumber } from \"@/utils/validate\";\nexport default {\n  /**\r\n   * 商品详情 添加商品 修改商品 用一个页面\r\n   */\n  components: (_components = {}, _defineProperty(_components, UpLoadImgTP.name, UpLoadImgTP), _defineProperty(_components, \"ElUploadImg\", ElUploadImg), _defineProperty(_components, \"TagMatching\", TagMatching), _defineProperty(_components, CommondityBasicAndTag.name, CommondityBasicAndTag), _defineProperty(_components, \"ComDescription\", ComDescription), _components),\n  data: function data() {\n    var that = this;\n    return {\n      //顶部固定\n      local: true,\n      //顶部点击\n      toActive: \"0\",\n      topList: [{\n        title: \"基本信息\",\n        _ref: \"productFormDP\"\n      }, {\n        title: \"销售信息\",\n        _ref: \"productInfoRef\"\n      }, {\n        title: \"匹配标签\",\n        _ref: \"productTagsRef\"\n      }, {\n        title: \"商城描述\",\n        _ref: \"productDescriptionRef\"\n      }],\n      //跳页状态\n      comCode: \"\",\n      _type: \"\",\n      cateId: \"\",\n      productId: \"\",\n      //查看状态\n      editDisabled: false,\n      showDisabled: false,\n      filtersData: {},\n      //复选框数据\n      checkedSizeData: [],\n      //一下是测试数据\n      //销售信息数据\n      salesInforData: [],\n      colorProps: {\n        lazy: true,\n        lazyLoad: function lazyLoad(node, resolve) {\n          that.getColorList(node, resolve);\n        }\n      },\n      colorOptions: [],\n      allColorList: [],\n      colorArr: [],\n      //颜色已选数组\n      colorSelectData: [],\n      //  提交的时候也用这个字段 基本信息使用\n      // productInfoAttrs: [\n      //   {\n      //     productName: \"测试003\", //(商品名称/品名)\n      //     infoName: \"测02\", //(基本信息名称)\n      //     infoId: \"7ce27322-ead1-4958-8e45-4089849a1503\", //(基本信息ID)\n      //     infoAttrName: \"测02\", //(基本信息内容名称)\n      //     infoAttrId: \"7ce27322-ead1-4958-8e45-4089849a1503\" //(基本信息内容ID)\n      //   }\n      // ],\n      //后台提交数据\n      productFormData: {\n        description: \"\",\n        image: \"\",\n        //商品图片\n        originalCode: \"\",\n        //原始款号\n        cateId: \"\",\n        //分类ID\n        safetyGrade: \"\",\n        //安全类别\n        level: \"\",\n        //等级\n        performanceStandard: \"\",\n        //执行标准\n        qualityInspector: \"01\",\n        //检验员\n        designCompanyId: \"\",\n        //设计商\n        designCompanyCode: \"\",\n        designCompanyName: \"\",\n        //设计商名称\n        ownerId: '',\n        //货主ID\n        ownerCode: '',\n        ownerName: '',\n        //货主名称\n        name: \"\",\n        //品名\n        brandId: \"\",\n        //品牌ID\n        brandCode: \"\",\n        brandName: \"\",\n        //品牌名称\n        tagBrandCode: \"\",\n        //打印品牌\n        tagBrandId: \"\",\n        tagBrandName: \"\",\n        postalCode: \"\",\n        //邮编\n        brandOwnerId: \"\",\n        brandOwnerName: \"\",\n        //品牌商\n        brandOwnerCode: '',\n        bandOwnerAddress: \"\",\n        //地址\n        ingredients: \"\",\n        //配料\n        fabric: \"\",\n        //面料\n        lining: \"\",\n        //里料\n        filler: \"\",\n        //填充物\n        popularYear: \"\",\n        //流行年份\n        seasonalStyle: \"\",\n        //季节波段\n        seasonalStyleCode: \"\",\n        productInfoAttrs: null,\n        //基本信息数组\n        productGoodses: null,\n        //货品信息列表 毕传\n        productTags: null,\n        //匹配标签列表 毕传\n        productImages: null,\n        //产品图片列表\n        productVideos: null,\n        //产品视频列表\n        show: false,\n        presale: false //商品类型  true=>预售  false=>现货\n\n      },\n      //匹配标签数据\n      specificationsType: false,\n      //定义生成笛卡尔所需的数据结构 规格数据结构可以先做测试\n      specificationsData: [],\n      list: [],\n      setMinThreshold: null,\n      //设置最小预警\n      setRetailPrice: null,\n      //设置吊牌价格\n      setWholesalePrice: null,\n      //设置采购价格\n      setPurchasePrice: null,\n      //设置进货价格\n      imageUrl: \"\",\n      //图片存的字符串\n      productTags: [] //标签子组件返回的数据\n\n    };\n  },\n  created: function created() {\n    this.getParams();\n    this.getSpecifications(); //颜色\n\n    this.getColorOptions();\n    this.getAllColorList();\n  },\n  mounted: function mounted() {\n    window.addEventListener(\"scroll\", this.btn_pos);\n  },\n  methods: {\n    setNumberPrice: function setNumberPrice(_t) {\n      numberPrice(_t);\n    },\n    setNumber: function setNumber(_t) {\n      inputNumber(_t);\n    },\n\n    /**\r\n     * 1,当规格多选框发生改变时触发的事件  第一个参数 返回选中的数组  第二个参数 是在原==父数组中的下标\r\n     * 2,根据当前的数据 生成所需的数据 放入生成笛卡尔积数组\r\n     * 3,valArr//选择的数组   elem 当前数组源\r\n     */\n    handleCheckedChange: function handleCheckedChange(valArr, elem) {\n      var _this = this;\n\n      //如果当前选择有值 禁用除当前之外的筛选\n      if (valArr.length >= 1) {\n        for (var i = 0; i < this.checkedSizeData.length; i++) {\n          if (this.checkedSizeData[i].id != elem.id) {\n            this.checkedSizeData[i].disabled = true;\n          }\n        }\n      } else {\n        //否则清空禁用\n        for (var _i = 0; _i < this.checkedSizeData.length; _i++) {\n          this.checkedSizeData[_i].disabled = false;\n        }\n      }\n\n      var elem_id = elem.id;\n      var Attributes = elem.productSpecificationsAttributes;\n      var index = this.specificationsData.findIndex(function (item) {\n        return item.id == elem_id;\n      }); //因为arr每次是新的数组 对下标的数组清空处理\n\n      this.specificationsData[index].attrs = []; //找到对应的对象 放入数据\n\n      var _loop = function _loop(_i2) {\n        var checkedObj = Attributes.find(function (item) {\n          return item.id == valArr[_i2];\n        });\n\n        _this.specificationsData[index].attrs.push({\n          attrCode: checkedObj.code,\n          attrId: checkedObj.id,\n          attr: checkedObj.name,\n          attrSize: checkedObj.size\n        });\n      };\n\n      for (var _i2 = 0; _i2 < valArr.length; _i2++) {\n        _loop(_i2);\n      }\n    },\n    //颜色\n    getColorOptions: function getColorOptions() {\n      var _this2 = this;\n\n      this.request(this.api.product.colorSeries_list, {}, true).then(function (res) {\n        var _data = res.data;\n\n        var colorList = _data.map(function (item, i) {\n          return {\n            value: item.id,\n            label: item.name,\n            leaf: false\n          };\n        });\n\n        _this2.colorOptions = colorList;\n      });\n    },\n    getColorList: function getColorList(node, resolve) {\n      if (!node.value) return;\n      this.request(this.api.product.color_list, {\n        seriesId: node.value\n      }, true).then(function (res) {\n        var _data = res.data;\n\n        var colorList = _data.map(function (item, i) {\n          return {\n            value: item.code,\n            label: item.name,\n            leaf: true\n          };\n        });\n\n        resolve(colorList);\n      });\n    },\n    getAllColorList: function getAllColorList() {\n      var _this3 = this;\n\n      this.request(this.api.product.color_list, {}, true).then(function (res) {\n        var _data = res.data;\n        _this3.allColorList = _data;\n      });\n    },\n    //颜色发生改变后的数据 //改变的数据 \n    colorArrGet: function colorArrGet(valArr) {\n      if (valArr.length <= 1) {\n        this.$message({\n          type: \"info\",\n          message: \"请选择子类\"\n        });\n        return false;\n      } //找到color 的对象\n\n\n      var colorCode = this.$common.deepCopy(valArr).pop();\n      var colorObj = this.allColorList.find(function (item) {\n        return item.code == colorCode;\n      }); //找到 生成笛卡尔积  //找到 存储的对象\n\n      var spData = this.specificationsData; //console.log(spData);\n\n      var spIndex = spData.findIndex(function (item) {\n        return item.id == 'myColorId';\n      }); //先判断是否含有当前颜色 有的话 毙掉\n\n      var colorIndex = spData[spIndex].attrs.find(function (item) {\n        return item.attrCode == colorCode;\n      });\n      spData[spIndex].attrs = []; //无重复颜色\n\n      spData[spIndex].attrs.push({\n        attrCode: colorObj.code,\n        attrId: colorObj.id,\n        attr: colorObj.name\n      });\n    },\n    // 添加规格表格\n    getTable: function getTable() {\n      var _this4 = this;\n\n      this.list = []; // list  处理数组  去掉title //只存子集 attrs\n      //声明个新的原数组  深复制一下 删除空的元素\n\n      var primaryData = [];\n      this.specificationsData.forEach(function (item) {\n        if (item.attrs.length > 0) {\n          _this4.list.push(item.attrs);\n\n          primaryData.push(item);\n        }\n      }); // console.log(this.list)//获得到了子集\n      //声明空数组  递归获取的 笛卡尔积数据  [[]] 数组嵌套数组结构\n      //[0: (3) [\"红色\", \"M\", \"好\"]]\n\n      var arr = [];\n      var that = this; //定义递归方法  从获取单一字符串 改成对象\n\n      function func() {\n        var skuarr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n        var i = arguments.length > 1 ? arguments[1] : undefined;\n\n        for (var j = 0; j < that.list[i].length; j++) {\n          if (i < that.list.length - 1) {\n            skuarr[i] = that.list[i][j]; //hat.list[i][j].attr\n\n            func(skuarr, i + 1);\n          } else {\n            arr.push([].concat(_toConsumableArray(skuarr), [that.list[i][j]]));\n          }\n        }\n\n        return arr;\n      } //声明新list 等于   [0: (3) [\"红色\", \"M\", \"好\"]]\n\n\n      var newList = func([], 0);\n      var tableList = []; //group 排序好的结构 好放入 table 中调用 group\n\n      newList.forEach(function (item) {\n        var tableItem = new Object();\n        tableItem.wholesalePrice = \"\";\n        tableItem.minThreshold = \"\";\n        tableItem.retailPrice = \"\";\n        tableItem.purchasePrice = \"\";\n        tableItem.image = _this4.imageUrl;\n        tableItem.color = \"\";\n        tableItem.colorCode = \"\";\n        tableItem.size = item[0].attr;\n        tableItem.sizeCode = item[0].attrCode;\n        tableItem.sizeAttribute = item[0].attrSize;\n        tableItem.productGoodsSpecifications = [];\n\n        for (var i = 0; i < primaryData.length; i++) {\n          // console.log( primaryData[i]);\n          // console.log( item[i]);\n          if (primaryData[i].title == \"颜色\") {\n            tableItem.color = item[i].attr;\n            tableItem.colorCode = item[i].attrCode;\n          } // if (primaryData[i].id == this.specificationsData[0].id) {\n          // }\n\n\n          tableItem.productGoodsSpecifications.push({\n            specificationsId: primaryData[i].id,\n            specificationsName: primaryData[i].title,\n            specificationsAttributeId: item[i].attrId,\n            specificationsAttributeIdName: item[i].attr\n          });\n        }\n\n        tableList.push(tableItem);\n      }); //处理给颜色增加色系  真坑\n\n      var codeList = this.allColorList;\n\n      function getColorSeriesData(code, type) {\n        var obj = codeList.find(function (item) {\n          return item.code == code;\n        });\n\n        if (type == \"name\") {\n          return obj.seriesName;\n        } else {\n          return obj.seriesId;\n        }\n      }\n\n      for (var i = 0; i < tableList.length; i++) {\n        tableList[i].colorSeries = getColorSeriesData(tableList[i].colorCode, \"name\");\n        tableList[i].colorSeriesId = getColorSeriesData(tableList[i].colorCode, \"id\");\n      } // console.log(tableList);\n\n\n      var infoData = this.salesInforData,\n          infoLen = infoData.length; //table 数组\n\n      var tableListLen = tableList.length;\n\n      if (infoLen >= 1) {\n        var _this$salesInforData;\n\n        for (var _i3 = 0; _i3 < infoLen; _i3++) {\n          for (var k = 0; k < tableListLen; k++) {\n            if (infoData[_i3].colorCode == tableList[k].colorCode && infoData[_i3].sizeCode == tableList[k].sizeCode) {\n              this.$message({\n                message: \"已有重复规格：\" + tableList[k].size + \"，颜色：\" + tableList[k].color,\n                type: \"warning\"\n              });\n              return false;\n            }\n          }\n        }\n\n        (_this$salesInforData = this.salesInforData).push.apply(_this$salesInforData, tableList);\n      } else {\n        this.salesInforData = tableList;\n      }\n    },\n    //// 取到路由带过来的参数\n    getParams: function getParams() {\n      var _qurey = this.$route.query;\n      this._type = _qurey._type;\n      this.cateId = _qurey.cateId;\n      this.productId = _qurey.productId;\n      var itemStatus = _qurey._type; // console.log(itemStatus);\n\n      switch (itemStatus.toString()) {\n        case \"add\":\n          this.getBasicData(); //获取基本信息列表\n\n          this.productFormData.cateId = this.cateId;\n          this.productFormData.cateName = _qurey.cateName;\n          this.productFormData.cateIdentifier = _qurey.cateIdentifier;\n          this.productFormData.fullCateName = _qurey.fullCateName;\n          this.productFormData.cateCode = _qurey.cateCode;\n          this.editDisabled = false;\n          this.showDisabled = false;\n          break;\n\n        case \"edit\":\n          this.editDisabled = true;\n          this.showDisabled = false;\n          this.setPromiseAll();\n          break;\n\n        case \"show\":\n          this.editDisabled = true;\n          this.showDisabled = true;\n          this.setPromiseAll();\n          break;\n      }\n    },\n    //获取基本信息列表\n    getBasicData: function getBasicData() {\n      var _this5 = this;\n\n      this.request(this.api.product.productInformation_list, {\n        cateId: this.cateId,\n        subset: true,\n        valid: true\n      }).then(function (data) {\n        var _data = data.data,\n            _dataLen = _data.length; //创建数组 存入对象\n\n        var productInfo = [];\n\n        for (var i = 0; i < _dataLen; i++) {\n          var obj = {};\n          obj.productName = \"\";\n          obj.infoName = _data[i].name;\n          obj.infoId = _data[i].id;\n          obj.infoAttrName = \"\";\n          obj.infoAttrId = \"\";\n          obj._children = _data[i].productInformationAttributes;\n          obj.required = _data[i].required;\n          productInfo.push(obj);\n        } // this.productInfoAttrs = productInfo;\n\n\n        _this5.productFormData.productInfoAttrs = productInfo;\n      });\n    },\n    //基本信息存储默认值\n    basicSelectGet: function basicSelectGet(vId) {\n      var obj = {};\n      var basicData = this.productFormData.productInfoAttrs,\n          basicLen = basicData.length;\n\n      for (var i = 0; i < basicLen; i++) {\n        obj = basicData[i]._children.find(function (item) {\n          //这里的userList就是上面遍历的数据源\n          return item.id === vId; //筛选出匹配数据\n        });\n\n        if (obj) {\n          break;\n        }\n      } //找到匹配数组的下标\n\n\n      var index = this.productFormData.productInfoAttrs.findIndex(function (elem) {\n        return elem.infoAttrId == vId;\n      }); //补充数组数据\n\n      this.productFormData.productInfoAttrs[index].infoAttrName = obj.name;\n    },\n    //获取规格\n    getSpecifications: function getSpecifications() {\n      var _this6 = this;\n\n      this.request(this.api.product.productSpecifications_list, {\n        cateId: this.cateId,\n        subset: true,\n        valid: true\n      }, true).then(function (data) {\n        //获取 颜色 后 添加 生成笛卡尔所需的初始数据 specificationsData\n        var _data = data.data;\n\n        for (var i = 0; i < _data.length; i++) {\n          _data[i].checkedSizeList = [];\n          _data[i].disabled = false; //重新排序\n\n          _data[i].productSpecificationsAttributes = _data[i].productSpecificationsAttributes.sort(function (a, b) {\n            return a.sort - b.sort;\n          });\n\n          _this6.specificationsData.push({\n            title: _data[i].name,\n            id: _data[i].id,\n            attrs: []\n          });\n        }\n\n        _this6.specificationsData.push({\n          title: '颜色',\n          id: 'myColorId',\n          attrs: []\n        }); //当原数组生成好后开始操作\n\n\n        _this6.specificationsType = true;\n        _this6.checkedSizeData = _data;\n      });\n    },\n    //标签处理 懵逼处理\n    handleTags: function handleTags() {\n      var productTags = this.$common.deepCopy(this.productFormData.productTags) || [];\n      var tags = this.$common.deepCopy(this.productTags);\n      var deleteTags = [];\n\n      for (var i = 0; i < productTags.length; i++) {\n        var flag = false;\n\n        for (var k = 0; k < tags.length; k++) {\n          if (productTags[i].tagId == tags[k].tagId) {\n            flag = true;\n            tags[k] = productTags[i];\n            break;\n          }\n        }\n\n        if (!flag) {\n          productTags[i].status = 9;\n          deleteTags.push(productTags[i]);\n        }\n      }\n\n      this.productFormData.productTags = [].concat(deleteTags, _toConsumableArray(tags));\n    },\n    //新增\n    submitForm: function submitForm(formName) {\n      var _this7 = this;\n\n      if (this.salesInforData.length <= 0) {\n        this.$message({\n          message: \"货品必须录入\",\n          type: \"error\"\n        });\n        return;\n      }\n\n      this.$refs[formName].validate(function (valid, object) {\n        if (valid) {\n          //标签 处理\n          _this7.handleTags();\n\n          _this7.productFormData.productGoodses = _this7.salesInforData.length > 0 ? _this7.salesInforData : null;\n\n          if (!!_this7.productFormData.productImages) {\n            for (var i = 0; i < _this7.productFormData.productImages.length; i++) {\n              _this7.productFormData.productImages[i].productName = _this7.productFormData.name;\n            }\n          }\n\n          if (!!_this7.productFormData.productVideos) {\n            for (var _i4 = 0; _i4 < _this7.productFormData.productVideos.length; _i4++) {\n              _this7.productFormData.productVideos[_i4].productName = _this7.productFormData.name;\n            }\n          }\n\n          var josnFormData = JSON.parse(JSON.stringify(_this7.productFormData));\n          var Attrs = josnFormData.productInfoAttrs;\n\n          for (var _i5 = 0; _i5 < Attrs.length; _i5++) {\n            delete Attrs[_i5]._children;\n          }\n\n          _this7.request(_this7.api.product.product_save, josnFormData).then(function (data) {\n            _this7.$message.success(\"保存成功\");\n\n            setTimeout(function () {\n              _this7.goToReturn();\n            }, 500);\n          });\n        } else {\n          _this7.$message({\n            message: \"请填入必填字段\",\n            type: \"error\"\n          });\n\n          return false;\n        }\n      });\n    },\n    setPromiseAll: function setPromiseAll() {\n      var _this8 = this;\n\n      Promise.all([this.getShowBasicData(), this.getProductData()]).then(function (res) {\n        //获取根据ID返回的数据\n        _this8.productLogic(res[1]); //获取基本信息的数据\n\n\n        _this8.basicLogic(res[0]);\n      });\n    },\n    //修改 查看 数据\n    getProductData: function getProductData() {\n      var _this9 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this9.request(_this9.api.product.product_get, {\n          id: _this9.productId\n        }).then(function (data) {\n          resolve(data);\n        });\n      });\n    },\n    //查看时基本数据\n    getShowBasicData: function getShowBasicData() {\n      var _this10 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this10.request(_this10.api.product.productInformation_list, {\n          cateId: _this10.cateId,\n          subset: true\n        }, true).then(function (data) {\n          resolve(data);\n        });\n      });\n    },\n    //\n    basicLogic: function basicLogic(data) {\n      var _data = data.data,\n          _dataLen = _data.length;\n      var Attrs = this.productFormData.productInfoAttrs;\n\n      for (var i = 0; i < _dataLen; i++) {\n        for (var k = 0; k < Attrs.length; k++) {\n          if (_data[i].id == Attrs[k].infoId) {\n            Attrs[k]._children = _data[i].productInformationAttributes;\n            Attrs[k].required = _data[i].required;\n          }\n        }\n      }\n    },\n    //根据ID返回的数据\n    productLogic: function productLogic(data) {\n      console.log(data);\n      var _data = data;\n      this.comCode = _data.code;\n      this.productFormData = _data;\n      this.salesInforData = _data.productGoodses; //处理Tags 抽出tagId传入子组件\n\n      var tags = _data.productTags;\n      var allIds = [];\n\n      for (var i = 0; i < tags.length; i++) {\n        allIds.push({\n          tagId: tags[i].tagId\n        });\n      }\n\n      this.$refs.tagRef.propInit(this.$common.deepCopy(allIds)); //处理图片视频 放入子组件\n\n      this.$refs.descriptionRef.videoImgPropInit(this.$common.deepCopy(_data), this.showDisabled);\n    },\n    //添加sku\n    addSKU: function addSKU() {\n      if (this.specificationsType) {\n        var _data = this.specificationsData;\n        var _dataLen = _data.length;\n        var num = 0;\n\n        for (var i = 0; i < _dataLen; i++) {\n          if (_data[i].attrs.length != 0) {\n            num += 1;\n          }\n        }\n\n        if (num >= 2) {\n          this.getTable();\n        } else {\n          this.$message.error(\"缺少必要的规格！\");\n        }\n      }\n    },\n    //删除 sku\n    removeSalesInfor: function removeSalesInfor(index) {\n      this.salesInforData.splice(index, 1);\n    },\n    //上传图片\n    editSalesInforImg: function editSalesInforImg(row) {\n      this.$refs.uploadImgCpt.uploadImgPopupInit(row);\n    },\n    btn_pos: function btn_pos() {\n      //滚动条的高度\n      var scrollTop = document.body.scrollTop || document.documentElement.scrollTop; // var clientHeight=document.documentElement.clientHeight;\n      //滚动条的高度>可视区的高度\n\n      if (scrollTop > 200) {\n        this.local = false;\n      } else {\n        this.local = true;\n      }\n    },\n    //跳转某地\n    scrollToItem: function scrollToItem(item, index) {\n      if (index == this.toActive) {\n        return;\n      }\n\n      this.toActive = index; //event.currentTarget.offsetTop\n\n      var currentY = document.documentElement.scrollTop || document.body.scrollTop;\n      var topNum = null;\n\n      switch (index) {\n        case 0:\n          this.scrollAnimation(currentY, 200);\n          break;\n\n        case 1:\n          topNum = this.$refs.productInfoRef.offsetTop;\n          this.scrollAnimation(currentY, topNum - 10);\n          break;\n\n        case 2:\n          topNum = this.$refs.productTagsRef.offsetTop;\n          this.scrollAnimation(currentY, topNum - 20);\n          break;\n\n        default:\n          topNum = this.$refs.productDescriptionRef.offsetTop;\n          this.scrollAnimation(currentY, topNum - 20);\n          break;\n      }\n\n      topNum = null;\n    },\n\n    /**\r\n     * 动画垂直滚动到页面指定位置\r\n     * @param { Number } currentY 当前位置\r\n     * @param { Number } targetY 目标位置\r\n     */\n    scrollAnimation: function scrollAnimation(currentY, targetY) {\n      var _this11 = this;\n\n      // 计算需要移动的距离\n      var needScrollTop = targetY - currentY;\n      var _currentY = currentY;\n      setTimeout(function () {\n        // 一次调用滑动帧数，每次调用会不一样\n        var dist = Math.ceil(needScrollTop / 10);\n        _currentY += dist;\n        window.scrollTo(_currentY, currentY); // 如果移动幅度小于十个像素，直接移动，否则递归调用，实现动画效果\n\n        if (needScrollTop > 10 || needScrollTop < -10) {\n          _this11.scrollAnimation(_currentY, targetY);\n        } else {\n          window.scrollTo(_currentY, targetY);\n        }\n      }, 1);\n    },\n\n    /**\r\n     * @description: 商品描述\r\n     * @param {type}\r\n     * @return:\r\n     */\n    //商品描述图片返回的数据\n    descriptionImgList: function descriptionImgList(params) {\n      this.productFormData.productImages = params;\n    },\n    //商品描述视频返回的数据\n    descriptionVideoList: function descriptionVideoList(params) {\n      this.productFormData.productVideos = params;\n    },\n    //返回\n    goToReturn: function goToReturn() {\n      if (this._type == \"edit\") {\n        this.$router.go(-1);\n      } else if (this._type == \"add\") {\n        this.$router.go(-2);\n      } else {\n        this.$router.go(-1);\n      }\n    }\n  },\n  watch: {\n    //监听品名变化 放入数据中\n    \"productFormData.name\": function productFormDataName(newVal, oldVal) {\n      var _sales = this.productFormData.productInfoAttrs;\n\n      if (_sales <= 0) {\n        return;\n      }\n\n      for (var i = 0; i < _sales.length; i++) {\n        _sales[i].productName = newVal;\n      }\n    },\n    //监听table 设置价格等\n    numberChange: function numberChange(item) {\n      var _sales = this.salesInforData;\n\n      if (_sales.length <= 0) {\n        return false;\n      }\n\n      for (var i = 0; i < _sales.length; i++) {\n        _sales[i].minThreshold = item.setMinThreshold;\n        _sales[i].retailPrice = item.setRetailPrice;\n        _sales[i].wholesalePrice = item.setWholesalePrice;\n        _sales[i].purchasePrice = item.setPurchasePrice;\n      }\n    }\n  },\n  computed: {\n    //计算销售信息同设子属性\n    numberChange: function numberChange() {\n      var setMinThreshold = this.setMinThreshold,\n          setRetailPrice = this.setRetailPrice,\n          setWholesalePrice = this.setWholesalePrice,\n          setPurchasePrice = this.setPurchasePrice;\n      return {\n        setMinThreshold: setMinThreshold,\n        setRetailPrice: setRetailPrice,\n        setWholesalePrice: setWholesalePrice,\n        setPurchasePrice: setPurchasePrice\n      };\n    }\n  }\n};",{"version":3,"sources":["commodity_details.vue"],"names":[],"mappings":"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","sourcesContent":["<!--\r\n * @Description: 商品详情\r\n * @Author: elephant\r\n * @Date: 2019-07-01 15:20:22\r\n * @LastEditTime: 2019-12-18 19:43:34\r\n * @LastEditors:\r\n -->\r\n<template>\r\n  <div class=\"item-margin bg-fff item-box\">\r\n    <!-- 顶部导航 -->\r\n    <div  v-if=\"!local\" class=\"fixed-item-nav\"> \r\n     <ul>\r\n      <li\r\n        @click=\"scrollToItem(item,index)\"\r\n        :class=\"toActive == index ? 'active' :'' \"\r\n        v-for=\"(item,index) in topList\"\r\n        :key=\"index\"\r\n      >{{item.title}}</li>\r\n    </ul>\r\n    </div>\r\n    <ul class=\"item-nav\">\r\n      <li\r\n        @click=\"scrollToItem(item,index)\"\r\n        :class=\"toActive == index ? 'active' :'' \"\r\n        v-for=\"(item,index) in topList\"\r\n        :key=\"index\"\r\n      >{{item.title}}</li>\r\n    </ul>\r\n    <!-- 顶部导航END -->\r\n    <!-- 基本信息 吊牌信息 -->\r\n      <el-form :model=\"productFormData\" label-width=\"120px\" size=\"small\" ref=\"productFormDP\" inline>\r\n  <basic-and-tag \r\n  :editDisabled=\"editDisabled\"\r\n  :showDisabled=\"showDisabled\"\r\n  :productFormData=\"productFormData\">\r\n  </basic-and-tag>\r\n  </el-form>\r\n    <!-- 基本信息 吊牌信息END -->\r\n    <!-- 销售信息 -->\r\n    <h5 ref=\"productInfoRef\" class=\"info\">销售信息</h5>\r\n    <el-row>\r\n      <el-form :model=\"filtersData\" label-width=\"100px\" size=\"small\" ref=\"filtersForm\">\r\n        <el-col :span=\"24\">\r\n          <el-form-item v-if=\"_type != 'add'\" prop=\"Category\" label=\"商品款号:\">{{comCode}}</el-form-item>\r\n          <el-form-item\r\n            class=\"img-form\"\r\n            label=\"颜色：\"\r\n          >\r\n            <el-cascader\r\n              :disabled=\"showDisabled\"\r\n              class=\"input-w input-h\"\r\n              :options=\"colorOptions\"\r\n              v-model=\"colorArr\"\r\n              :value=\"colorArr\"\r\n              @change=\"colorArrGet($event)\"\r\n              :show-all-levels=\"false\"\r\n              :props=\"colorProps\"\r\n              :emitPath=\"false\"\r\n            ></el-cascader>\r\n            <el-upload-img\r\n            class=\"ml-5\"\r\n              v-if=\"!showDisabled\"\r\n              :disabled=\"showDisabled\"\r\n              lssListType=\"picture-card\"\r\n              v-model=\"imageUrl\"\r\n              CatalogName=\"product\"\r\n            ></el-upload-img>\r\n          </el-form-item>\r\n        </el-col>\r\n        <el-col :span=\"24\">\r\n          <el-form-item v-for=\"(_key,index) in checkedSizeData\" :key=\"index\" :label=\"_key.name+'：'\">\r\n            <el-checkbox-group\r\n              :disabled=\"_key.disabled\"\r\n              @change=\"handleCheckedChange($event,_key)\"\r\n              v-model=\"_key.checkedSizeList\">\r\n              <el-checkbox\r\n                v-for=\"list in _key.productSpecificationsAttributes\"\r\n                :label=\"list.id\"\r\n                :key=\"list.name\"\r\n              >{{list.name}}</el-checkbox>\r\n            </el-checkbox-group>\r\n          </el-form-item>\r\n          <el-form-item label=\" \">\r\n            <el-button size=\"small\" :disabled=\"showDisabled\" @click=\"addSKU\">添加SKU</el-button>\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-form>\r\n      <el-col :span=\"24\">\r\n        <el-form label-width=\"100px\" size=\"small\" ref=\"filtersForm\" inline>\r\n          <el-form-item label=\"设置预警：\">\r\n            <el-input\r\n              @input.native=\"setNumber($event)\"\r\n              :disabled=\"showDisabled\"\r\n              placeholder=\"请输入内容\"\r\n              v-model=\"setMinThreshold\"\r\n            ></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"吊牌价：\">\r\n            <el-input\r\n              @input.native=\"setNumberPrice($event)\"\r\n              :disabled=\"showDisabled\"\r\n              placeholder=\"请输入内容\"\r\n              v-model=\"setRetailPrice\"\r\n            ></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"采购价：\">\r\n            <el-input\r\n              @input.native=\"setNumberPrice($event)\"\r\n              :disabled=\"showDisabled\"\r\n              placeholder=\"请输入内容\"\r\n              v-model=\"setWholesalePrice\"\r\n            ></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"进货价：\">\r\n            <el-input\r\n              @input.native=\"setNumberPrice($event)\"\r\n              :disabled=\"showDisabled\"\r\n              placeholder=\"请输入内容\"\r\n              v-model=\"setPurchasePrice\"\r\n            ></el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n      </el-col>\r\n      <el-col class=\"mb-20\" :span=\"24\">\r\n        <!-- 销售信息table -->\r\n        <div class=\"item-details-table\">\r\n          <el-table\r\n            :data=\"salesInforData\"\r\n            stripe\r\n            empty-text=\"暂无数据\"\r\n            header-align=\"center\"\r\n            header-row-class-name=\"item-table-header\"\r\n            :highlight-current-row=\"true\"\r\n          >\r\n            <el-table-column prop=\"code\" align=\"center\" label=\"商品货号\" width=\"150\"></el-table-column>\r\n            <el-table-column prop=\"color\" align=\"center\" label=\"颜色\" width=\"100\"></el-table-column>\r\n            <el-table-column prop=\"size\" align=\"center\" label=\"规格信息\" min-width=\"100\"></el-table-column>\r\n            <el-table-column prop=\"image\" align=\"center\" label=\"图片\" min-width=\"100\">\r\n              <template slot-scope=\"scope\">\r\n                <img class=\"logo-wh\" :src=\"scope.row.image\" alt />\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"minThreshold\" align=\"center\" label=\"库存预警\" width=\"120\">\r\n              <template slot-scope=\"scope\">\r\n                <el-input :disabled=\"showDisabled\" v-model=\"scope.row.minThreshold\" v-enter-number></el-input>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"retailPrice\" align=\"center\" label=\"吊牌价\" width=\"120\">\r\n              <template slot-scope=\"scope\">\r\n                <el-input\r\n                  :disabled=\"showDisabled\"\r\n                  v-model=\"scope.row.retailPrice\"\r\n                  @input.native=\"setNumberPrice($event)\"\r\n                ></el-input>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"wholesalePrice\" align=\"center\" label=\"采购价\" width=\"120\">\r\n              <template slot-scope=\"scope\">\r\n                <el-input\r\n                  :disabled=\"showDisabled\"\r\n                  v-model=\"scope.row.wholesalePrice\"\r\n                  @input.native=\"setNumberPrice($event)\"\r\n                ></el-input>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"purchasePrice\" align=\"center\" label=\"进货价\" width=\"120\">\r\n              <template slot-scope=\"scope\">\r\n                <el-input\r\n                  :disabled=\"showDisabled\"\r\n                  v-model=\"scope.row.purchasePrice\"\r\n                  @input.native=\"setNumberPrice($event)\"\r\n                ></el-input>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column\r\n              v-if=\"!showDisabled\"\r\n              fixed=\"right\"\r\n              label-class-name=\"text-center\"\r\n              class-name=\"text-center\"\r\n              align=\"center\"\r\n              label=\"操作\"\r\n              width=\"120\"\r\n            >\r\n              <template slot-scope=\"scope\">\r\n                <el-button\r\n                  @click=\"editSalesInforImg(scope.row)\"\r\n                  type=\"text\"\r\n                  size=\"small\"\r\n                  v-text=\"scope.row.image == ''?'上传图片':'修改图片'\"\r\n                ></el-button>\r\n                <el-button\r\n                  v-if=\"_type == 'add'\"\r\n                  @click=\"removeSalesInfor(scope.$index)\"\r\n                  type=\"text\"\r\n                  size=\"small\"\r\n                >删除</el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </div>\r\n      </el-col>\r\n    </el-row>\r\n    <!-- 销售信息 END -->\r\n    <!-- 匹配标签 -->\r\n    <h5 ref=\"productTagsRef\" class=\"info\">匹配标签</h5>\r\n    <tag-matching v-model=\"productTags\" ref=\"tagRef\"></tag-matching>\r\n    <!-- 匹配标签 END-->\r\n    <!-- 商城描述 -->\r\n    <h5 ref=\"productDescriptionRef\" class=\"info\">商城描述</h5>\r\n    <div class=\"description-wrap\">\r\n      <com-description\r\n        @setParentImgList=\"descriptionImgList\"\r\n        @setParentVideoList=\"descriptionVideoList\"\r\n        ref=\"descriptionRef\"\r\n      ></com-description>\r\n      <div class=\"stage-wrap\">\r\n        <h5>前台展示：</h5>\r\n        <div class=\"full\">\r\n          <el-radio v-model=\"productFormData.show\" :disabled=\"showDisabled\" :label=\"true\">是</el-radio>\r\n          <el-radio v-model=\"productFormData.show\" :disabled=\"showDisabled\" :label=\"false\">否</el-radio>\r\n        </div>\r\n      </div>\r\n      <div class=\"stage-wrap\">\r\n        <h5>商品类型：</h5>\r\n        <div class=\"full\">\r\n          <el-radio v-model=\"productFormData.presale\" :disabled=\"showDisabled\" :label=\"false\">现货商品</el-radio>\r\n          <el-radio v-model=\"productFormData.presale\" :disabled=\"showDisabled\" :label=\"true\">预售商品</el-radio>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- 商城描述END -->\r\n    <div class=\"c_footer\">\r\n      <el-button\r\n        size=\"small\"\r\n        v-if=\"!showDisabled\"\r\n        type=\"primary\"\r\n        @click=\"submitForm('productFormDP')\"\r\n      >确认</el-button>\r\n      <el-button size=\"small\" @click=\"goToReturn\">取消</el-button>\r\n    </div>\r\n    <!-- 图片上传 -->\r\n    <tp-upload-img ref=\"uploadImgCpt\"></tp-upload-img>\r\n  </div>\r\n</template>\r\n<script>\r\n//引入基本信息和吊牌信息\r\nimport CommondityBasicAndTag from \"../components/CommondityBasicAndTag\";\r\n//上传图片\r\nimport ElUploadImg from \"@/components/uploadImg/el_upload_img\";\r\n//table上传图片\r\nimport UpLoadImgTP from \"@/components/uploadImg/table_upload_img.vue\";\r\n//匹配标签\r\nimport TagMatching from \"../components/tagMatching.vue\";\r\n//引入详情描述 图片视频\r\nimport ComDescription from \"../components/commondity_description.vue\";\r\n//条件判断\r\nimport { numberPrice, inputNumber } from \"@/utils/validate\";\r\nexport default {\r\n  /**\r\n   * 商品详情 添加商品 修改商品 用一个页面\r\n   */\r\n  components: {\r\n    [UpLoadImgTP.name]: UpLoadImgTP,\r\n    ElUploadImg,\r\n    TagMatching,\r\n    [CommondityBasicAndTag.name]:CommondityBasicAndTag,\r\n    ComDescription\r\n  },\r\n  data() {\r\n    let that=this;\r\n    return {\r\n      //顶部固定\r\n      local: true,\r\n      //顶部点击\r\n      toActive: \"0\",\r\n      topList: [\r\n        { title: \"基本信息\", _ref: \"productFormDP\" },\r\n        { title: \"销售信息\", _ref: \"productInfoRef\" },\r\n        { title: \"匹配标签\", _ref: \"productTagsRef\" },\r\n        { title: \"商城描述\", _ref: \"productDescriptionRef\" }\r\n      ],\r\n      //跳页状态\r\n      comCode: \"\",\r\n      _type: \"\",\r\n      cateId: \"\",\r\n      productId: \"\",\r\n      //查看状态\r\n      editDisabled: false,\r\n      showDisabled: false,\r\n      filtersData: {},\r\n      //复选框数据\r\n      checkedSizeData: [],\r\n      //一下是测试数据\r\n      //销售信息数据\r\n      salesInforData: [],\r\n      colorProps: {\r\n        lazy: true,\r\n        lazyLoad (node, resolve) {\r\n          that.getColorList(node,resolve);\r\n        }\r\n      },\r\n      colorOptions:[],\r\n      allColorList:[],\r\n      colorArr: [],\r\n      //颜色已选数组\r\n      colorSelectData: [],\r\n      //  提交的时候也用这个字段 基本信息使用\r\n      // productInfoAttrs: [\r\n      //   {\r\n      //     productName: \"测试003\", //(商品名称/品名)\r\n      //     infoName: \"测02\", //(基本信息名称)\r\n      //     infoId: \"7ce27322-ead1-4958-8e45-4089849a1503\", //(基本信息ID)\r\n      //     infoAttrName: \"测02\", //(基本信息内容名称)\r\n      //     infoAttrId: \"7ce27322-ead1-4958-8e45-4089849a1503\" //(基本信息内容ID)\r\n      //   }\r\n      // ],\r\n      //后台提交数据\r\n      productFormData: {\r\n        description: \"\",\r\n        image: \"\", //商品图片\r\n        originalCode: \"\", //原始款号\r\n        cateId: \"\", //分类ID\r\n        safetyGrade: \"\", //安全类别\r\n        level: \"\", //等级\r\n        performanceStandard: \"\", //执行标准\r\n        qualityInspector: \"01\", //检验员\r\n        designCompanyId: \"\", //设计商\r\n        designCompanyCode:\"\",\r\n        designCompanyName: \"\", //设计商名称\r\n        ownerId:'',//货主ID\r\n        ownerCode:'',\r\n        ownerName:'',//货主名称\r\n        name: \"\", //品名\r\n        brandId: \"\", //品牌ID\r\n        brandCode:\"\",\r\n        brandName: \"\", //品牌名称\r\n        tagBrandCode:\"\",//打印品牌\r\n        tagBrandId:\"\",\r\n        tagBrandName:\"\",\r\n        postalCode: \"\", //邮编\r\n        brandOwnerId:\"\",\r\n        brandOwnerName: \"\", //品牌商\r\n        brandOwnerCode:'',\r\n        bandOwnerAddress: \"\", //地址\r\n        ingredients: \"\", //配料\r\n        fabric: \"\", //面料\r\n        lining: \"\", //里料\r\n        filler: \"\", //填充物\r\n        popularYear: \"\", //流行年份\r\n        seasonalStyle: \"\", //季节波段\r\n        seasonalStyleCode:\"\",\r\n        productInfoAttrs: null, //基本信息数组\r\n        productGoodses: null, //货品信息列表 毕传\r\n        productTags: null, //匹配标签列表 毕传\r\n        productImages: null, //产品图片列表\r\n        productVideos: null, //产品视频列表\r\n        show: false,\r\n        presale:false,//商品类型  true=>预售  false=>现货\r\n      },\r\n      //匹配标签数据\r\n      specificationsType: false,\r\n      //定义生成笛卡尔所需的数据结构 规格数据结构可以先做测试\r\n      specificationsData: [],\r\n      list: [],\r\n      setMinThreshold: null, //设置最小预警\r\n      setRetailPrice: null, //设置吊牌价格\r\n      setWholesalePrice: null, //设置采购价格\r\n      setPurchasePrice: null, //设置进货价格\r\n      imageUrl: \"\", //图片存的字符串\r\n      productTags: [] //标签子组件返回的数据\r\n    };\r\n  },\r\n  created() {\r\n    this.getParams(); \r\n    this.getSpecifications();\r\n     //颜色\r\n    this.getColorOptions();\r\n    this.getAllColorList();\r\n  },\r\n  mounted() {\r\n    window.addEventListener(\"scroll\", this.btn_pos);\r\n  },\r\n  methods: {\r\n    setNumberPrice(_t) {\r\n      numberPrice(_t);\r\n    },\r\n    setNumber(_t) {\r\n      inputNumber(_t);\r\n    },\r\n    /**\r\n     * 1,当规格多选框发生改变时触发的事件  第一个参数 返回选中的数组  第二个参数 是在原==父数组中的下标\r\n     * 2,根据当前的数据 生成所需的数据 放入生成笛卡尔积数组\r\n     * 3,valArr//选择的数组   elem 当前数组源\r\n     */\r\n    handleCheckedChange(valArr, elem) {\r\n      //如果当前选择有值 禁用除当前之外的筛选\r\n      if(valArr.length >=1){\r\n          for (let i = 0; i < this.checkedSizeData.length; i++) {\r\n            if( this.checkedSizeData[i].id !=  elem.id){\r\n                this.checkedSizeData[i].disabled=true;\r\n            }\r\n          }\r\n      }else{ //否则清空禁用\r\n          for (let i = 0; i < this.checkedSizeData.length; i++) {\r\n            this.checkedSizeData[i].disabled=false;\r\n          }\r\n      }\r\n      let elem_id = elem.id;\r\n      let Attributes = elem.productSpecificationsAttributes;\r\n      let index = this.specificationsData.findIndex(item => item.id == elem_id);\r\n      //因为arr每次是新的数组 对下标的数组清空处理\r\n      this.specificationsData[index].attrs = [];\r\n      //找到对应的对象 放入数据\r\n      for (let i = 0; i < valArr.length; i++) {\r\n        let checkedObj = Attributes.find(item => item.id == valArr[i]);\r\n        this.specificationsData[index].attrs.push({\r\n          attrCode: checkedObj.code,\r\n          attrId: checkedObj.id,\r\n          attr: checkedObj.name,\r\n          attrSize: checkedObj.size\r\n        });\r\n      }\r\n    },\r\n     //颜色\r\n    getColorOptions() {\r\n      this.request(this.api.product.colorSeries_list, {},true).then(res => {\r\n        let _data = res.data;\r\n        let colorList = _data.map((item, i) => ({\r\n          value: item.id,\r\n          label: item.name,\r\n          leaf: false,\r\n          }));\r\n         this.colorOptions = colorList;\r\n      });\r\n    },\r\n     getColorList(node,resolve){\r\n      if(!node.value)return;\r\n       this.request(this.api.product.color_list, {seriesId:node.value},true)\r\n        .then(res => {\r\n          let _data = res.data;\r\n          let colorList = _data.map((item, i) => ({\r\n            value: item.code,\r\n            label: item.name,\r\n            leaf: true\r\n          }));\r\n          resolve(colorList);\r\n        })\r\n    },\r\n    getAllColorList(){\r\n      this.request(this.api.product.color_list, {},true)\r\n      .then(res => {\r\n        let _data = res.data;\r\n        this.allColorList=_data;\r\n      })\r\n    },\r\n    //颜色发生改变后的数据 //改变的数据 \r\n    colorArrGet(valArr) {\r\n      if (valArr.length <= 1) {\r\n        this.$message({\r\n          type: \"info\",\r\n          message: \"请选择子类\"\r\n        });\r\n        return false;\r\n      }\r\n      //找到color 的对象\r\n      let colorCode =this.$common.deepCopy(valArr).pop();\r\n      let colorObj = this.allColorList.find(\r\n        item => item.code == colorCode\r\n      );\r\n      //找到 生成笛卡尔积  //找到 存储的对象\r\n      let spData = this.specificationsData;\r\n      //console.log(spData);\r\n      let spIndex = spData.findIndex(item => item.id == 'myColorId');\r\n      //先判断是否含有当前颜色 有的话 毙掉\r\n      let colorIndex = spData[spIndex].attrs.find(\r\n        item => item.attrCode == colorCode\r\n      );\r\n      spData[spIndex].attrs = [];\r\n      //无重复颜色\r\n      spData[spIndex].attrs.push({\r\n        attrCode: colorObj.code,\r\n        attrId: colorObj.id,\r\n        attr: colorObj.name\r\n      });\r\n    },\r\n    // 添加规格表格\r\n    getTable() {\r\n      this.list = []; // list  处理数组  去掉title //只存子集 attrs\r\n      //声明个新的原数组  深复制一下 删除空的元素\r\n      let primaryData = [];\r\n      this.specificationsData.forEach(item => {\r\n        if (item.attrs.length > 0) {\r\n          this.list.push(item.attrs);\r\n          primaryData.push(item);\r\n        }\r\n      });\r\n      // console.log(this.list)//获得到了子集\r\n      //声明空数组  递归获取的 笛卡尔积数据  [[]] 数组嵌套数组结构\r\n      //[0: (3) [\"红色\", \"M\", \"好\"]]\r\n      var arr = [];\r\n      var that = this;\r\n      //定义递归方法  从获取单一字符串 改成对象\r\n      function func(skuarr = [], i) {\r\n        for (let j = 0; j < that.list[i].length; j++) {\r\n          if (i < that.list.length - 1) {\r\n            skuarr[i] = that.list[i][j]; //hat.list[i][j].attr\r\n            func(skuarr, i + 1);\r\n          } else {\r\n            arr.push([...skuarr, that.list[i][j]]);\r\n          }\r\n        }\r\n        return arr;\r\n      }\r\n      //声明新list 等于   [0: (3) [\"红色\", \"M\", \"好\"]]\r\n      let newList = func([], 0);\r\n      let tableList = [];\r\n      //group 排序好的结构 好放入 table 中调用 group\r\n      newList.forEach(item => {\r\n        let tableItem = new Object();\r\n        tableItem.wholesalePrice = \"\";\r\n        tableItem.minThreshold = \"\";\r\n        tableItem.retailPrice = \"\";\r\n        tableItem.purchasePrice = \"\";\r\n        tableItem.image = this.imageUrl;\r\n        tableItem.color = \"\";\r\n        tableItem.colorCode = \"\";\r\n        tableItem.size = item[0].attr;\r\n        tableItem.sizeCode = item[0].attrCode;\r\n        tableItem.sizeAttribute = item[0].attrSize;\r\n        tableItem.productGoodsSpecifications = [];\r\n        for (let i = 0; i < primaryData.length; i++) {\r\n          // console.log( primaryData[i]);\r\n          // console.log( item[i]);\r\n          if (primaryData[i].title == \"颜色\") {\r\n            tableItem.color = item[i].attr;\r\n            tableItem.colorCode = item[i].attrCode;\r\n          }\r\n          // if (primaryData[i].id == this.specificationsData[0].id) {\r\n          // }\r\n          tableItem.productGoodsSpecifications.push({\r\n            specificationsId: primaryData[i].id,\r\n            specificationsName: primaryData[i].title,\r\n            specificationsAttributeId: item[i].attrId,\r\n            specificationsAttributeIdName: item[i].attr\r\n          });\r\n        }\r\n        tableList.push(tableItem);\r\n      });\r\n      //处理给颜色增加色系  真坑\r\n      let codeList=this.allColorList;\r\n      function getColorSeriesData(code, type) {\r\n        let obj = codeList.find(item => item.code == code);\r\n        if (type == \"name\") {\r\n          return obj.seriesName;\r\n        } else {\r\n          return obj.seriesId;\r\n        }\r\n      }\r\n      for (let i = 0; i < tableList.length; i++) {\r\n        tableList[i].colorSeries = getColorSeriesData(\r\n          tableList[i].colorCode,\r\n          \"name\"\r\n        );\r\n        tableList[i].colorSeriesId = getColorSeriesData(\r\n          tableList[i].colorCode,\r\n          \"id\"\r\n        );\r\n      }\r\n      // console.log(tableList);\r\n      let infoData = this.salesInforData,\r\n        infoLen = infoData.length; //table 数组\r\n      let tableListLen = tableList.length;\r\n      if (infoLen >= 1) {\r\n        for (let i = 0; i < infoLen; i++) {\r\n          for (let k = 0; k < tableListLen; k++) {\r\n            if (\r\n              infoData[i].colorCode == tableList[k].colorCode &&\r\n              infoData[i].sizeCode == tableList[k].sizeCode\r\n            ) {\r\n              this.$message({\r\n                message:\r\n                  \"已有重复规格：\" +\r\n                  tableList[k].size +\r\n                  \"，颜色：\" +\r\n                  tableList[k].color,\r\n                type: \"warning\"\r\n              });\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n        this.salesInforData.push(...tableList);\r\n      } else {\r\n        this.salesInforData = tableList;\r\n      }\r\n    },\r\n    //// 取到路由带过来的参数\r\n    getParams() {\r\n      let _qurey = this.$route.query;\r\n      this._type = _qurey._type;\r\n      this.cateId = _qurey.cateId;\r\n      this.productId = _qurey.productId;\r\n      let itemStatus = _qurey._type;\r\n      // console.log(itemStatus);\r\n      switch (itemStatus.toString()) {\r\n        case \"add\":\r\n          this.getBasicData(); //获取基本信息列表\r\n          this.productFormData.cateId = this.cateId;\r\n          this.productFormData.cateName = _qurey.cateName;\r\n          this.productFormData.cateIdentifier = _qurey.cateIdentifier;\r\n          this.productFormData.fullCateName = _qurey.fullCateName;\r\n          this.productFormData.cateCode = _qurey.cateCode;\r\n          this.editDisabled = false;\r\n          this.showDisabled = false;\r\n          break;\r\n        case \"edit\":\r\n          this.editDisabled = true;\r\n          this.showDisabled = false;\r\n          this.setPromiseAll();\r\n          break;\r\n        case \"show\":\r\n          this.editDisabled = true;\r\n          this.showDisabled = true;\r\n          this.setPromiseAll();\r\n          break;\r\n      }\r\n    },\r\n    //获取基本信息列表\r\n    getBasicData() {\r\n      this.request(this.api.product.productInformation_list, {\r\n        cateId: this.cateId,\r\n        subset: true,\r\n        valid: true\r\n      }).then(data => {\r\n        let _data = data.data,\r\n          _dataLen = _data.length;\r\n        //创建数组 存入对象\r\n        let productInfo = [];\r\n        for (let i = 0; i < _dataLen; i++) {\r\n          let obj = {};\r\n          obj.productName = \"\";\r\n          obj.infoName = _data[i].name;\r\n          obj.infoId = _data[i].id;\r\n          obj.infoAttrName = \"\";\r\n          obj.infoAttrId = \"\";\r\n          obj._children = _data[i].productInformationAttributes;\r\n          obj.required = _data[i].required;\r\n          productInfo.push(obj);\r\n        }\r\n        // this.productInfoAttrs = productInfo;\r\n        this.productFormData.productInfoAttrs = productInfo;\r\n      });\r\n    },\r\n    //基本信息存储默认值\r\n    basicSelectGet(vId) {\r\n      let obj = {};\r\n      let basicData = this.productFormData.productInfoAttrs,\r\n        basicLen = basicData.length;\r\n      for (let i = 0; i < basicLen; i++) {\r\n        obj = basicData[i]._children.find(item => {\r\n          //这里的userList就是上面遍历的数据源\r\n          return item.id === vId; //筛选出匹配数据\r\n        });\r\n        if (obj) {\r\n          break;\r\n        }\r\n      }\r\n      //找到匹配数组的下标\r\n      let index = this.productFormData.productInfoAttrs.findIndex(\r\n        elem => elem.infoAttrId == vId\r\n      );\r\n      //补充数组数据\r\n      this.productFormData.productInfoAttrs[index].infoAttrName = obj.name;\r\n    },\r\n    //获取规格\r\n    getSpecifications() {\r\n      this.request(this.api.product.productSpecifications_list, {\r\n        cateId: this.cateId,\r\n        subset: true,\r\n        valid: true\r\n      },true).then(data => {\r\n        //获取 颜色 后 添加 生成笛卡尔所需的初始数据 specificationsData\r\n        let _data = data.data;\r\n        for (let i = 0; i < _data.length; i++) {\r\n          _data[i].checkedSizeList = [];\r\n          _data[i].disabled=false;\r\n          //重新排序\r\n          _data[i].productSpecificationsAttributes = _data[i].productSpecificationsAttributes.sort((a, b) => a.sort - b.sort);\r\n          this.specificationsData.push({\r\n            title: _data[i].name,\r\n            id: _data[i].id,\r\n            attrs: []\r\n          });\r\n        }\r\n        this.specificationsData.push({\r\n          title:'颜色',\r\n          id: 'myColorId',\r\n          attrs: []\r\n        });\r\n        //当原数组生成好后开始操作\r\n        this.specificationsType = true;\r\n        this.checkedSizeData = _data;\r\n      });\r\n    },\r\n    //标签处理 懵逼处理\r\n    handleTags() {\r\n      let productTags =\r\n        this.$common.deepCopy(this.productFormData.productTags) || [];\r\n      let tags = this.$common.deepCopy(this.productTags);\r\n      let deleteTags = [];\r\n      for (let i = 0; i < productTags.length; i++) {\r\n        let flag = false;\r\n        for (let k = 0; k < tags.length; k++) {\r\n          if (productTags[i].tagId == tags[k].tagId) {\r\n            flag = true;\r\n            tags[k] = productTags[i];\r\n            break;\r\n          }\r\n        }\r\n        if (!flag) {\r\n          productTags[i].status = 9;\r\n          deleteTags.push(productTags[i]);\r\n        }\r\n      }\r\n      this.productFormData.productTags = [...deleteTags, ...tags];\r\n    },\r\n    //新增\r\n    submitForm(formName) {\r\n      if (this.salesInforData.length <= 0) {\r\n        this.$message({\r\n          message: \"货品必须录入\",\r\n          type: \"error\"\r\n        });\r\n        return;\r\n      }\r\n      this.$refs[formName].validate((valid, object) => {\r\n        if (valid) {\r\n          //标签 处理\r\n          this.handleTags();\r\n          this.productFormData.productGoodses =\r\n            this.salesInforData.length > 0 ? this.salesInforData : null;\r\n            if(!!this.productFormData.productImages){\r\n                for (let i = 0; i < this.productFormData.productImages.length; i++) {\r\n                this.productFormData.productImages[\r\n                  i\r\n                ].productName = this.productFormData.name;\r\n              }\r\n            }\r\n            if(!!this.productFormData.productVideos){\r\n              for (let i = 0; i < this.productFormData.productVideos.length; i++) {\r\n                this.productFormData.productVideos[\r\n                  i\r\n                ].productName = this.productFormData.name;\r\n              }\r\n            }\r\n          let josnFormData = JSON.parse(JSON.stringify(this.productFormData));\r\n          let Attrs = josnFormData.productInfoAttrs;\r\n          for (let i = 0; i < Attrs.length; i++) {\r\n            delete Attrs[i]._children;\r\n          }\r\n          this.request(this.api.product.product_save, josnFormData).then(\r\n            data => {\r\n              this.$message.success(\"保存成功\");\r\n              setTimeout(() => {\r\n                this.goToReturn();\r\n              }, 500);\r\n            }\r\n          );\r\n        } else {\r\n          this.$message({\r\n            message: \"请填入必填字段\",\r\n            type: \"error\"\r\n          });\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    setPromiseAll() {\r\n      Promise.all([this.getShowBasicData(), this.getProductData()])\r\n        .then(res => {\r\n          //获取根据ID返回的数据\r\n          this.productLogic(res[1]);\r\n          //获取基本信息的数据\r\n          this.basicLogic(res[0]);\r\n        })\r\n    },\r\n    //修改 查看 数据\r\n    getProductData() {\r\n      return new Promise((resolve, reject) => {\r\n        this.request(this.api.product.product_get, { id: this.productId }).then(\r\n          data => {\r\n            resolve(data);\r\n          }\r\n        );\r\n      });\r\n    },\r\n    //查看时基本数据\r\n    getShowBasicData() {\r\n      return new Promise((resolve, reject) => {\r\n        this.request(this.api.product.productInformation_list, {\r\n          cateId: this.cateId,\r\n          subset: true\r\n        },true).then(data => {\r\n          resolve(data);\r\n        });\r\n      });\r\n    },\r\n    //\r\n    basicLogic(data) {\r\n      let _data = data.data,\r\n        _dataLen = _data.length;\r\n      let Attrs = this.productFormData.productInfoAttrs;\r\n      for (let i = 0; i < _dataLen; i++) {\r\n        for (let k = 0; k < Attrs.length; k++) {\r\n          if (_data[i].id == Attrs[k].infoId) {\r\n            Attrs[k]._children = _data[i].productInformationAttributes;\r\n            Attrs[k].required = _data[i].required;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    //根据ID返回的数据\r\n    productLogic(data) {\r\n      console.log(data);\r\n      \r\n      let _data = data;\r\n      this.comCode = _data.code;\r\n      this.productFormData = _data;\r\n      this.salesInforData = _data.productGoodses;\r\n      //处理Tags 抽出tagId传入子组件\r\n      let tags = _data.productTags;\r\n      let allIds = [];\r\n      for (let i = 0; i < tags.length; i++) {\r\n        allIds.push({ tagId: tags[i].tagId });\r\n      }\r\n      this.$refs.tagRef.propInit(this.$common.deepCopy(allIds));\r\n      //处理图片视频 放入子组件\r\n      this.$refs.descriptionRef.videoImgPropInit(this.$common.deepCopy(_data),this.showDisabled);\r\n    },\r\n    //添加sku\r\n    addSKU() {\r\n      \r\n      if (this.specificationsType) {\r\n        let _data = this.specificationsData;\r\n        let _dataLen = _data.length;\r\n        let num = 0;\r\n        for (let i = 0; i < _dataLen; i++) {\r\n          if (_data[i].attrs.length != 0) {\r\n            num += 1;\r\n          }\r\n        }\r\n        if (num >= 2) {\r\n          this.getTable();\r\n        } else {\r\n          this.$message.error(\"缺少必要的规格！\");\r\n        }\r\n      }\r\n    },\r\n    //删除 sku\r\n    removeSalesInfor(index) {\r\n      this.salesInforData.splice(index, 1);\r\n    },\r\n    //上传图片\r\n    editSalesInforImg(row) {\r\n      this.$refs.uploadImgCpt.uploadImgPopupInit(row);\r\n    },\r\n        btn_pos: function() {\r\n      //滚动条的高度\r\n      var scrollTop = document.body.scrollTop || document.documentElement.scrollTop;\r\n      // var clientHeight=document.documentElement.clientHeight;\r\n      //滚动条的高度>可视区的高度\r\n      if (scrollTop > 200) {\r\n        this.local = false;\r\n      } else {\r\n        this.local = true;\r\n      }\r\n    },\r\n    //跳转某地\r\n    scrollToItem(item, index) {\r\n      if(index == this.toActive){\r\n        return;\r\n      }\r\n      this.toActive = index; //event.currentTarget.offsetTop\r\n      const currentY = document.documentElement.scrollTop || document.body.scrollTop;\r\n      let topNum = null;\r\n      switch (index) {\r\n        case 0:\r\n          this.scrollAnimation(currentY, 200);\r\n          break;\r\n        case 1:\r\n          topNum = this.$refs.productInfoRef.offsetTop;\r\n          this.scrollAnimation(currentY, topNum-10);\r\n          break;\r\n        case 2:\r\n          topNum = this.$refs.productTagsRef.offsetTop;\r\n          this.scrollAnimation(currentY, topNum-20);\r\n          break;\r\n        default:\r\n          topNum = this.$refs.productDescriptionRef.offsetTop;\r\n          this.scrollAnimation(currentY, topNum-20);\r\n          break;\r\n      }\r\n      topNum=null;\r\n    },\r\n    /**\r\n     * 动画垂直滚动到页面指定位置\r\n     * @param { Number } currentY 当前位置\r\n     * @param { Number } targetY 目标位置\r\n     */\r\n    scrollAnimation(currentY, targetY) {\r\n      // 计算需要移动的距离\r\n      let needScrollTop = targetY - currentY;\r\n      let _currentY = currentY;\r\n      setTimeout(() => {\r\n        // 一次调用滑动帧数，每次调用会不一样\r\n        const dist = Math.ceil(needScrollTop / 10);\r\n        _currentY += dist;\r\n        window.scrollTo(_currentY, currentY);\r\n        // 如果移动幅度小于十个像素，直接移动，否则递归调用，实现动画效果\r\n        if (needScrollTop > 10 || needScrollTop < -10) {\r\n          this.scrollAnimation(_currentY, targetY);\r\n        } else {\r\n          window.scrollTo(_currentY, targetY);\r\n        }\r\n      }, 1);\r\n    },\r\n    /**\r\n     * @description: 商品描述\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    //商品描述图片返回的数据\r\n    descriptionImgList(params) {\r\n      this.productFormData.productImages = params;\r\n    },\r\n    //商品描述视频返回的数据\r\n    descriptionVideoList(params) {\r\n      this.productFormData.productVideos = params;\r\n    },\r\n    //返回\r\n    goToReturn() {\r\n      if (this._type == \"edit\") {\r\n        this.$router.go(-1);\r\n      } else if (this._type == \"add\") {\r\n        this.$router.go(-2);\r\n      } else {\r\n        this.$router.go(-1);\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    //监听品名变化 放入数据中\r\n    \"productFormData.name\": function(newVal, oldVal) {\r\n      let _sales = this.productFormData.productInfoAttrs;\r\n      if (_sales <= 0) {\r\n        return;\r\n      }\r\n      for (let i = 0; i < _sales.length; i++) {\r\n        _sales[i].productName = newVal;\r\n      }\r\n    },\r\n    //监听table 设置价格等\r\n    numberChange(item) {\r\n      let _sales = this.salesInforData;\r\n      if (_sales.length <= 0) {\r\n        return false;\r\n      }\r\n      for (let i = 0; i < _sales.length; i++) {\r\n        _sales[i].minThreshold = item.setMinThreshold;\r\n        _sales[i].retailPrice = item.setRetailPrice;\r\n        _sales[i].wholesalePrice = item.setWholesalePrice;\r\n        _sales[i].purchasePrice = item.setPurchasePrice;\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    //计算销售信息同设子属性\r\n    numberChange() {\r\n      const {\r\n        setMinThreshold,\r\n        setRetailPrice,\r\n        setWholesalePrice,\r\n        setPurchasePrice\r\n      } = this;\r\n      return {\r\n        setMinThreshold,\r\n        setRetailPrice,\r\n        setWholesalePrice,\r\n        setPurchasePrice\r\n      };\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.item-box {\r\n  padding: 0 30px 30px;\r\n}\r\n.fixed-item-nav {\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  z-index: 1030;\r\n  height: 64px;\r\n  width: 100%;\r\n  padding: 0 18px 0 212px;\r\n  font-size: 20px;\r\n \r\n  >ul{\r\n     background: #ffffff;\r\n     height: 64px;\r\n  width: 100%;\r\n   color: #333333;\r\n  display: flex;\r\n  padding-left: 20px;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  border-bottom: 1px solid #c3c7ce;\r\n  }\r\n  li {\r\n    cursor: pointer;\r\n    font-weight: bold;\r\n    margin-right: 50px;\r\n  }\r\n\r\n  li.active {\r\n    color: #2290e8;\r\n  }\r\n\r\n  li:hover {\r\n    color: #2290e8;\r\n  }\r\n}\r\n\r\n.item-nav {\r\n  height: 64px;\r\n  font-size: 20px;\r\n  color: #333333;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  border-bottom: 1px solid #c3c7ce;\r\n  li {\r\n    cursor: pointer;\r\n    font-weight: bold;\r\n    margin-right: 50px;\r\n  }\r\n\r\n  li.active {\r\n    color: #2290e8;\r\n  }\r\n\r\n  li:hover {\r\n    color: #2290e8;\r\n  }\r\n}\r\n\r\n.basic-wrap {\r\n  margin-top: 25px;\r\n}\r\n\r\n.info {\r\n  font-size: 18px;\r\n  color: #000000;\r\n  margin-bottom: 20px;\r\n  border-bottom: 1px solid #eeeeee;\r\n  font-weight: 100;\r\n}\r\nspan {\r\n  font-size: 16px;\r\n  color: #999999;\r\n  margin-left: 10px;\r\n  font-weight: 100;\r\n}\r\n\r\n.avatar-uploader .el-upload {\r\n  border: 1px dashed #d9d9d9;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.avatar-uploader .el-upload:hover {\r\n  border-color: #409eff;\r\n}\r\n\r\n.c_footer {\r\n  width: 100%;\r\n  height: 80px;\r\n  margin-top: 30px;\r\n}\r\n.img-form {\r\n  /deep/.el-form-item__content {\r\n    display: flex;\r\n    align-items: top;\r\n    justify-content: flex-start;\r\n    .input-w {\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n}\r\n.input-w {\r\n  margin-right: 10px;\r\n}\r\n\r\n.img-upload {\r\n  display: flex;\r\n  align-items: top;\r\n  justify-content: flex-start;\r\n  margin-right: 10px;\r\n  /deep/ .el-upload-list--picture {\r\n    margin-left: 10px;\r\n    margin-top: -10px;\r\n    max-width: 200px;\r\n    margin-right: 10px;\r\n  }\r\n}\r\n.el-icon-error {\r\n  padding-top: 8px;\r\n}\r\n.description-wrap {\r\n  .label {\r\n    font-size: 14px;\r\n    color: #000000;\r\n  }\r\n}\r\n// 外部\r\n.stage-wrap {\r\n  display: flex;\r\n  width: 100%;\r\n  margin-top: 20px;\r\n  justify-content: flex-start;\r\n  flex-wrap: wrap;\r\n  > h5 {\r\n    font-size: 14px;\r\n    font-weight: 100;\r\n    width: 80px;\r\n    flex: 0 0 auto;\r\n  }\r\n  .full {\r\n    min-width: 500px;\r\n    flex: 1;\r\n  }\r\n}\r\n.input-h{\r\n  height: 35px;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/product/commodity"}]}