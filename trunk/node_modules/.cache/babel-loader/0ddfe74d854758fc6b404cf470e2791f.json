{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\store\\modules\\codeSet.js","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\store\\modules\\codeSet.js","mtime":1572415123467},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\EDZ\\\\Desktop\\\\\\u7814\\u53D1\\u9879\\u76EE\\\\vue-project\\\\trunk\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\Users\\\\EDZ\\\\Desktop\\\\\\u7814\\u53D1\\u9879\\u76EE\\\\vue-project\\\\trunk\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\n\nvar _actions;\n\nimport * as api from '@/api/system';\nimport * as types from '@/types/codeset';\n\nfunction getData() {\n  var da = localStorage.getItem(types.cache_key_codeset);\n\n  if (da) {\n    return JSON.parse(da);\n  }\n\n  return da;\n}\n\nfunction setData(data) {\n  localStorage.removeItem(types.cache_key_codeset);\n  var localVal = {};\n\n  if (data) {\n    data.forEach(function (f) {\n      var item = {\n        id: f.id,\n        // name: f.name,\n        nameCn: f.nameCn,\n        codeItemList: f.codeItemList.map(function (m) {\n          return {\n            parentId: f.id,\n            parentCode: m.parentCode ? m.parentCode : null,\n            codeId: m.id,\n            code: m.code,\n            name: m.name,\n            shortName: m.shortName,\n            sort: m.sort // type: m.type,\n\n          };\n        })\n      };\n      localVal[f.name] = item;\n    });\n    localStorage.setItem(types.cache_key_codeset, JSON.stringify(localVal));\n  }\n\n  return localVal;\n}\n\nvar state = _defineProperty({}, types.STATE_CODES, getData());\n\nvar mutations = _defineProperty({}, types.FN_SET_DATA, function (state, data) {\n  var val = setData(data);\n  state.codes = val;\n});\n\nvar actions = (_actions = {}, _defineProperty(_actions, types.FN_SET_DATA, function (_ref, data) {\n  var commit = _ref.commit;\n  commit(types.FN_SET_DATA, data);\n}), _defineProperty(_actions, types.FN_LOAD_DATA, function () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(_ref2) {\n    var commit, dispatch, list;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            commit = _ref2.commit, dispatch = _ref2.dispatch;\n            _context.next = 3;\n            return this._vm.request(api.ALL_CODESET_POST, {}, true).catch(function (err) {\n              console.error(\"获取重要字典数据失败,为不影响正常使用,请重新登录\");\n            });\n\n          case 3:\n            list = _context.sent;\n            commit(types.FN_SET_DATA, list);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, types.FN_FILTER_DATA, function (_ref4, key) {\n  var state = _ref4.state;\n  var curS = state[types.STATE_CODES];\n  return curS[key];\n}), _actions);\n\nvar getters = _defineProperty({}, types.GETTER_CODES, function (state) {\n  return state[types.STATE_CODES];\n});\n\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};",{"version":3,"sources":["C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\store\\modules\\codeSet.js"],"names":["api","types","getData","da","localStorage","getItem","cache_key_codeset","JSON","parse","setData","data","removeItem","localVal","forEach","f","item","id","nameCn","codeItemList","map","m","parentId","parentCode","codeId","code","name","shortName","sort","setItem","stringify","state","STATE_CODES","mutations","FN_SET_DATA","val","codes","actions","commit","FN_LOAD_DATA","dispatch","_vm","request","ALL_CODESET_POST","catch","err","console","error","list","FN_FILTER_DATA","key","curS","getters","GETTER_CODES"],"mappings":"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","sourcesContent":["import * as api from '@/api/system'\r\nimport * as types from '@/types/codeset'\r\n\r\nfunction getData() {\r\n    var da = localStorage.getItem(types.cache_key_codeset);\r\n    if (da) {\r\n        return JSON.parse(da);\r\n    }\r\n    return da;\r\n}\r\nfunction setData(data) {\r\n    localStorage.removeItem(types.cache_key_codeset);\r\n    let localVal = {};\r\n    if (data) {\r\n        data.forEach(f => {\r\n            let item = {\r\n                id: f.id,\r\n                // name: f.name,\r\n                nameCn: f.nameCn,\r\n                codeItemList: f.codeItemList.map((m) => {\r\n                    return {\r\n                        parentId:f.id,\r\n                        parentCode:m.parentCode?m.parentCode:null,\r\n                        codeId: m.id,\r\n                        code: m.code,\r\n                        name: m.name,\r\n                        shortName: m.shortName,\r\n                        sort: m.sort,\r\n                        // type: m.type,\r\n                    }\r\n                })\r\n            };\r\n            localVal[f.name] = item;\r\n        });\r\n        localStorage.setItem(types.cache_key_codeset, JSON.stringify(localVal));\r\n    }\r\n    return localVal;\r\n}\r\n\r\nconst state = {\r\n    [types.STATE_CODES]: getData(),\r\n};\r\n\r\nconst mutations = {\r\n    [types.FN_SET_DATA](state, data) {\r\n        let val = setData(data);\r\n        state.codes = val;\r\n    }\r\n};\r\n\r\nconst actions = {\r\n    [types.FN_SET_DATA]({ commit }, data) {\r\n        commit(types.FN_SET_DATA, data);\r\n    },\r\n    async [types.FN_LOAD_DATA]({ commit, dispatch }) {\r\n        let list = await this._vm.request(api.ALL_CODESET_POST, {}, true).catch(err => { console.error(\"获取重要字典数据失败,为不影响正常使用,请重新登录\") });\r\n        commit(types.FN_SET_DATA, list);\r\n    },\r\n    [types.FN_FILTER_DATA]({ state }, key) {\r\n        var curS = state[types.STATE_CODES];\r\n        return curS[key];\r\n    }\r\n};\r\n\r\nconst getters = {\r\n    [types.GETTER_CODES](state) {\r\n        return state[types.STATE_CODES];\r\n    }\r\n};\r\n\r\nexport default {\r\n    state,\r\n    mutations,\r\n    actions,\r\n    getters\r\n}"]}]}