{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\permission.js","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\permission.js","mtime":1578883917173},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\EDZ\\\\Desktop\\\\\\u7814\\u53D1\\u9879\\u76EE\\\\vue-project\\\\trunk\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport Vue from 'vue';\nimport router from \"./router\";\nimport store from \"./store\";\nimport * as auth from '@/utils/auth'; // 登录白名单\n\nvar loginWhiteList = ['/', '/login/login_new', '/login/find', '/login/register']; // 页面白名单\n\nvar pageWhiteList = ['/allManagement', '/applicationVersion/version/version_list', '/applicationVersion/version/upgrade_list', '/applicationVersion/version/add_version', '/applicationVersion/version/edit_version', '/applicationVersion/version/add_upgrade', '/applicationVersion/version/edit_upgrade', '/router/config', '/share/product_list']; // 全部白名单\n\nvar whiteList = [].concat(loginWhiteList, pageWhiteList); // 路由拦截器\n\nrouter.beforeEach(\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(to, from, next) {\n    var checkToken, whiteFlag, redirect, loginWhiteFlag, pageWhiteFlag, permissionRoutes, moduleMenu, keepAlive, menuId, subMenu, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, menuItem, toPathSplit, allModules, moduleInfo, modulePath, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, moduleItem, moduleRoutes;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // 是否有token\n            checkToken = auth.checkToken();\n\n            if (checkToken) {\n              _context.next = 6;\n              break;\n            }\n\n            // 判断是否白名单\n            whiteFlag = whiteList.includes(to.path);\n\n            if (whiteFlag) {\n              next();\n            } else {\n              redirect = to.fullPath;\n              router.replace({\n                path: '/login/login_new',\n                query: {\n                  redirect: redirect\n                }\n              });\n            }\n\n            _context.next = 91;\n            break;\n\n          case 6:\n            // 判断是否登录白名单\n            loginWhiteFlag = loginWhiteList.includes(to.path); // 判断是否页面白名单\n\n            pageWhiteFlag = pageWhiteList.includes(to.path);\n\n            if (!loginWhiteFlag) {\n              _context.next = 12;\n              break;\n            }\n\n            next({\n              path: \"/home\"\n            });\n            _context.next = 91;\n            break;\n\n          case 12:\n            if (!(to.path === \"/home\" || pageWhiteFlag)) {\n              _context.next = 16;\n              break;\n            }\n\n            next();\n            _context.next = 91;\n            break;\n\n          case 16:\n            // 判断是否有路由权限\n            permissionRoutes = store.getters.permissionRoutes;\n            moduleMenu = store.getters.permissionMenus;\n\n            if (!(permissionRoutes && permissionRoutes.length > 0)) {\n              _context.next = 53;\n              break;\n            }\n\n            // 判断是否缓存页面\n            keepAlive = to.meta.keepAlive;\n\n            if (keepAlive) {\n              store.dispatch('cachedViews/cachedViewAdd', to.name);\n            } // 设置header选中的menuId 和 设置左侧菜单\n\n\n            menuId = to.meta.parentId, subMenu = [];\n            _iteratorNormalCompletion = true;\n            _didIteratorError = false;\n            _iteratorError = undefined;\n            _context.prev = 25;\n            _iterator = moduleMenu[Symbol.iterator]();\n\n          case 27:\n            if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n              _context.next = 35;\n              break;\n            }\n\n            menuItem = _step.value;\n\n            if (!(menuItem.id === menuId)) {\n              _context.next = 32;\n              break;\n            }\n\n            subMenu = menuItem.sublist;\n            return _context.abrupt(\"break\", 35);\n\n          case 32:\n            _iteratorNormalCompletion = true;\n            _context.next = 27;\n            break;\n\n          case 35:\n            _context.next = 41;\n            break;\n\n          case 37:\n            _context.prev = 37;\n            _context.t0 = _context[\"catch\"](25);\n            _didIteratorError = true;\n            _iteratorError = _context.t0;\n\n          case 41:\n            _context.prev = 41;\n            _context.prev = 42;\n\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n\n          case 44:\n            _context.prev = 44;\n\n            if (!_didIteratorError) {\n              _context.next = 47;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 47:\n            return _context.finish(44);\n\n          case 48:\n            return _context.finish(41);\n\n          case 49:\n            store.dispatch('permission/setSubMenuInfo', {\n              menuId: menuId,\n              subMenu: subMenu\n            });\n            Vue.prototype.$nextTick(function () {\n              next();\n            });\n            _context.next = 91;\n            break;\n\n          case 53:\n            // 获取模块信息\n            toPathSplit = to.path.split('/'); // 获取有权限的中台\n\n            _context.next = 56;\n            return Vue.prototype.request(Vue.prototype.api.system.APPLICATION_GETLISTBYAUTH, {});\n\n          case 56:\n            allModules = _context.sent;\n            // 模块信息\n            moduleInfo = {};\n            modulePath = \"/\".concat(toPathSplit[1]);\n            _iteratorNormalCompletion2 = true;\n            _didIteratorError2 = false;\n            _iteratorError2 = undefined;\n            _context.prev = 62;\n            _iterator2 = allModules[Symbol.iterator]();\n\n          case 64:\n            if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n              _context.next = 72;\n              break;\n            }\n\n            moduleItem = _step2.value;\n\n            if (!(moduleItem.routePath === modulePath)) {\n              _context.next = 69;\n              break;\n            }\n\n            moduleInfo = moduleItem;\n            return _context.abrupt(\"break\", 72);\n\n          case 69:\n            _iteratorNormalCompletion2 = true;\n            _context.next = 64;\n            break;\n\n          case 72:\n            _context.next = 78;\n            break;\n\n          case 74:\n            _context.prev = 74;\n            _context.t1 = _context[\"catch\"](62);\n            _didIteratorError2 = true;\n            _iteratorError2 = _context.t1;\n\n          case 78:\n            _context.prev = 78;\n            _context.prev = 79;\n\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n\n          case 81:\n            _context.prev = 81;\n\n            if (!_didIteratorError2) {\n              _context.next = 84;\n              break;\n            }\n\n            throw _iteratorError2;\n\n          case 84:\n            return _context.finish(81);\n\n          case 85:\n            return _context.finish(78);\n\n          case 86:\n            _context.next = 88;\n            return store.dispatch('permission/getModuleRoutes', moduleInfo);\n\n          case 88:\n            moduleRoutes = _context.sent;\n            router.addRoutes(moduleRoutes);\n            router.replace({\n              path: to.path,\n              query: to.query\n            });\n\n          case 91:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[25, 37, 41, 49], [42,, 44, 48], [62, 74, 78, 86], [79,, 81, 85]]);\n  }));\n\n  return function (_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}());",{"version":3,"sources":["C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\permission.js"],"names":["Vue","router","store","auth","loginWhiteList","pageWhiteList","whiteList","beforeEach","to","from","next","checkToken","whiteFlag","includes","path","redirect","fullPath","replace","query","loginWhiteFlag","pageWhiteFlag","permissionRoutes","getters","moduleMenu","permissionMenus","length","keepAlive","meta","dispatch","name","menuId","parentId","subMenu","menuItem","id","sublist","prototype","$nextTick","toPathSplit","split","request","api","system","APPLICATION_GETLISTBYAUTH","allModules","moduleInfo","modulePath","moduleItem","routePath","moduleRoutes","addRoutes"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport router from './router'\nimport store from './store'\nimport * as auth from '@/utils/auth'\n\n// 登录白名单\nconst loginWhiteList = ['/', '/login/login_new', '/login/find','/login/register'];\n// 页面白名单\nconst pageWhiteList = ['/allManagement', '/applicationVersion/version/version_list', '/applicationVersion/version/upgrade_list', '/applicationVersion/version/add_version', '/applicationVersion/version/edit_version', '/applicationVersion/version/add_upgrade', '/applicationVersion/version/edit_upgrade', '/router/config','/share/product_list' ];\n// 全部白名单\nconst whiteList = [...loginWhiteList, ...pageWhiteList];\n\n// 路由拦截器\nrouter.beforeEach(async (to, from, next) => {\n  // 是否有token\n  let checkToken = auth.checkToken();\n  if(!checkToken){\n    // 判断是否白名单\n    let whiteFlag = whiteList.includes(to.path);\n    if(whiteFlag) {\n      next();\n    }else {\n      let redirect = to.fullPath;\n      router.replace({path: '/login/login_new',query: { redirect: redirect }});\n    }\n  } else {\n    // 判断是否登录白名单\n    let loginWhiteFlag = loginWhiteList.includes(to.path);\n    // 判断是否页面白名单\n    let pageWhiteFlag = pageWhiteList.includes(to.path);\n    if(loginWhiteFlag) {\n      next({ path: \"/home\" });\n    }else if(to.path === \"/home\" || pageWhiteFlag) {\n      next();\n    }else {\n      // 判断是否有路由权限\n      const permissionRoutes = store.getters.permissionRoutes;\n      const moduleMenu = store.getters.permissionMenus;\n      if(permissionRoutes && permissionRoutes.length > 0){\n        // 判断是否缓存页面\n        let keepAlive = to.meta.keepAlive;\n        if(keepAlive){\n          store.dispatch('cachedViews/cachedViewAdd', to.name);\n        }\n        // 设置header选中的menuId 和 设置左侧菜单\n        let menuId = to.meta.parentId, subMenu = [];\n        for(let menuItem of moduleMenu){\n          if(menuItem.id === menuId){\n            subMenu = menuItem.sublist;\n            break;\n          }\n        }\n        store.dispatch('permission/setSubMenuInfo', {menuId, subMenu});\n        Vue.prototype.$nextTick(() => {\n          next();\n        })\n      }else {\n        // 获取模块信息\n        let toPathSplit = to.path.split('/');\n        // 获取有权限的中台\n        let allModules = await Vue.prototype.request(Vue.prototype.api.system.APPLICATION_GETLISTBYAUTH, {});\n        // 模块信息\n        let moduleInfo = {};\n        let modulePath = `/${toPathSplit[1]}`;\n        for (let moduleItem of allModules) {\n          if (moduleItem.routePath === modulePath) {\n            moduleInfo = moduleItem;\n            break\n          }\n        }\n        // 获取路由\n        const moduleRoutes = await store.dispatch('permission/getModuleRoutes', moduleInfo);\n        router.addRoutes(moduleRoutes);\n        router.replace({path:to.path, query: to.query});\n      }\n    }\n\n  }\n})\n\n"]}]}