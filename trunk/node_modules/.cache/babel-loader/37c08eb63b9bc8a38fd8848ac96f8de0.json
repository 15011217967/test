{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\OS\\stockOrder\\outOrder\\outOrder_List.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\OS\\stockOrder\\outOrder\\outOrder_List.vue","mtime":1575873045193},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\EDZ\\\\Desktop\\\\\\u7814\\u53D1\\u9879\\u76EE\\\\vue-project\\\\trunk\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { formatTimestamp } from \"@/utils/date\";\n/**\r\n * 基本管理\r\n */\n\nexport default {\n  data: function data() {\n    return {\n      //得到权限数据Code\n      codeData: [],\n      filtersData: {\n        searchKey: \"\",\n        //搜索关键字\n        warehouseType: \"\",\n        //入库类型\n        startTime: \"\",\n        endTime: \"\",\n        warehouse: \"\",\n        // 出入仓库\n        pageIndex: 1,\n        //当前页码\n        pageSize: 10 //每页数量\n\n      },\n      //     NOT_COMPLETE(0,\"未完成\"),\n      // ARRIVAL(1,\"到货中\"),\n      //     COMPLETE(2,\"已完成\"),\n      //     DELETE(3,\"已作废\"),\n      options1: [{\n        value: \"0\",\n        label: \"未完成\"\n      }, {\n        value: \"1\",\n        label: \"到货中\"\n      }, {\n        value: \"2\",\n        label: \"已完成\"\n      }, {\n        value: \"3\",\n        label: \"已作废\"\n      }],\n      options2: [{\n        value: \"030201\",\n        label: \"采购退货出库\"\n      }, {\n        value: \"010101\",\n        label: \"网销订单出库\"\n      }, {\n        value: \"020301\",\n        label: \"渠道订单出库\"\n      }, {\n        value: \"020302\",\n        label: \"其他出库\"\n      }],\n      tableListData: [],\n      total: null,\n      //创建时间数组\n      datefilter: [],\n      //table中checkBox的状态\n      multipleSelection: [],\n      receivingLibraries: [],\n      //收货仓库集合\n      suppliers: [],\n      //供应商集合\n      // 仓库列表\n      warehouseList: []\n    };\n  },\n  // 过滤器\n  filters: {\n    //过滤入库状态\n    fiterWarehouseType: function fiterWarehouseType(val) {\n      switch (val) {\n        case \"030201\":\n          return '采购退货出库';\n          break;\n\n        case \"010101\":\n          return '网销订单出库';\n          break;\n\n        case \"020101\":\n          return '渠道订单出库';\n          break;\n\n        case '020301':\n          return '门店配货出库';\n          break;\n      }\n    }\n  },\n  created: function created() {\n    this.getTableList();\n    this.getCodeLimitToBtnStatus(this.$route.meta.currentid);\n    this.userinfo();\n  },\n  methods: {\n    userinfo: function () {\n      var _userinfo = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.request(this.api.user.get_userinfo, {}, true);\n\n              case 2:\n                this.info = _context.sent;\n                // 获取用户信息\n                this.getWarehouseList(this.info.tenantId);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function userinfo() {\n        return _userinfo.apply(this, arguments);\n      }\n\n      return userinfo;\n    }(),\n    //获取仓库数据\n    getWarehouseList: function getWarehouseList(tenantId) {\n      var _this = this;\n\n      this.request(this.api.system.warehouse_list, {\n        tenantId: tenantId\n      }).then(function (data) {\n        _this.warehouseList = data.data;\n      });\n    },\n    // 得到code码，用来限制是否显示按钮\n    getCodeLimitToBtnStatus: function getCodeLimitToBtnStatus(codeId) {//   this.request(this.api.user.crm_userCompany_authList, {\n      //     menuId: codeId\n      //   }).then(res => {\n      //     console.log(res);\n      //     this.codeData = res;\n      //   });\n    },\n    //获取列表\n    getTableList: function getTableList() {\n      var _this2 = this;\n\n      this.request(this.api.order.warehouseOutOrder_list, this.filtersData).then(function (res) {\n        res.data.forEach(function (item) {\n          item.warehouseTypeName = _this2.$options.filters.fiterWarehouseType(item.warehouseType);\n          item.warehouseTimeName = _this2.$options.filters.timestampToTime(item.warehouseTime);\n        });\n        _this2.total = res.totalCount;\n        _this2.tableListData = res.data;\n      });\n    },\n    //判断是否可以选中\n    isSelectCheck: function isSelectCheck(row, index) {\n      if (row.orderStatus == 2) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    //选中checkBox的状态\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.multipleSelection = val;\n    },\n    //查看\n    openShowDetails: function openShowDetails(row) {\n      this.$router.push({\n        path: \"/OS/stockOrder/outOrder/outOrder_check\",\n        query: {\n          warehouseSn: row.warehouseSn\n        }\n      });\n    },\n    //导出\n    exportExcel: function exportExcel() {\n      var _this3 = this;\n\n      console.log(\"导出Excel表格...+++++++++++++++++++\");\n\n      require.ensure([], function () {\n        var _require = require(\"@/vendor/Export2Excel\"),\n            export_json_to_excel = _require.export_json_to_excel;\n\n        var tHeader = [\"出库单号\", \"出库总数\", \"关联源单\", \"出库仓库\", \"出库类型\", \"出库人\", \"备注\", \"出库时间\"]; // 上面设置Excel的表格第一行的标题\n\n        var filterVal = [\"warehouseSn\", \"warehouseQuantity\", \"orderSn\", \"warehouse\", \"warehouseTypeName\", \"operator\", \"remarks\", \"warehouseTimeName\"]; // 上面的index、nickName、name是tableData里对象的属性\n\n        var list = _this3.tableListData; //把data里的tableData存到list\n\n        var data = _this3.formatJson(filterVal, list);\n\n        export_json_to_excel(tHeader, data, \"出库表单\");\n      });\n    },\n    formatJson: function formatJson(filterVal, jsonData) {\n      return jsonData.map(function (v) {\n        return filterVal.map(function (j) {\n          return v[j];\n        });\n      });\n    },\n    //查看质检报告\n    findQuality: function findQuality(id) {},\n    //作废\n    deleteItem: function deleteItem(val) {\n      var _this4 = this;\n\n      if (confirm(\"确定作废？\")) {\n        this.postAxios(this.$base.api.arrivalOrder_logicDelete, val).then(function (data) {\n          _this4.getTableList();\n        });\n      }\n    },\n    //搜索\n    handleSearch: function handleSearch() {\n      this.filtersData.pageIndex = 1;\n      this.getTableList();\n    },\n    //清空重置\n    handleResetFilters: function handleResetFilters(formName) {\n      this.$refs[formName].resetFields();\n    },\n    //当前页数修改时发生改变\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.filtersData.pageIndex = val;\n      this.getTableList();\n    },\n    // 每页显示多少条时发生改变\n    handleSizeChange: function handleSizeChange(val) {\n      this.filtersData.pageSize = val;\n      this.getTableList();\n    }\n  }\n};",{"version":3,"sources":["outOrder_List.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <!--到货单-->\r\n  <div>\r\n    <div class=\"item-margin\">\r\n      <el-form\r\n        class=\"item-form\"\r\n        :model=\"filtersData\"\r\n        label-width=\"90px\"\r\n        size=\"small\"\r\n        ref=\"filtersForm\"\r\n        inline\r\n      >\r\n        <el-row>\r\n          <el-col>\r\n            <el-form-item prop=\"searchKey\" label=\"模糊查询：\">\r\n              <el-input class=\"input-w\" placeholder=\"出库单号/关联到货单号\" v-model=\"filtersData.searchKey\"></el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item prop=\"warehouseType\" label=\"出库类型：\">\r\n              <el-select class=\"input-w\" placeholder=\"请选择\" v-model=\"filtersData.warehouseType\">\r\n                <el-option\r\n                  v-for=\"item in options2\"\r\n                  :key=\"item.value\"\r\n                  :label=\"item.label\"\r\n                  :value=\"item.value\"\r\n                ></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item prop=\"warehouseType\" label=\"出库仓库：\">\r\n              <el-select class=\"input-w\" placeholder=\"请选择\" v-model=\"filtersData.warehouse\">\r\n                <el-option\r\n                  v-for=\"item in warehouseList\"\r\n                  :key=\"item.value\"\r\n                  :label=\"item.name\"\r\n                  :value=\"item.id\"\r\n                ></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item prop=\"startTime\" label=\"出库时间：\">\r\n              <el-date-picker v-model=\"filtersData.startTime\" type=\"date\" placeholder=\"开始时间\"></el-date-picker>\r\n            </el-form-item>\r\n            <el-form-item prop=\"endTime\">\r\n              <el-date-picker v-model=\"filtersData.endTime\" type=\"date\" placeholder=\"结束时间\"></el-date-picker>\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button @click=\"handleSearch\" type=\"primary\" plain size=\"small\">搜索</el-button>\r\n              <el-button @click=\"handleResetFilters('filtersForm')\" size=\"small\">重置</el-button>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n      </el-form>\r\n    </div>\r\n    <!--table  -->\r\n    <div class=\"item-margin\">\r\n      <div class=\"item-cont\">\r\n        <el-button-group>\r\n          <el-button size=\"small\" @click=\"exportExcel()\" v-auth=\"codeData\" data-code=\"WRM_EXPORT\">导出</el-button>\r\n        </el-button-group>\r\n      </div>\r\n      <div class=\"item-table\">\r\n        <el-table\r\n          :data=\"tableListData\"\r\n          stripe\r\n          empty-text=\"暂无数据\"\r\n          header-align=\"center\"\r\n          header-row-class-name=\"item-table-header\"\r\n          :highlight-current-row=\"true\"\r\n          @selection-change=\"handleSelectionChange\"\r\n        >\r\n          <el-table-column prop=\"warehouseSn\" align=\"center\" label=\"出库单号\" width=\"220\"></el-table-column>\r\n          <el-table-column prop=\"warehouseQuantity\" align=\"center\" label=\"出库总数\" min-width=\"100\">\r\n            <template slot-scope=\"scope\">{{scope.row.warehouseQuantity?scope.row.warehouseQuantity:'--'}}</template>            \r\n          </el-table-column>\r\n          <el-table-column prop=\"orderSn\" align=\"center\" label=\"关联源单\" width=\"210\"></el-table-column>\r\n          <el-table-column prop=\"warehouse\" align=\"center\" label=\"出库仓库\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"warehouseType\" align=\"center\" label=\"出库类型\" min-width=\"100\">\r\n            <template slot-scope=\"scope\">{{ scope.row.warehouseType | fiterWarehouseType}}</template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"operator\" align=\"center\" label=\"出库人\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"remarks\" align=\"center\" label=\"备注\" min-width=\"100\">\r\n            <template slot-scope=\"scope\">{{scope.row.remarks?scope.row.remarks:'--'}}</template>            \r\n          </el-table-column>\r\n          <el-table-column prop=\"warehouseTime\" align=\"center\" label=\"出库时间\" min-width=\"100\">\r\n            <template slot-scope=\"scope\">{{ scope.row.warehouseTime | timestampToTime}}</template>\r\n          </el-table-column>\r\n          <el-table-column\r\n            fixed=\"right\"\r\n            label-class-name=\"text-center\"\r\n            class-name=\"text-center\"\r\n            align=\"center\"\r\n            label=\"操作\"\r\n            width=\"140\"\r\n          >\r\n            <template slot-scope=\"scope\">\r\n              <el-button\r\n                @click=\"openShowDetails(scope.row)\"\r\n                type=\"text\"\r\n                size=\"small\"\r\n                v-auth=\"codeData\"\r\n                data-code=\"WRM_VIEW\"\r\n              >查看</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n        <div class=\"pagination mt-10 mb-20\">\r\n          <el-pagination\r\n            class=\"mr-20\"\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"filtersData.pageIndex\"\r\n            :page-sizes=\"[10,20,30,40,50]\"\r\n            :page-size=\"filtersData.pageSize\"\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=\"total\"\r\n          ></el-pagination>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!--table END  -->\r\n    <!--<tp-class-details :itemParam=\"itemStautsParam\"  @refreshItem=\"refreshList\" ref=\"positionDetailsCpt\"></tp-class-details>-->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { formatTimestamp } from \"@/utils/date\";\r\n/**\r\n * 基本管理\r\n */\r\nexport default {\r\n  data() {\r\n    return {\r\n      //得到权限数据Code\r\n      codeData: [],\r\n      filtersData: {\r\n        searchKey: \"\", //搜索关键字\r\n        warehouseType: \"\", //入库类型\r\n        startTime: \"\",\r\n        endTime: \"\",\r\n        warehouse:\"\",// 出入仓库\r\n        pageIndex: 1, //当前页码\r\n        pageSize: 10 //每页数量\r\n      },\r\n      //     NOT_COMPLETE(0,\"未完成\"),\r\n      // ARRIVAL(1,\"到货中\"),\r\n      //     COMPLETE(2,\"已完成\"),\r\n      //     DELETE(3,\"已作废\"),\r\n      options1: [\r\n        {\r\n          value: \"0\",\r\n          label: \"未完成\"\r\n        },\r\n        {\r\n          value: \"1\",\r\n          label: \"到货中\"\r\n        },\r\n        {\r\n          value: \"2\",\r\n          label: \"已完成\"\r\n        },\r\n        {\r\n          value: \"3\",\r\n          label: \"已作废\"\r\n        }\r\n      ],\r\n      options2: [\r\n        {\r\n          value: \"030201\",\r\n          label: \"采购退货出库\"\r\n        },\r\n        {\r\n          value: \"010101\",\r\n          label: \"网销订单出库\"\r\n        },\r\n        {\r\n          value: \"020301\",\r\n          label: \"渠道订单出库\"\r\n        },\r\n        {\r\n          value: \"020302\",\r\n          label: \"其他出库\"\r\n        }\r\n      ],\r\n      tableListData: [],\r\n      total: null,\r\n      //创建时间数组\r\n      datefilter: [],\r\n      //table中checkBox的状态\r\n      multipleSelection: [],\r\n      receivingLibraries: [], //收货仓库集合\r\n      suppliers: [], //供应商集合\r\n      // 仓库列表\r\n      warehouseList:[]\r\n    };\r\n  },\r\n   // 过滤器\r\n  filters: {\r\n    //过滤入库状态\r\n    fiterWarehouseType(val) {\r\n       switch (val) {\r\n        case \"030201\":\r\n          return '采购退货出库'\r\n          break;\r\n        case \"010101\":\r\n          return '网销订单出库'\r\n          break;\r\n        case \"020101\":\r\n          return '渠道订单出库'\r\n          break;\r\n        case '020301':\r\n          return '门店配货出库'\r\n          break;\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.getTableList();\r\n    this.getCodeLimitToBtnStatus(this.$route.meta.currentid);\r\n    this.userinfo();\r\n  },\r\n  methods: {\r\n    async userinfo() {\r\n      this.info = await this.request(this.api.user.get_userinfo, {}, true); // 获取用户信息\r\n      this.getWarehouseList(this.info.tenantId);\r\n    },\r\n    //获取仓库数据\r\n    getWarehouseList(tenantId) {\r\n      this.request(this.api.system.warehouse_list, {tenantId}).then(data => {\r\n        this.warehouseList = data.data;\r\n      });\r\n    },\r\n    // 得到code码，用来限制是否显示按钮\r\n    getCodeLimitToBtnStatus(codeId) {\r\n    //   this.request(this.api.user.crm_userCompany_authList, {\r\n    //     menuId: codeId\r\n    //   }).then(res => {\r\n    //     console.log(res);\r\n    //     this.codeData = res;\r\n    //   });\r\n    },\r\n    //获取列表\r\n    getTableList() {\r\n      this.request(this.api.order.warehouseOutOrder_list,this.filtersData).then(res=>{\r\n        res.data.forEach(item => {\r\n          item.warehouseTypeName=this.$options.filters.fiterWarehouseType(item.warehouseType)\r\n          item.warehouseTimeName=this.$options.filters.timestampToTime(item.warehouseTime)\r\n        })\r\n        this.total=res.totalCount\r\n        this.tableListData=res.data\r\n      })\r\n    },\r\n    //判断是否可以选中\r\n    isSelectCheck(row, index) {\r\n      if (row.orderStatus == 2) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n    //选中checkBox的状态\r\n    handleSelectionChange(val) {\r\n      this.multipleSelection = val;\r\n    },\r\n    //查看\r\n    openShowDetails(row) {\r\n      this.$router.push({\r\n        path: \"/OS/stockOrder/outOrder/outOrder_check\",\r\n        query: {\r\n          warehouseSn:row.warehouseSn\r\n        }\r\n      });\r\n    },\r\n    //导出\r\n    exportExcel() {\r\n      console.log(\"导出Excel表格...+++++++++++++++++++\");\r\n      require.ensure([], () => {\r\n        let { export_json_to_excel } = require(\"@/vendor/Export2Excel\");\r\n        let tHeader = [\r\n          \"出库单号\",\r\n          \"出库总数\",\r\n          \"关联源单\",\r\n          \"出库仓库\",\r\n          \"出库类型\",\r\n          \"出库人\",\r\n          \"备注\",\r\n          \"出库时间\"\r\n        ];\r\n        // 上面设置Excel的表格第一行的标题\r\n        let filterVal = [\r\n          \"warehouseSn\",\r\n          \"warehouseQuantity\",\r\n          \"orderSn\",\r\n          \"warehouse\",\r\n          \"warehouseTypeName\",\r\n          \"operator\",\r\n          \"remarks\",\r\n          \"warehouseTimeName\"\r\n        ];\r\n        // 上面的index、nickName、name是tableData里对象的属性\r\n        let list = this.tableListData; //把data里的tableData存到list\r\n        let data = this.formatJson(filterVal, list);\r\n        export_json_to_excel(tHeader, data, \"出库表单\");\r\n      });\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => v[j]));\r\n    },\r\n    //查看质检报告\r\n    findQuality(id) {},\r\n    //作废\r\n    deleteItem(val) {\r\n      if (confirm(\"确定作废？\")) {\r\n        this.postAxios(this.$base.api.arrivalOrder_logicDelete, val).then(\r\n          data => {\r\n            this.getTableList();\r\n          }\r\n        );\r\n      }\r\n    },\r\n    //搜索\r\n    handleSearch() {\r\n      this.filtersData.pageIndex = 1;\r\n      this.getTableList();\r\n    },\r\n\r\n    //清空重置\r\n    handleResetFilters(formName) {\r\n      this.$refs[formName].resetFields();\r\n    },\r\n    //当前页数修改时发生改变\r\n    handleCurrentChange(val) {\r\n      this.filtersData.pageIndex = val;\r\n      this.getTableList();\r\n    },\r\n    // 每页显示多少条时发生改变\r\n    handleSizeChange(val) {\r\n      this.filtersData.pageSize = val;\r\n      this.getTableList();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/views/OS/stockOrder/outOrder"}]}