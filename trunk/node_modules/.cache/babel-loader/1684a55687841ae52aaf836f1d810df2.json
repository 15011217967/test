{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\collocation\\distribution\\DistributionAddGoods.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\collocation\\distribution\\DistributionAddGoods.vue","mtime":1574160264713},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport PageTable from \"@/views/collocation/components/PageTable\";\nimport CheckTags from \"@/views/collocation/components/CheckTags\";\nimport GoodsTable from \"@/views/collocation/components/GoodsTable\";\nimport ImagePopover from \"@/views/collocation/components/ImagePopover\";\nexport default {\n  name: '',\n  // 数据\n  data: function data() {\n    return {\n      // 默认显示门店信息\n      activeName: 'store',\n      // 门店信息数据\n      storeInfo: {},\n      // 门店商品相关\n      productTypeList: [],\n      // 弹窗选择商品\n      SKUDialog: false,\n      // 是否显示选中的\n      checkedGoodsShow: false,\n      // 查询商品参数\n      formData: {\n        // 所属机构或货主\n        tenantId: '',\n        // 所属仓库\n        warehouseCode: '',\n        // 商品分类\n        cateIdentifier: '',\n        // 价格筛选\n        retailPriceGE: '',\n        retailPriceLE: '',\n        // 库存量\n        availableQuantityGE: '',\n        availableQuantityLE: '',\n        // 设计商\n        designCompanyId: '',\n        // 品牌\n        brandId: '',\n        // 综合搜索\n        searchWords: '',\n        // 标签\n        collocationTagIdList: [],\n        // 当前页码\n        pageIndex: 1,\n        // 每页数量\n        pageSize: 10,\n        // 是否有效\n        valid: true,\n        validStock: true\n      },\n      // 商品主表格数据\n      tableData: {},\n      tableDataCheckedRow: {},\n      // 弹窗商品数据\n      SKUTableData: [],\n      // 选择的商品\n      checkedSKUTableData: [],\n      checkedSKUTotalPrice: 0,\n      checkedSKUTotal: 0,\n      // 提交信息\n      distributionInfo: {},\n\n      /** 商品查询辅助数据*/\n      // 验证\n      rules: {\n        money: [{\n          required: false,\n          validator: this.moneyRule,\n          trigger: 'blur'\n        }],\n        count: [{\n          required: false,\n          validator: this.countRule,\n          trigger: 'blur'\n        }]\n      },\n      // 分类映射\n      props: {\n        value: 'id',\n        label: 'name',\n        children: 'children'\n      },\n      // 分类数据\n      classData: [],\n      classList: [],\n      // 选中的分类\n      cateArr: [],\n      // 品牌\n      brandOptions: [],\n      // 设计商\n      designCompanyOptions: []\n      /** 商品查询辅助数据--end */\n\n    };\n  },\n  // 组件\n  components: {\n    PageTable: PageTable,\n    GoodsTable: GoodsTable,\n    CheckTags: CheckTags,\n    ImagePopover: ImagePopover\n  },\n  created: function created() {\n    // 获取上页面缓存的门店信息\n    var distributionInfo = sessionStorage.getItem('DISTRIBUTION_INFO');\n\n    if (distributionInfo) {\n      this.distributionInfo = JSON.parse(distributionInfo);\n      this.formData.tenantId = this.distributionInfo.goodsOwner;\n      this.formData.warehouseCode = this.distributionInfo.warehouseCode;\n    } else {\n      this.$notify.error({\n        title: '错误',\n        message: '门店信息丢失'\n      }); // 回退到选择门店;\n\n      var module = '/' + this.$route.path.split('/')[1];\n      this.$router.push({\n        path: module + '/distribution/distribution_add'\n      });\n    }\n  },\n  // 初始化数据\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      _this.getStoreInfo();\n\n      _this.getDesignCompanyOptions();\n\n      _this.getBrandOptions();\n\n      _this.getClassData();\n\n      _this.getTableData();\n    });\n  },\n  // 方法\n  methods: {\n    // 获取门店信息\n    getStoreInfo: function getStoreInfo() {\n      var _this2 = this;\n\n      if (this.distributionInfo.storeType) return;\n      this.request(this.api.retailStore.storeBasic_get, {\n        id: this.distributionInfo.storeId\n      }).then(function (data) {\n        _this2.storeInfo = data;\n        _this2.distributionInfo.storeType = _this2.storeInfo.type;\n      });\n    },\n    // 获取门店热门销售标签\n    getStoreTags: function getStoreTags() {\n      var _this3 = this;\n\n      if (this.productTypeList.length > 0) return;\n      this.request(this.api.retailStore.storeProduct_listTagByStoreId, {\n        storeId: this.distributionInfo.storeId\n      }).then(function (data) {\n        _this3.productTypeList = data;\n      });\n    },\n    // 点击搜索\n    searchTableData: function searchTableData() {\n      this.formData.pageIndex = 1;\n      this.getTableData();\n    },\n    // 获取商品数据\n    getTableData: function getTableData() {\n      var _this4 = this;\n\n      this.$nextTick(function () {\n        setTimeout(function () {\n          _this4.$refs.searchForm.validate(function (valid) {\n            if (valid) {\n              var params = JSON.parse(JSON.stringify(_this4.formData));\n\n              if (params.collocationTagIdList.length === 0) {\n                params.collocationTagIdList = null;\n              }\n\n              if (params.availableQuantityGE || params.availableQuantityLE) {\n                params.validStock = null;\n              }\n\n              _this4.request(_this4.api.product.product_listProduct, params).then(function (data) {\n                _this4.tableData = data;\n              });\n            } else {\n              return false;\n            }\n          });\n        }, 0);\n      });\n    },\n    // 重置查询条件\n    initFormData: function initFormData(formName) {\n      this.$refs[formName].resetFields();\n      this.cateArr = [];\n      this.formData.cateIdentifier = '';\n      this.formData.retailPriceGE = '';\n      this.formData.retailPriceLE = '';\n      this.formData.availableQuantityGE = '';\n      this.formData.availableQuantityLE = '';\n      this.$refs.checkTags.clearChecked();\n    },\n    // 获取选择商品\n    checkGoods: function checkGoods(row) {\n      var _this5 = this;\n\n      this.tableDataCheckedRow = row;\n      this.request(this.api.product.productGoods_listProductGoods, {\n        productId: row.id,\n        validStock: 1,\n        orderBy: 'productCode',\n        tenantId: this.formData.tenantId,\n        warehouseCode: this.formData.warehouseCode\n      }).then(function (data) {\n        if (data.data && data.data.length) {\n          for (var n = 0; n < data.data.length; n++) {\n            data.data[n].quantity = 0;\n            data.data[n].purchasePrice = data.data[n].retailPrice;\n\n            if (_this5.checkedSKUTableData.length > 0) {\n              for (var i = 0; i < _this5.checkedSKUTableData.length; i++) {\n                if (_this5.checkedSKUTableData[i].id === data.data[n].id) {\n                  data.data[n].quantity = _this5.checkedSKUTableData[i].quantity;\n                }\n              }\n            }\n          }\n        }\n\n        _this5.SKUTableData = data.data;\n        _this5.SKUDialog = true;\n      });\n    },\n    // 确认选择商品\n    checkGoodsSub: function checkGoodsSub() {\n      var _this6 = this;\n\n      var _loop = function _loop(i) {\n        var good = _this6.SKUTableData[i];\n\n        var checkedGood = _this6.checkedSKUTableData.find(function (item) {\n          return item.id === good.id;\n        });\n\n        if (checkedGood) {\n          if (good.quantity === 0) {\n            var index = _this6.checkedSKUTableData.find(function (item) {\n              return item.id === good.id;\n            });\n\n            _this6.checkedSKUTableData.splice(index, 1);\n          } else {\n            checkedGood.quantity = good.quantity;\n          }\n        } else if (!checkedGood && good.quantity > 0) {\n          _this6.SKUTableData[i].brandName = _this6.tableDataCheckedRow.brandName;\n          _this6.SKUTableData[i].brandId = _this6.tableDataCheckedRow.brandId;\n          _this6.SKUTableData[i].designCompanyName = _this6.tableDataCheckedRow.designCompanyName;\n          _this6.SKUTableData[i].designCompanyId = _this6.tableDataCheckedRow.designCompanyId;\n\n          _this6.checkedSKUTableData.push(_this6.SKUTableData[i]);\n        }\n      };\n\n      for (var i = 0; i < this.SKUTableData.length; i++) {\n        _loop(i);\n      } // 计算总价\n\n\n      this.checkedTotalPrice();\n      this.SKUDialog = false;\n    },\n    // 类型切换\n    handleBeforeClick: function handleBeforeClick(activeName) {\n      if (activeName === 'store') {\n        this.getStoreInfo();\n      }\n\n      if (activeName === 'goods') {\n        this.getStoreTags();\n      }\n    },\n    // 计算总价   20191031 新增计算总件数\n    checkedTotalPrice: function checkedTotalPrice() {\n      var _this7 = this;\n\n      this.checkedSKUTotal = 0;\n      this.checkedSKUTotalPrice = 0;\n\n      if (this.checkedSKUTableData.length) {\n        this.checkedSKUTableData.forEach(function (item) {\n          _this7.checkedSKUTotalPrice += Number(item.purchasePrice) * Number(item.quantity);\n          _this7.checkedSKUTotal += Number(item.quantity);\n        });\n      }\n\n      this.checkedSKUTotalPrice = this.checkedSKUTotalPrice.toFixed(2);\n    },\n    // 获取更多标签\n    getMoreTags: function getMoreTags() {},\n    // 最终提交\n    finalSub: function finalSub() {\n      var _this8 = this;\n\n      if (!this.checkedSKUTableData.length) {\n        return;\n      }\n\n      this.distributionInfo.allotProductInfoList = [];\n      this.distributionInfo.totalPrice = this.checkedSKUTotalPrice;\n      var goodsNum = 0;\n      this.checkedSKUTableData.forEach(function (item) {\n        var obj = {\n          // 货品编码\n          goodsCode: item.code,\n          // 货品名称\n          goodsName: item.name,\n          // 商品(spu)编码\n          productCode: item.productCode,\n          // 商品类型\n          productType: item.fullCateName,\n          // 商品图片\n          image: item.image,\n          // 品牌\n          brandName: item.brandName,\n          brandCode: item.brandId,\n          // 设计商\n          designCompanyName: item.designCompanyName,\n          designCompanyCode: item.designCompanyId,\n          // 尺码\n          size: item.size,\n          // 颜色\n          color: item.color,\n          // 吊牌价\n          retailPrice: item.retailPrice,\n          // 销售单价\n          purchasePrice: item.purchasePrice,\n          // 数量\n          quantity: item.quantity\n        };\n\n        _this8.distributionInfo.allotProductInfoList.push(obj);\n\n        goodsNum += item.quantity;\n      });\n      this.distributionInfo.goodsNum = goodsNum;\n      this.request(this.api.order.allotGoods_save, this.distributionInfo).then(function (data) {\n        if (data && data.length) {\n          var html = '';\n          data.forEach(function (errItem) {\n            for (var i = 0; i < _this8.checkedSKUTableData.length; i++) {\n              if (_this8.checkedSKUTableData[i].code == errItem.code) {\n                if (errItem.qty == 0) {\n                  _this8.checkedSKUTableData.splice(i, 1);\n\n                  html += '<p>' + errItem.code + '：可用库存为0，已删除该商品；</p>';\n                } else {\n                  html += '<p>' + errItem.code + '：可用库存不足，已更新为最大值' + errItem.qty + '；</p>';\n                  _this8.checkedSKUTableData[i].availableQuantity = errItem.qty;\n                  _this8.checkedSKUTableData[i].quantity = errItem.qty;\n                }\n\n                break;\n              }\n            }\n          });\n\n          _this8.$notify({\n            title: '提示',\n            duration: 0,\n            dangerouslyUseHTMLString: true,\n            message: html\n          }); // 计算总价\n\n\n          _this8.checkedTotalPrice();\n        } else {\n          _this8.$notify.success({\n            title: '成功',\n            message: '新增成功'\n          });\n\n          var module = '/' + _this8.$route.path.split('/')[1];\n\n          _this8.$router.push({\n            path: module + '/distribution/distribution_list'\n          });\n        }\n      });\n    },\n\n    /**\n     * 搜索商品参数下拉数据及验证\n     */\n    // 验证价格区间\n    moneyRule: function moneyRule(rule, value, callback) {\n      var reg = /^[0-9]*$/;\n\n      if (!reg.test(this.formData.retailPriceGE) || !reg.test(this.formData.retailPriceLE)) {\n        callback(new Error('价格区间必须是数字'));\n        return;\n      }\n\n      if (this.formData.retailPriceGE && this.formData.retailPriceLE && this.formData.retailPriceGE >= this.formData.retailPriceLE) {\n        callback(new Error('价格区间下限应小于上限'));\n      } else {\n        callback();\n      }\n    },\n    // 验证数量区间\n    countRule: function countRule(rule, value, callback) {\n      var reg = /^[0-9]*$/;\n\n      if (!reg.test(this.formData.availableQuantityGE) || !reg.test(this.formData.availableQuantityLE)) {\n        callback(new Error('库存量区间必须是数字'));\n        return;\n      }\n\n      if (this.formData.availableQuantityGE && this.formData.availableQuantityLE && this.formData.availableQuantityGE >= this.formData.availableQuantityLE) {\n        callback(new Error('库存量区间下限应小于上限'));\n      } else {\n        callback();\n      }\n    },\n    // 获取商品分类数据\n    getClassData: function getClassData() {\n      var _this9 = this;\n\n      //分类类型（1：标准分类，2：定制分类，3：原料分类或者称为属性分类）\n      this.$common.getClassSelect(this, 1).then(function (res) {\n        _this9.classData = res.ztree;\n        _this9.classList = res.list;\n      });\n    },\n    // 商品分类Change\n    classChange: function classChange(e) {\n      if (e.length === 0) {\n        this.formData.cateIdentifier = '';\n        return;\n      }\n\n      var cateId = JSON.parse(JSON.stringify(e)).pop();\n      var obj = this.classList.find(function (item) {\n        return item.id == cateId;\n      });\n      this.formData.cateIdentifier = obj.identifier;\n    },\n    // 获取设计商\n    getDesignCompanyOptions: function getDesignCompanyOptions() {\n      var _this10 = this;\n\n      this.request(this.api.product.designCompany_list, {}).then(function (data) {\n        _this10.designCompanyOptions = data.data;\n      });\n    },\n    // 获取品牌\n    getBrandOptions: function getBrandOptions() {\n      var _this11 = this;\n\n      this.request(this.api.product.productBrand_list, {}).then(function (data) {\n        _this11.brandOptions = data.data;\n      });\n    }\n    /**\n     * 搜索商品参数下拉数据--end\n     */\n\n  },\n  // 计算属性\n  computed: {},\n  // 监听数据变化\n  watch: {}\n};",{"version":3,"sources":["DistributionAddGoods.vue"],"names":[],"mappings":"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","sourcesContent":["<style lang=\"less\" scoped>\r\n  .distribution-add-goods{display: flex;\r\n    .side{width: 320px;background: #fff;margin-left: 8px;line-height: 24px;\r\n      .tabs{margin-top: 10px;}\r\n      .store-info{\r\n        ul{\r\n          li{margin-bottom: 5px;position: relative;padding-left: 70px;\r\n            img{width: 80px;height: 80px;margin-right: 10px;margin-bottom: 10px;}\r\n            span{width: 70px;text-align: right;display: block;position: absolute;left: 0;top: 0;}\r\n          }\r\n        }\r\n      }\r\n      .goods-info{\r\n        .category{\r\n          ul{\r\n            li{width: 50%;float: left;margin-bottom: 5px;\r\n\r\n            }\r\n          }\r\n        }\r\n        .tags{\r\n          ul{\r\n            li{display: flex;\r\n              .label{display: inline-block;width: 80px;}\r\n              div{flex: 1;\r\n                .el-tag{margin-right: 5px;margin-bottom: 5px;}\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    .table-list{flex: 1;background: #fff;margin-top: 0;\r\n      .goods-list{\r\n        .type-list{padding-top: 0;padding-bottom: 0;\r\n\r\n        }\r\n      }\r\n      .check-goods-list{\r\n\r\n      }\r\n    }\r\n    .page-more{border-top: 1px solid #e6e8ed;margin-top: 10px;\r\n      div.btn{\r\n        width: 120px;border: 1px solid #e6e8ed;border-top: 1px solid #fff;margin: -1px auto 0;text-align: center;font-size: 12px;cursor: pointer;line-height: 30px;\r\n      }\r\n    }\r\n    .item-cont{\r\n      .total-price{float: left; width: 40%;}\r\n      .btns{float: right;}\r\n    }\r\n  }\r\n</style>\r\n<template>\r\n  <div class=\"distribution-add-goods\">\r\n    <div class=\"side\">\r\n      <div class=\"item-cont\">\r\n        <el-button size=\"small\" type=\"primary\" @click=\"checkedGoodsShow = true\">已选商品</el-button>\r\n        <el-tabs v-model=\"activeName\" class=\"tabs\" :before-leave=\"handleBeforeClick\" type=\"card\">\r\n          <el-tab-pane label=\"门店资料\" name=\"store\" class=\"store-info\">\r\n            <ul>\r\n              <li><span>门店名称：</span>{{ storeInfo.name }}</li>\r\n              <li><span>所在地区：</span>{{ storeInfo.provinceName }} {{ storeInfo.cityName }} {{ storeInfo.areaName }}</li>\r\n              <li><span>门店类型：</span>{{ \"STO001\" | codeToName(storeInfo.type) }}</li>\r\n              <li v-if=\"storeInfo.infosMap && storeInfo.infosMap.length\">\r\n                <span>经营类型：</span>\r\n                <i v-for=\"info in storeInfo.infosMap[0]\">{{ \"COM002\" | codeToName(info.type) }}</i></li>\r\n              <li><span>店铺面积：</span>{{ storeInfo.storeArea }}m²</li>\r\n              <li v-if=\"storeInfo.images && storeInfo.images.length\"><span>门店图片：</span>\r\n                <img :src=\"image.url\" alt=\"图片\" v-for=\"image in storeInfo.images\">\r\n              </li>\r\n              <li><span>收货人：</span>{{ distributionInfo.receiveMan }}</li>\r\n              <li><span>联系电话：</span>{{ distributionInfo.phone }}</li>\r\n              <li><span>收货地址：</span>{{ distributionInfo.provinceName }} {{ distributionInfo.cityName }} {{ distributionInfo.areaName }} {{ distributionInfo.addressInfo }}</li>\r\n            </ul>\r\n          </el-tab-pane>\r\n          <el-tab-pane label=\"商品相关\" name=\"goods\" class=\"goods-info\">\r\n            <div class=\"category\">\r\n              <h5>热销品类</h5>\r\n              <ul class=\"clearfix\">\r\n                <li v-for=\"(item, index) in productTypeList\">{{ ++index }}.{{ item.productType }}</li>\r\n              </ul>\r\n            </div>\r\n<!--            <div class=\"tags\">-->\r\n<!--              <h5>热销标签</h5>-->\r\n<!--              <ul>-->\r\n<!--                <li>-->\r\n<!--                  <span class=\"label\">适合色系：</span>-->\r\n<!--                  <div class=\"tag\">-->\r\n<!--                    <el-tag type=\"info\" size=\"mini\">标签三</el-tag>-->\r\n<!--                    <el-tag type=\"info\" size=\"mini\">标签三</el-tag>-->\r\n<!--                    <el-tag type=\"info\" size=\"mini\">标签三</el-tag>-->\r\n<!--                    <el-tag type=\"info\" size=\"mini\">标签三</el-tag>-->\r\n<!--                    <el-tag type=\"info\" size=\"mini\">标签三</el-tag>-->\r\n<!--                    <el-tag type=\"info\" size=\"mini\">标签三</el-tag>-->\r\n<!--                    <el-tag type=\"info\" size=\"mini\">标签三</el-tag>-->\r\n<!--                    <el-tag type=\"info\" size=\"mini\">标签三</el-tag>-->\r\n<!--                    <el-tag type=\"info\" size=\"mini\">标签三</el-tag>-->\r\n<!--                  </div>-->\r\n<!--                </li>-->\r\n<!--              </ul>-->\r\n<!--              <div class=\"page-more\">-->\r\n<!--                <div @click=\"getMoreTags\" class=\"btn\">-->\r\n<!--                  更多标签<i class=\"el-icon-arrow-down\"></i>-->\r\n<!--                </div>-->\r\n<!--              </div>-->\r\n<!--            </div>-->\r\n          </el-tab-pane>\r\n        </el-tabs>\r\n      </div>\r\n    </div>\r\n    <div class=\"table-list item-margin\">\r\n      <!--商品主列表-->\r\n      <div class=\"goods-list\" v-if=\"!checkedGoodsShow\">\r\n        <div class=\"\">\r\n          <el-form class=\"item-form\" :model=\"formData\" label-width=\"90px\" size=\"small\" ref=\"searchForm\" inline :rules=\"rules\">\r\n            <el-form-item label=\"商品分类：\">\r\n              <el-cascader\r\n                  class=\"input-w\"\r\n                  :options=\"classData\"\r\n                  v-model=\"cateArr\"\r\n                  @change=\"classChange\"\r\n                  :show-all-levels=\"false\"\r\n                  :props=\"props\"\r\n                  change-on-select\r\n                  clearable\r\n              ></el-cascader>\r\n            </el-form-item>\r\n            <el-form-item label=\"价格筛选：\" prop=\"money\">\r\n              <el-input class=\"input-w\" placeholder=\"请输入区间下限\" v-model.number=\"formData.retailPriceGE\"></el-input>\r\n              &nbsp;\r\n              <el-input class=\"input-w\" placeholder=\"请输入区间上限\" v-model.number=\"formData.retailPriceLE\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"库存量：\" prop=\"count\">\r\n              <el-input class=\"input-w\" placeholder=\"请输入区间下限\" v-model.number=\"formData.availableQuantityGE\"></el-input>\r\n              &nbsp;\r\n              <el-input class=\"input-w\" placeholder=\"请输入区间上限\" v-model.number=\"formData.availableQuantityLE\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"设计商：\" prop=\"designCompanyId\">\r\n              <el-select class=\"input-w\" placeholder=\"请选择\" v-model=\"formData.designCompanyId\" clearable filterable>\r\n                <el-option\r\n                    v-for=\"item in designCompanyOptions\"\r\n                    :key=\"item.id\"\r\n                    :label=\"item.name\"\r\n                    :value=\"item.id\"\r\n                ></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"品牌：\" prop=\"brandId\">\r\n              <el-select class=\"input-w\" placeholder=\"请选择\" v-model=\"formData.brandId\" clearable filterable>\r\n                <el-option\r\n                    v-for=\"item in brandOptions\"\r\n                    :key=\"item.id\"\r\n                    :label=\"item.name\"\r\n                    :value=\"item.id\"\r\n                ></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"综合搜索：\" prop=\"searchWords\">\r\n              <el-input class=\"input-w\" placeholder=\"款号、货号、名称\" v-model=\"formData.searchWords\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button @click=\"searchTableData\" type=\"primary\" plain>搜索</el-button>\r\n              <el-button @click=\"initFormData('searchForm')\" plain>重置</el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n          <div class=\"type-list item-cont\">\r\n            <check-tags :checked-data=\"formData.collocationTagIdList\" ref=\"checkTags\"></check-tags>\r\n          </div>\r\n        </div>\r\n        <div class=\"item-cont\">\r\n          <page-table :form-data=\"formData\" :get-data=\"getTableData\" :table-data=\"tableData\">\r\n            <el-table :data=\"tableData.data\" style=\"width: 100%\">\r\n              <el-table-column prop=\"code\" label=\"商品款号\"></el-table-column>\r\n              <el-table-column prop=\"name\" label=\"名称\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n              <el-table-column label=\"商品图片\">\r\n                <template slot-scope=\"scope\">\r\n                  <image-popover :img-src=\"scope.row.image\"></image-popover>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"brandName\" label=\"品牌\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n              <el-table-column prop=\"designCompanyName\" label=\"设计商\"></el-table-column>\r\n              <el-table-column prop=\"fullCateName\" label=\"品类\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n              <el-table-column prop=\"retailPrice\" label=\"吊牌价\"></el-table-column>\r\n              <el-table-column prop=\"availableQuantity\" label=\"库存量\"></el-table-column>\r\n              <el-table-column label=\"操作\" width=\"120\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-button type=\"text\" size=\"small\" @click=\"checkGoods(scope.row)\">选择</el-button>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </page-table>\r\n        </div>\r\n      </div>\r\n      <!--选中的商品-->\r\n      <div class=\"check-goods-list\" v-if=\"checkedGoodsShow\">\r\n        <goods-table :table-data=\"checkedSKUTableData\" key=\"2\" :is-del=\"true\" v-if=\"checkedGoodsShow\"></goods-table>\r\n        <div class=\"item-cont clearfix\">\r\n          <div class=\"total-price\">商品总价：{{ checkedSKUTotalPrice }}</div>\r\n          <div class=\"total-price\">商品总数：{{ checkedSKUTotal }}</div>\r\n          <div class=\"btns\">\r\n            <el-button type=\"primary\" @click=\"finalSub\" size=\"small\">完成配货</el-button>\r\n            <el-button type=\"primary\" @click=\"checkedGoodsShow = false\" size=\"small\">继续搭配</el-button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!--点击商品主列表  弹窗选择商品-->\r\n    <el-dialog title=\"选择SKU\" :visible.sync=\"SKUDialog\" width=\"80%\" :close-on-click-modal=\"false\">\r\n      <goods-table :table-data=\"SKUTableData\" key=\"1\" v-if=\"SKUDialog\"></goods-table>\r\n      <div class=\"item-cont clearfix \">\r\n        <div class=\"btns\">\r\n          <el-button type=\"primary\" @click=\"checkGoodsSub\" size=\"small\">确定</el-button>\r\n          <el-button @click=\"SKUDialog = false\" size=\"small\">取消</el-button>\r\n        </div>\r\n      </div>\r\n    </el-dialog>\r\n\r\n  </div>\r\n</template>\r\n<script>\r\n  import PageTable from \"@/views/collocation/components/PageTable\";\r\n  import CheckTags from \"@/views/collocation/components/CheckTags\";\r\n  import GoodsTable from \"@/views/collocation/components/GoodsTable\";\r\n  import ImagePopover from \"@/views/collocation/components/ImagePopover\";\r\n  export default {\r\n    name: '',\r\n    // 数据\r\n    data() {\r\n      return {\r\n        // 默认显示门店信息\r\n        activeName: 'store',\r\n        // 门店信息数据\r\n        storeInfo: {},\r\n        // 门店商品相关\r\n        productTypeList: [],\r\n        // 弹窗选择商品\r\n        SKUDialog: false,\r\n        // 是否显示选中的\r\n        checkedGoodsShow: false,\r\n        // 查询商品参数\r\n        formData: {\r\n          // 所属机构或货主\r\n          tenantId: '',\r\n          // 所属仓库\r\n          warehouseCode: '',\r\n          // 商品分类\r\n          cateIdentifier: '',\r\n          // 价格筛选\r\n          retailPriceGE: '',\r\n          retailPriceLE: '',\r\n          // 库存量\r\n          availableQuantityGE: '',\r\n          availableQuantityLE: '',\r\n          // 设计商\r\n          designCompanyId: '',\r\n          // 品牌\r\n          brandId: '',\r\n          // 综合搜索\r\n          searchWords: '',\r\n          // 标签\r\n          collocationTagIdList: [],\r\n          // 当前页码\r\n          pageIndex: 1,\r\n          // 每页数量\r\n          pageSize: 10,\r\n          // 是否有效\r\n          valid: true,\r\n          validStock: true\r\n        },\r\n        // 商品主表格数据\r\n        tableData: {},\r\n        tableDataCheckedRow: {},\r\n        // 弹窗商品数据\r\n        SKUTableData: [],\r\n        // 选择的商品\r\n        checkedSKUTableData: [],\r\n        checkedSKUTotalPrice: 0,\r\n        checkedSKUTotal: 0,\r\n        // 提交信息\r\n        distributionInfo: {},\r\n\r\n        /** 商品查询辅助数据*/\r\n        // 验证\r\n        rules: {\r\n          money: [\r\n            { required: false, validator: this.moneyRule, trigger: 'blur'}\r\n          ],\r\n          count: [\r\n            { required: false, validator: this.countRule, trigger: 'blur'}\r\n          ]\r\n        },\r\n        // 分类映射\r\n        props:{\r\n          value: 'id',\r\n          label:'name',\r\n          children: 'children'\r\n        },\r\n        // 分类数据\r\n        classData:[],\r\n        classList:[],\r\n        // 选中的分类\r\n        cateArr:[],\r\n        // 品牌\r\n        brandOptions:[],\r\n        // 设计商\r\n        designCompanyOptions:[]\r\n        /** 商品查询辅助数据--end */\r\n      }\r\n    },\r\n    // 组件\r\n    components: {\r\n      PageTable,\r\n      GoodsTable,\r\n      CheckTags,\r\n      ImagePopover\r\n    },\r\n    created(){\r\n      // 获取上页面缓存的门店信息\r\n      let distributionInfo = sessionStorage.getItem('DISTRIBUTION_INFO');\r\n      if(distributionInfo){\r\n        this.distributionInfo = JSON.parse(distributionInfo);\r\n        this.formData.tenantId = this.distributionInfo.goodsOwner;\r\n        this.formData.warehouseCode = this.distributionInfo.warehouseCode;\r\n      }else {\r\n        this.$notify.error({ title: '错误',message: '门店信息丢失'});\r\n        // 回退到选择门店;\r\n        let module = '/' + this.$route.path.split('/')[1];\r\n        this.$router.push({\r\n          path: module + '/distribution/distribution_add'\r\n        });\r\n      }\r\n    },\r\n    // 初始化数据\r\n    mounted() {\r\n      this.$nextTick(()=> {\r\n        this.getStoreInfo();\r\n        this.getDesignCompanyOptions();\r\n        this.getBrandOptions();\r\n        this.getClassData();\r\n        this.getTableData();\r\n      })\r\n    },\r\n    // 方法\r\n    methods: {\r\n      // 获取门店信息\r\n      getStoreInfo(){\r\n        if(this.distributionInfo.storeType) return;\r\n        this.request(this.api.retailStore.storeBasic_get, {id: this.distributionInfo.storeId}).then(data => {\r\n          this.storeInfo = data;\r\n          this.distributionInfo.storeType = this.storeInfo.type;\r\n        });\r\n      },\r\n      // 获取门店热门销售标签\r\n      getStoreTags(){\r\n        if(this.productTypeList.length > 0) return;\r\n        this.request(this.api.retailStore.storeProduct_listTagByStoreId, {storeId: this.distributionInfo.storeId}).then(data => {\r\n          this.productTypeList = data;\r\n        });\r\n      },\r\n      // 点击搜索\r\n      searchTableData(){\r\n        this.formData.pageIndex = 1;\r\n        this.getTableData();\r\n      },\r\n      // 获取商品数据\r\n      getTableData() {\r\n        this.$nextTick(() => {\r\n          setTimeout(()=> {\r\n            this.$refs.searchForm.validate((valid) => {\r\n              if (valid) {\r\n                let params = JSON.parse(JSON.stringify(this.formData));\r\n                if(params.collocationTagIdList.length === 0){\r\n                  params.collocationTagIdList = null;\r\n                }\r\n                if(params.availableQuantityGE || params.availableQuantityLE ){\r\n                  params.validStock = null;\r\n                }\r\n                this.request(this.api.product.product_listProduct, params).then(data => {\r\n                  this.tableData = data;\r\n                });\r\n              } else {\r\n                return false;\r\n              }\r\n            });\r\n          },0)\r\n        })\r\n      },\r\n      // 重置查询条件\r\n      initFormData(formName){\r\n        this.$refs[formName].resetFields();\r\n        this.cateArr = [];\r\n        this.formData.cateIdentifier = '';\r\n        this.formData.retailPriceGE = '';\r\n        this.formData.retailPriceLE = '';\r\n        this.formData.availableQuantityGE = '';\r\n        this.formData.availableQuantityLE = '';\r\n        this.$refs.checkTags.clearChecked();\r\n      },\r\n      // 获取选择商品\r\n      checkGoods(row){\r\n        this.tableDataCheckedRow = row;\r\n        this.request(this.api.product.productGoods_listProductGoods, {productId: row.id, validStock: 1, orderBy: 'productCode', tenantId: this.formData.tenantId, warehouseCode: this.formData.warehouseCode}).then(data => {\r\n          if(data.data && data.data.length){\r\n            for(let n = 0; n < data.data.length; n++){\r\n              data.data[n].quantity = 0;\r\n              data.data[n].purchasePrice = data.data[n].retailPrice;\r\n              if(this.checkedSKUTableData.length > 0){\r\n                for(let i = 0; i < this.checkedSKUTableData.length; i++){\r\n                  if(this.checkedSKUTableData[i].id === data.data[n].id){\r\n                    data.data[n].quantity = this.checkedSKUTableData[i].quantity;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          this.SKUTableData = data.data;\r\n          this.SKUDialog = true;\r\n        });\r\n      },\r\n      // 确认选择商品\r\n      checkGoodsSub(){\r\n        for(let i = 0; i < this.SKUTableData.length; i++){\r\n          let good = this.SKUTableData[i];\r\n          let checkedGood = this.checkedSKUTableData.find(item => {\r\n            return item.id === good.id;\r\n          });\r\n          if(checkedGood){\r\n            if(good.quantity === 0){\r\n              let index = this.checkedSKUTableData.find(item => {\r\n                return item.id === good.id;\r\n              });\r\n              this.checkedSKUTableData.splice(index, 1)\r\n            }else {\r\n              checkedGood.quantity = good.quantity;\r\n            }\r\n          }else if(!checkedGood && good.quantity > 0){\r\n            this.SKUTableData[i].brandName = this.tableDataCheckedRow.brandName;\r\n            this.SKUTableData[i].brandId = this.tableDataCheckedRow.brandId;\r\n            this.SKUTableData[i].designCompanyName = this.tableDataCheckedRow.designCompanyName;\r\n            this.SKUTableData[i].designCompanyId = this.tableDataCheckedRow.designCompanyId;\r\n            this.checkedSKUTableData.push(this.SKUTableData[i]);\r\n          }\r\n        }\r\n        // 计算总价\r\n        this.checkedTotalPrice();\r\n        this.SKUDialog = false;\r\n      },\r\n      // 类型切换\r\n      handleBeforeClick(activeName) {\r\n        if(activeName === 'store'){\r\n          this.getStoreInfo();\r\n        }\r\n        if(activeName === 'goods'){\r\n          this.getStoreTags();\r\n        }\r\n\r\n      },\r\n      // 计算总价   20191031 新增计算总件数\r\n      checkedTotalPrice(){\r\n        this.checkedSKUTotal = 0;\r\n        this.checkedSKUTotalPrice = 0;\r\n        if(this.checkedSKUTableData.length){\r\n          this.checkedSKUTableData.forEach(item => {\r\n            this.checkedSKUTotalPrice += Number(item.purchasePrice) * Number(item.quantity);\r\n            this.checkedSKUTotal += Number(item.quantity)\r\n          });\r\n        }\r\n        this.checkedSKUTotalPrice = this.checkedSKUTotalPrice.toFixed(2)\r\n      },\r\n      // 获取更多标签\r\n      getMoreTags() {},\r\n      // 最终提交\r\n      finalSub(){\r\n        if(!this.checkedSKUTableData.length){\r\n          return\r\n        }\r\n        this.distributionInfo.allotProductInfoList = [];\r\n        this.distributionInfo.totalPrice = this.checkedSKUTotalPrice;\r\n        let goodsNum = 0;\r\n        this.checkedSKUTableData.forEach(item => {\r\n          let obj = {\r\n            // 货品编码\r\n            goodsCode: item.code,\r\n            // 货品名称\r\n            goodsName: item.name,\r\n            // 商品(spu)编码\r\n            productCode: item.productCode,\r\n            // 商品类型\r\n            productType: item.fullCateName,\r\n            // 商品图片\r\n            image: item.image,\r\n            // 品牌\r\n            brandName: item.brandName,\r\n            brandCode: item.brandId,\r\n            // 设计商\r\n            designCompanyName: item.designCompanyName,\r\n            designCompanyCode: item.designCompanyId,\r\n            // 尺码\r\n            size: item.size,\r\n            // 颜色\r\n            color: item.color,\r\n            // 吊牌价\r\n            retailPrice: item.retailPrice,\r\n            // 销售单价\r\n            purchasePrice: item.purchasePrice,\r\n            // 数量\r\n            quantity: item.quantity\r\n          };\r\n          this.distributionInfo.allotProductInfoList.push(obj);\r\n          goodsNum += item.quantity;\r\n        });\r\n        this.distributionInfo.goodsNum = goodsNum;\r\n        this.request(this.api.order.allotGoods_save, this.distributionInfo).then(data => {\r\n          if(data && data.length){\r\n            let html = '';\r\n            data.forEach(errItem => {\r\n              for(let i = 0; i < this.checkedSKUTableData.length; i++){\r\n                if(this.checkedSKUTableData[i].code == errItem.code){\r\n                  if(errItem.qty == 0){\r\n                    this.checkedSKUTableData.splice(i, 1);\r\n                    html += '<p>'+ errItem.code + '：可用库存为0，已删除该商品；</p>';\r\n                  }else {\r\n                    html += '<p>'+ errItem.code + '：可用库存不足，已更新为最大值' + errItem.qty + '；</p>';\r\n                    this.checkedSKUTableData[i].availableQuantity = errItem.qty;\r\n                    this.checkedSKUTableData[i].quantity = errItem.qty;\r\n                  }\r\n                  break;\r\n                }\r\n              }\r\n            });\r\n            this.$notify({\r\n              title: '提示',\r\n              duration: 0,\r\n              dangerouslyUseHTMLString: true,\r\n              message: html\r\n            });\r\n            // 计算总价\r\n            this.checkedTotalPrice();\r\n          }else {\r\n            this.$notify.success({ title: '成功',message: '新增成功'});\r\n            let module = '/' + this.$route.path.split('/')[1];\r\n            this.$router.push({\r\n              path: module + '/distribution/distribution_list'\r\n            })\r\n          }\r\n        });\r\n      },\r\n      /**\r\n       * 搜索商品参数下拉数据及验证\r\n       */\r\n      // 验证价格区间\r\n      moneyRule(rule, value,callback) {\r\n        const reg = /^[0-9]*$/;\r\n        if(!reg.test(this.formData.retailPriceGE) || !reg.test(this.formData.retailPriceLE)){\r\n          callback(new Error('价格区间必须是数字'));\r\n          return\r\n        }\r\n        if(this.formData.retailPriceGE && this.formData.retailPriceLE && this.formData.retailPriceGE >= this.formData.retailPriceLE){\r\n          callback(new Error('价格区间下限应小于上限'));\r\n        }else {\r\n          callback();\r\n        }\r\n      },\r\n      // 验证数量区间\r\n      countRule(rule, value,callback) {\r\n        const reg = /^[0-9]*$/;\r\n        if(!reg.test(this.formData.availableQuantityGE) || !reg.test(this.formData.availableQuantityLE)){\r\n          callback(new Error('库存量区间必须是数字'));\r\n          return\r\n        }\r\n        if(this.formData.availableQuantityGE && this.formData.availableQuantityLE && this.formData.availableQuantityGE >= this.formData.availableQuantityLE){\r\n          callback(new Error('库存量区间下限应小于上限'));\r\n        }else {\r\n          callback();\r\n        }\r\n      },\r\n      // 获取商品分类数据\r\n      getClassData(){\r\n        //分类类型（1：标准分类，2：定制分类，3：原料分类或者称为属性分类）\r\n        this.$common.getClassSelect(this,1).then(res =>{\r\n          this.classData=res.ztree;\r\n          this.classList=res.list;\r\n        })\r\n      },\r\n      // 商品分类Change\r\n      classChange(e){\r\n        if(e.length === 0){\r\n          this.formData.cateIdentifier = '';\r\n          return;\r\n        }\r\n        let cateId  = JSON.parse(JSON.stringify(e)).pop();\r\n        let obj = this.classList.find((item)=>(item.id == cateId));\r\n        this.formData.cateIdentifier = obj.identifier;\r\n      },\r\n      // 获取设计商\r\n      getDesignCompanyOptions(){\r\n        this.request(this.api.product.designCompany_list, {}).then(data => {\r\n          this.designCompanyOptions=data.data;\r\n        });\r\n      },\r\n      // 获取品牌\r\n      getBrandOptions(){\r\n        this.request(this.api.product.productBrand_list,{}).then(data => {\r\n          this.brandOptions= data.data;\r\n        });\r\n      }\r\n      /**\r\n       * 搜索商品参数下拉数据--end\r\n       */\r\n    },\r\n    // 计算属性\r\n    computed: {},\r\n    // 监听数据变化\r\n    watch: {}\r\n  }\r\n</script>\r\n"],"sourceRoot":"src/views/collocation/distribution"}]}