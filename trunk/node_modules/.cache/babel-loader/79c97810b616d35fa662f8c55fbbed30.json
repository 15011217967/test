{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\content\\operate\\mini_program.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\content\\operate\\mini_program.vue","mtime":1574160264908},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport UploadImg from '@/components/editor/UploadImg.vue';\nimport LinkDialog from '@/views/content/operate/components/LinkDialog.vue';\nimport Sortable from 'sortablejs';\nexport default {\n  name: 'mini_program',\n  // 数据\n  data: function data() {\n    return {\n      // 左侧数据\n      sideData: [],\n      // 选中的行\n      checkSideRow: {},\n      // 左侧数据映射\n      sideDataProps: {\n        children: 'children',\n        label: 'name'\n      },\n      // 表格数据\n      tableData: [],\n      // 链接类型\n      linkType: {\n        1: '内容链接',\n        2: '商品链接',\n        3: '外部链接'\n      },\n      detailsType: {\n        1: '视频',\n        2: '小视频',\n        3: '图集',\n        4: '文章',\n        5: '定制单品',\n        6: '定制套装',\n        7: '标准商品'\n      },\n      // 新增和编辑\n      // 是否显示\n      dialogVisible: false,\n      // 编辑的行\n      checkTableRow: {},\n      // 编辑还是新增  新增 true  编辑false\n      addAndEditFlag: true,\n      // 首页banner\n      // 编辑新增提交的表单\n      addAndEditFormData: {\n        id: '',\n        coverUrl: '',\n        // 选中的链接\n        checkLinkList: []\n      },\n      // 验证\n      rules: {\n        coverUrl: [{\n          type: 'string',\n          required: true,\n          message: '请上传轮播图',\n          trigger: 'blur'\n        }],\n        checkLinkList: [{\n          type: 'array',\n          required: true,\n          message: '请选择关联',\n          trigger: 'change'\n        }]\n      },\n\n      /**\n       * 如果不是首页banner\n       */\n      // 分类选择验证\n      categoryRules: {\n        categoryTreeValue: [{\n          type: 'array',\n          required: true,\n          message: '请选择分类',\n          trigger: 'change'\n        }]\n      },\n      // 选中的分类\n      addAndEditCategoryFormData: {\n        categoryTreeValue: []\n      },\n      // 分类数据\n      categoryTreeList: [],\n      // 分类映射\n      categoryTreeListProps: {\n        value: '_flag',\n        label: 'name',\n        children: 'children'\n      }\n    };\n  },\n  // 组件\n  components: {\n    UploadImg: UploadImg,\n    LinkDialog: LinkDialog\n  },\n  // 初始化数据\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.$nextTick(function () {\n      // 获取左侧数据\n      _this2.getSideData(); // 初始行拖拽\n\n\n      _this2.rowDrop();\n    });\n  },\n  // keepAlive 页面显示时\n  activated: function activated() {\n    this.getTableData();\n  },\n  // 方法\n  methods: {\n    // 获取左侧数据\n    getSideData: function getSideData() {\n      var _this3 = this;\n\n      this.request(this.api.contentCore.module_tree_list, {}).then(function (data) {\n        if (data && data.length) {\n          _this3.sideData = data; // 获取默认选中的\n\n          _this3.$nextTick(function () {\n            var row = data[0].children[0];\n            _this3.checkSideRow = row;\n\n            _this3.$refs.sideTree.setCurrentKey(row.id);\n\n            _this3.getTableData(row);\n          });\n        }\n      });\n    },\n    // 获取表格数据\n    getTableData: function getTableData(row) {\n      var _this4 = this;\n\n      this.request(this.api.contentCore.manage_list, {\n        modelId: row.id,\n        orderBy: 'sort',\n        relationType: row.relationType\n      }).then(function (data) {\n        if (data.data && data.data.length) {\n          data.data.forEach(function (item) {\n            if (item.linkType == 1 && item.contentPasses && item.contentPasses.length > 0) {\n              item._linkInfo = _this4.detailsType[item.detailsType] + ' 》 ' + item.contentPasses[0].title;\n            } else if (item.productName && item.linkType == 2) {\n              item._linkInfo = _this4.detailsType[item.detailsType] + ' 》 ' + item.productName;\n            } else if (item.url && item.linkType == 3) {\n              item._linkInfo = item.url;\n            } else {\n              item._linkInfo = '关联的' + _this4.detailsType[item.detailsType] + '不存在或已下线';\n            }\n          });\n        }\n\n        _this4.tableData = data.data;\n      });\n    },\n    // 表格行删除\n    delTableItem: function delTableItem(id) {\n      var _this5 = this;\n\n      this.$confirm('确认删除吗？', '删除', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        showClose: false\n      }).then(function () {\n        _this5.request(_this5.api.contentCore.manage_delete, {\n          id: id\n        }).then(function (data) {\n          _this5.$notify.success({\n            title: '成功',\n            message: '删除成功'\n          });\n\n          _this5.getTableData(_this5.checkSideRow);\n        });\n      }).catch(function () {});\n    },\n    // 左侧数据行点击\n    sideDataClick: function sideDataClick(row, node, tree) {\n      if (row.level > 1) {\n        this.checkSideRow = row;\n        this.getTableData(row);\n      }\n    },\n    // 表格行拖拽\n    rowDrop: function rowDrop() {\n      var tbody = this.$refs.dragTable.$el.querySelector('.el-table__body-wrapper > table > tbody');\n\n      var _this = this;\n\n      Sortable.create(tbody, {\n        onEnd: function onEnd(_ref) {\n          var newIndex = _ref.newIndex,\n              oldIndex = _ref.oldIndex;\n          if (newIndex === oldIndex) return;\n\n          var currRow = _this.tableData.splice(oldIndex, 1)[0];\n\n          _this.tableData.splice(newIndex, 0, currRow);\n\n          var listData = _this.tableData.map(function (item, index) {\n            return {\n              id: item.id,\n              sort: ++index\n            };\n          });\n\n          _this.request(_this.api.contentCore.manage_move, listData).then(function (data) {\n            _this.$notify.success({\n              title: '成功',\n              message: '移动成功'\n            });\n          });\n        }\n      });\n    },\n    // 新增和编辑显示\n    addAndEdit: function addAndEdit(flag, row) {\n      if (flag) {\n        if (this.checkSideRow.relationType === 0) {\n          this.addAndEditFormData = {\n            coverUrl: '',\n            noContent: '',\n            checkLinkList: []\n          };\n        }\n\n        if (this.checkSideRow.relationType === 1) {\n          this.addAndEditCategoryFormData = {\n            categoryTreeValue: []\n          };\n          this.getCategoryTreeList();\n        }\n      } else {\n        if (this.checkSideRow.relationType === 0) {\n          // 内容\n          if (row.linkType == 1 && row.contentPasses && row.contentPasses.length > 0) {\n            this.addAndEditFormData = {\n              checkLinkList: [{\n                title: row.contentPasses[0].title,\n                url: row.url,\n                linkType: row.linkType,\n                linkTypeName: this.linkType[row.linkType],\n                detailsType: row.detailsType,\n                detailsTypeName: this.detailsType[row.detailsType]\n              }],\n              coverUrl: row.coverUrl,\n              id: row.id // 商品\n\n            };\n          } else if (row.linkType == 2 && row.productName) {\n            this.addAndEditFormData = {\n              checkLinkList: [{\n                title: row.productName,\n                url: row.url,\n                linkType: row.linkType,\n                linkTypeName: this.linkType[row.linkType],\n                detailsType: row.detailsType,\n                detailsTypeName: this.detailsType[row.detailsType]\n              }],\n              coverUrl: row.coverUrl,\n              id: row.id // 则为链接\n\n            };\n          } else if (row.linkType == 1 && row.url) {} else {\n            this.addAndEditFormData = {\n              checkLinkList: [],\n              noContent: \"\\u5173\\u8054\\u7684\".concat(this.detailsType[row.detailsType], \"\\u4E0D\\u5B58\\u5728\\u6216\\u5DF2\\u4E0B\\u7EBF\"),\n              coverUrl: row.coverUrl\n            };\n          }\n        }\n\n        if (this.checkSideRow.relationType === 1) {\n          this.checkTableRow = row;\n          var check = [row.identifier];\n\n          if (row.identifier.indexOf('$') > -1) {\n            check = row.identifier.split('$');\n          }\n\n          this.addAndEditCategoryFormData.categoryTreeValue = check;\n          this.getCategoryTreeList();\n        }\n      }\n\n      this.addAndEditFlag = flag;\n      this.dialogVisible = true;\n    },\n    // 获取链接关联\n    getLink: function getLink() {\n      this.$refs.LinkDialog.linkDialog = true;\n      this.$refs.LinkDialog.init();\n    },\n    // 新增编辑提交\n    addAndEditSub: function addAndEditSub() {\n      var _this6 = this;\n\n      // 新增url\n      var url;\n\n      if (!this.addAndEditFlag) {\n        // 编辑url\n        url = this.api.contentCore.manage_edit;\n      } else {\n        // 新增 url\n        url = this.api.contentCore.manage_save;\n      } // relationType  0 首页banner   1  其他\n\n\n      if (this.checkSideRow.relationType === 0) {\n        this.$refs.form.validate(function (valid) {\n          if (valid) {\n            var params = _this6.addAndEditFormData.checkLinkList[0];\n            params.coverUrl = _this6.addAndEditFormData.coverUrl;\n            params.id = _this6.addAndEditFormData.id;\n\n            _this6.addAndEditSubSend(url, params);\n          } else {\n            return false;\n          }\n        });\n      }\n\n      if (this.checkSideRow.relationType === 1) {\n        this.$refs.categoryForm.validate(function (valid) {\n          if (valid && _this6.addAndEditCategoryFormData.categoryTreeValue.length) {\n            var ary = _this6.addAndEditCategoryFormData.categoryTreeValue[_this6.addAndEditCategoryFormData.categoryTreeValue.length - 1].split('&');\n\n            var formData = {\n              conCatId: ary[0],\n              conCatName: ary[1],\n              coverUrl: ary[2],\n              identifier: _this6.addAndEditCategoryFormData.categoryTreeValue.join('$'),\n              id: _this6.checkTableRow.id\n            };\n\n            _this6.addAndEditSubSend(url, formData);\n          } else {\n            return false;\n          }\n        });\n      }\n    },\n    addAndEditSubSend: function addAndEditSubSend(url, formData) {\n      var _this7 = this;\n\n      // 左侧菜单id\n      formData.modelId = this.checkSideRow.id;\n      this.request(url, formData).then(function (data) {\n        var msg = _this7.addAndEditFlag ? '新增成功' : '编辑成功';\n\n        _this7.$notify.success({\n          title: '成功',\n          message: msg\n        }); // 删除完初始化表格数据\n\n\n        _this7.getTableData(_this7.checkSideRow);\n\n        _this7.dialogVisible = false;\n      });\n    },\n    // 获取分类tree\n    getCategoryTreeList: function getCategoryTreeList() {\n      var _this8 = this;\n\n      this.request(this.api.contentCore.category_tree_list, {}).then(function (data) {\n        if (data && data.length) {\n          // 初始化数据\n          _this8.categoryTreeListInit(data);\n\n          _this8.categoryTreeList = data;\n        }\n      });\n    },\n    // 初始数据\n    categoryTreeListInit: function categoryTreeListInit(data) {\n      var _this9 = this;\n\n      if (data && data.length) {\n        data.forEach(function (item) {\n          item._flag = item.id + '&' + item.name + '&' + item.coverUrl;\n\n          if (item.children) {\n            if (item.children.length === 0) {\n              delete item.children;\n            } else {\n              _this9.categoryTreeListInit(item.children);\n            }\n          }\n        });\n      }\n    }\n  },\n  // 计算属性\n  computed: {},\n  // 监听数据变化\n  watch: {}\n};",{"version":3,"sources":["mini_program.vue"],"names":[],"mappings":"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","sourcesContent":["<style lang=\"less\" scoped>\r\n  @import \"../style/contentPublic.less\";\r\n  .mini-program{\r\n    .page-main{display:flex;\r\n      .side {width: 240px;padding: 20px;margin-right: 0;background: #fff;}\r\n      .list-table{flex:1;background: 100%;background: #fff;padding: 24px;\r\n        .table-img{height: 30px;max-width: 200px;}\r\n      }\r\n      .check-link-list{\r\n        span{margin-left: 20px;}\r\n      }\r\n      .item-margin{\r\n        margin-top: 0;\r\n      }\r\n    }\r\n  }\r\n\r\n</style>\r\n<template>\r\n  <div class=\"mini-program page-public\">\r\n    <div class=\"page-main\">\r\n      <!--侧边-->\r\n      <div class=\"side item-margin\">\r\n        <h4>运营模块</h4>\r\n        <el-tree ref=\"sideTree\" :data=\"sideData\" :props=\"sideDataProps\" :default-expand-all=\"true\" :expand-on-click-node=\"false\" highlight-current node-key=\"id\" @node-click=\"sideDataClick\"></el-tree>\r\n      </div>\r\n      <!--表格-->\r\n      <div class=\"list-table item-margin\">\r\n        <div class=\"page-main-btns\">\r\n          <el-button type=\"primary\" size=\"small\"  @click=\"addAndEdit(true)\">新增</el-button>\r\n        </div>\r\n        <el-table :data=\"tableData\" ref=\"dragTable\" style=\"width: 100%\"  row-key=\"id\">\r\n          <el-table-column type=\"index\" width=\"50\" label=\"序号\"></el-table-column>\r\n          <div v-if=\"checkSideRow.relationType === 0\" >\r\n            <el-table-column label=\"图片\">\r\n              <template slot-scope=\"scope\">\r\n                <img :src=\"scope.row.coverUrl\" alt=\"\" class=\"table-img\" v-if=\"scope.row.coverUrl\">\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"跳转类型\">\r\n              <template slot-scope=\"scope\">\r\n                {{ scope.row.linkType ? linkType[scope.row.linkType] : ''}}\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column  prop=\"_linkInfo\" label=\"关联内容\"></el-table-column>\r\n          </div>\r\n          <el-table-column prop=\"conCatName\" label=\"关联内容分类\"  v-if=\"checkSideRow.relationType === 1\"></el-table-column>\r\n          <el-table-column label=\"操作\" width=\"160\">\r\n            <template slot-scope=\"scope\">\r\n              <el-button type=\"text\" size=\"small\" @click=\"addAndEdit(false, scope.row)\">编辑</el-button>\r\n              <el-button type=\"text\" size=\"small\"  @click=\"delTableItem(scope.row.id)\">删除</el-button>\r\n              <el-button type=\"text\" size=\"small\">移动</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </div>\r\n      <!--新增和编辑-->\r\n      <el-dialog :title=\"addAndEditFlag ? '新增' : '编辑'\" :visible.sync=\"dialogVisible\" width=\"40%\">\r\n        <el-form ref=\"form\" :model=\"addAndEditFormData\" label-width=\"80px\" :rules=\"rules\" v-if=\"checkSideRow.relationType === 0\" :key=\"checkSideRow.relationType\">\r\n          <el-form-item label=\"轮播图\" prop=\"coverUrl\">\r\n            <upload-img v-model=\"addAndEditFormData.coverUrl\" :content-txt=\"'点击上传'\"></upload-img>\r\n          </el-form-item>\r\n          <el-form-item label=\"选择链接\" prop=\"checkLinkList\" class=\"small-input\">\r\n            <el-button type=\"primary\" size=\"small\" @click=\"getLink\" v-if=\"!addAndEditFormData.checkLinkList.length\">新增</el-button>\r\n            <div v-for=\"item in addAndEditFormData.checkLinkList\" class=\"check-link-list\">{{item.linkTypeName}} 》 {{ item.detailsTypeName }} 》 {{ item.title }} <span><el-button type=\"text\" size=\"small\" @click=\"getLink\">更换</el-button></span> </div>\r\n            <p v-show=\"!addAndEditFormData.checkLinkList.length\">{{ addAndEditFormData.noContent }}</p>\r\n          </el-form-item>\r\n        </el-form>\r\n        <el-form ref=\"categoryForm\" :model=\"addAndEditCategoryFormData\" label-width=\"80px\" :rules=\"categoryRules\"  v-if=\"checkSideRow.relationType === 1\"  :key=\"checkSideRow.relationType\">\r\n          <el-form-item label=\"分类\" prop=\"categoryTreeValue\">\r\n            <el-cascader :options=\"categoryTreeList\" v-model=\"addAndEditCategoryFormData.categoryTreeValue\" :props=\"categoryTreeListProps\">\r\n            </el-cascader>\r\n          </el-form-item>\r\n        </el-form>\r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"dialogVisible = false\" size=\"small\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"addAndEditSub\" size=\"small\">确 定</el-button>\r\n        </span>\r\n      </el-dialog>\r\n      <link-dialog ref=\"LinkDialog\" :check-link-list=\"addAndEditFormData.checkLinkList\"></link-dialog>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n  import UploadImg from '@/components/editor/UploadImg.vue'\r\n  import LinkDialog from '@/views/content/operate/components/LinkDialog.vue'\r\n  import Sortable from 'sortablejs'\r\n  export default {\r\n    name: 'mini_program',\r\n    // 数据\r\n    data() {\r\n      return {\r\n        // 左侧数据\r\n        sideData: [],\r\n        // 选中的行\r\n        checkSideRow: {},\r\n        // 左侧数据映射\r\n        sideDataProps: {\r\n          children: 'children',\r\n          label: 'name'\r\n        },\r\n        // 表格数据\r\n        tableData:[],\r\n        // 链接类型\r\n        linkType: {\r\n          1: '内容链接',\r\n          2: '商品链接',\r\n          3: '外部链接'\r\n        },\r\n        detailsType: {\r\n          1: '视频',\r\n          2: '小视频',\r\n          3: '图集',\r\n          4: '文章',\r\n          5: '定制单品',\r\n          6: '定制套装',\r\n          7: '标准商品'\r\n        },\r\n        // 新增和编辑\r\n        // 是否显示\r\n        dialogVisible: false,\r\n        // 编辑的行\r\n        checkTableRow: {},\r\n        // 编辑还是新增  新增 true  编辑false\r\n        addAndEditFlag: true,\r\n        // 首页banner\r\n        // 编辑新增提交的表单\r\n        addAndEditFormData: {\r\n          id: '',\r\n          coverUrl: '',\r\n          // 选中的链接\r\n          checkLinkList: [],\r\n        },\r\n        // 验证\r\n        rules: {\r\n          coverUrl: [\r\n            { type: 'string',required: true, message: '请上传轮播图', trigger: 'blur' }\r\n          ],\r\n          checkLinkList: [\r\n            { type: 'array',required: true, message: '请选择关联', trigger: 'change' }\r\n          ]\r\n        },\r\n        /**\r\n         * 如果不是首页banner\r\n         */\r\n        // 分类选择验证\r\n        categoryRules: {\r\n          categoryTreeValue: [\r\n            { type: 'array',required: true, message: '请选择分类', trigger: 'change' }\r\n          ]\r\n        },\r\n        // 选中的分类\r\n        addAndEditCategoryFormData: {\r\n          categoryTreeValue: []\r\n        },\r\n        // 分类数据\r\n        categoryTreeList: [],\r\n        // 分类映射\r\n        categoryTreeListProps:{\r\n          value: '_flag',\r\n          label: 'name',\r\n          children: 'children',\r\n        }\r\n      }\r\n    },\r\n    // 组件\r\n    components: {\r\n      UploadImg,\r\n      LinkDialog\r\n    },\r\n    // 初始化数据\r\n    mounted() {\r\n      this.$nextTick(() => {\r\n        // 获取左侧数据\r\n        this.getSideData()\r\n        // 初始行拖拽\r\n        this.rowDrop()\r\n      })\r\n    },\r\n    // keepAlive 页面显示时\r\n    activated() {\r\n      this.getTableData();\r\n    },\r\n    // 方法\r\n    methods: {\r\n      // 获取左侧数据\r\n      getSideData() {\r\n        this.request(this.api.contentCore.module_tree_list, {}).then(data => {\r\n          if(data && data.length){\r\n            this.sideData =  data\r\n            // 获取默认选中的\r\n            this.$nextTick(() => {\r\n              const row = data[0].children[0]\r\n              this.checkSideRow = row\r\n              this.$refs.sideTree.setCurrentKey(row.id)\r\n              this.getTableData(row)\r\n            })\r\n          }\r\n        });\r\n      },\r\n      // 获取表格数据\r\n      getTableData(row) {\r\n        this.request(this.api.contentCore.manage_list, {modelId: row.id, orderBy: 'sort', relationType: row.relationType }).then(data => {\r\n          if(data.data && data.data.length){\r\n            data.data.forEach(item => {\r\n              if(item.linkType == 1 && item.contentPasses && item.contentPasses.length > 0){\r\n                item._linkInfo = this.detailsType[item.detailsType] + ' 》 ' + item.contentPasses[0].title\r\n              }else if(item.productName && item.linkType == 2 ){\r\n                item._linkInfo = this.detailsType[item.detailsType] + ' 》 ' + item.productName\r\n              }else if(item.url && item.linkType == 3 ){\r\n                item._linkInfo = item.url\r\n              }else {\r\n                item._linkInfo = '关联的'+ this.detailsType[item.detailsType] + '不存在或已下线'\r\n              }\r\n            })\r\n          }\r\n          this.tableData =  data.data\r\n        });\r\n      },\r\n      // 表格行删除\r\n      delTableItem(id){\r\n        this.$confirm('确认删除吗？', '删除', {\r\n          confirmButtonText: '确认',\r\n          cancelButtonText: '取消',\r\n          showClose:false\r\n        }).then(() => {\r\n          this.request(this.api.contentCore.manage_delete, {id: id}).then(data => {\r\n            this.$notify.success({ title: '成功',message: '删除成功'})\r\n            this.getTableData(this.checkSideRow)\r\n          });\r\n        }).catch(() => {\r\n        });\r\n\r\n      },\r\n      // 左侧数据行点击\r\n      sideDataClick(row, node, tree){\r\n        if( row.level > 1){\r\n          this.checkSideRow = row\r\n          this.getTableData(row)\r\n        }\r\n      },\r\n      // 表格行拖拽\r\n      rowDrop() {\r\n        const tbody = this.$refs.dragTable.$el.querySelector('.el-table__body-wrapper > table > tbody')\r\n        const _this = this\r\n        Sortable.create(tbody, {\r\n          onEnd({ newIndex, oldIndex }) {\r\n            if(newIndex === oldIndex) return\r\n            const currRow = _this.tableData.splice(oldIndex, 1)[0]\r\n            _this.tableData.splice(newIndex, 0, currRow)\r\n            let listData = _this.tableData.map((item,index) => {\r\n              return {\r\n                id: item.id,\r\n                sort: ++index\r\n              }\r\n            })\r\n            _this.request(_this.api.contentCore.manage_move, listData).then(data => {\r\n              _this.$notify.success({ title: '成功',message: '移动成功'})\r\n            });\r\n\r\n          }\r\n        })\r\n      },\r\n      // 新增和编辑显示\r\n      addAndEdit(flag,row){\r\n\r\n        if(flag){\r\n          if(this.checkSideRow.relationType === 0){\r\n            this.addAndEditFormData = {\r\n              coverUrl: '',\r\n              noContent: '',\r\n              checkLinkList: []\r\n            }\r\n          }\r\n          if(this.checkSideRow.relationType === 1){\r\n            this.addAndEditCategoryFormData = {\r\n              categoryTreeValue : []\r\n            }\r\n            this.getCategoryTreeList()\r\n          }\r\n        }else {\r\n          if(this.checkSideRow.relationType === 0){\r\n            // 内容\r\n            if(row.linkType == 1 && row.contentPasses && row.contentPasses.length > 0){\r\n              this.addAndEditFormData = {\r\n                checkLinkList: [{\r\n                  title: row.contentPasses[0].title,\r\n                  url: row.url,\r\n                  linkType: row.linkType,\r\n                  linkTypeName: this.linkType[row.linkType],\r\n                  detailsType: row.detailsType,\r\n                  detailsTypeName: this.detailsType[row.detailsType]\r\n                }],\r\n                coverUrl: row.coverUrl,\r\n                id: row.id\r\n              }\r\n              // 商品\r\n            }else if(row.linkType == 2 && row.productName){\r\n              this.addAndEditFormData = {\r\n                checkLinkList: [{\r\n                  title: row.productName,\r\n                  url: row.url,\r\n                  linkType: row.linkType,\r\n                  linkTypeName: this.linkType[row.linkType],\r\n                  detailsType: row.detailsType,\r\n                  detailsTypeName: this.detailsType[row.detailsType]\r\n                }],\r\n                coverUrl: row.coverUrl,\r\n                id: row.id\r\n              }\r\n\r\n              // 则为链接\r\n            }else if(row.linkType == 1 && row.url){\r\n\r\n            }else{\r\n              this.addAndEditFormData = {\r\n                checkLinkList: [],\r\n                noContent: `关联的${this.detailsType[row.detailsType]}不存在或已下线`,\r\n                coverUrl: row.coverUrl\r\n              }\r\n            }\r\n          }\r\n          if(this.checkSideRow.relationType === 1){\r\n            this.checkTableRow = row\r\n            let check = [row.identifier]\r\n            if(row.identifier.indexOf('$') > -1){\r\n              check = row.identifier.split('$')\r\n            }\r\n            this.addAndEditCategoryFormData.categoryTreeValue = check\r\n            this.getCategoryTreeList()\r\n          }\r\n        }\r\n        this.addAndEditFlag = flag\r\n        this.dialogVisible = true\r\n      },\r\n      // 获取链接关联\r\n      getLink(){\r\n        this.$refs.LinkDialog.linkDialog = true\r\n        this.$refs.LinkDialog.init()\r\n      },\r\n      // 新增编辑提交\r\n      addAndEditSub(){\r\n        // 新增url\r\n        let url\r\n        if(!this.addAndEditFlag){\r\n          // 编辑url\r\n          url = this.api.contentCore.manage_edit\r\n        }else {\r\n          // 新增 url\r\n          url = this.api.contentCore.manage_save\r\n        }\r\n        // relationType  0 首页banner   1  其他\r\n        if(this.checkSideRow.relationType === 0){\r\n          this.$refs.form.validate((valid) => {\r\n            if (valid) {\r\n              let params = this.addAndEditFormData.checkLinkList[0]\r\n              params.coverUrl = this.addAndEditFormData.coverUrl\r\n              params.id = this.addAndEditFormData.id\r\n              this.addAndEditSubSend(url, params)\r\n            } else {\r\n              return false;\r\n            }\r\n          });\r\n        }\r\n        if(this.checkSideRow.relationType === 1){\r\n          this.$refs.categoryForm.validate((valid) => {\r\n            if (valid && this.addAndEditCategoryFormData.categoryTreeValue.length) {\r\n              const ary = this.addAndEditCategoryFormData.categoryTreeValue[this.addAndEditCategoryFormData.categoryTreeValue.length-1].split('&')\r\n              const formData = {\r\n                conCatId: ary[0],\r\n                conCatName: ary[1],\r\n                coverUrl: ary[2],\r\n                identifier: this.addAndEditCategoryFormData.categoryTreeValue.join('$'),\r\n                id: this.checkTableRow.id\r\n              }\r\n              this.addAndEditSubSend(url, formData)\r\n            } else {\r\n              return false;\r\n            }\r\n          });\r\n\r\n        }\r\n\r\n\r\n\r\n      },\r\n      addAndEditSubSend(url, formData){\r\n        // 左侧菜单id\r\n        formData.modelId = this.checkSideRow.id\r\n        this.request(url, formData).then(data => {\r\n          let msg = this.addAndEditFlag ? '新增成功' : '编辑成功'\r\n          this.$notify.success({ title: '成功',message: msg})\r\n          // 删除完初始化表格数据\r\n          this.getTableData(this.checkSideRow)\r\n          this.dialogVisible = false\r\n        })\r\n      },\r\n      // 获取分类tree\r\n      getCategoryTreeList(){\r\n        this.request(this.api.contentCore.category_tree_list, {}).then(data => {\r\n          if(data && data.length){\r\n            // 初始化数据\r\n            this.categoryTreeListInit(data)\r\n            this.categoryTreeList = data\r\n          }\r\n        });\r\n      },\r\n      // 初始数据\r\n      categoryTreeListInit(data){\r\n    if(data && data.length){\r\n      data.forEach((item)=>{\r\n        item._flag = item.id +'&'+ item.name + '&'+item.coverUrl\r\n        if(item.children){\r\n          if(item.children.length === 0){\r\n            delete item.children\r\n          }else {\r\n            this.categoryTreeListInit(item.children)\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n    },\r\n    // 计算属性\r\n    computed: {},\r\n    // 监听数据变化\r\n    watch: {\r\n    }\r\n  }\r\n</script>\r\n"],"sourceRoot":"src/views/content/operate"}]}