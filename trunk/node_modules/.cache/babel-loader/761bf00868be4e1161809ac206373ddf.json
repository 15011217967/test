{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\components\\Prints\\PrintsDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\components\\Prints\\PrintsDialog.vue","mtime":1572415127702},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.number.is-finite\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//引入LODOP模块\nimport { getLodop } from \"@/utils/LodopFuncs.js\"; //引入 打印样式模块\n\nimport { printWinform } from \"@/utils/print_50_120_shu.js\"; // 引入弹出打印状态组件；\n\nimport PrintsStatusDialog from \"./PrintsStatusDialog.vue\";\nvar LODOP; //打印的数据\n\nvar printData = [];\nexport default {\n  name: \"tp-prints-dialog\",\n  components: {\n    PrintsStatusDialog: PrintsStatusDialog\n  },\n  data: function data() {\n    return {\n      filtersData: {\n        setNum: null\n      },\n      tableListData: [],\n      printsOptions: [],\n      printsDialogVisible: false,\n      printsValue: null,\n      //选择后打印的数据\n      selectPrintData: [],\n      tableLoading: false\n    };\n  },\n  created: function created() {\n    this.init();\n  },\n  mounted: function mounted() {},\n  methods: {\n    init: function init() {\n      this.filtersData = {\n        setNum: null\n      };\n      this.tableListData = [];\n      this.selectPrintData = [];\n      printData = [];\n    },\n    //获取打印机\n    getLodopData: function getLodopData() {\n      try {\n        LODOP = getLodop();\n        var arr = [];\n        var iPrinterCount = LODOP.GET_PRINTER_COUNT();\n\n        for (var i = 0; i < iPrinterCount; i++) {\n          arr.push({\n            label: LODOP.GET_PRINTER_NAME(i),\n            value: i\n          });\n        } // console.log(arr);\n\n\n        this.printsOptions = arr;\n      } catch (error) {\n        console.log('无打印机驱动！');\n      }\n    },\n    popupInit: function popupInit(codeList) {\n      // console.log(codeList);\n      this.getTableList(codeList);\n      this.printsDialogVisible = true;\n      this.getLodopData();\n    },\n    //获取列表\n    getTableList: function getTableList(codeList) {\n      var _this = this;\n\n      this.tableLoading = true;\n      this.request(this.api.product.productGoods_list, {\n        productCodes: codeList\n      }, true).then(function (res) {\n        _this.tableLoading = false;\n        var _data = res.data;\n\n        for (var i = 0; i < _data.length; i++) {\n          _data[i].printNum = 1;\n        }\n\n        _this.tableListData = _data;\n      }).catch(function (err) {\n        _this.tableLoading = false;\n      });\n    },\n    //当前选中的数据\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.selectPrintData = val;\n    },\n    //提交打印\n    submitPrint: function submitPrint() {\n      var _this2 = this;\n\n      if (this.printsValue == null) {\n        this.$message.error('请选择打印机！');\n        return;\n      }\n\n      if (this.selectPrintData.length > 0) {\n        var arr = [];\n\n        for (var i = 0; i < this.selectPrintData.length; i++) {\n          arr.push({\n            count: this.selectPrintData[i].printNum,\n            productGoodsCode: this.selectPrintData[i].code\n          });\n        }\n\n        this.tableLoading = true;\n        this.request(this.api.product.productGoodsSn_createSns, arr).then(function (res) {\n          _this2.handlePrint(res);\n\n          _this2.tableLoading = false;\n        }).catch(function (err) {\n          _this2.tableLoading = false;\n        });\n      } else {\n        this.$message.error(\"请选择打印数据！\");\n      }\n    },\n    handlePrint: function handlePrint(_data) {\n      var _this3 = this;\n\n      // LODOP.SELECT_PRINTER();//选择打印机\n      // LODOP.SET_PRINTER_INDEXA(this.printsValue);\n      // LODOP.SET_PRINT_MODE(\"RESELECT_PRINTER\",true);// 允许重选打印机\n      if (_data.length > 0) {\n        printData = [];\n\n        for (var i = 0; i < _data.length; i++) {\n          var productGoodsSns = _data[i].productGoodsSns || [];\n\n          for (var k = 0; k < productGoodsSns.length; k++) {\n            var dataList = JSON.parse(JSON.stringify(_data[i]));\n            var obj = new Object();\n            obj = dataList;\n            obj.productGoodsSn = productGoodsSns[k];\n            printData.push(obj);\n            dataList = null;\n            obj = null;\n          }\n        } // console.log(printData);\n\n\n        if (!!printData) {\n          LODOP = getLodop(); //console.log(LODOP.SET_PRINTER_INDEX(this.printsValue)); 返回true 标识成功\n          // LODOP.SET_PRINTER_INDEXA(this.printsValue);\n\n          for (var _i = 0; _i < printData.length; _i++) {\n            printWinform(LODOP, printData[_i], this.printsValue);\n          } // LODOP.NewPage();\n\n\n          if (LODOP.CVERSION) {\n            CLODOP.On_Return = function (TaskID, Value) {\n              if (!!Value) {\n                //打印状态\n                _this3.$refs.printsStatusRef.propInit();\n              } else {\n                alert(\"放弃打印！\");\n              }\n            };\n\n            return;\n          }\n        }\n      }\n    },\n    //获取子组件返回的打印成功能\n    getPrintsStatus: function getPrintsStatus() {\n      var _this4 = this;\n\n      //console.log(555);\n      var snArr = [];\n\n      for (var i = 0; i < printData.length; i++) {\n        snArr.push({\n          sn: printData[i].productGoodsSn\n        });\n      }\n\n      ;\n      this.request(this.api.product.productGoodsSn_confirmed, snArr).then(function (res) {\n        _this4.$message.success('更新打印数据成功');\n\n        _this4.$refs.printsStatusRef.closeDialog();\n      }).catch(function (err) {\n        _this4.$message.error('更新打印数据失败');\n\n        _this4.$refs.printsStatusRef.closeDialog();\n      });\n    },\n    closeDialog: function closeDialog() {\n      this.printsDialogVisible = false;\n    },\n    //处理全部数量\n    handleAllNum: function handleAllNum() {}\n  },\n  watch: {\n    //监听setNum\n    \"filtersData.setNum\": function filtersDataSetNum(val) {\n      if (Number.isFinite(val)) {\n        for (var i = 0; i < this.tableListData.length; i++) {\n          this.tableListData[i].printNum = val;\n        }\n      } else {\n        this.filtersData.setNum = null;\n      }\n    }\n  }\n};",{"version":3,"sources":["PrintsDialog.vue"],"names":[],"mappings":"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","sourcesContent":["<!--\r\n * @Description: 打印\r\n * @Author: elephant  \r\n * @Date: 2019-08-20 08:58:12\r\n * @LastEditTime: 2019-08-20 11:06:36\r\n * @LastEditors: Please set LastEditors\r\n -->\r\n<template>\r\n<div>\r\n  <el-dialog\r\n    v-if=\"printsDialogVisible\"\r\n    title=\"打印吊牌\"\r\n    :visible.sync=\"printsDialogVisible\"\r\n    class=\"alarmPopup\"\r\n    width=\"1000px\"\r\n    append-to-body\r\n  >\r\n    <div class=\"dialog-search\">\r\n      <el-form\r\n        class=\"item-form\"\r\n        :model=\"filtersData\"\r\n        label-width=\"100px\"\r\n        size=\"small\"\r\n        ref=\"filtersForm\"\r\n        inline\r\n      >\r\n        <el-form-item prop=\"printsOptions\" label=\"选择打印机：\">\r\n          <el-select v-model=\"printsValue\" placeholder=\"请选择\">\r\n            <el-option\r\n              v-for=\"item in printsOptions\"\r\n              :key=\"item.value\"\r\n              :label=\"item.label\"\r\n              :value=\"item.value\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item prop=\"setNum\" label=\"批量设置：\">\r\n          <el-input class=\"input-w\" placeholder=\"请输入数量\" v-model.number=\"filtersData.setNum\"></el-input>\r\n        </el-form-item>\r\n        <!-- <el-form-item>\r\n          <el-button @click=\"handleAllNum\" type=\"primary\" plain size=\"small\">确定</el-button>\r\n        </el-form-item> -->\r\n      </el-form>\r\n    </div>\r\n    <div>\r\n      <el-table\r\n        :data=\"tableListData\"\r\n        v-loading=\"tableLoading\"\r\n        stripe\r\n        empty-text=\"暂无数据\"\r\n        header-align=\"center\"\r\n        header-row-class-name=\"item-table-header\"\r\n        :highlight-current-row=\"true\"\r\n        height=\"400\"\r\n        @selection-change=\"handleSelectionChange\"\r\n      >\r\n        <el-table-column type=\"selection\" width=\"50\"></el-table-column>\r\n        <el-table-column prop=\"code\" align=\"center\" label=\"商品编码\" min-width=\"100\"></el-table-column>\r\n        <el-table-column prop=\"productCode\" align=\"center\" label=\"商品款号\" min-width=\"100\"></el-table-column>\r\n        <el-table-column prop=\"name\" align=\"center\" label=\"商品名称\" min-width=\"100\"></el-table-column>\r\n        <el-table-column prop=\"image\" align=\"center\" label=\"商品图片\" min-width=\"100\">\r\n          <template slot-scope=\"scope\">\r\n            <img :src=\"scope.row.image\" class=\"table-img-wh\" />\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"fullCateName\" align=\"center\" label=\"商品分类\" min-width=\"100\"></el-table-column>\r\n        <el-table-column prop=\"tagBrandName\" align=\"center\" label=\"品牌\" min-width=\"100\"></el-table-column>\r\n        <el-table-column prop=\"size\" align=\"center\" label=\"尺码\" min-width=\"100\"></el-table-column>\r\n        <el-table-column prop=\"color\" align=\"center\" label=\"颜色\" min-width=\"100\"></el-table-column>\r\n        <el-table-column prop=\"printNum\" align=\"center\" label=\"打印数量\" min-width=\"120\">\r\n          <template slot-scope=\"scope\">\r\n            <el-input-number size=\"mini\" v-model=\"scope.row.printNum\" :min=\"1\" :max=\"100\"></el-input-number>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </div>\r\n\r\n    <div class=\"item-right mt-10\">\r\n      <el-button size=\"small\" @click=\"closeDialog\">取消打印</el-button>\r\n      <el-button size=\"small\" @click=\"submitPrint()\" type=\"primary\">确认打印</el-button>\r\n    </div>\r\n  </el-dialog>\r\n  <!-- 打印状态弹窗 -->\r\n  <prints-status-dialog @setParentPrintsStatus=\"getPrintsStatus\"  ref=\"printsStatusRef\"></prints-status-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\n//引入LODOP模块\r\nimport { getLodop } from \"@/utils/LodopFuncs.js\";\r\n//引入 打印样式模块\r\nimport { printWinform } from \"@/utils/print_50_120_shu.js\";\r\n// 引入弹出打印状态组件；\r\nimport PrintsStatusDialog from \"./PrintsStatusDialog.vue\";\r\n\r\nlet LODOP;\r\n//打印的数据\r\nlet printData = [];\r\nexport default {\r\n  name: \"tp-prints-dialog\",\r\n  components: {\r\n    PrintsStatusDialog,\r\n  },\r\n  data() {\r\n    return {\r\n      filtersData: {\r\n        setNum: null\r\n      },\r\n      tableListData: [],\r\n      printsOptions: [],\r\n      printsDialogVisible: false,\r\n      printsValue: null,\r\n      //选择后打印的数据\r\n      selectPrintData: [],\r\n      tableLoading:false,\r\n    };\r\n  },\r\n  created() {\r\n    this.init();\r\n  },\r\n  mounted() {\r\n       \r\n  },\r\n  methods: {\r\n    init() {\r\n      this.filtersData = { setNum: null };\r\n      this.tableListData = [];\r\n      this.selectPrintData = [];\r\n      printData=[];\r\n    },\r\n    //获取打印机\r\n    getLodopData() {\r\n      try {\r\n        LODOP = getLodop();\r\n        let arr = [];\r\n        let iPrinterCount = LODOP.GET_PRINTER_COUNT();\r\n        for (let i = 0; i < iPrinterCount; i++) {\r\n          arr.push({\r\n            label: LODOP.GET_PRINTER_NAME(i),\r\n            value: i\r\n          });\r\n        }\r\n        // console.log(arr);\r\n        this.printsOptions = arr;\r\n      } catch (error) {\r\n        console.log('无打印机驱动！');\r\n      }\r\n    },\r\n    popupInit(codeList) {\r\n      // console.log(codeList);\r\n      this.getTableList(codeList);\r\n      this.printsDialogVisible = true;\r\n       this.getLodopData();\r\n    },\r\n    //获取列表\r\n    getTableList(codeList) {\r\n      this.tableLoading=true;\r\n      this.request(this.api.product.productGoods_list, {\r\n        productCodes: codeList\r\n      },true).then(res => {\r\n        this.tableLoading=false;\r\n        let _data = res.data;\r\n        for (let i = 0; i < _data.length; i++) {\r\n          _data[i].printNum = 1;\r\n        }\r\n        this.tableListData = _data;\r\n      }).catch(err =>{\r\n        this.tableLoading=false;\r\n      });\r\n    },\r\n    //当前选中的数据\r\n    handleSelectionChange(val) {\r\n      this.selectPrintData = val;\r\n    },\r\n    //提交打印\r\n    submitPrint() {\r\n      if(this.printsValue == null){\r\n        this.$message.error('请选择打印机！')\r\n        return\r\n      }\r\n      if (this.selectPrintData.length > 0) {\r\n        let arr = [];\r\n        for (let i = 0; i < this.selectPrintData.length; i++) {\r\n          arr.push({\r\n            count: this.selectPrintData[i].printNum,\r\n            productGoodsCode: this.selectPrintData[i].code\r\n          });\r\n        }\r\n        this.tableLoading=true;\r\n        this.request(this.api.product.productGoodsSn_createSns, arr).then(\r\n          res => {\r\n            this.handlePrint(res);\r\n            this.tableLoading=false;\r\n          }\r\n        ).catch(err=>{\r\n          this.tableLoading=false;\r\n        });\r\n      } else {\r\n        this.$message.error(\"请选择打印数据！\");\r\n      }\r\n    },\r\n    handlePrint(_data) {\r\n      // LODOP.SELECT_PRINTER();//选择打印机\r\n      // LODOP.SET_PRINTER_INDEXA(this.printsValue);\r\n      // LODOP.SET_PRINT_MODE(\"RESELECT_PRINTER\",true);// 允许重选打印机\r\n      if (_data.length > 0) {\r\n        printData = [];\r\n        for (let i = 0; i < _data.length; i++) {\r\n          let productGoodsSns = _data[i].productGoodsSns || [];\r\n          for (let k = 0; k < productGoodsSns.length; k++) {\r\n            let dataList = JSON.parse(JSON.stringify(_data[i]));\r\n            let obj = new Object();\r\n            obj = dataList;\r\n            obj.productGoodsSn = productGoodsSns[k];\r\n            printData.push(obj);\r\n            dataList = null;\r\n            obj = null;\r\n          }\r\n        }\r\n       // console.log(printData);\r\n        if (!!printData) {\r\n          LODOP = getLodop();\r\n          //console.log(LODOP.SET_PRINTER_INDEX(this.printsValue)); 返回true 标识成功\r\n          // LODOP.SET_PRINTER_INDEXA(this.printsValue);\r\n          for (let i = 0; i < printData.length; i++) {\r\n            printWinform(LODOP, printData[i], this.printsValue);\r\n          }\r\n          // LODOP.NewPage();\r\n          if (LODOP.CVERSION) {\r\n            CLODOP.On_Return = (TaskID, Value) => {\r\n              if (!!Value) {\r\n                //打印状态\r\n                this.$refs.printsStatusRef.propInit();\r\n              }else{\r\n                alert(\"放弃打印！\");\r\n              }\r\n            \r\n            };\r\n            return;\r\n          }\r\n        }\r\n      }\r\n    },\r\n  \r\n    //获取子组件返回的打印成功能\r\n    getPrintsStatus(){\r\n      //console.log(555);\r\n      let snArr=[];\r\n      for (let i = 0; i < printData.length; i++) {\r\n        snArr.push({sn:printData[i].productGoodsSn});\r\n      };\r\n      this.request(this.api.product.productGoodsSn_confirmed,snArr).then(res => {\r\n        this.$message.success('更新打印数据成功');\r\n         this.$refs.printsStatusRef.closeDialog();\r\n      }).catch(err =>{\r\n        this.$message.error('更新打印数据失败');\r\n         this.$refs.printsStatusRef.closeDialog();\r\n      });\r\n    },\r\n    closeDialog() {\r\n      this.printsDialogVisible = false;\r\n    },\r\n    //处理全部数量\r\n    handleAllNum() {}\r\n  },\r\n  watch: {\r\n    //监听setNum\r\n    \"filtersData.setNum\": function(val) {\r\n      if (Number.isFinite(val)) {\r\n        for (let i = 0; i < this.tableListData.length; i++) {\r\n          this.tableListData[i].printNum = val;\r\n        }\r\n      } else {\r\n        this.filtersData.setNum = null;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.alarmPopup /deep/ .el-dialog__body {\r\n  padding: 0 20px 30px;\r\n}\r\n.alarmPopup /deep/ .el-input-number {\r\n  line-height: 26px;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/Prints"}]}