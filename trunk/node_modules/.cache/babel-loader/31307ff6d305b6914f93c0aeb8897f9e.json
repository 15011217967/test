{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\fmis\\detail\\storeTrad\\store_trad.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\fmis\\detail\\storeTrad\\store_trad.vue","mtime":1573089144013},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\EDZ\\\\Desktop\\\\\\u7814\\u53D1\\u9879\\u76EE\\\\vue-project\\\\trunk\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"C:\\\\Users\\\\EDZ\\\\Desktop\\\\\\u7814\\u53D1\\u9879\\u76EE\\\\vue-project\\\\trunk\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from \"vuex\";\nimport * as userTypes from \"@/types/userConfig\";\nexport default {\n  data: function data() {\n    return {\n      signData: {\n        //交易编码来源\n        sourceType: '03002',\n        //搜索关键字\n        searchKey: \"\",\n        //交易类型\n        tradeType: \"\",\n        //所属门店\n        mchIds: [],\n        //标记隶属机构\n        // organizationCodes:[],\n        //机构Id的集合\n        // organizationIds: [],\n        //机构名称\n        organizations: [],\n        //收/付款方式\n        paymentCodes: [],\n        //交易开始时间\n        tradeTimeStart: '',\n        //交易结束时间\n        tradeTimeEnd: '',\n        //当前页数\n        pageIndex: 1,\n        //每页要显示的数据条数,默认10条\n        pageSize: 10\n      },\n      //得到权限Code\n      codeData: [],\n      //存储表格选择项改变时的数据\n      multipleSelectionData: [],\n      //表格数据\n      tableData: [],\n      //累计交易总额\n      transactionLedger: null,\n      //总条数\n      totalCount: 1,\n      //存储门店数据\n      storeListData: [],\n      //隶属机构数据\n      organizationListData: [],\n      //交易类型数据\n      tradeTypeData: [],\n      //收/付款方式数据\n      paymentCodesData: [],\n      //对账方式\n      typeListData: [{\n        name: '日结',\n        id: '1'\n      }, {\n        name: '周结',\n        id: '2'\n      }, {\n        name: '月结',\n        id: '3'\n      }, {\n        name: '自定义',\n        id: '4'\n      }]\n    };\n  },\n  computed: _objectSpread({}, mapGetters({\n    userInfo: userTypes.GETTER_USERINFO\n  })),\n  //过滤器\n  filters: {\n    //过滤是否对账\n    filterValid: function filterValid(val) {\n      switch (val) {\n        case false:\n          return \"否\";\n          break;\n\n        case true:\n          return \"是\";\n          break;\n\n        default:\n          return \"--\";\n          break;\n      }\n    },\n    //过滤交易类型\n    filterTradeType: function filterTradeType(val) {\n      switch (val) {\n        case \"02001\":\n          return \"销售\";\n          break;\n\n        case \"02002\":\n          return \"退款\";\n          break;\n\n        case \"02003\":\n          return \"配货\";\n          break;\n\n        case \"02004\":\n          return \"返货\";\n          break;\n      }\n    },\n    //过滤支付方式\n    filerPaymentCode: function filerPaymentCode(val) {\n      switch (val) {\n        case \"08001\":\n          return \"刷卡支付\";\n          break;\n\n        case \"08002\":\n          return \"微信支付\";\n          break;\n\n        case \"08003\":\n          return \"支付宝支付\";\n          break;\n\n        case \"08004\":\n          return \"余额支付\";\n          break;\n\n        case \"08005\":\n          return \"现金支付\";\n          break;\n\n        default:\n          return '--';\n          break;\n      }\n    }\n  },\n  mounted: function mounted() {\n    //得到组织机构数据\n    this.getWarehouseListData(); //得到门店列表数据\n\n    this.getStoreBasicListData(); //得到交易类型数据\n\n    this.getTradeTypeListData(); //得到收付款方式数据\n\n    this.getPaymentCodesListData();\n  },\n  methods: {\n    //得到组织机构数据\n    getWarehouseListData: function () {\n      var _getWarehouseListData = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        var info;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.request(this.api.user.get_userinfo, {}, true);\n\n              case 2:\n                info = _context.sent;\n                console.log(info); //得到关联机构（type-0 机构 type-1 部门）\n\n                this.request(this.api.user.userCompany_getUserAllDepartByUserId, {\n                  userId: info.userId,\n                  type: 0\n                }).then(function (data) {\n                  //得到组织机构数据\n                  _this.organizationListData = data;\n                  console.log(data); // this.signData.organizationIds=[]\n                  // data.forEach(item => {\n                  //   this.signData.organizationIds.push(item.id);\n                  // });\n                  //得到列表数据\n\n                  _this.getBillWaitListData();\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getWarehouseListData() {\n        return _getWarehouseListData.apply(this, arguments);\n      }\n\n      return getWarehouseListData;\n    }(),\n    // 得到code码，用来限制是否显示按钮\n    getCodeLimitToBtnStatus: function getCodeLimitToBtnStatus(codeId) {\n      var _this2 = this;\n\n      this.request(this.api.user.crm_userCompany_authList, {\n        menuId: codeId\n      }).then(function (res) {\n        console.log(res);\n        _this2.codeData = res;\n      });\n    },\n    //得到门店列表数据\n    getStoreBasicListData: function getStoreBasicListData() {\n      var _this3 = this;\n\n      this.request(this.api.store.storeBasic_list, {}).then(function (res) {\n        console.log(res);\n        _this3.storeListData = res.data;\n      });\n    },\n    //得到交易类型数据\n    getTradeTypeListData: function getTradeTypeListData() {\n      var _this4 = this;\n\n      this.request(this.api.financial.financialBase_transactionTypeList, {}).then(function (res) {\n        console.log(res); //  this.tradeTypeData=res;\n\n        _this4.tradeTypeData.push(res[0]);\n\n        _this4.tradeTypeData.push(res[1]);\n      });\n    },\n    //得到收付款方式数据\n    getPaymentCodesListData: function getPaymentCodesListData() {\n      var _this5 = this;\n\n      this.request(this.api.financial.financialBase_paymentTypeList, {}).then(function (res) {\n        console.log(res); //  this.paymentCodesData=res;\n\n        res.forEach(function (item, index) {\n          if (index < 5) {\n            _this5.paymentCodesData.push(item);\n          }\n        });\n      });\n    },\n    //得到列表数据\n    getBillWaitListData: function getBillWaitListData() {\n      var _this6 = this;\n\n      var filter = this.$common.deepCopy(this.signData);\n\n      if (filter.tradeTimeEnd != null) {\n        var date = new Date(filter.tradeTimeEnd);\n        var t = (date.getTime() / 1000 + 86399) * 1000;\n        filter.tradeTimeEnd = new Date(t);\n      }\n\n      this.request(this.api.financial.financialData_tdTransactionDetail_list, filter).then(function (data) {\n        console.log(data);\n        _this6.totalCount = data.TransactionDetailList.totalCount;\n        _this6.tableData = data.TransactionDetailList.data;\n        _this6.transactionLedger = data.TransactionLedger;\n        console.log(data);\n      }); //得到按钮操作权限数据\n\n      this.getCodeLimitToBtnStatus(this.$route.meta.currentid);\n    },\n    //查询表单数据\n    searchFormData: function searchFormData(ref) {\n      this.signData.pageIndex = 1; //  if(this.signData.organizationCodes.length==0){\n      //     this.getWarehouseListData()\n      //     console.log('asdhl')\n      //   }else{\n      // this.signData.organizationIds=this.signData.organizationCodes\n\n      this.getBillWaitListData(); // } \n    },\n    //重置表单数据\n    resetFormData: function resetFormData(formData) {\n      this.$refs[formData].resetFields();\n    },\n    //导出\n    exportExcel: function exportExcel() {\n      var _this7 = this;\n\n      console.log(\"导出Excel表格...+++++++++++++++++++\");\n\n      require.ensure([], function () {\n        var _require = require(\"@/vendor/Export2Excel\"),\n            export_json_to_excel = _require.export_json_to_excel;\n\n        var tHeader = [\"交易单号\", \"是否对账\", \"交易类型\", \"交易金额\", \"收/付款方式\", \"收/付款流水号\", \"收/付款商户号\", \"零售店铺\", \"隶属机构\", \"交易操作人\", \"交易时间\", \"附件\", \"对账人\"]; // 上面设置Excel的表格第一行的标题\n\n        var filterVal = [\"orderSn\", \"validStatusName\", \"tradeTypeStatusName\", \"amount\", \"paymentCodeStatusName\", \"serialNumber\", \"tradeMchId\", \"merchant\", \"organization\", \"operator\", \"tradeTimeStatusName\", \"\", \"checker\"]; // 上面的index、nickName、name是tableData里对象的属性\n\n        var list = _this7.multipleSelectionData; //把data里的multipleSelectionData存到list\n\n        var data = _this7.formatJson(filterVal, list);\n\n        export_json_to_excel(tHeader, data, \"门店交易明细表单\");\n      });\n    },\n    formatJson: function formatJson(filterVal, jsonData) {\n      return jsonData.map(function (v) {\n        return filterVal.map(function (j) {\n          return v[j];\n        });\n      });\n    },\n    //表格选择项改变时触发\n    selectionChange: function selectionChange(val) {\n      var _this8 = this;\n\n      val.forEach(function (item) {\n        item.validStatusName = _this8.$options.filters.filterValid(item.valid);\n        item.tradeTypeStatusName = _this8.$options.filters.filterTradeType(item.tradeType);\n        item.paymentCodeStatusName = _this8.$options.filters.filerPaymentCode(item.paymentCode);\n        item.tradeTimeStatusName = _this8.$options.filters.timestampToTime(item.tradeTime);\n      });\n      console.log(val);\n      this.multipleSelectionData = val;\n    },\n    //每页条数改变时\n    handleSizeChange: function handleSizeChange(page) {\n      this.signData.pageSize = page;\n      this.getBillWaitListData();\n    },\n    //当前页改变时\n    handleCurrentChange: function handleCurrentChange(page) {\n      this.signData.pageIndex = page;\n      this.getBillWaitListData();\n    }\n  }\n};",{"version":3,"sources":["store_trad.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"search_div\">\r\n      <el-form ref=\"formData\" :model=\"signData\" label-width=\"110px\" :inline=\"true\">\r\n        <el-form-item label=\"模糊查询：\" prop=\"searchKey\" label-width=\"120px\">\r\n          <el-input\r\n            style=\"width:320px;\"\r\n            v-model=\"signData.searchKey\"\r\n            placeholder=\"交易单号/收/付款流水号/收/付款商户号/关联订单号\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"交易类型：\" prop=\"tradeType\">\r\n          <el-select v-model=\"signData.tradeType\" placeholder=\"请选择\">\r\n            <el-option\r\n              v-for=\"item in tradeTypeData\"\r\n              :label=\"item.description\"\r\n              :key=\"item.code\"\r\n              :value=\"item.code\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"所属门店：\" prop=\"mchIds\" label-width=\"140px\">\r\n          <el-select v-model=\"signData.mchIds\" placeholder=\"请选择\" multiple>\r\n            <el-option\r\n              v-for=\"item in storeListData\"\r\n              :label=\"item.name\"\r\n              :key=\"item.id\"\r\n              :value=\"item.id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <!-- organizationCodes -->\r\n        <el-form-item label=\"隶属机构：\" prop=\"organizations\">\r\n          <el-select v-model=\"signData.organizations\" placeholder=\"请选择\" multiple>\r\n            <el-option\r\n              v-for=\"item in organizationListData\"\r\n              :label=\"item.name\"\r\n              :key=\"item.id\"\r\n              :value=\"item.name\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"收/付款方式：\" prop=\"paymentCodes\" label-width='120px'>\r\n          <el-select v-model=\"signData.paymentCodes\" placeholder=\"请选择\" multiple>\r\n            <el-option\r\n              v-for=\"item in paymentCodesData\"\r\n              :label=\"item.description\"\r\n              :key=\"item.code\"\r\n              :value=\"item.code\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"交易时间：\" prop=\"tradeTimeStart\">\r\n          <el-date-picker\r\n            v-model=\"signData.tradeTimeStart\"\r\n            type=\"date\"\r\n            placeholder=\"开始时间\"\r\n          ></el-date-picker>\r\n        </el-form-item>\r\n        <el-form-item prop=\"tradeTimeEnd\">\r\n            <el-date-picker v-model=\"signData.tradeTimeEnd\" type=\"date\" placeholder=\"结束时间\"></el-date-picker>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"searchFormData('formData')\" size=\"small\">查询</el-button>\r\n          <el-button @click=\"resetFormData('formData')\" size=\"small\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n    <div class=\"table_div\">\r\n      <el-button\r\n        :disabled=\"multipleSelectionData.length==0\"\r\n        plain\r\n        @click=\"exportExcel\"\r\n        size=\"small\"\r\n        v-auth=\"codeData\"\r\n        data-code=\"16030101\"\r\n      >导出</el-button>\r\n      <el-table\r\n        ref=\"multipleTable\"\r\n        :data=\"tableData\"\r\n        tooltip-effect=\"dark\"\r\n        style=\"width: 100%\"\r\n        header-row-class-name=\"item-table-header\"\r\n        @selection-change=\"selectionChange\"\r\n      >\r\n        <el-table-column type=\"selection\" width=\"55\"></el-table-column>\r\n        <el-table-column label=\"交易单号\" width=\"200\">\r\n          <template slot-scope=\"scope\">{{ scope.row.orderSn?scope.row.orderSn:'--' }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"valid\" label=\"是否对账\">\r\n          <template slot-scope=\"scope\">{{ scope.row.valid | filterValid}}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"tradeType\" label=\"交易类型\">\r\n          <template slot-scope=\"scope\">{{scope.row.tradeType | filterTradeType}}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"amount\" label=\"交易金额\">\r\n          <template slot-scope=\"scope\">{{ scope.row.amount?scope.row.amount:'--' }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"paymentCode\" label=\"收/付款方式\">\r\n          <template slot-scope=\"scope\">{{ scope.row.paymentCode | filerPaymentCode }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"serialNumber\" label=\"收/付款流水号\">\r\n          <template slot-scope=\"scope\">{{ scope.row.serialNumber?scope.row.serialNumber:'--' }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"tradeMchId\" label=\"收/付款商户号\">\r\n          <template slot-scope=\"scope\">{{ scope.row.tradeMchId ?scope.row.tradeMchId:'--' }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"merchant\" label=\"零售店铺\" show-overflow-tooltip>\r\n          <template slot-scope=\"scope\">{{ scope.row.merchant?scope.row.merchant:'--' }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"organization\" label=\"隶属机构\">\r\n          <template slot-scope=\"scope\">{{ scope.row.organization?scope.row.organization:'--' }}</template>\r\n        </el-table-column>\r\n        <el-table-column label=\"交易操作人\">\r\n          <template slot-scope=\"scope\">{{ scope.row.operator?scope.row.operator:'--' }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"tradeTime\" label=\"交易时间\" width=\"160\">\r\n          <template slot-scope=\"scope\">{{ scope.row.tradeTime | timestampToTime }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"refundMoneySource\" label=\"附件\">\r\n          <template slot-scope=\"scope\">\r\n            <el-popover placement=\"right\" width=\"400\" trigger=\"hover\" v-if=\"scope.row.attachment\">\r\n              <img :src='scope.row.attachment' style=\"width:380px;\"/>\r\n              <img :src='scope.row.attachment' slot=\"reference\" style=\"width:32px;height:32px;\"/>\r\n            </el-popover>\r\n              <!-- <img :src='scope.row.attachment' style=\"width:32px;height:32px;\" v-else/> -->\r\n              <span v-else>--</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"checker\" label=\"对账人\">\r\n          <template slot-scope=\"scope\">{{ scope.row.checker?scope.row.checker:'--' }}</template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <div class='page_div' v-show='this.tableData.length>0'>\r\n        <div style=\"color:#222;flex:auto;font-weight:700;text-align:right;padding-right:30px;\">\r\n          <span>累计交易金额：￥{{transactionLedger}}</span>\r\n        </div>\r\n        <el-pagination \r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page.sync=\"signData.pageIndex\"\r\n          :page-sizes=\"[10, 20, 30, 40]\"\r\n          :page-size=\"signData.pageSize\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"totalCount\"\r\n        ></el-pagination>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from \"vuex\";\r\nimport * as userTypes from \"@/types/userConfig\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      signData: {\r\n        //交易编码来源\r\n        sourceType:'03002',\r\n        //搜索关键字\r\n        searchKey:\"\",\r\n        //交易类型\r\n        tradeType:\"\",\r\n        //所属门店\r\n        mchIds:[],\r\n        //标记隶属机构\r\n        // organizationCodes:[],\r\n        //机构Id的集合\r\n        // organizationIds: [],\r\n        //机构名称\r\n        organizations:[],\r\n        //收/付款方式\r\n        paymentCodes:[],\r\n        //交易开始时间\r\n        tradeTimeStart:'',\r\n        //交易结束时间\r\n        tradeTimeEnd:'',\r\n        //当前页数\r\n        pageIndex: 1,\r\n        //每页要显示的数据条数,默认10条\r\n        pageSize: 10\r\n      },\r\n      //得到权限Code\r\n      codeData: [],\r\n      //存储表格选择项改变时的数据\r\n      multipleSelectionData: [],\r\n      //表格数据\r\n      tableData: [],\r\n      //累计交易总额\r\n      transactionLedger:null,\r\n      //总条数\r\n      totalCount: 1,\r\n      //存储门店数据\r\n      storeListData: [],\r\n      //隶属机构数据\r\n      organizationListData:[],\r\n      //交易类型数据\r\n      tradeTypeData:[],\r\n      //收/付款方式数据\r\n      paymentCodesData:[],\r\n      //对账方式\r\n      typeListData:[\r\n        {\r\n          name:'日结',\r\n          id:'1'\r\n        },\r\n        {\r\n          name:'周结',\r\n          id:'2'\r\n        },\r\n        {\r\n          name:'月结',\r\n          id:'3'\r\n        },\r\n        {\r\n          name:'自定义',\r\n          id:'4'\r\n        }\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n        userInfo: userTypes.GETTER_USERINFO\r\n    })\r\n  },\r\n  //过滤器\r\n  filters: {\r\n    //过滤是否对账\r\n    filterValid(val) {\r\n      switch (val) {\r\n        case false:\r\n          return \"否\";\r\n          break;\r\n        case true:\r\n          return \"是\";\r\n          break;\r\n        default:\r\n          return \"--\";\r\n          break; \r\n      }\r\n    },\r\n    //过滤交易类型\r\n    filterTradeType(val) {\r\n      switch (val) {\r\n        case \"02001\":\r\n          return \"销售\";\r\n          break;\r\n        case \"02002\":\r\n          return \"退款\";\r\n          break;\r\n        case \"02003\":\r\n          return \"配货\";\r\n          break;\r\n        case \"02004\":\r\n          return \"返货\";\r\n          break;\r\n      }\r\n    },\r\n    //过滤支付方式\r\n    filerPaymentCode(val) {\r\n      switch (val) {\r\n        case \"08001\":\r\n          return \"刷卡支付\";\r\n          break;\r\n        case \"08002\":\r\n          return \"微信支付\";\r\n          break;\r\n        case \"08003\":\r\n          return \"支付宝支付\";\r\n          break;\r\n        case \"08004\":\r\n          return \"余额支付\";\r\n          break;\r\n        case \"08005\":\r\n          return \"现金支付\";\r\n          break;\r\n        default:\r\n          return '--'\r\n          break;\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    //得到组织机构数据\r\n    this.getWarehouseListData();\r\n    //得到门店列表数据\r\n    this.getStoreBasicListData();\r\n    //得到交易类型数据\r\n    this.getTradeTypeListData();\r\n    //得到收付款方式数据\r\n    this.getPaymentCodesListData();\r\n  },\r\n  methods: {\r\n    //得到组织机构数据\r\n    async getWarehouseListData() {\r\n      let info = await this.request(this.api.user.get_userinfo, {}, true);\r\n      console.log(info);\r\n      //得到关联机构（type-0 机构 type-1 部门）\r\n      this.request(this.api.user.userCompany_getUserAllDepartByUserId, {\r\n        userId: info.userId,\r\n        type: 0\r\n      }).then(data => {\r\n        //得到组织机构数据\r\n        this.organizationListData=data;\r\n        console.log(data);\r\n        // this.signData.organizationIds=[]\r\n        // data.forEach(item => {\r\n        //   this.signData.organizationIds.push(item.id);\r\n        // });\r\n        //得到列表数据\r\n        this.getBillWaitListData();\r\n      });\r\n    },\r\n    // 得到code码，用来限制是否显示按钮\r\n    getCodeLimitToBtnStatus(codeId) {\r\n      this.request(this.api.user.crm_userCompany_authList, {\r\n        menuId: codeId\r\n      }).then(res => {\r\n        console.log(res);\r\n        this.codeData = res;\r\n      });\r\n    },\r\n    //得到门店列表数据\r\n    getStoreBasicListData() {\r\n      this.request(this.api.store.storeBasic_list, {}).then(res => {\r\n        console.log(res);\r\n        this.storeListData = res.data;\r\n      });\r\n    },\r\n    //得到交易类型数据\r\n    getTradeTypeListData(){\r\n      this.request(this.api.financial.financialBase_transactionTypeList,{}).then(res => {\r\n       console.log(res);\r\n      //  this.tradeTypeData=res;\r\n       this.tradeTypeData.push(res[0])\r\n       this.tradeTypeData.push(res[1])\r\n      })\r\n    },\r\n    //得到收付款方式数据\r\n    getPaymentCodesListData(){\r\n      this.request(this.api.financial.financialBase_paymentTypeList,{}).then(res => {\r\n       console.log(res);\r\n      //  this.paymentCodesData=res;\r\n       res.forEach((item,index)=>{\r\n         if(index<5){\r\n          this.paymentCodesData.push(item)\r\n         }\r\n       })\r\n      })\r\n    },\r\n    //得到列表数据\r\n    getBillWaitListData() {\r\n      let filter = this.$common.deepCopy(this.signData);\r\n      if (filter.tradeTimeEnd != null) {\r\n        let date = new Date(filter.tradeTimeEnd);\r\n        let t = (date.getTime() / 1000 + 86399) * 1000;\r\n        filter.tradeTimeEnd = new Date(t);\r\n      }\r\n      this.request(\r\n        this.api.financial.financialData_tdTransactionDetail_list,\r\n        filter\r\n      ).then(data => {\r\n        console.log(data)\r\n        this.totalCount = data.TransactionDetailList.totalCount;\r\n        this.tableData = data.TransactionDetailList.data;\r\n        this.transactionLedger=data.TransactionLedger\r\n        console.log(data);\r\n      });\r\n      //得到按钮操作权限数据\r\n      this.getCodeLimitToBtnStatus(this.$route.meta.currentid);\r\n    },\r\n    //查询表单数据\r\n    searchFormData(ref) {\r\n      this.signData.pageIndex=1\r\n    //  if(this.signData.organizationCodes.length==0){\r\n    //     this.getWarehouseListData()\r\n    //     console.log('asdhl')\r\n    //   }else{\r\n        // this.signData.organizationIds=this.signData.organizationCodes\r\n        this.getBillWaitListData();\r\n      // } \r\n    },\r\n    //重置表单数据\r\n    resetFormData(formData) {\r\n      this.$refs[formData].resetFields();\r\n    },\r\n    //导出\r\n    exportExcel() {\r\n      console.log(\"导出Excel表格...+++++++++++++++++++\");\r\n      require.ensure([], () => {\r\n        let { export_json_to_excel } = require(\"@/vendor/Export2Excel\");\r\n        let tHeader = [\r\n          \"交易单号\",\r\n          \"是否对账\",\r\n          \"交易类型\",\r\n          \"交易金额\",\r\n          \"收/付款方式\",\r\n          \"收/付款流水号\",\r\n          \"收/付款商户号\",\r\n          \"零售店铺\",\r\n          \"隶属机构\",\r\n          \"交易操作人\",\r\n          \"交易时间\",\r\n          \"附件\",\r\n          \"对账人\"\r\n        ];\r\n        // 上面设置Excel的表格第一行的标题\r\n        let filterVal = [\r\n          \"orderSn\",\r\n          \"validStatusName\",\r\n          \"tradeTypeStatusName\",\r\n          \"amount\",\r\n          \"paymentCodeStatusName\",\r\n          \"serialNumber\",\r\n          \"tradeMchId\",\r\n          \"merchant\",\r\n          \"organization\",\r\n          \"operator\",\r\n          \"tradeTimeStatusName\",\r\n          \"\",\r\n          \"checker\"\r\n        ];\r\n        // 上面的index、nickName、name是tableData里对象的属性\r\n        let list = this.multipleSelectionData; //把data里的multipleSelectionData存到list\r\n        let data = this.formatJson(filterVal, list);\r\n        export_json_to_excel(tHeader, data, \"门店交易明细表单\");\r\n      });\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => v[j]));\r\n    },\r\n    //表格选择项改变时触发\r\n    selectionChange(val) {\r\n      val.forEach(item => {\r\n        item.validStatusName=this.$options.filters.filterValid(item.valid)\r\n        item.tradeTypeStatusName=this.$options.filters.filterTradeType(item.tradeType)\r\n        item.paymentCodeStatusName=this.$options.filters.filerPaymentCode(item.paymentCode)\r\n        item.tradeTimeStatusName=this.$options.filters.timestampToTime(item.tradeTime)\r\n      });\r\n      console.log(val);\r\n      this.multipleSelectionData = val;\r\n    },\r\n    //每页条数改变时\r\n    handleSizeChange(page) {\r\n      this.signData.pageSize = page;\r\n      this.getBillWaitListData();\r\n    },\r\n    //当前页改变时\r\n    handleCurrentChange(page) {\r\n      this.signData.pageIndex = page;\r\n      this.getBillWaitListData();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.search_div {\r\n  margin: 0 10px;\r\n  padding-top: 20px;\r\n  background-color: #fff;\r\n  .first-input {\r\n    width: 300px;\r\n  }\r\n}\r\n.table_div {\r\n  margin: 10px;\r\n  background-color: #fff;\r\n  padding-top: 20px;\r\n  padding-left: 10px;\r\n}\r\n.page_div{\r\n  margin-top:20px;\r\n  padding-bottom:10px;\r\n  margin-right:20px;\r\n  display:flex;\r\n  align-items:center;\r\n}\r\n</style>\r\n\r\n\r\n\r\n"],"sourceRoot":"src/views/fmis/detail/storeTrad"}]}