{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\collocation\\components\\group_dialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\collocation\\components\\group_dialog.vue","mtime":1572415125600},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.to-string\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"tp-group-dialog\",\n  data: function data() {\n    return {\n      dialogVisible: false,\n      filtersData: {\n        sort: 0,\n        name: \"\",\n        description: \"\"\n      },\n      //验证\n      rules: {\n        name: [{\n          required: true,\n          message: \"请输入分类名称\",\n          trigger: \"blur\"\n        }, {\n          max: 24,\n          message: \"最大长度24个字符\",\n          trigger: \"blur\"\n        }],\n        description: [{\n          max: 120,\n          message: \"最大长度120个字符\",\n          trigger: \"blur\"\n        }],\n        sort: [{\n          required: true,\n          message: \"请选择排序\",\n          trigger: \"change\"\n        }]\n      },\n      editDisabled: false,\n      //可编辑状态  除使用状态其他都不可编辑\n      showDisabled: false,\n      //查看时 使用状态不可编辑\n      sortOptions: [],\n      _type: \"\",\n      _id: \"\",\n      _title: \"新增\",\n      tagStr: \"\"\n    };\n  },\n  created: function created() {\n    this.init();\n  },\n  methods: {\n    init: function init() {\n      this._type = \"\";\n      this._id = \"\";\n      this._title = \"\";\n      this.tagStr = \"\";\n      this.sortOptions = [];\n      this.filtersData = {\n        sort: 0,\n        name: \"\",\n        description: \"\"\n      };\n    },\n    //初始化\n    popupInit: function popupInit(_type, _title, _id) {\n      this.init();\n      this._type = _type;\n      this._id = _id;\n      this._title = _title; //对象还需初始化\n\n      switch (_type.toString()) {\n        case \"add\":\n          //新增\n          this.editDisabled = false;\n          this.showDisabled = false;\n          this.getSortData(_type);\n          break;\n\n        case \"edit\":\n          //修改\n          this.editDisabled = true;\n          this.showDisabled = false;\n          this.getSortData(_type);\n          this.getTagGroupData(_id);\n          break;\n\n        case \"show\":\n          //查看\n          this.editDisabled = true;\n          this.showDisabled = true;\n          this.getSortData(_type);\n          this.getTagGroupData(_id);\n          break;\n      }\n\n      this.dialogVisible = true;\n    },\n    //关闭\n    closeDialog: function closeDialog(formName) {\n      this.dialogVisible = false;\n      this.$refs[formName].resetFields(); //重置选项\n    },\n    //保存表单\n    submitForm: function submitForm(formName) {\n      var _this = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          _this.request(_this.api.collocation.collocationTagGroup_save, _this.filtersData).then(function (data) {\n            _this.$message.success(\"保存成功\");\n\n            _this.closeDialog(formName);\n\n            setTimeout(function () {\n              _this.$emit(\"refreshItem\", \"刷新吧兄弟\");\n            }, 500);\n          });\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    },\n    // //获取列表数据\n    getTagGroupData: function getTagGroupData(_id) {\n      var _this2 = this;\n\n      this.request(this.api.collocation.collocationTagGroup_get, {\n        id: _id\n      }).then(function (res) {\n        console.log(res);\n        var arr = [];\n        var items = res.collocationTagItems;\n\n        for (var i = 0; i < items.length; i++) {\n          arr.push(items[i].tagName);\n        }\n\n        _this2.tagStr = arr.join(\"、\");\n        _this2.filtersData = res;\n      });\n    },\n    //\n    getSortData: function getSortData(_type) {\n      var _this3 = this;\n\n      this.request(this.api.collocation.collocationTagGroup_selectMaxSort, {}).then(function (res) {\n        console.log(res == null);\n        var num = _type == \"add\" ? res == null ? 1 : Number(res) + 1 : res;\n        var arr = [];\n\n        for (var i = 1; i <= num; i++) {\n          arr.push({\n            num: i\n          });\n        }\n\n        if (_type == \"add\") {\n          _this3.filtersData.sort = num;\n        }\n\n        _this3.sortOptions = arr;\n      });\n    },\n    //修改表单\n    editForm: function editForm(formName) {\n      this.submitForm(formName);\n    }\n  }\n};",{"version":3,"sources":["group_dialog.vue"],"names":[],"mappings":"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","sourcesContent":[" <template>\r\n  <el-dialog\r\n    v-if=\"dialogVisible\"\r\n    :title=\"_title\"\r\n    :visible.sync=\"dialogVisible\"\r\n    class=\"alarmPopup\"\r\n    width=\"500px\"\r\n  >\r\n    <el-form :model=\"filtersData\" :rules=\"rules\" label-width=\"100px\" size=\"small\" ref=\"filtersForm\">\r\n      <el-form-item prop=\"name\" label=\"分组名称：\">\r\n        <el-input\r\n          placeholder=\"请输入内容\"\r\n          class=\"input-w-2\"\r\n          :disabled=\"showDisabled\"\r\n          v-model=\"filtersData.name\"\r\n        ></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"包含标签：\" v-if=\"_type != 'add'\">{{tagStr}}</el-form-item>\r\n      <el-form-item prop=\"sort\" label=\"排序：\">\r\n        <el-select :disabled=\"showDisabled\" v-model=\"filtersData.sort\" class=\"input-w-2\" placeholder=\"请选择\">\r\n          <el-option\r\n            v-for=\"item in sortOptions\"\r\n            :key=\"item.num\"\r\n            :label=\"item.num\"\r\n            :value=\"item.num\"\r\n          ></el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item prop=\"description\" label=\"分组描述：\">\r\n        <el-input\r\n          type=\"textarea\"\r\n          placeholder=\"请输入内容\"\r\n          class=\"input-w-2\"\r\n          :disabled=\"showDisabled\"\r\n          v-model=\"filtersData.description\"\r\n        ></el-input>\r\n      </el-form-item>\r\n    </el-form>\r\n\r\n    <div class=\"item-right\">\r\n      <el-button size=\"small\" @click=\"closeDialog('filtersForm')\">取消</el-button>\r\n      <el-button\r\n        v-if=\"_type == 'add'\"\r\n        size=\"small\"\r\n        @click=\"submitForm('filtersForm')\"\r\n        type=\"primary\"\r\n      >确定</el-button>\r\n      <el-button\r\n        v-else-if=\"_type == 'edit'\"\r\n        size=\"small\"\r\n        @click=\"submitForm('filtersForm')\"\r\n        type=\"primary\"\r\n      >修改</el-button>\r\n    </div>\r\n  </el-dialog>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"tp-group-dialog\",\r\n  data() {\r\n    return {\r\n      dialogVisible: false,\r\n      filtersData: {\r\n        sort: 0,\r\n        name: \"\",\r\n        description: \"\"\r\n      },\r\n      //验证\r\n      rules: {\r\n        name: [\r\n          { required: true, message: \"请输入分类名称\", trigger: \"blur\" },\r\n          { max: 24, message: \"最大长度24个字符\", trigger: \"blur\" }\r\n        ],\r\n        description: [\r\n          { max: 120, message: \"最大长度120个字符\", trigger: \"blur\" }\r\n        ],\r\n        sort: [{ required: true, message: \"请选择排序\", trigger: \"change\" }]\r\n      },\r\n      editDisabled: false, //可编辑状态  除使用状态其他都不可编辑\r\n      showDisabled: false, //查看时 使用状态不可编辑\r\n      sortOptions: [],\r\n      _type: \"\",\r\n      _id: \"\",\r\n      _title: \"新增\",\r\n      tagStr: \"\"\r\n    };\r\n  },\r\n\r\n  created() {\r\n    this.init();\r\n  },\r\n  methods: {\r\n    init() {\r\n      this._type = \"\";\r\n      this._id = \"\";\r\n      this._title = \"\";\r\n      this.tagStr = \"\";\r\n      this.sortOptions = [];\r\n      this.filtersData = {\r\n        sort: 0,\r\n        name: \"\",\r\n        description: \"\"\r\n      };\r\n    },\r\n    //初始化\r\n    popupInit(_type, _title, _id) {\r\n      this.init();\r\n      this._type = _type;\r\n      this._id = _id;\r\n      this._title = _title;\r\n      //对象还需初始化\r\n      switch (_type.toString()) {\r\n        case \"add\": //新增\r\n          this.editDisabled = false;\r\n          this.showDisabled = false;\r\n          this.getSortData(_type);\r\n          break;\r\n        case \"edit\": //修改\r\n          this.editDisabled = true;\r\n          this.showDisabled = false;\r\n          this.getSortData(_type);\r\n          this.getTagGroupData(_id);\r\n          break;\r\n        case \"show\": //查看\r\n          this.editDisabled = true;\r\n          this.showDisabled = true;\r\n          this.getSortData(_type);\r\n          this.getTagGroupData(_id);\r\n          break;\r\n      }\r\n      this.dialogVisible = true;\r\n    },\r\n    //关闭\r\n    closeDialog(formName) {\r\n      this.dialogVisible = false;\r\n      this.$refs[formName].resetFields(); //重置选项\r\n    },\r\n    //保存表单\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          this.request(\r\n            this.api.collocation.collocationTagGroup_save,\r\n            this.filtersData\r\n          ).then(data => {\r\n            this.$message.success(\"保存成功\");\r\n            this.closeDialog(formName);\r\n            setTimeout(() => {\r\n              this.$emit(\"refreshItem\", \"刷新吧兄弟\");\r\n            }, 500);\r\n          });\r\n        } else {\r\n          console.log(\"error submit!!\");\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    // //获取列表数据\r\n    getTagGroupData(_id) {\r\n      this.request(this.api.collocation.collocationTagGroup_get, {\r\n        id: _id\r\n      }).then(res => {\r\n        console.log(res);\r\n        let arr = [];\r\n        let items = res.collocationTagItems;\r\n        for (let i = 0; i < items.length; i++) {\r\n          arr.push(items[i].tagName);\r\n        }\r\n        this.tagStr = arr.join(\"、\");\r\n        this.filtersData = res;\r\n      });\r\n    },\r\n    //\r\n    getSortData(_type) {\r\n      this.request(\r\n        this.api.collocation.collocationTagGroup_selectMaxSort,\r\n        {}\r\n      ).then(res => {\r\n        console.log(res == null);\r\n        let num = _type == \"add\" ? (res == null ? 1 : Number(res) + 1) : res;\r\n        let arr = [];\r\n        for (let i = 1; i <= num; i++) {\r\n          arr.push({\r\n            num: i\r\n          });\r\n        }\r\n        if (_type == \"add\") {\r\n          this.filtersData.sort = num;\r\n        }\r\n        this.sortOptions = arr;\r\n      });\r\n    },\r\n    //修改表单\r\n    editForm(formName) {\r\n      this.submitForm(formName);\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"less\" scoped>\r\n</style>\r\n"],"sourceRoot":"src/views/collocation/components"}]}