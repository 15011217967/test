{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\store\\data\\store_run_list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\store\\data\\store_run_list.vue","mtime":1572415124723},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getToken } from '@/utils/auth';\nimport codeSet from '@/components/codeSet';\nimport treeDept from '@/components/treeDept';\nimport selectDate from \"../components/selectDate\"; // echarts/lib/chart/line\n\nimport echarts from 'echarts';\nvar token = getToken();\nexport default {\n  data: function data() {\n    return {\n      colorList: ['#2eddc1', '#FCCE10', '#E87C25', '#277bbb', '#E87fff', '#277aaa', '#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n      myChart: null,\n      myChart2: null,\n      dataStartEnd: null,\n      // 维度列表\n      dimensionality_list: [{\n        name: '销售收入',\n        id: 0\n      }, {\n        name: '退货率',\n        id: 1\n      }, {\n        name: '客单价',\n        id: 2\n      }, {\n        name: '件单价',\n        id: 3\n      }, {\n        name: '连带率',\n        id: 4\n      }],\n      // data数据\n      getChartData_list: {},\n      chartType: 0,\n      dataList: [],\n      // 获取门店信列表\n      getStoreList_data: [],\n      filtersData: {\n        \"dimension\": 0,\n        \"storeIdList\": [],\n        \"beginTime\": \"\",\n        \"endTime\": \"\"\n      },\n      // 门店列表请求参数\n      filtersDataStore: {\n        pageIndex: '',\n        // 当前页码\n        pageSize: '',\n        // 每页数量\n        name: '',\n        // 门店名称\n        organizationId: '',\n        // 隶属机构\n        businessStatus: '',\n        // 营业状态\n        type: '',\n        // 门店类型\n        createBegin: '',\n        // 创建时间开始\n        createEnd: '' // 创建时间结束\n\n      }\n    };\n  },\n  mounted: function mounted() {},\n  created: function created() {\n    var that = this;\n    this.getStoreList(); // 获取门店列表\n  },\n  methods: {\n    // 表格过滤\n    tableFormatter: function tableFormatter(row, column) {\n      var val = row[column.property];\n\n      if (this.filtersData.dimension == 1) {\n        return val + '%';\n      } else if (this.filtersData.dimension == 4) {\n        return val;\n      } else {\n        return '￥' + val;\n      }\n    },\n    // 图表hover显示数据初始\n    chartTooltipInit: function chartTooltipInit(params) {\n      var _this = this;\n\n      var html = '';\n\n      if (params && params.length) {\n        html += params[0].axisValueLabel + '<br>';\n        params.forEach(function (item) {\n          html += \"<span style=\\\"display:inline-block;width:10px;height: 10px;border-radius: 5px;margin-right: 10px;background:\" + item.color + \"\\\"></span>\" + item.seriesName + \" ：\";\n\n          if (_this.filtersData.dimension == 1) {\n            html += item.value + '%';\n          } else if (_this.filtersData.dimension == 4) {\n            html += item.value;\n          } else {\n            html += '￥' + item.value;\n          }\n\n          html += '<br>';\n        });\n      }\n\n      return html;\n    },\n\n    /**\n     * 获取表格数据\n     */\n    getChartData: function getChartData() {\n      var _this2 = this;\n\n      var that = this; // 基于准备好的dom，初始化echarts实例\n\n      this.$nextTick(function () {\n        _this2.myChart = echarts.init(document.getElementById('chart_example'));\n\n        _this2.request(that.api.store.storeDataStatistics_getStoreManageDataAnalysis, _this2.filtersData).then(function (res) {\n          // 指定图表的配置项和数据 ------------------\n          var option = {\n            color: _this2.colorList,\n            tooltip: {\n              trigger: 'axis',\n              axisPointer: {\n                // 坐标轴指示器，坐标轴触发有效\n                type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n\n              },\n              formatter: function formatter(params) {\n                return _this2.chartTooltipInit(params);\n              }\n            },\n            legend: {\n              data: []\n            },\n            dataZoom: [{\n              type: 'slider',\n              show: true,\n              xAxisIndex: [0],\n              start: 0,\n              end: 100\n            }, {\n              type: 'inside',\n              xAxisIndex: [0],\n              start: 0,\n              end: 100\n            }],\n            title: {\n              textStyle: {\n                color: '#409EFF'\n              },\n              left: '45%'\n            },\n            xAxis: {\n              data: []\n            },\n            yAxis: {},\n            series: [{\n              type: 'line',\n              name: '全部门店',\n              data: []\n            }]\n          };\n          res.storeVOList.forEach(function (item, index) {\n            var dimensionItem = _this2.dimensionality_list.find(function (item) {\n              return item.id == _this2.filtersData.dimension;\n            });\n\n            item.dimension = dimensionItem.name;\n            item.dataList.forEach(function (items, indexs) {\n              item['v' + indexs] = items.amount;\n            });\n          });\n\n          if (res.storeVOList.length) {\n            _this2.dataList = res.storeVOList[0].dataList;\n          }\n\n          if (res.allStoreData && res.allStoreData.length) {\n            _this2.dataStartEnd = res.allStoreData[0].date + '-' + res.allStoreData[res.allStoreData.length - 1].date;\n          } // 添加chart数据\n\n\n          if (_this2.filtersData.storeIdList && _this2.filtersData.storeIdList.length) {\n            var series = [];\n            res.storeVOList.forEach(function (item, index) {\n              var data_list = [];\n              option.legend.data.push(item.storeName);\n              item.dataList.forEach(function (items, indexs) {\n                data_list.push(items.amount);\n              });\n              series.push({\n                type: 'line',\n                name: item.storeName,\n                data: data_list\n              });\n            });\n\n            if (res.storeVOList && res.storeVOList.length) {\n              res.storeVOList[0].dataList.forEach(function (item, index) {\n                option.xAxis.data.push(item.date);\n              });\n            }\n\n            option.series = series;\n          } else {\n            res.allStoreData.forEach(function (item, index) {\n              option.xAxis.data.push(item.date);\n              option.series[0].data.push(item.amount);\n            });\n          } // 添加汇总数据\n\n\n          res.storeVOListAll = [{\n            storeName: '全部门店',\n            dimension: _this2.$refs.dimension.selectedLabel,\n            sumData: res.allStoreSumAmount\n          }];\n          _this2.getChartData_list = res; // 使用刚指定的配置项和数据显示图表。\n\n          _this2.myChart.clear();\n\n          _this2.myChart.setOption(option);\n\n          if (_this2.chartType == 1) {\n            _this2.myChart2 = echarts.init(document.getElementById('chart_example2')); // 汇总图图表配置项，数据 ----------------------\n\n            var option2 = {\n              color: _this2.colorList,\n              tooltip: {\n                trigger: 'axis',\n                axisPointer: {\n                  // 坐标轴指示器，坐标轴触发有效\n                  type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n\n                },\n                formatter: function formatter(params) {\n                  return _this2.chartTooltipInit(params);\n                }\n              },\n              dataZoom: [{\n                type: 'slider',\n                show: true,\n                xAxisIndex: [0],\n                start: 0,\n                end: 50\n              }, {\n                type: 'inside',\n                xAxisIndex: [0],\n                start: 0,\n                end: 50\n              }],\n              xAxis: [{\n                type: 'category',\n                data: [],\n                axisTick: {\n                  alignWithLabel: true\n                }\n              }],\n              yAxis: [{\n                type: 'value'\n              }],\n              series: [{\n                name: '汇总',\n                type: 'bar',\n                barMaxWidth: 30,\n                data: []\n              }]\n            };\n\n            _this2.getChartData_list.storeVOList.forEach(function (item, index) {\n              option2.xAxis[0].data.push(item.storeName);\n              option2.series[0].data.push(item.sumData);\n            });\n\n            _this2.myChart2.clear();\n\n            _this2.myChart2.setOption(option2);\n          }\n        });\n      });\n    },\n\n    /**\n     * 改变日期\n     */\n    changeDate: function changeDate(chartUpDateArr) {\n      this.filtersData.beginTime = chartUpDateArr[0];\n      this.filtersData.endTime = chartUpDateArr[1];\n      this.getChartData(); // 获取表格数据\n\n      console.log(chartUpDateArr + '请求数据');\n    },\n\n    /**\n     * 选择图表\n     */\n    selectChart: function selectChart(type) {\n      var _this3 = this;\n\n      this.chartType = type;\n      console.log(type);\n      this.$nextTick(function () {\n        _this3.myChart2 = echarts.init(document.getElementById('chart_example2')); // 汇总图图表配置项，数据 ----------------------\n\n        var option2 = {\n          color: _this3.colorList,\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              // 坐标轴指示器，坐标轴触发有效\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n\n            },\n            formatter: function formatter(params) {\n              return _this3.chartTooltipInit(params);\n            }\n          },\n          dataZoom: [{\n            type: 'slider',\n            show: true,\n            xAxisIndex: [0],\n            start: 0,\n            end: 50\n          }, {\n            type: 'inside',\n            xAxisIndex: [0],\n            start: 0,\n            end: 50\n          }],\n          xAxis: [{\n            type: 'category',\n            data: [],\n            axisTick: {\n              alignWithLabel: true\n            }\n          }],\n          yAxis: [{\n            type: 'value'\n          }],\n          series: [{\n            name: '汇总',\n            type: 'bar',\n            barMaxWidth: 30,\n            data: []\n          }]\n        };\n\n        _this3.getChartData_list.storeVOList.forEach(function (item, index) {\n          option2.xAxis[0].data.push(item.storeName);\n          option2.series[0].data.push(item.sumData);\n        });\n\n        _this3.myChart2.clear();\n\n        _this3.myChart2.setOption(option2);\n      });\n    },\n    // 点击页数\n    handleCurrentChange: function handleCurrentChange(pageIndex) {\n      this.filtersData.pageIndex = pageIndex;\n      this.getList();\n    },\n    // 点击每页多少条数\n    handleSizeChange: function handleSizeChange(pageSize) {\n      this.filtersData.pageSize = pageSize;\n    },\n    //导出\n    exportExcel: function exportExcel() {\n      var _this4 = this;\n\n      require.ensure([], function () {\n        var _require = require(\"@/vendor/Export2Excel\"),\n            export_json_to_excel = _require.export_json_to_excel,\n            export_table_to_excel = _require.export_table_to_excel;\n\n        var tHeader = [\"门店名称\", \"指标\"]; // 上面设置Excel的表格第一行的标题\n\n        var filterVal = [\"storeName\", \"dimension\"]; // 把data里的tableData存到list\n\n        var list;\n\n        if (_this4.chartType == 0) {\n          list = _this4.getChartData_list.storeVOList;\n\n          _this4.dataList.forEach(function (item, index) {\n            tHeader.push(item.date);\n            filterVal.push('v' + index);\n          });\n        }\n\n        if (_this4.chartType == 1) {\n          list = _this4.getChartData_list.storeVOListAll;\n          tHeader.push(_this4.dataStartEnd);\n          filterVal.push(\"sumData\");\n        }\n\n        var data = _this4.formatJson(filterVal, list);\n\n        export_json_to_excel(tHeader, data, \"门店经营数据分析\");\n      });\n    },\n    formatJson: function formatJson(filterVal, jsonData) {\n      console.log(jsonData);\n      return jsonData.map(function (v) {\n        return filterVal.map(function (j) {\n          return v[j];\n        });\n      });\n    },\n\n    /**\n     * 查询门店列表\n     */\n    getStoreList: function getStoreList() {\n      var that = this;\n      this.request(that.api.store.storeBasic_list, this.filtersDataStore).then(function (res) {\n        that.getStoreList_data = res;\n      });\n    },\n\n    /**\n     * 跳转工单详情\n     */\n    href: function href(routeName, param) {\n      this.$router.push({\n        path: '/' + routeName,\n        name: routeName,\n        query: param\n      });\n    },\n\n    /**\n     * 模糊搜索\n     */\n    handleSearch: function handleSearch() {\n      this.filtersData.pageIndex = 1;\n      this.getChartData();\n    },\n\n    /**\n     * 搜索重置\n     */\n    handleResetFilters: function handleResetFilters() {\n      Object.assign(this.filtersData, {\n        \"dimension\": 0,\n        \"storeIdList\": [],\n        \"beginTime\": \"\",\n        \"endTime\": \"\"\n      });\n    }\n  },\n  components: {\n    codeSet: codeSet,\n    treeDept: treeDept,\n    selectDate: selectDate\n  }\n};",{"version":3,"sources":["store_run_list.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 模糊搜索 -->\r\n    <div class=\"item-margin\">\r\n      <el-form\r\n              class=\"item-form\"\r\n              size=\"small\"\r\n              :inline=\"true\"\r\n              :model=\"filtersData\">\r\n        <el-form-item label=\"指标：\">\r\n          <el-select v-model=\"filtersData.dimension\" filterable @change=\"getChartData\" ref=\"dimension\">\r\n            <el-option v-for=\"(item, index) in dimensionality_list\" :label=\"item.name\" :key=\"index\"\r\n                       :value=\"item.id\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"筛选门店：\">\r\n          <el-select\r\n                  v-model=\"filtersData.storeIdList\"\r\n                  clearable\r\n                  filterable\r\n                  :multiple-limit=\"3\"\r\n                  class=\"input-w-5\"\r\n                  @change=\"getChartData\"\r\n                  placeholder=\"请选择门店，最多可选择3个门店\"\r\n                  multiple>\r\n            <el-option v-for=\"(item, index) in getStoreList_data.data\" :label=\"item.name\" :key=\"index\"\r\n                       :value=\"item.id\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n\r\n      </el-form>\r\n    </div>\r\n    <!-- 模糊搜索 -->\r\n    <!-- 门店会员 -->\r\n    <div class=\"box\">\r\n      <!-- 图表筛选条件 -->\r\n      <select-date @changeDate=\"changeDate\" @selectChart=\"selectChart\" :isMonthSelect=\"false\"></select-date>\r\n      <!-- echarts图表 -->\r\n      <div v-show=\"chartType == 0\">\r\n        <div id=\"chart_example\" class=\"mt-30\"></div>\r\n        <el-button size=\"small\" type=\"primary\" @click=\"exportExcel\">导出</el-button>\r\n        <el-table\r\n                style=\"width: 100%\"\r\n                :data=\"getChartData_list.storeVOList\"\r\n                stripe\r\n                empty-text=\"暂无数据\"\r\n                header-row-class-name=\"item-table-header\"\r\n                :highlight-current-row=\"true\">\r\n          <el-table-column fixed=\"left\" :show-overflow-tooltip=\"true\" width=\"150\" label=\"门店名称\">\r\n            <template slot-scope=\"scope\">{{ scope.row.storeName|| '--' }}</template>\r\n          </el-table-column>\r\n          <el-table-column :show-overflow-tooltip=\"true\" fixed=\"left\" label=\"指标\" prop=\"dimension\"></el-table-column>\r\n          <el-table-column\r\n                  :prop=\"'v'+index\"\r\n                  :label=\"item.date\"\r\n                  :show-overflow-tooltip=\"true\"\r\n                  :key=\"index\"\r\n                  v-for=\"(item, index) in dataList\"\r\n                  :formatter=\"tableFormatter\"\r\n          ></el-table-column>\r\n        </el-table>\r\n      </div>\r\n      <div v-show=\"chartType == 1\">\r\n        <div id=\"chart_example2\" class=\"mt-30\"></div>\r\n        <el-button size=\"small\" type=\"primary\" @click=\"exportExcel\">导出</el-button>\r\n        <el-table\r\n                style=\"width: 100%\"\r\n                :data=\"getChartData_list.storeVOListAll\"\r\n                stripe\r\n                empty-text=\"暂无数据\"\r\n                header-row-class-name=\"item-table-header\"\r\n                :highlight-current-row=\"true\">\r\n          <el-table-column fixed=\"left\" :show-overflow-tooltip=\"true\" width=\"150\" label=\"门店名称\">\r\n            <template slot-scope=\"scope\">{{ scope.row.storeName|| '--' }}</template>\r\n          </el-table-column>\r\n          <el-table-column :show-overflow-tooltip=\"true\" label=\"指标\" prop=\"dimension\"></el-table-column>\r\n          <el-table-column :show-overflow-tooltip=\"true\" :label=\"dataStartEnd\" prop=\"sumData\"\r\n                           :formatter=\"tableFormatter\"></el-table-column>\r\n        </el-table>\r\n      </div>\r\n    </div>\r\n    <!-- 工单列表 -->\r\n  </div>\r\n</template>\r\n<!-- 工单池 -->\r\n<script>\r\n  import {getToken} from '@/utils/auth'\r\n  import codeSet from '@/components/codeSet'\r\n  import treeDept from '@/components/treeDept'\r\n  import selectDate from '../components/selectDate'\r\n  // echarts/lib/chart/line\r\n  import echarts from 'echarts';\r\n\r\n  let token = getToken()\r\n\r\n  export default {\r\n\r\n    data() {\r\n      return {\r\n        colorList:  ['#2eddc1','#FCCE10','#E87C25','#277bbb','#E87fff','#277aaa','#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\r\n        myChart: null,\r\n        myChart2: null,\r\n        dataStartEnd: null,\r\n        // 维度列表\r\n        dimensionality_list: [{\r\n          name: '销售收入',\r\n          id: 0\r\n        }, {\r\n          name: '退货率',\r\n          id: 1\r\n        }, {\r\n          name: '客单价',\r\n          id: 2\r\n        }, {\r\n          name: '件单价',\r\n          id: 3\r\n        }, {\r\n          name: '连带率',\r\n          id: 4\r\n        }],\r\n        // data数据\r\n        getChartData_list: {},\r\n        chartType: 0,\r\n        dataList: [],\r\n        // 获取门店信列表\r\n        getStoreList_data: [],\r\n        filtersData: {\r\n          \"dimension\": 0,\r\n          \"storeIdList\": [],\r\n          \"beginTime\": \"\",\r\n          \"endTime\": \"\",\r\n        },\r\n        // 门店列表请求参数\r\n        filtersDataStore: {\r\n          pageIndex: '',// 当前页码\r\n          pageSize: '',// 每页数量\r\n          name: '',// 门店名称\r\n          organizationId: '',// 隶属机构\r\n          businessStatus: '',// 营业状态\r\n          type: '',// 门店类型\r\n          createBegin: '',// 创建时间开始\r\n          createEnd: ''// 创建时间结束\r\n        }\r\n      }\r\n    },\r\n    mounted() {\r\n\r\n    },\r\n    created() {\r\n      const that = this;\r\n\r\n      this.getStoreList(); // 获取门店列表\r\n    },\r\n    methods: {\r\n      // 表格过滤\r\n      tableFormatter(row, column) {\r\n        let val = row[column.property];\r\n        if (this.filtersData.dimension == 1) {\r\n          return val + '%'\r\n        } else if(this.filtersData.dimension == 4) {\r\n          return val\r\n        }else {\r\n          return '￥' + val\r\n        }\r\n      },\r\n      // 图表hover显示数据初始\r\n      chartTooltipInit(params){\r\n        let html = '';\r\n        if(params && params.length){\r\n          html += params[0].axisValueLabel + '<br>';\r\n          params.forEach(item => {\r\n            html += \"<span style=\\\"display:inline-block;width:10px;height: 10px;border-radius: 5px;margin-right: 10px;background:\" + item.color + \"\\\"></span>\" + item.seriesName + \" ：\"\r\n            if (this.filtersData.dimension == 1) {\r\n              html += item.value + '%'\r\n            } else if(this.filtersData.dimension == 4) {\r\n              html += item.value\r\n            }else {\r\n              html += '￥' + item.value\r\n            }\r\n            html += '<br>'\r\n          })\r\n        }\r\n        return html\r\n      },\r\n      /**\r\n       * 获取表格数据\r\n       */\r\n      getChartData() {\r\n        let that = this;\r\n        // 基于准备好的dom，初始化echarts实例\r\n        this.$nextTick(() => {\r\n          this.myChart = echarts.init(document.getElementById('chart_example'));\r\n          this.request(\r\n                  that.api.store.storeDataStatistics_getStoreManageDataAnalysis,\r\n                  this.filtersData\r\n          ).then(res => {\r\n            // 指定图表的配置项和数据 ------------------\r\n            var option = {\r\n              color: this.colorList,\r\n              tooltip: {\r\n                trigger: 'axis',\r\n                axisPointer: {            // 坐标轴指示器，坐标轴触发有效\r\n                  type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n                },\r\n                formatter: (params) => {\r\n                  return this.chartTooltipInit(params)\r\n                }\r\n              },\r\n              legend: {\r\n                data: []\r\n              },\r\n              dataZoom: [\r\n                {\r\n                  type: 'slider',\r\n                  show: true,\r\n                  xAxisIndex: [0],\r\n                  start: 0,\r\n                  end: 100\r\n                },\r\n                {\r\n                  type: 'inside',\r\n                  xAxisIndex: [0],\r\n                  start: 0,\r\n                  end: 100\r\n                }\r\n              ],\r\n              title: {\r\n                textStyle: {\r\n                  color: '#409EFF',\r\n                },\r\n                left: '45%'\r\n              },\r\n              xAxis: {\r\n                data: []\r\n              },\r\n              yAxis: {\r\n              },\r\n              series: [{\r\n                type: 'line',\r\n                name: '全部门店',\r\n                data: []\r\n              }]\r\n            };\r\n            res.storeVOList.forEach((item, index) => {\r\n              let dimensionItem = this.dimensionality_list.find(item => {\r\n                return item.id == this.filtersData.dimension\r\n              });\r\n              item.dimension = dimensionItem.name;\r\n              item.dataList.forEach((items, indexs) => {\r\n                item['v' + indexs] = items.amount;\r\n              })\r\n            });\r\n            if (res.storeVOList.length) {\r\n              this.dataList = res.storeVOList[0].dataList;\r\n            }\r\n            if (res.allStoreData && res.allStoreData.length) {\r\n              this.dataStartEnd = res.allStoreData[0].date + '-' + res.allStoreData[res.allStoreData.length - 1].date;\r\n            }\r\n            // 添加chart数据\r\n            if (this.filtersData.storeIdList && this.filtersData.storeIdList.length) {\r\n              var series = [];\r\n              res.storeVOList.forEach((item, index) => {\r\n                var data_list = [];\r\n                option.legend.data.push(item.storeName);\r\n                item.dataList.forEach((items, indexs) => {\r\n                  data_list.push(items.amount)\r\n                });\r\n                series.push({\r\n                  type: 'line',\r\n                  name: item.storeName,\r\n                  data: data_list\r\n                });\r\n              });\r\n              if (res.storeVOList && res.storeVOList.length) {\r\n                res.storeVOList[0].dataList.forEach((item, index) => {\r\n                  option.xAxis.data.push(item.date);\r\n                });\r\n              }\r\n              option.series = series;\r\n            } else {\r\n              res.allStoreData.forEach((item, index) => {\r\n                option.xAxis.data.push(item.date);\r\n                option.series[0].data.push(item.amount);\r\n              });\r\n            }\r\n            // 添加汇总数据\r\n            res.storeVOListAll = [{\r\n              storeName: '全部门店',\r\n              dimension: this.$refs.dimension.selectedLabel,\r\n              sumData:res.allStoreSumAmount\r\n            }]\r\n            this.getChartData_list = res;\r\n            // 使用刚指定的配置项和数据显示图表。\r\n            this.myChart.clear();\r\n            this.myChart.setOption(option);\r\n            if (this.chartType == 1) {\r\n              this.myChart2 = echarts.init(document.getElementById('chart_example2'));\r\n              // 汇总图图表配置项，数据 ----------------------\r\n              var option2 = {\r\n                color: this.colorList,\r\n                tooltip: {\r\n                  trigger: 'axis',\r\n                  axisPointer: {            // 坐标轴指示器，坐标轴触发有效\r\n                    type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n                  },\r\n                  formatter: (params) => {\r\n                    return this.chartTooltipInit(params)\r\n                  }\r\n                },\r\n                dataZoom: [\r\n                  {\r\n                    type: 'slider',\r\n                    show: true,\r\n                    xAxisIndex: [0],\r\n                    start: 0,\r\n                    end: 50\r\n                  },\r\n                  {\r\n                    type: 'inside',\r\n                    xAxisIndex: [0],\r\n                    start: 0,\r\n                    end: 50\r\n                  }\r\n                ],\r\n                xAxis: [\r\n                  {\r\n                    type: 'category',\r\n                    data: [],\r\n                    axisTick: {\r\n                      alignWithLabel: true\r\n                    }\r\n                  }\r\n                ],\r\n                yAxis: [\r\n                  {\r\n                    type: 'value'\r\n                  }\r\n                ],\r\n                series: [\r\n                  {\r\n                    name: '汇总',\r\n                    type: 'bar',\r\n                    barMaxWidth: 30,\r\n                    data: []\r\n                  }\r\n                ]\r\n              };\r\n              this.getChartData_list.storeVOList.forEach((item, index) => {\r\n                option2.xAxis[0].data.push(item.storeName)\r\n                option2.series[0].data.push(item.sumData)\r\n              });\r\n              this.myChart2.clear();\r\n              this.myChart2.setOption(option2);\r\n            }\r\n          });\r\n        });\r\n      },\r\n      /**\r\n       * 改变日期\r\n       */\r\n      changeDate(chartUpDateArr) {\r\n        this.filtersData.beginTime = chartUpDateArr[0];\r\n        this.filtersData.endTime = chartUpDateArr[1];\r\n        this.getChartData(); // 获取表格数据\r\n        console.log(chartUpDateArr + '请求数据')\r\n\r\n      },\r\n      /**\r\n       * 选择图表\r\n       */\r\n      selectChart(type) {\r\n        this.chartType = type;\r\n        console.log(type)\r\n        this.$nextTick(() => {\r\n          this.myChart2 = echarts.init(document.getElementById('chart_example2'));\r\n          // 汇总图图表配置项，数据 ----------------------\r\n          var option2 = {\r\n            color: this.colorList,\r\n            tooltip: {\r\n              trigger: 'axis',\r\n              axisPointer: {            // 坐标轴指示器，坐标轴触发有效\r\n                type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n              },\r\n              formatter: (params) => {\r\n                return this.chartTooltipInit(params)\r\n              }\r\n            },\r\n            dataZoom: [\r\n              {\r\n                type: 'slider',\r\n                show: true,\r\n                xAxisIndex: [0],\r\n                start: 0,\r\n                end: 50\r\n              },\r\n              {\r\n                type: 'inside',\r\n                xAxisIndex: [0],\r\n                start: 0,\r\n                end: 50\r\n              }\r\n            ],\r\n            xAxis: [\r\n              {\r\n                type: 'category',\r\n                data: [],\r\n                axisTick: {\r\n                  alignWithLabel: true\r\n                }\r\n              }\r\n            ],\r\n            yAxis: [\r\n              {\r\n                type: 'value'\r\n              }\r\n            ],\r\n            series: [\r\n              {\r\n                name: '汇总',\r\n                type: 'bar',\r\n                barMaxWidth: 30,\r\n                data: []\r\n              }\r\n            ]\r\n          };\r\n          this.getChartData_list.storeVOList.forEach((item, index) => {\r\n            option2.xAxis[0].data.push(item.storeName)\r\n            option2.series[0].data.push(item.sumData)\r\n          });\r\n          this.myChart2.clear();\r\n          this.myChart2.setOption(option2);\r\n\r\n        })\r\n      },\r\n      // 点击页数\r\n      handleCurrentChange(pageIndex) {\r\n        this.filtersData.pageIndex = pageIndex;\r\n        this.getList();\r\n      },\r\n      // 点击每页多少条数\r\n      handleSizeChange(pageSize) {\r\n        this.filtersData.pageSize = pageSize;\r\n      },\r\n      //导出\r\n      exportExcel() {\r\n        require.ensure([], () => {\r\n          let {export_json_to_excel, export_table_to_excel} = require(\"@/vendor/Export2Excel\");\r\n          let tHeader = [\"门店名称\", \"指标\"];\r\n          // 上面设置Excel的表格第一行的标题\r\n          let filterVal = [\"storeName\", \"dimension\"];\r\n          // 把data里的tableData存到list\r\n          let list;\r\n          if(this.chartType == 0){\r\n            list = this.getChartData_list.storeVOList;\r\n            this.dataList.forEach((item, index) => {\r\n              tHeader.push(item.date);\r\n              filterVal.push('v' + index)\r\n            })\r\n          }\r\n          if(this.chartType == 1){\r\n            list = this.getChartData_list.storeVOListAll;\r\n            tHeader.push(this.dataStartEnd);\r\n            filterVal.push(\"sumData\")\r\n          }\r\n          let data = this.formatJson(filterVal, list);\r\n          export_json_to_excel(tHeader, data, \"门店经营数据分析\");\r\n        });\r\n      },\r\n      formatJson(filterVal, jsonData) {\r\n        console.log(jsonData)\r\n        return jsonData.map(v => filterVal.map(j => v[j]));\r\n      },\r\n      /**\r\n       * 查询门店列表\r\n       */\r\n      getStoreList() {\r\n        const that = this;\r\n\r\n        this.request(\r\n                that.api.store.storeBasic_list,\r\n                this.filtersDataStore\r\n        ).then(res => {\r\n          that.getStoreList_data = res;\r\n        });\r\n      },\r\n      /**\r\n       * 跳转工单详情\r\n       */\r\n      href(routeName, param) {\r\n        this.$router.push({\r\n          path: '/' + routeName,\r\n          name: routeName,\r\n          query: param\r\n        })\r\n      },\r\n      /**\r\n       * 模糊搜索\r\n       */\r\n      handleSearch() {\r\n        this.filtersData.pageIndex = 1;\r\n        this.getChartData();\r\n      },\r\n      /**\r\n       * 搜索重置\r\n       */\r\n      handleResetFilters() {\r\n        Object.assign(this.filtersData, {\r\n          \"dimension\": 0,\r\n          \"storeIdList\": [],\r\n          \"beginTime\": \"\",\r\n          \"endTime\": \"\",\r\n        });\r\n      },\r\n    },\r\n    components: {\r\n      codeSet,\r\n      treeDept,\r\n      selectDate\r\n    }\r\n  }\r\n</script>\r\n<style lang=\"less\" scoped>\r\n  #chart_example, #chart_example2 {\r\n    // width: 50%;\r\n    height: 500px;\r\n    margin: 30px auto;\r\n  }\r\n\r\n  .box {\r\n    padding: 20px;\r\n    margin: 8px;\r\n    background: #fff;\r\n  }\r\n\r\n  .blueness {\r\n    color: #1E90FF;\r\n  }\r\n\r\n  .warningType {\r\n    width: 20px;\r\n    height: 20px;\r\n    line-height: 20px;\r\n    display: inline-block;\r\n    background: red;\r\n    color: #fff;\r\n    font-size: 12px;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    text-align: center;\r\n  }\r\n\r\n  .color {\r\n    background: #FF6347;\r\n  }\r\n\r\n  h5 {\r\n    color: #222;\r\n    margin-left: -15px;\r\n  }\r\n\r\n  .test {\r\n    color: #9d9d9d;\r\n  }\r\n</style>\r\n"],"sourceRoot":"src/views/store/data"}]}