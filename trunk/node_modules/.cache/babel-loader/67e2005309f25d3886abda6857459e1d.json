{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\scb\\order\\TransferSlipAddGoods.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\scb\\order\\TransferSlipAddGoods.vue","mtime":1575873045015},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// TODO 临时解决上传文件\nimport axios from 'axios';\nimport { getToken } from \"@/utils/auth\";\nimport PageTable from \"@/views/collocation/components/PageTable\";\nimport CheckTags from \"@/views/collocation/components/CheckTags\";\nimport StoreInfo from \"@/views/collocation/components/StoreInfo\";\nimport TransferSlipGoodsTable from \"@/views/collocation/components/TransferSlipGoodsTable\";\nimport ImagePopover from \"@/views/collocation/components/ImagePopover\";\nexport default {\n  name: 'transfer_slip_add_goods',\n  // 组件\n  components: {\n    PageTable: PageTable,\n    TransferSlipGoodsTable: TransferSlipGoodsTable,\n    CheckTags: CheckTags,\n    StoreInfo: StoreInfo,\n    ImagePopover: ImagePopover\n  },\n  // 数据\n  data: function data() {\n    return {\n      // 路由参数\n      _orderSn: null,\n      _outStoreId: null,\n      // 默认显示门店信息 outStoreInfo: 发货门店     inStoreInfo: 收货门店\n      activeName: 'outStoreInfo',\n      // 发货门店详情\n      outStoreInfo: null,\n      // 收货门店详情\n      inStoreInfo: null,\n      // 导入商品地址\n      uploadGoodsUrl: this.api.FN_ALLPATH(this.api.retailStore.storeProduct_importOrderItem),\n      // 导入是否可点\n      uploadGoodsDisabled: false,\n      // 导入附带参数\n      uploadGoodsParams: {\n        storeId: ''\n      },\n      // 最终保存提交信息\n      transferSlipAddInfo: {},\n      // 选择的商品列表\n      checkedSKUTableData: [],\n      // 是否显示选中的\n      checkedGoodsShow: false,\n      // 查询商品参数\n      formData: {\n        // 所属门店\n        storeId: '',\n        // 商品分类\n        cateIdentifier: '',\n        // 价格筛选\n        retailPriceLowerLimit: '',\n        retailPriceUpperLimit: '',\n        // 库存量\n        quantityLowerLimit: '',\n        quantityUpperLimit: '',\n        // 设计商\n        designCompanyId: '',\n        // 品牌\n        brandId: '',\n        // 综合搜索\n        searchWords: '',\n        // 标签\n        collocationTagIdList: [],\n        // 当前页码\n        pageIndex: 1,\n        // 每页数量\n        pageSize: 10\n      },\n      // 商品主表格数据\n      tableData: {},\n\n      /**\n       * 商品查询辅助数据\n       */\n      // 验证\n      rules: {\n        money: [{\n          required: false,\n          validator: this.moneyRule,\n          trigger: 'blur'\n        }],\n        count: [{\n          required: false,\n          validator: this.countRule,\n          trigger: 'blur'\n        }]\n      },\n      // 分类映射\n      props: {\n        value: 'id',\n        label: 'name',\n        children: 'children'\n      },\n      // 分类数据\n      classData: [],\n      classList: [],\n      // 选中的分类\n      cateArr: [],\n      // 品牌\n      brandOptions: [],\n      // 设计商\n      designCompanyOptions: []\n      /**\n       * 商品查询辅助数据--end\n       */\n\n    };\n  },\n  created: function created() {\n    // 获取上页面缓存的门店信息\n    var transferSlipAddInfo = sessionStorage.getItem('TRANSFER_SLIP_APP_INFO');\n\n    if (transferSlipAddInfo) {\n      this.transferSlipAddInfo = JSON.parse(transferSlipAddInfo);\n      this.formData.storeId = this.transferSlipAddInfo.outStoreId;\n      this.uploadGoodsParams.storeId = this.transferSlipAddInfo.outStoreId;\n    } else {\n      this.$notify.error({\n        title: '错误',\n        message: '信息缺失'\n      }); // 回退到选择门店;\n\n      var module = '/' + this.$route.path.split('/')[1];\n      this.$router.push({\n        path: module + '/transfer_slip/transfer_slip_add'\n      });\n    }\n  },\n  // 初始化数据\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      _this.init();\n    });\n  },\n  // 方法\n  methods: {\n    // 初始化\n    init: function init() {\n      // 获取上页面参数\n      this.getQueryParams(); // 获取发货门店详情\n\n      this.getStoreInfo(this.transferSlipAddInfo.outStoreId, 'outStoreInfo'); // 获取设计商列表\n\n      this.getDesignCompanyOptions(); // 获取品牌列表\n\n      this.getBrandOptions(); // 获取商品分类列表\n\n      this.getClassData(); // 获取表格数据\n\n      this.getTableData();\n    },\n    // 获取上页面参数\n    getQueryParams: function getQueryParams() {\n      this._orderSn = this.$route.query.orderSn;\n      this._outStoreId = this.$route.query.outStoreId;\n\n      if (this._orderSn && this._outStoreId) {\n        this.getStoreAllotOrderProductInfoList(this._orderSn, this._outStoreId);\n      }\n    },\n    // 获取商品详情\n    getStoreAllotOrderProductInfoList: function getStoreAllotOrderProductInfoList(orderSn, outStoreId) {\n      var _this2 = this;\n\n      this.request(this.api.order.storeAllotOrderProductInfo_list, {\n        orderSn: orderSn,\n        outStoreId: outStoreId\n      }).then(function (data) {\n        _this2.checkedSKUTableData = data.data;\n      });\n    },\n\n    /**\n     * 获取门店详情\n     * @param id {String} 门店id\n     * @param type {String} outStoreInfo: 发货门店 inStoreInfo: 收货门店\n     */\n    getStoreInfo: function getStoreInfo(id, type) {\n      var _this3 = this;\n\n      if (!this[type]) {\n        this.request(this.api.retailStore.storeBasic_get, {\n          id: id\n        }).then(function (data) {\n          _this3[type] = data;\n        });\n      }\n    },\n\n    /**\n     * 导入商品\n     * @param file 上传的文件\n     */\n    uploadGoodsChange: function uploadGoodsChange(file) {\n      var _this4 = this;\n\n      var str = file.name.split('.')[1].toLowerCase(); // 判断类型\n\n      if (!str.match(/xlsx|xls/)) {\n        this.$message.error('文件格式只能是 xlsx | xls格式!');\n        return false;\n      }\n\n      var formData = new FormData();\n      var token = getToken();\n      formData.set('file', file.raw);\n      formData.set('storeId', this.transferSlipAddInfo.outStoreId);\n      axios({\n        method: \"POST\",\n        url: this.api.FN_ALLPATH(this.api.retailStore.storeProduct_importOrderItem),\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n          accessToken: token\n        },\n        data: formData\n      }).then(function (res) {\n        var data = res.data; // 合并导入的数据和已选择的数据\n\n        if (data.code && data.code == 200) {\n          (function () {\n            var goodsData = data.data;\n\n            if (goodsData && goodsData.length > 0) {\n              var _loop = function _loop(n) {\n                var goodsIndex = _this4.checkedSKUTableData.findIndex(function (item) {\n                  return item.goodsCode === goodsData[n].goodsCode;\n                });\n\n                if (goodsIndex !== -1) {\n                  _this4.checkedSKUTableData[goodsIndex].quantity = goodsData[n].quantity + _this4.checkedSKUTableData[goodsIndex].quantity;\n                } else {\n                  goodsData[n].allotPrice = goodsData[n].retailPrice;\n\n                  _this4.checkedSKUTableData.push(goodsData[n]);\n                }\n              };\n\n              for (var n = 0; n < goodsData.length; n++) {\n                _loop(n);\n              }\n            }\n\n            _this4.checkedGoodsShow = true;\n\n            _this4.$nextTick(function () {\n              _this4.$refs.transferSlipGoodsTable.init();\n            });\n          })();\n        } else {\n          _this4.$notify.error({\n            title: '错误',\n            message: data.message\n          });\n        }\n      });\n    },\n\n    /**\n     * 左侧门店类型切换\n     * @param activeName {String} 选择的门店类型名称\n     */\n    handleBeforeClick: function handleBeforeClick(activeName) {\n      this.getStoreInfo(this.transferSlipAddInfo.inStoreId, activeName);\n    },\n    // 点击搜索\n    searchTableData: function searchTableData() {\n      this.formData.pageIndex = 1;\n      this.getTableData();\n    },\n\n    /**\n     * 重置查询条件\n     * @param formName {String} 表单的节点ref的值\n     */\n    initFormData: function initFormData(formName) {\n      this.$refs[formName].resetFields();\n      this.cateArr = [];\n      this.formData.cateIdentifier = '';\n      this.formData.retailPriceLowerLimit = '';\n      this.formData.retailPriceUpperLimit = '';\n      this.formData.quantityLowerLimit = '';\n      this.formData.quantityUpperLimit = '';\n    },\n    // 获取spu商品数据\n    getTableData: function getTableData() {\n      var _this5 = this;\n\n      this.$nextTick(function () {\n        setTimeout(function () {\n          _this5.$refs.searchForm.validate(function (valid) {\n            if (valid) {\n              var params = JSON.parse(JSON.stringify(_this5.formData));\n\n              if (params.collocationTagIdList.length === 0) {\n                params.collocationTagIdList = null;\n              }\n\n              _this5.request(_this5.api.retailStore.storeStock_selectProduct, params).then(function (data) {\n                if (data.data && data.data.length) {\n                  data.data.forEach(function (item) {\n                    item._skuList = [];\n                  });\n                  _this5.tableData = data;\n                } else {\n                  _this5.tableData = {};\n                }\n              });\n            } else {\n              return false;\n            }\n          });\n        }, 0);\n      });\n    },\n\n    /**\n     * 点击左侧三角 获取sku商品\n     * @param row {Object} 表格行数据\n     * @param expandedRows {Array} 表格行数据\n     */\n    tableDataExpandChange: function tableDataExpandChange(row, expandedRows) {\n      var _this6 = this;\n\n      if (row._skuList.length) return;\n      var params = {\n        productCode: row.code,\n        storeId: this.transferSlipAddInfo.outStoreId\n      };\n      this.request(this.api.retailStore.storeProduct_selectGoods, params).then(function (data) {\n        if (data && data.length) {\n          data.forEach(function (item) {\n            // 新增提交需要的字段\n            item.quantity = 0;\n            item.designCompanyCode = row.designCompanyCode;\n            item.designCompanyName = row.designCompanyName; // 由于导入商品字段和查询字段不同  重新赋值\n\n            item.allotPrice = item.retailPrice;\n            item.stockQty = item.stock;\n            item.productType = item.fullCateName;\n            item.goodsName = item.name;\n            item.brandName = item.productBrandName;\n            item.brandCode = item.productBrandCode;\n\n            if (_this6.checkedSKUTableData.length > 0) {\n              for (var i = 0; i < _this6.checkedSKUTableData.length; i++) {\n                if (_this6.checkedSKUTableData[i].goodsCode === item.goodsCode) {\n                  item.quantity = _this6.checkedSKUTableData[i].quantity;\n                }\n              }\n            }\n          });\n          row._skuList = data;\n        }\n      });\n    },\n\n    /**\n     * 输入修改商品数量\n     * @param $event {Object} event\n     * @param row {Object} 表格行数据\n     */\n    goodsQuantityInput: function goodsQuantityInput($event, row) {\n      var _this7 = this;\n\n      this.$nextTick(function () {\n        var val = $event.target.value;\n        row.planBackQuantity = $event.target.value = val.replace(/[^\\d.]/g, '');\n\n        _this7.goodsQuantityChange(row);\n      });\n    },\n\n    /**\n     * + -修改商品数量\n     * @param row {Object} 表格行数据\n     */\n    goodsQuantityChange: function goodsQuantityChange(row) {\n      var index = this.checkedSKUTableData.findIndex(function (item) {\n        return item.goodsCode === row.goodsCode;\n      });\n\n      if (index !== -1) {\n        if (row.quantity == 0) {\n          this.checkedSKUTableData.splice(index, 1);\n        } else {\n          this.checkedSKUTableData[index].quantity = row.quantity;\n        }\n      } else {\n        this.checkedSKUTableData.push(row);\n      }\n    },\n\n    /**\n     * 搜索商品参数下拉数据及验证\n     */\n    // 验证价格区间\n    moneyRule: function moneyRule(rule, value, callback) {\n      var reg = /^[0-9]*$/;\n\n      if (!reg.test(this.formData.retailPriceLowerLimit) || !reg.test(this.formData.retailPriceUpperLimit)) {\n        callback(new Error('价格区间必须是数字'));\n        return;\n      }\n\n      if (this.formData.retailPriceLowerLimit && this.formData.retailPriceUpperLimit && this.formData.retailPriceLowerLimit >= this.formData.retailPriceUpperLimit) {\n        callback(new Error('价格区间下限应小于上限'));\n      } else {\n        callback();\n      }\n    },\n    // 验证数量区间\n    countRule: function countRule(rule, value, callback) {\n      var reg = /^[0-9]*$/;\n\n      if (!reg.test(this.formData.quantityLowerLimit) || !reg.test(this.formData.quantityUpperLimit)) {\n        callback(new Error('库存量区间必须是数字'));\n        return;\n      }\n\n      if (this.formData.quantityLowerLimit && this.formData.quantityUpperLimit && this.formData.quantityLowerLimit >= this.formData.quantityUpperLimit) {\n        callback(new Error('库存量区间下限应小于上限'));\n      } else {\n        callback();\n      }\n    },\n    // 获取商品分类数据\n    getClassData: function getClassData() {\n      var _this8 = this;\n\n      //分类类型（1：标准分类，2：定制分类，3：原料分类或者称为属性分类）\n      this.$common.getClassSelect(this, 1).then(function (res) {\n        _this8.classData = res.ztree;\n        _this8.classList = res.list;\n      });\n    },\n    // 商品分类Change\n    classChange: function classChange(e) {\n      if (e.length === 0) {\n        this.formData.cateIdentifier = '';\n        return;\n      }\n\n      var cateId = JSON.parse(JSON.stringify(e)).pop();\n      var obj = this.classList.find(function (item) {\n        return item.id == cateId;\n      });\n      this.formData.cateIdentifier = obj.identifier;\n    },\n    // 获取设计商\n    getDesignCompanyOptions: function getDesignCompanyOptions() {\n      var _this9 = this;\n\n      this.request(this.api.product.designCompany_list, {}).then(function (data) {\n        _this9.designCompanyOptions = data.data;\n      });\n    },\n    // 获取品牌\n    getBrandOptions: function getBrandOptions() {\n      var _this10 = this;\n\n      this.request(this.api.product.productBrand_list, {}).then(function (data) {\n        _this10.brandOptions = data.data;\n      });\n    }\n    /**\n     * 搜索商品参数下拉数据--end\n     */\n\n  },\n  // 计算属性\n  computed: {},\n  // 监听数据变化\n  watch: {}\n};",{"version":3,"sources":["TransferSlipAddGoods.vue"],"names":[],"mappings":"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","sourcesContent":["<style lang=\"less\" scoped>\r\n  .transfer-slip-add-goods{display: flex;\r\n    .upload-goods-btn{display: inline-block;margin-left: 15px;}\r\n    .side{width: 320px;background: #fff;margin-left: 8px;line-height: 24px;\r\n      .tabs{margin-top: 10px;}\r\n\r\n    }\r\n    .table-list{flex: 1;background: #fff;margin-top: 0;\r\n      .goods-list{\r\n        .type-list{padding-top: 0;padding-bottom: 0;}\r\n      }\r\n      .check-goods-list{\r\n\r\n      }\r\n    }\r\n    .page-more{border-top: 1px solid #e6e8ed;margin-top: 10px;\r\n      div.btn{\r\n        width: 120px;border: 1px solid #e6e8ed;border-top: 1px solid #fff;margin: -1px auto 0;text-align: center;font-size: 12px;cursor: pointer;line-height: 30px;\r\n      }\r\n    }\r\n\r\n    .index-goods-table{padding-top: 0;}\r\n  }\r\n  .transfer-slip-add-goods /deep/ .el-table__expanded-cell[class*=cell]{padding: 0;}\r\n  .transfer-slip-add-goods .txt-red /deep/ .el-input__inner{color: red;}\r\n</style>\r\n<template>\r\n  <div class=\"transfer-slip-add-goods\">\r\n    <!--左侧-->\r\n    <div class=\"side\">\r\n      <div class=\"item-cont\">\r\n        <el-button size=\"small\" type=\"primary\" @click=\"checkedGoodsShow = true\">已选商品</el-button>\r\n        <el-upload class=\"upload-goods-btn\" :action=\"uploadGoodsUrl\" :show-file-list=\"false\" :auto-upload=\"false\" :on-change=\"uploadGoodsChange\">\r\n          <el-button size=\"small\" type=\"primary\" plain>导入商品</el-button>\r\n        </el-upload>\r\n        <el-tabs v-model=\"activeName\" class=\"tabs\" :before-leave=\"handleBeforeClick\" type=\"card\">\r\n          <el-tab-pane label=\"发货门店\" name=\"outStoreInfo\">\r\n            <store-info :store-info=\"outStoreInfo\"></store-info>\r\n          </el-tab-pane>\r\n          <el-tab-pane label=\"收货门店\" name=\"inStoreInfo\">\r\n            <store-info :store-info=\"inStoreInfo\"></store-info>\r\n          </el-tab-pane>\r\n        </el-tabs>\r\n      </div>\r\n    </div>\r\n    <!--右侧-->\r\n    <div class=\"table-list item-margin\">\r\n      <!--商品主列表-->\r\n      <div class=\"goods-list\" v-if=\"!checkedGoodsShow\">\r\n        <!--商品主列表查询条件-->\r\n        <div>\r\n          <el-form class=\"item-form\" :model=\"formData\" label-width=\"90px\" size=\"small\" ref=\"searchForm\" inline :rules=\"rules\">\r\n            <el-form-item label=\"商品分类：\">\r\n              <el-cascader class=\"input-w\" :options=\"classData\" v-model=\"cateArr\" @change=\"classChange\" :show-all-levels=\"false\" :props=\"props\" change-on-select clearable></el-cascader>\r\n            </el-form-item>\r\n            <el-form-item label=\"价格筛选：\" prop=\"money\">\r\n              <el-input class=\"input-w\" placeholder=\"请输入区间下限\" v-model.number=\"formData.retailPriceLowerLimit\"></el-input>\r\n              &nbsp;\r\n              <el-input class=\"input-w\" placeholder=\"请输入区间上限\" v-model.number=\"formData.retailPriceUpperLimit\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"库存量：\" prop=\"count\">\r\n              <el-input class=\"input-w\" placeholder=\"请输入区间下限\" v-model.number=\"formData.quantityLowerLimit\"></el-input>\r\n              &nbsp;\r\n              <el-input class=\"input-w\" placeholder=\"请输入区间上限\" v-model.number=\"formData.quantityUpperLimit\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"设计商：\" prop=\"designCompanyId\">\r\n              <el-select class=\"input-w\" placeholder=\"请选择\" v-model=\"formData.designCompanyId\" clearable filterable>\r\n                <el-option v-for=\"item in designCompanyOptions\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"品牌：\" prop=\"brandId\">\r\n              <el-select class=\"input-w\" placeholder=\"请选择\" v-model=\"formData.brandId\" clearable filterable>\r\n                <el-option v-for=\"item in brandOptions\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"综合搜索：\" prop=\"searchWords\">\r\n              <el-input class=\"input-w\" placeholder=\"款号、货号、名称\" v-model=\"formData.searchWords\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button @click=\"searchTableData\" type=\"primary\" plain>搜索</el-button>\r\n              <el-button @click=\"initFormData('searchForm')\" plain>重置</el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n          <div class=\"type-list item-cont\">\r\n            <check-tags :checked-data=\"formData.collocationTagIdList\"></check-tags>\r\n          </div>\r\n        </div>\r\n        <div class=\"item-cont index-goods-table\">\r\n          <page-table :form-data=\"formData\" :get-data=\"getTableData\" :table-data=\"tableData\">\r\n            <el-table :data=\"tableData.data\" style=\"width: 100%\" @expand-change=\"tableDataExpandChange\">\r\n              <el-table-column type=\"expand\" width=\"50\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-table :data=\"scope.row._skuList\" style=\"width: 100%\" :show-header=\"false\">\r\n                    <el-table-column label=\"占位\" width=\"50\"></el-table-column>\r\n                    <el-table-column prop=\"code\" label=\"商品款号\" width=\"200\"></el-table-column>\r\n                    <el-table-column prop=\"name\" label=\"名称\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n                    <el-table-column label=\"商品图片\">\r\n                      <template slot-scope=\"scope\">\r\n                        <image-popover :img-src=\"scope.row.image\"></image-popover>\r\n                      </template>\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"color\" label=\"颜色\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n                    <el-table-column prop=\"size\" label=\"规格\"></el-table-column>\r\n                    <el-table-column prop=\"productBrandName\" label=\"品牌\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n                    <el-table-column prop=\"fullCateName\" label=\"品类\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n                    <el-table-column prop=\"retailPrice\" label=\"吊牌价\"></el-table-column>\r\n                    <el-table-column prop=\"stock\" label=\"库存量\"></el-table-column>\r\n                    <el-table-column label=\"操作\" width=\"150\">\r\n                      <template slot-scope=\"scope\">\r\n                        <el-input-number v-model=\"scope.row.quantity\"  @input.native=\"goodsQuantityInput($event, scope.row)\" @change=\"goodsQuantityChange(scope.row)\" :min=\"0\" label=\"选择的数量\" size=\"mini\" :class=\"{'txt-red' : scope.row.stock < scope.row.quantity}\"></el-input-number>\r\n                      </template>\r\n                    </el-table-column>\r\n                  </el-table>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"code\" label=\"商品款号\"  width=\"200\"></el-table-column>\r\n              <el-table-column prop=\"name\" label=\"名称\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n              <el-table-column label=\"商品图片\">\r\n                <template slot-scope=\"scope\">\r\n                  <image-popover :img-src=\"scope.row.image\"></image-popover>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column label=\"颜色\"></el-table-column>\r\n              <el-table-column label=\"规格\"></el-table-column>\r\n              <el-table-column prop=\"brandName\" label=\"品牌\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n              <el-table-column prop=\"fullCateName\" label=\"品类\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n              <el-table-column prop=\"defaultPrice\" label=\"吊牌价\"></el-table-column>\r\n              <el-table-column prop=\"stock\" label=\"库存量\"></el-table-column>\r\n              <el-table-column label=\"操作\" width=\"150\">\r\n\r\n              </el-table-column>\r\n            </el-table>\r\n          </page-table>\r\n        </div>\r\n      </div>\r\n      <!--选中的商品-->\r\n      <div class=\"check-goods-list\" v-if=\"checkedGoodsShow\">\r\n        <transfer-slip-goods-table :checked-goods-show.sync=\"checkedGoodsShow\" :table-data=\"checkedSKUTableData\" :transfer-slip-add-info=\"transferSlipAddInfo\" ref=\"transferSlipGoodsTable\"></transfer-slip-goods-table>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n<script>\r\n  // TODO 临时解决上传文件\r\n  import axios from 'axios'\r\n  import { getToken } from \"@/utils/auth\";\r\n\r\n\r\n  import PageTable from \"@/views/collocation/components/PageTable\";\r\n  import CheckTags from \"@/views/collocation/components/CheckTags\";\r\n  import StoreInfo from \"@/views/collocation/components/StoreInfo\";\r\n  import TransferSlipGoodsTable from \"@/views/collocation/components/TransferSlipGoodsTable\";\r\n  import ImagePopover from \"@/views/collocation/components/ImagePopover\";\r\n  export default {\r\n    name: 'transfer_slip_add_goods',\r\n    // 组件\r\n    components: {\r\n      PageTable,\r\n      TransferSlipGoodsTable,\r\n      CheckTags,\r\n      StoreInfo,\r\n      ImagePopover\r\n    },\r\n    // 数据\r\n    data() {\r\n      return {\r\n        // 路由参数\r\n        _orderSn: null,\r\n        _outStoreId: null,\r\n\r\n        // 默认显示门店信息 outStoreInfo: 发货门店     inStoreInfo: 收货门店\r\n        activeName: 'outStoreInfo',\r\n        // 发货门店详情\r\n        outStoreInfo: null,\r\n        // 收货门店详情\r\n        inStoreInfo: null,\r\n        // 导入商品地址\r\n        uploadGoodsUrl: this.api.FN_ALLPATH(this.api.retailStore.storeProduct_importOrderItem),\r\n        // 导入是否可点\r\n        uploadGoodsDisabled: false,\r\n        // 导入附带参数\r\n        uploadGoodsParams: {\r\n          storeId: ''\r\n        },\r\n        // 最终保存提交信息\r\n        transferSlipAddInfo: {},\r\n        // 选择的商品列表\r\n        checkedSKUTableData: [],\r\n\r\n        // 是否显示选中的\r\n        checkedGoodsShow: false,\r\n        // 查询商品参数\r\n        formData: {\r\n          // 所属门店\r\n          storeId: '',\r\n          // 商品分类\r\n          cateIdentifier: '',\r\n          // 价格筛选\r\n          retailPriceLowerLimit: '',\r\n          retailPriceUpperLimit: '',\r\n          // 库存量\r\n          quantityLowerLimit: '',\r\n          quantityUpperLimit: '',\r\n          // 设计商\r\n          designCompanyId: '',\r\n          // 品牌\r\n          brandId: '',\r\n          // 综合搜索\r\n          searchWords: '',\r\n          // 标签\r\n          collocationTagIdList: [],\r\n          // 当前页码\r\n          pageIndex: 1,\r\n          // 每页数量\r\n          pageSize: 10\r\n        },\r\n        // 商品主表格数据\r\n        tableData: {},\r\n\r\n        /**\r\n         * 商品查询辅助数据\r\n         */\r\n        // 验证\r\n        rules: {\r\n          money: [\r\n            { required: false, validator: this.moneyRule, trigger: 'blur'}\r\n          ],\r\n          count: [\r\n            { required: false, validator: this.countRule, trigger: 'blur'}\r\n          ]\r\n        },\r\n        // 分类映射\r\n        props:{\r\n          value: 'id',\r\n          label: 'name',\r\n          children: 'children'\r\n        },\r\n        // 分类数据\r\n        classData:[],\r\n        classList:[],\r\n        // 选中的分类\r\n        cateArr:[],\r\n        // 品牌\r\n        brandOptions:[],\r\n        // 设计商\r\n        designCompanyOptions:[]\r\n        /**\r\n         * 商品查询辅助数据--end\r\n         */\r\n      }\r\n    },\r\n    created(){\r\n      // 获取上页面缓存的门店信息\r\n      let transferSlipAddInfo = sessionStorage.getItem('TRANSFER_SLIP_APP_INFO');\r\n      if(transferSlipAddInfo){\r\n        this.transferSlipAddInfo = JSON.parse(transferSlipAddInfo);\r\n        this.formData.storeId = this.transferSlipAddInfo.outStoreId;\r\n        this.uploadGoodsParams.storeId = this.transferSlipAddInfo.outStoreId;\r\n      }else {\r\n        this.$notify.error({ title: '错误',message: '信息缺失'});\r\n        // 回退到选择门店;\r\n        let module = '/' + this.$route.path.split('/')[1];\r\n        this.$router.push({\r\n          path: module + '/transfer_slip/transfer_slip_add'\r\n        });\r\n      }\r\n    },\r\n    // 初始化数据\r\n    mounted() {\r\n      this.$nextTick(()=> {\r\n        this.init();\r\n      })\r\n    },\r\n    // 方法\r\n    methods: {\r\n      // 初始化\r\n      init(){\r\n        // 获取上页面参数\r\n        this.getQueryParams();\r\n        // 获取发货门店详情\r\n        this.getStoreInfo(this.transferSlipAddInfo.outStoreId, 'outStoreInfo');\r\n        // 获取设计商列表\r\n        this.getDesignCompanyOptions();\r\n        // 获取品牌列表\r\n        this.getBrandOptions();\r\n        // 获取商品分类列表\r\n        this.getClassData();\r\n        // 获取表格数据\r\n        this.getTableData();\r\n      },\r\n      // 获取上页面参数\r\n      getQueryParams() {\r\n        this._orderSn = this.$route.query.orderSn;\r\n        this._outStoreId = this.$route.query.outStoreId;\r\n        if(this._orderSn && this._outStoreId){\r\n          this.getStoreAllotOrderProductInfoList(this._orderSn, this._outStoreId)\r\n        }\r\n      },\r\n      // 获取商品详情\r\n      getStoreAllotOrderProductInfoList(orderSn, outStoreId){\r\n        this.request(this.api.order.storeAllotOrderProductInfo_list, {orderSn ,outStoreId}).then(data => {\r\n          this.checkedSKUTableData = data.data;\r\n        });\r\n      },\r\n      /**\r\n       * 获取门店详情\r\n       * @param id {String} 门店id\r\n       * @param type {String} outStoreInfo: 发货门店 inStoreInfo: 收货门店\r\n       */\r\n      getStoreInfo(id, type){\r\n        if(!this[type]){\r\n          this.request(this.api.retailStore.storeBasic_get, {id: id}).then(data => {\r\n            this[type] = data;\r\n          });\r\n        }\r\n      },\r\n      /**\r\n       * 导入商品\r\n       * @param file 上传的文件\r\n       */\r\n      uploadGoodsChange(file){\r\n        const str = file.name.split('.')[1].toLowerCase();\r\n        // 判断类型\r\n        if (!str.match(/xlsx|xls/)) {\r\n          this.$message.error('文件格式只能是 xlsx | xls格式!');\r\n          return false\r\n        }\r\n        let formData = new FormData();\r\n        let token = getToken();\r\n        formData.set('file', file.raw );\r\n        formData.set('storeId', this.transferSlipAddInfo.outStoreId );\r\n        axios({\r\n          method: \"POST\",\r\n          url: this.api.FN_ALLPATH(this.api.retailStore.storeProduct_importOrderItem),\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n            accessToken: token\r\n          },\r\n          data: formData\r\n        }).then(res => {\r\n          let data = res.data;\r\n          // 合并导入的数据和已选择的数据\r\n          if(data.code && data.code == 200){\r\n            let goodsData = data.data;\r\n            if(goodsData && goodsData.length > 0){\r\n              for(let n = 0; n < goodsData.length; n++){\r\n                let goodsIndex = this.checkedSKUTableData.findIndex(item => {\r\n                  return item.goodsCode === goodsData[n].goodsCode\r\n                });\r\n                if(goodsIndex !== -1){\r\n                  this.checkedSKUTableData[goodsIndex].quantity = goodsData[n].quantity + this.checkedSKUTableData[goodsIndex].quantity;\r\n                }else {\r\n                  goodsData[n].allotPrice = goodsData[n].retailPrice;\r\n                  this.checkedSKUTableData.push(goodsData[n])\r\n                }\r\n              }\r\n            }\r\n            this.checkedGoodsShow = true;\r\n            this.$nextTick(() => {\r\n              this.$refs.transferSlipGoodsTable.init();\r\n            })\r\n          }else {\r\n            this.$notify.error({ title: '错误',message: data.message});\r\n          }\r\n        })\r\n\r\n      },\r\n      /**\r\n       * 左侧门店类型切换\r\n       * @param activeName {String} 选择的门店类型名称\r\n       */\r\n      handleBeforeClick(activeName) {\r\n        this.getStoreInfo(this.transferSlipAddInfo.inStoreId, activeName);\r\n      },\r\n      // 点击搜索\r\n      searchTableData(){\r\n        this.formData.pageIndex = 1;\r\n        this.getTableData();\r\n      },\r\n      /**\r\n       * 重置查询条件\r\n       * @param formName {String} 表单的节点ref的值\r\n       */\r\n      initFormData(formName){\r\n        this.$refs[formName].resetFields();\r\n        this.cateArr = [];\r\n        this.formData.cateIdentifier = '';\r\n        this.formData.retailPriceLowerLimit = '';\r\n        this.formData.retailPriceUpperLimit = '';\r\n        this.formData.quantityLowerLimit = '';\r\n        this.formData.quantityUpperLimit = '';\r\n      },\r\n      // 获取spu商品数据\r\n      getTableData() {\r\n        this.$nextTick(() => {\r\n          setTimeout(()=> {\r\n            this.$refs.searchForm.validate((valid) => {\r\n              if (valid) {\r\n                let params = JSON.parse(JSON.stringify(this.formData));\r\n                if(params.collocationTagIdList.length === 0){\r\n                  params.collocationTagIdList = null\r\n                }\r\n                this.request(this.api.retailStore.storeStock_selectProduct, params).then(data => {\r\n                  if(data.data && data.data.length){\r\n                    data.data.forEach(item => {\r\n                      item._skuList = [];\r\n                    });\r\n                    this.tableData = data;\r\n                  }else {\r\n                    this.tableData = {};\r\n                  }\r\n                });\r\n              } else {\r\n                return false;\r\n              }\r\n            });\r\n          },0)\r\n        })\r\n      },\r\n      /**\r\n       * 点击左侧三角 获取sku商品\r\n       * @param row {Object} 表格行数据\r\n       * @param expandedRows {Array} 表格行数据\r\n       */\r\n      tableDataExpandChange(row, expandedRows){\r\n        if(row._skuList.length) return;\r\n        let params = {\r\n          productCode: row.code,\r\n          storeId: this.transferSlipAddInfo.outStoreId\r\n        };\r\n        this.request(this.api.retailStore.storeProduct_selectGoods, params).then(data => {\r\n          if(data && data.length){\r\n            data.forEach(item => {\r\n              // 新增提交需要的字段\r\n              item.quantity = 0;\r\n              item.designCompanyCode = row.designCompanyCode;\r\n              item.designCompanyName = row.designCompanyName;\r\n              // 由于导入商品字段和查询字段不同  重新赋值\r\n              item.allotPrice = item.retailPrice;\r\n              item.stockQty = item.stock;\r\n              item.productType = item.fullCateName;\r\n              item.goodsName = item.name;\r\n              item.brandName = item.productBrandName;\r\n              item.brandCode = item.productBrandCode;\r\n              if(this.checkedSKUTableData.length > 0){\r\n                for(let i = 0; i < this.checkedSKUTableData.length; i++){\r\n                  if(this.checkedSKUTableData[i].goodsCode === item.goodsCode){\r\n                    item.quantity = this.checkedSKUTableData[i].quantity;\r\n                  }\r\n                }\r\n              }\r\n            });\r\n            row._skuList = data;\r\n          }\r\n        });\r\n      },\r\n      /**\r\n       * 输入修改商品数量\r\n       * @param $event {Object} event\r\n       * @param row {Object} 表格行数据\r\n       */\r\n      goodsQuantityInput($event, row){\r\n        this.$nextTick(()=>{\r\n          let val = $event.target.value;\r\n          row.planBackQuantity = $event.target.value = val.replace(/[^\\d.]/g,'');\r\n          this.goodsQuantityChange(row);\r\n        })\r\n      },\r\n      /**\r\n       * + -修改商品数量\r\n       * @param row {Object} 表格行数据\r\n       */\r\n      goodsQuantityChange(row){\r\n        let index = this.checkedSKUTableData.findIndex(item => {\r\n          return item.goodsCode === row.goodsCode;\r\n        });\r\n        if(index !== -1){\r\n          if(row.quantity == 0){\r\n            this.checkedSKUTableData.splice(index, 1);\r\n          }else{\r\n            this.checkedSKUTableData[index].quantity = row.quantity;\r\n          }\r\n        }else {\r\n          this.checkedSKUTableData.push(row);\r\n        }\r\n      },\r\n\r\n\r\n      /**\r\n       * 搜索商品参数下拉数据及验证\r\n       */\r\n      // 验证价格区间\r\n      moneyRule(rule, value,callback) {\r\n        const reg = /^[0-9]*$/;\r\n        if(!reg.test(this.formData.retailPriceLowerLimit) || !reg.test(this.formData.retailPriceUpperLimit)){\r\n          callback(new Error('价格区间必须是数字'));\r\n          return\r\n        }\r\n        if(this.formData.retailPriceLowerLimit && this.formData.retailPriceUpperLimit && this.formData.retailPriceLowerLimit >= this.formData.retailPriceUpperLimit){\r\n          callback(new Error('价格区间下限应小于上限'));\r\n        }else {\r\n          callback();\r\n        }\r\n      },\r\n      // 验证数量区间\r\n      countRule(rule, value,callback) {\r\n        const reg = /^[0-9]*$/;\r\n        if(!reg.test(this.formData.quantityLowerLimit) || !reg.test(this.formData.quantityUpperLimit)){\r\n          callback(new Error('库存量区间必须是数字'));\r\n          return\r\n        }\r\n        if(this.formData.quantityLowerLimit && this.formData.quantityUpperLimit && this.formData.quantityLowerLimit >= this.formData.quantityUpperLimit){\r\n          callback(new Error('库存量区间下限应小于上限'));\r\n        }else {\r\n          callback();\r\n        }\r\n      },\r\n      // 获取商品分类数据\r\n      getClassData(){\r\n        //分类类型（1：标准分类，2：定制分类，3：原料分类或者称为属性分类）\r\n        this.$common.getClassSelect(this,1).then(res =>{\r\n          this.classData=res.ztree;\r\n          this.classList=res.list;\r\n        })\r\n      },\r\n      // 商品分类Change\r\n      classChange(e){\r\n        if(e.length === 0){\r\n          this.formData.cateIdentifier = '';\r\n          return;\r\n        }\r\n        let cateId  = JSON.parse(JSON.stringify(e)).pop();\r\n        let obj = this.classList.find((item)=>(item.id == cateId));\r\n        this.formData.cateIdentifier = obj.identifier;\r\n      },\r\n      // 获取设计商\r\n      getDesignCompanyOptions(){\r\n        this.request(this.api.product.designCompany_list, {}).then(data => {\r\n          this.designCompanyOptions=data.data;\r\n        });\r\n      },\r\n      // 获取品牌\r\n      getBrandOptions(){\r\n        this.request(this.api.product.productBrand_list,{}).then(data => {\r\n          this.brandOptions= data.data;\r\n        });\r\n      }\r\n      /**\r\n       * 搜索商品参数下拉数据--end\r\n       */\r\n    },\r\n    // 计算属性\r\n    computed: {},\r\n    // 监听数据变化\r\n    watch: {}\r\n  }\r\n</script>\r\n"],"sourceRoot":"src/views/scb/order"}]}