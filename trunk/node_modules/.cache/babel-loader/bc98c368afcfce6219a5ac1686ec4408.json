{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\components\\customAttribute\\series_dialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\components\\customAttribute\\series_dialog.vue","mtime":1574160264350},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _toConsumableArray from \"C:\\\\Users\\\\EDZ\\\\Desktop\\\\\\u7814\\u53D1\\u9879\\u76EE\\\\vue-project\\\\trunk\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find-index\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/** 已选数据 */\nvar selectedSeriesList = [];\nexport default {\n  name: \"tp-series-dialog\",\n  data: function data() {\n    return {\n      filtersData: {\n        pageIndex: 1,\n        pageSize: 10,\n        cateIdentifier: \"\",\n        searchWords: \"\",\n        valid: true\n      },\n      seriesDialogVisible: false,\n      tableListData: [],\n      total: 0,\n      logType: \"\",\n      cateName: \"\",\n      parentDataIndex: 0\n    };\n  },\n  created: function created() {\n    this.init();\n  },\n  methods: {\n    init: function init() {\n      this.filtersData = {\n        pageIndex: 1,\n        pageSize: 10,\n        cateIdentifier: \"\",\n        searchWords: \"\",\n        valid: true\n      };\n      this.tableListData = [];\n      this.parentDataIndex = 0;\n      this.cateName = '';\n      this.logType = '';\n      selectedSeriesList = [];\n    },\n    popupInit: function popupInit(_item, _index, dialogType) {\n      this.parentDataIndex = _index;\n      this.logType = dialogType;\n      this.filtersData.cateIdentifier = _item.cateIdentifier;\n      this.cateName = _item.cateName;\n      selectedSeriesList = _item.customizedSetProductGoodses;\n      this.getTableList();\n      this.seriesDialogVisible = true;\n    },\n    getTableList: function getTableList() {\n      var _this = this;\n\n      this.request(this.api.product.customizedProduct_list, this.filtersData).then(function (data) {\n        var _data = data.data,\n            _dataLen = _data.length;\n\n        for (var i = 0; i < _dataLen; i++) {\n          _data[i].isShow = true;\n          _data[i].isType = 1;\n          _data[i]._cid = \"\";\n        }\n\n        _this.tableListData = _data;\n        _this.total = data.totalCount;\n      });\n    },\n    //改变状态  先弃用 父组件传入数据触发\n    selectedArr: function selectedArr() {\n      if (this.tableListData.length <= 0) {\n        return;\n      }\n\n      for (var i = 0; i < this.tableListData.length; i++) {\n        this.tableListData[i]._checkbox = false;\n      }\n\n      var listData = selectedSeriesList;\n\n      for (var k = 0; k < listData.length; k++) {\n        for (var j = 0; j < this.tableListData.length; j++) {\n          if (listData[k].materialId == this.tableListData[j].materialId) {\n            this.tableListData[j]._checkbox = true;\n          }\n        }\n      }\n    },\n\n    /**\r\n     * 单选发生改变\r\n     * 当单选发生改变时 把新增的勾选 放入数组中\r\n     *\r\n     */\n    tableChangeCheckbox: function tableChangeCheckbox(elem, row) {\n      var index = selectedSeriesList.findIndex(function (item) {\n        return item.customizedProductGoodsId == row.customizedProductGoodsId;\n      });\n\n      if (elem) {\n        if (selectedSeriesList.length >= 9) {\n          this.$message.error('已超过最大选择数量9');\n          row._checkbox = false;\n          return false;\n        } //新增\n\n\n        if (index == -1) {\n          selectedSeriesList.push(row);\n        }\n      } else {\n        //删除\n        this.removeList(index);\n      }\n    },\n    removeList: function removeList(_index) {\n      if (_index != -1) {\n        selectedSeriesList.splice(_index, 1);\n      }\n    },\n    //搜索\n    handleSearch: function handleSearch() {\n      this.filtersData.pageIndex = 1;\n      this.getTableList();\n    },\n    //清空重置\n    handleResetFilters: function handleResetFilters(formName) {\n      this.$refs[formName].resetFields();\n    },\n    //当前页数修改时发生改变\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.filtersData.pageIndex = val;\n      this.getTableList();\n    },\n    // 每页显示多少条时发生改变\n    handleSizeChange: function handleSizeChange(val) {\n      this.filtersData.pageSize = val;\n      this.getTableList();\n    },\n\n    /**\r\n     * 修改保存\r\n     * 数据新增 或者删除\r\n     * 向父组件传入数据\r\n     */\n    submitForm: function submitForm() {\n      var selectedSerie = this.$common.deepCopy(selectedSeriesList);\n      var setParaentData = [];\n\n      for (var i = 0; i < selectedSerie.length; i++) {\n        setParaentData.push({\n          customizedProductGoodsId: selectedSerie[i].customizedProductGoodsId,\n          customizedProductGoodsName: selectedSerie[i].customizedProductGoodsName,\n          customizedProductId: selectedSerie[i].productId,\n          customizedProductName: selectedSerie[i].productName,\n          cateId: selectedSerie[i].cateId,\n          defaultStatus: selectedSerie[i].defaultStatus == true ? selectedSerie[i].defaultStatus : false,\n          price: selectedSerie[i].price,\n          image: selectedSerie[i].image\n        });\n      }\n\n      this.$emit(\"setParentSeriesData\", this.$common.deepCopy(setParaentData), this.parentDataIndex);\n      this.closeDialog();\n    },\n    //点击获取子元素插入数组\n    childrenIsShow: function childrenIsShow(row) {\n      var _id = row.id; //当前数据ID\n\n      var _type = row.isType; //状态 1 关闭 0 打开\n\n      if (_type == \"1\") {\n        //当前为关闭状态 需请求接口获取子元素\n        row.isType = 0;\n        this.getChildData(row, _id);\n      } else {\n        //当前为打开状态 需删除子元素\n        row.isType = 1;\n        this.removeChildData(row);\n      }\n    },\n    //获取子集\n    getChildData: function getChildData(row, _id) {\n      var _this2 = this;\n\n      var _index = this.tableListData.findIndex(function (item) {\n        return item.id == _id;\n      });\n\n      if (!row._chilren) {\n        this.request(this.api.product.customizedSetProductGoods_list, {\n          productId: row.id,\n          valid: true\n        }).then(function (res) {\n          var _this2$tableListData;\n\n          console.log(res);\n          var _data = res.data;\n          var _dataLen = _data.length; //全部勾选false\n\n          for (var i = 0; i < _dataLen; i++) {\n            // _data[i]._subset = true;\n            _data[i]._checkbox = false;\n            _data[i].customizedProductGoodsId = _data[i].id;\n            _data[i].customizedProductGoodsName = _data[i].name;\n            _data[i].defaultStatus = false;\n            _data[i].id = null;\n          } //获取数据后 从已有列表中找出已勾选分类\n          //循环 改变勾选状态\n\n\n          var listData = selectedSeriesList; //找到已有的 改成true\n\n          if (listData.length >= 0) {\n            for (var k = 0; k < listData.length; k++) {\n              for (var j = 0; j < _dataLen; j++) {\n                if (listData[k].customizedProductGoodsId == _data[j].customizedProductGoodsId) {\n                  _data[j]._checkbox = true;\n                }\n              }\n            }\n          }\n\n          row._chilren = _data; //根据下标插入进去 获取ID 在数组中的下标\n\n          (_this2$tableListData = _this2.tableListData).splice.apply(_this2$tableListData, [_index + 1, 0].concat(_toConsumableArray(_data))); //获取子集id存入 元素属性\n\n\n          var arr = [];\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = _data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var customizedProductGoodsId = _step.value.customizedProductGoodsId;\n              arr.push(customizedProductGoodsId);\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          row._cid = arr.join();\n        });\n      } else {\n        var _this$tableListData;\n\n        (_this$tableListData = this.tableListData).splice.apply(_this$tableListData, [_index + 1, 0].concat(_toConsumableArray(row._chilren)));\n      }\n    },\n    //删除子集\n    removeChildData: function removeChildData(row) {\n      var cid = row._cid;\n      var cidArr = cid.split(\",\");\n      var _table = this.tableListData,\n          tableLen = _table.length;\n\n      for (var i = 0; i < cidArr.length; i++) {\n        for (var j = 0; j < this.tableListData.length; j++) {\n          if (cidArr[i] == this.tableListData[j].customizedProductGoodsId) {\n            this.tableListData.splice(j, 1);\n          }\n        }\n      }\n    },\n    //关闭\n    closeDialog: function closeDialog() {\n      this.seriesDialogVisible = false;\n    }\n  }\n};",{"version":3,"sources":["series_dialog.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <el-dialog\r\n    v-if=\"seriesDialogVisible\"\r\n    title=\"选择SKU\"\r\n    :visible.sync=\"seriesDialogVisible\"\r\n    class=\"alarmPopup\"\r\n    width=\"1000px\"\r\n    append-to-body\r\n  >\r\n    <div class=\"dialog-search\">\r\n      <el-form\r\n        class=\"item-form\"\r\n        :model=\"filtersData\"\r\n        label-width=\"90px\"\r\n        size=\"small\"\r\n        ref=\"filtersForm\"\r\n        inline\r\n      >\r\n        <el-form-item prop=\"materialCateIdentifier\" label=\"分类：\">\r\n          <el-input class=\"input-w\" disabled  v-model=\"cateName\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"searchWords\" label=\"综合搜索：\">\r\n          <el-input class=\"input-w\" placeholder=\"请输入内容\" v-model=\"filtersData.searchWords\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button @click=\"handleSearch\" type=\"primary\" plain>搜索</el-button>\r\n          <el-button @click=\"handleResetFilters('filtersForm')\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n    <div>\r\n      <el-table\r\n        :data=\"tableListData\"\r\n        stripe\r\n        empty-text=\"暂无数据\"\r\n        header-align=\"center\"\r\n        header-row-class-name=\"item-table-header\"\r\n        :highlight-current-row=\"true\"\r\n        height=\"400\"\r\n      >\r\n        <el-table-column align=\"center\" width=\"50\">\r\n          <template slot-scope=\"scope\">\r\n            <i\r\n              @click=\"childrenIsShow(scope.row)\"\r\n              v-if=\"scope.row.isShow\"\r\n              :class=\"scope.row.isType == 1 ?'el-icon-circle-plus-outline i-cursor' : 'el-icon-remove-outline i-cursor'\"\r\n            ></i>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"cateName\" align=\"center\" label=\"商品分类\" min-width=\"100\"></el-table-column>\r\n        <el-table-column prop=\"name\" align=\"center\" label=\"名称\" min-width=\"100\"></el-table-column>\r\n        <el-table-column prop=\"image\" align=\"center\" label=\"图片\" min-width=\"100\">\r\n            <template slot-scope=\"scope\">\r\n                  <img class=\"table-img-wh\" :src=\"scope.row.image\" alt>\r\n                </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"price\" align=\"center\" label=\"价格\" min-width=\"100\"></el-table-column>\r\n        <el-table-column\r\n          fixed=\"right\"\r\n          label-class-name=\"text-center\"\r\n          class-name=\"text-center\"\r\n          align=\"center\"\r\n          label=\"操作\"\r\n          width=\"100\"\r\n        >\r\n          <template slot-scope=\"scope\">\r\n            <el-checkbox\r\n              v-if=\"!scope.row.isShow\"\r\n              @change=\"tableChangeCheckbox($event,scope.row)\"\r\n              v-model=\"scope.row._checkbox\"\r\n            ></el-checkbox>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <div class=\"pagination mt-10 mb-20\">\r\n        <el-pagination\r\n          class=\"mr-20\"\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page=\"filtersData.pageIndex\"\r\n          :page-sizes=\"[10,20,30,40,50]\"\r\n          :page-size=\"filtersData.pageSize\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"total\"\r\n        ></el-pagination>\r\n      </div>\r\n    </div>\r\n    <div class=\"item-right\">\r\n      <el-button size=\"small\" @click=\"closeDialog\">取消</el-button>\r\n      <el-button size=\"small\" @click=\"submitForm()\" type=\"primary\">确定</el-button>\r\n    </div>\r\n  </el-dialog>\r\n</template>\r\n<script>\r\n/** 已选数据 */\r\nlet selectedSeriesList=[];\r\nexport default {\r\n  name: \"tp-series-dialog\",\r\n  data() {\r\n    return {\r\n      filtersData: {\r\n        pageIndex: 1,\r\n        pageSize: 10,\r\n        cateIdentifier:\"\",\r\n        searchWords: \"\",\r\n        valid: true\r\n      },\r\n      seriesDialogVisible: false,\r\n      tableListData: [],\r\n      total: 0,\r\n      logType: \"\",\r\n      cateName:\"\",\r\n      parentDataIndex:0,\r\n    };\r\n  },\r\n  created() {\r\n    this.init();\r\n\r\n  },\r\n  methods: {\r\n    init(){\r\n      this.filtersData= {\r\n        pageIndex: 1,\r\n        pageSize: 10,\r\n        cateIdentifier:\"\",\r\n        searchWords: \"\",\r\n        valid: true\r\n      }\r\n      this.tableListData=[];\r\n      this.parentDataIndex=0;\r\n      this.cateName='';\r\n      this.logType='';\r\n      selectedSeriesList=[];\r\n    },\r\n    popupInit(_item, _index,dialogType) {\r\n      this.parentDataIndex=_index;\r\n      this.logType = dialogType;\r\n      this.filtersData.cateIdentifier =_item.cateIdentifier;\r\n      this.cateName=_item.cateName;\r\n      selectedSeriesList=_item.customizedSetProductGoodses;\r\n      this.getTableList();\r\n      this.seriesDialogVisible = true;\r\n    },\r\n    getTableList() {\r\n      this.request(\r\n        this.api.product.customizedProduct_list,\r\n        this.filtersData\r\n      ).then(data => {\r\n        let _data = data.data,\r\n          _dataLen = _data.length;\r\n        for (let i = 0; i < _dataLen; i++) {\r\n          _data[i].isShow = true;\r\n          _data[i].isType = 1;\r\n          _data[i]._cid = \"\";\r\n        }\r\n        this.tableListData = _data;\r\n        this.total = data.totalCount;\r\n      });\r\n    },\r\n    //改变状态  先弃用 父组件传入数据触发\r\n    selectedArr() {\r\n      if (this.tableListData.length <= 0) {\r\n        return;\r\n      }\r\n      for (let i = 0; i < this.tableListData.length; i++) {\r\n        this.tableListData[i]._checkbox = false;\r\n      }\r\n      let listData = selectedSeriesList;\r\n      for (let k = 0; k < listData.length; k++) {\r\n        for (let j = 0; j < this.tableListData.length; j++) {\r\n          if (listData[k].materialId == this.tableListData[j].materialId) {\r\n            this.tableListData[j]._checkbox = true;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    /**\r\n     * 单选发生改变\r\n     * 当单选发生改变时 把新增的勾选 放入数组中\r\n     *\r\n     */\r\n    tableChangeCheckbox(elem, row) {\r\n      let index = selectedSeriesList.findIndex(\r\n        item => item.customizedProductGoodsId  == row.customizedProductGoodsId\r\n      );\r\n      if (elem) {\r\n        if(selectedSeriesList.length >= 9){\r\n          this.$message.error('已超过最大选择数量9')\r\n          row._checkbox = false;\r\n          return false\r\n        }\r\n        //新增\r\n        if (index == -1) {\r\n          selectedSeriesList.push(row);\r\n        }\r\n      } else {\r\n        //删除\r\n        this.removeList(index);\r\n      }\r\n    },\r\n    removeList(_index) {\r\n      if (_index != -1) {\r\n        selectedSeriesList.splice(_index, 1);\r\n      }\r\n    },\r\n    //搜索\r\n    handleSearch() {\r\n      this.filtersData.pageIndex = 1;\r\n      this.getTableList();\r\n    },\r\n    //清空重置\r\n    handleResetFilters(formName) {\r\n      this.$refs[formName].resetFields();\r\n    },\r\n    //当前页数修改时发生改变\r\n    handleCurrentChange(val) {\r\n      this.filtersData.pageIndex = val;\r\n      this.getTableList();\r\n    },\r\n    // 每页显示多少条时发生改变\r\n    handleSizeChange(val) {\r\n      this.filtersData.pageSize = val;\r\n      this.getTableList();\r\n    },\r\n    /**\r\n     * 修改保存\r\n     * 数据新增 或者删除\r\n     * 向父组件传入数据\r\n     */\r\n    submitForm() {\r\n      let selectedSerie= this.$common.deepCopy(selectedSeriesList);\r\n      let setParaentData=[];\r\n      for (let i = 0; i < selectedSerie.length; i++) {\r\n        setParaentData.push({\r\n          customizedProductGoodsId:selectedSerie[i].customizedProductGoodsId,\r\n          customizedProductGoodsName:selectedSerie[i].customizedProductGoodsName,\r\n          customizedProductId:selectedSerie[i].productId,\r\n          customizedProductName:selectedSerie[i].productName,\r\n          cateId:selectedSerie[i].cateId,\r\n          defaultStatus:selectedSerie[i].defaultStatus == true?selectedSerie[i].defaultStatus:false,\r\n          price:selectedSerie[i].price,\r\n          image:selectedSerie[i].image\r\n        })\r\n      }\r\n      this.$emit(\r\n        \"setParentSeriesData\",\r\n        this.$common.deepCopy(setParaentData),\r\n         this.parentDataIndex\r\n      );\r\n     this.closeDialog();\r\n    },\r\n    //点击获取子元素插入数组\r\n    childrenIsShow(row) {\r\n      let _id = row.id; //当前数据ID\r\n      let _type = row.isType; //状态 1 关闭 0 打开\r\n      if (_type == \"1\") {\r\n        //当前为关闭状态 需请求接口获取子元素\r\n        row.isType = 0;\r\n        this.getChildData(row, _id);\r\n      } else {\r\n        //当前为打开状态 需删除子元素\r\n        row.isType = 1;\r\n        this.removeChildData(row);\r\n      }\r\n    },\r\n    //获取子集\r\n    getChildData(row, _id) {\r\n      let _index = this.tableListData.findIndex(\r\n        item => item.id == _id\r\n      );\r\n      if (!row._chilren) {\r\n        this.request(\r\n          this.api.product.customizedSetProductGoods_list,\r\n          {productId:row.id,valid: true}\r\n        ).then(res => {\r\n            console.log(res);\r\n          let _data = res.data;\r\n          let _dataLen =_data.length;\r\n                //全部勾选false\r\n          for (let i = 0; i < _dataLen; i++) {\r\n            // _data[i]._subset = true;\r\n            _data[i]._checkbox = false;\r\n            _data[i].customizedProductGoodsId= _data[i].id;\r\n            _data[i].customizedProductGoodsName= _data[i].name;\r\n            _data[i].defaultStatus=false;\r\n            _data[i].id=null;\r\n          }\r\n            //获取数据后 从已有列表中找出已勾选分类\r\n            //循环 改变勾选状态\r\n            let listData = selectedSeriesList;\r\n            //找到已有的 改成true\r\n            if (listData.length >= 0) {\r\n              for (let k = 0; k < listData.length; k++) {\r\n                for (let j = 0; j < _dataLen; j++) {\r\n                  if (listData[k].customizedProductGoodsId == _data[j].customizedProductGoodsId) {\r\n                    _data[j]._checkbox = true;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          row._chilren = _data;\r\n          //根据下标插入进去 获取ID 在数组中的下标\r\n          this.tableListData.splice(_index + 1, 0, ..._data);\r\n          //获取子集id存入 元素属性\r\n          let arr = [];\r\n          for (let { customizedProductGoodsId } of _data) {\r\n            arr.push(customizedProductGoodsId);\r\n          }\r\n          row._cid = arr.join();\r\n        });\r\n      } else {\r\n        this.tableListData.splice(_index + 1, 0, ...row._chilren);\r\n      }\r\n    },\r\n    //删除子集\r\n    removeChildData(row) {\r\n      let cid = row._cid;\r\n      let cidArr = cid.split(\",\");\r\n      let _table = this.tableListData,\r\n        tableLen = _table.length;\r\n      for (let i = 0; i < cidArr.length; i++) {\r\n        for (let j = 0; j < this.tableListData.length; j++) {\r\n          if (cidArr[i] == this.tableListData[j].customizedProductGoodsId) {\r\n            this.tableListData.splice(j, 1);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    //关闭\r\n    closeDialog() {\r\n      this.seriesDialogVisible = false;\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.dialog-search {\r\n  border-bottom: 1px solid #eeeeee;\r\n  .item-form {\r\n    padding: 0;\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/customAttribute"}]}