{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\product\\components\\videoPlay.vue?vue&type=style&index=0&id=58e63c60&lang=less&scoped=true&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\product\\components\\videoPlay.vue","mtime":1572415123937},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\css-loader\\index.js","mtime":1558492728478},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1558492728890},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\postcss-loader\\src\\index.js","mtime":1558492728823},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\less-loader\\dist\\cjs.js","mtime":1566193719488},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.video {\r\n  position: relative;\r\n}\r\n.video__player {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n}\r\n.controller {\r\n  flex-direction: column;\r\n  height: 50px;\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n}\r\n.controller__btn-wrapper {\r\n  position: relative;\r\n  height: calc(100% - 5px);\r\n  display: flex;\r\n  align-items: center;\r\n  color: #fff;\r\n  padding: 0 18px;\r\n}\r\n.controller__btn {\r\n  cursor: pointer;\r\n  transition: 0.5s;\r\n  margin: 0 20px;\r\n}\r\n.controller__btn:hover {\r\n  color: #409eff;\r\n}\r\n.controller__timer {\r\n  margin-left: 15px;\r\n}\r\n.controller__btn--fullscreen {\r\n  position: absolute;\r\n  right: 15px;\r\n}\r\n.controller__progress-wrapper {\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.controller__progress {\r\n  height: 5px;\r\n  position: relative;\r\n  width: calc(100% - 30px);\r\n  border-radius: 100px;\r\n  background: #dcdcdc;\r\n  cursor: pointer;\r\n}\r\n.controller__progress--passed {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  background: #409eff;\r\n}\r\n.controller__dot {\r\n  position: absolute;\r\n  z-index: 50;\r\n  left: 0;\r\n  top: -5px;\r\n  width: 15px;\r\n  height: 15px;\r\n  border-radius: 50%;\r\n  background-color: #fff;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.controller__inner-dot {\r\n  width: 5px;\r\n  height: 5px;\r\n  border-radius: 50%;\r\n  background-color: #409eff;\r\n}\r\n.video-wrap /deep/ .el-dialog__body{\r\n    padding: 0;\r\n}\r\n.video-wrap /deep/ .el-dialog__header{\r\n    display: none;\r\n}\r\n",{"version":3,"sources":["videoPlay.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"videoPlay.vue","sourceRoot":"src/views/product/components","sourcesContent":["<!--\r\n * @Description: 视频组件\r\n * @Author: elephant\r\n * @Date: 2019-08-15 16:09:15\r\n * @LastEditTime: 2019-08-22 19:00:48\r\n * @LastEditors: Please set LastEditors\r\n -->\r\n<template>\r\n  <el-dialog title=\"视频播放\" width=\"400px\" :before-close=\"closeDialog\" v-if=\"videoVisible\" :visible.sync=\"videoVisible\" class=\"video-wrap\" append-to-body>\r\n    <div\r\n      class=\"video\"\r\n      @pointermove.prevent=\"handleMouseMove($event)\"\r\n      @pointerup.prevent=\"stopDragging\"\r\n      @pointerleave=\"handleMouseLeave\"\r\n      @pointerenter=\"handleMouseEnter\"\r\n      ref=\"vcontainer\"\r\n    >\r\n      <video class=\"video__player\" ref=\"v\" @timeupdate=\"handleTimeUpdate\" @ended=\"handleEnd\">\r\n        <source :src=\"videoUrl\" />\r\n      </video>\r\n      <div class=\"controller\" v-show=\"isControlVisible\">\r\n        <div class=\"controller__progress-wrapper\">\r\n          <div class=\"controller__progress\" ref=\"p\" @click=\"handleProgressClick($event)\">\r\n            <div\r\n              class=\"controller__progress controller__progress--passed\"\r\n              :style=\"{width: videoProgressPercent}\"\r\n            ></div>\r\n            <div\r\n              class=\"controller__dot\"\r\n              :style=\"{left: videoProgressPercent}\"\r\n              @pointerdown=\"startDragging($event)\"\r\n            >\r\n              <div class=\"controller__inner-dot\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"controller__btn-wrapper\">\r\n          <div class=\"controller__btn\" @click=\"togglePlaying\">\r\n            <font-awesome-icon :icon=\"['fas', 'play']\" v-if=\"isPaused\"></font-awesome-icon>\r\n            <font-awesome-icon :icon=\"['fas', 'pause']\" v-else></font-awesome-icon>\r\n          </div>\r\n          <div class=\"controller__btn\" @click=\"stopPlaying\">\r\n            <font-awesome-icon :icon=\"['fas', 'stop']\"></font-awesome-icon>\r\n          </div>\r\n          <div class=\"controller__btn\" @click=\"toggleMute\">\r\n            <font-awesome-icon :icon=\"['fas', 'volume-up']\" v-if=\"isMuted\"></font-awesome-icon>\r\n            <font-awesome-icon :icon=\"['fas', 'volume-mute']\" v-else></font-awesome-icon>\r\n          </div>\r\n          <div class=\"controller__timer\">{{videoTime}}</div>\r\n          <div class=\"controller__btn controller__btn--fullscreen\" @click=\"toggleFullscreen\">\r\n            <font-awesome-icon :icon=\"['fas', 'expand']\"></font-awesome-icon>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script>\r\nfunction secToTimer(originalSec) {\r\n  const min = Math.floor(originalSec / 60);\r\n  const sec = Math.floor(originalSec % 60);\r\n  const minStr = min < 10 ? `0${min}` : String(min);\r\n  const secStr = sec < 10 ? `0${sec}` : String(sec);\r\n  return `${minStr}:${secStr}`;\r\n}\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faPause,\r\n  faStop,\r\n  faVolumeUp,\r\n  faVolumeMute,\r\n  faExpand\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlibrary.add(faPlay, faPause, faStop, faVolumeUp, faVolumeMute, faExpand);\r\n\r\nexport default {\r\n  name: \"video-view\",\r\n  data() {\r\n    return {\r\n      video: null,\r\n      isPaused: true,\r\n      isMuted: false,\r\n      videoTime: \"00:00 / 00:00\",\r\n      isDragging: false,\r\n      isControlVisible: false,\r\n      hidingEvent: null,\r\n      videoProgress: 0,\r\n      draggingStartX: 0,\r\n      dotOffsetX: 0,\r\n      progress: null,\r\n      videoVisible: false,\r\n      videoUrl: null\r\n    };\r\n  },\r\n  computed: {\r\n    videoProgressPercent() {\r\n      return `${this.videoProgress * 100}%`;\r\n    }\r\n  },\r\n  methods: {\r\n    init(){\r\n      this.isPaused= true;\r\n      this.isMuted=false;\r\n      this.videoTime= \"00:00 / 00:00\";\r\n      this.isDragging= false;\r\n      this.isControlVisible=false;\r\n      this.hidingEvent= null;\r\n      this.videoProgress= 0;\r\n      this.draggingStartX= 0;\r\n      this.dotOffsetX=0;\r\n      this.progress= null;\r\n      this.videoVisible=false;\r\n      this.videoUrl= null\r\n    },\r\n    videoInit(_url) {\r\n      this.videoUrl = _url;\r\n      this.videoVisible = true;\r\n      this.$nextTick(() => {\r\n        this.video = this.$refs.v;\r\n        this.progress = this.$refs.p;\r\n      });\r\n    },\r\n    toggleFullscreen() {\r\n      const isFullscreen = document.webkitIsFullScreen || document.fullscreen;\r\n      if (isFullscreen) {\r\n        const exitFunc =\r\n          document.exitFullscreen || document.webkitExitFullscreen;\r\n        exitFunc.call(document);\r\n      } else {\r\n        const element = this.$refs.vcontainer;\r\n        const fullscreenFunc =\r\n          element.requestFullscreen || element.webkitRequestFullScreen;\r\n        fullscreenFunc.call(element);\r\n      }\r\n    },\r\n    handleTimeUpdate() {\r\n      this.videoTime = this.refreshTime();\r\n      this.videoProgress = this.video.currentTime / this.video.duration;\r\n    },\r\n    refreshTime() {\r\n      if (!this.video) {\r\n        return `${secToTimer(0)} / ${secToTimer(0)}`;\r\n      }\r\n      const currTime = this.video.currentTime || 0;\r\n      const duration = this.video.duration || 0;\r\n      return `${secToTimer(currTime)} / ${secToTimer(duration)}`;\r\n    },\r\n    togglePlaying() {\r\n      if (this.video.paused) {\r\n        this.playVideo();\r\n      } else {\r\n        this.pauseVideo();\r\n      }\r\n    },\r\n    stopPlaying() {\r\n      this.video.currentTime = 0;\r\n      this.pauseVideo();\r\n    },\r\n    toggleMute() {\r\n      this.video.muted = !this.video.muted;\r\n      this.isMuted = this.video.muted;\r\n    },\r\n    handleEnd() {\r\n      this.pauseVideo();\r\n    },\r\n    playVideo() {\r\n      this.isPaused = false;\r\n      this.video.play();\r\n    },\r\n    pauseVideo() {\r\n      this.isPaused = true;\r\n      this.video.pause();\r\n    },\r\n    setProgress(x) {\r\n      const progressRect = this.progress.getBoundingClientRect();\r\n      let progressPercent = (x - progressRect.left) / progressRect.width;\r\n      if (progressPercent < 0) {\r\n        progressPercent = 0;\r\n      } else if (progressPercent > 1) {\r\n        progressPercent = 1;\r\n      }\r\n      this.video.currentTime = this.video.duration * progressPercent;\r\n    },\r\n    hideControlBar() {\r\n      const isFullscreen = document.webkitIsFullScreen || document.fullscreen;\r\n      if (isFullscreen) {\r\n        this.hideCursor();\r\n      }\r\n      this.isControlVisible = false;\r\n    },\r\n    showControlBar() {\r\n      this.isControlVisible = true;\r\n    },\r\n    hideCursor() {\r\n      document.body.style.cursor = \"none\";\r\n    },\r\n    showCursor() {\r\n      document.body.style.cursor = \"default\";\r\n    },\r\n    handleProgressClick(event) {\r\n      const clickX = event.clientX;\r\n      this.setProgress(clickX);\r\n    },\r\n    startDragging(event) {\r\n      this.pauseVideo();\r\n      this.isDragging = true;\r\n      this.draggingStartX = event.clientX;\r\n    },\r\n    moveDragging(event) {\r\n      if (this.isDragging) {\r\n        const offsetX = event.clientX - this.draggingStartX;\r\n        this.dotOffsetX = offsetX < 0 ? 0 : offsetX;\r\n        this.setProgress(event.clientX);\r\n      }\r\n    },\r\n    stopDragging() {\r\n      this.isDragging = false;\r\n      this.dotOffsetX = 0;\r\n    },\r\n    handleMouseMove(event) {\r\n      this.showControlBar();\r\n      this.showCursor();\r\n      if (this.hidingEvent !== null) {\r\n        clearInterval(this.hidingEvent);\r\n      }\r\n      this.hidingEvent = setInterval(this.hideControlBar, 3000);\r\n      this.moveDragging(event);\r\n    },\r\n    handleMouseLeave() {\r\n      this.hideControlBar();\r\n      this.stopDragging();\r\n    },\r\n    handleMouseEnter() {\r\n      this.showControlBar();\r\n    },\r\n    //关闭模态\r\n    closeDialog(){\r\n      this.stopPlaying();\r\n      this.init();\r\n      this.videoVisible=false;\r\n    },\r\n\r\n  },\r\n  components: {\r\n    FontAwesomeIcon\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.video {\r\n  position: relative;\r\n}\r\n.video__player {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n}\r\n.controller {\r\n  flex-direction: column;\r\n  height: 50px;\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n}\r\n.controller__btn-wrapper {\r\n  position: relative;\r\n  height: calc(100% - 5px);\r\n  display: flex;\r\n  align-items: center;\r\n  color: #fff;\r\n  padding: 0 18px;\r\n}\r\n.controller__btn {\r\n  cursor: pointer;\r\n  transition: 0.5s;\r\n  margin: 0 20px;\r\n}\r\n.controller__btn:hover {\r\n  color: #409eff;\r\n}\r\n.controller__timer {\r\n  margin-left: 15px;\r\n}\r\n.controller__btn--fullscreen {\r\n  position: absolute;\r\n  right: 15px;\r\n}\r\n.controller__progress-wrapper {\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.controller__progress {\r\n  height: 5px;\r\n  position: relative;\r\n  width: calc(100% - 30px);\r\n  border-radius: 100px;\r\n  background: #dcdcdc;\r\n  cursor: pointer;\r\n}\r\n.controller__progress--passed {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  background: #409eff;\r\n}\r\n.controller__dot {\r\n  position: absolute;\r\n  z-index: 50;\r\n  left: 0;\r\n  top: -5px;\r\n  width: 15px;\r\n  height: 15px;\r\n  border-radius: 50%;\r\n  background-color: #fff;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.controller__inner-dot {\r\n  width: 5px;\r\n  height: 5px;\r\n  border-radius: 50%;\r\n  background-color: #409eff;\r\n}\r\n.video-wrap /deep/ .el-dialog__body{\r\n    padding: 0;\r\n}\r\n.video-wrap /deep/ .el-dialog__header{\r\n    display: none;\r\n}\r\n</style>"]}]}