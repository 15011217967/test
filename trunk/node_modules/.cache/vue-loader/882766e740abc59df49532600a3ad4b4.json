{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\scb\\order\\receiveGoods_order.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\scb\\order\\receiveGoods_order.vue","mtime":1576682604238},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport PageTable from \"@/views/collocation/components/PageTable\";\r\nimport TimeIntervalCheck from \"@/components/TimeIntervalCheck\";\r\nimport keepAliveMixin from \"@/mixins/keepAliveMixin\";\r\nexport default {\r\n  name: \"transfer_slip_list\",\r\n  mixins: [keepAliveMixin],\r\n  // 数据\r\n  data() {\r\n    return {\r\n      // 调出方列表\r\n      tuneOut_data: [],\r\n      // 调入方列表\r\n      tuneIn_data: [],\r\n      // 选中调出方信息\r\n      checkTuneOutUser: {},\r\n      // 选中调入方信息\r\n      checkTuneInUser: {},\r\n      orderStarusType: {\r\n        2: \"待收货\",\r\n        3: \"已完成\"\r\n      },\r\n      tradeWayCodeType: {\r\n        0: \"采购收货\",\r\n        1: \"调入收货\"\r\n      },\r\n      // 参数\r\n      addFormData: {\r\n        // 发货人\r\n        allotMan: \"\",\r\n        // 发货人直属机构\r\n        organizationId: \"\",\r\n        organizationName: \"\",\r\n        // 订单类型\r\n        // orderType: '0203',\r\n        // 发货门店\r\n        outStoreId: \"\",\r\n        outStoreName: \"\",\r\n        // 收货门店\r\n        inStoreId: \"\",\r\n        inStoreName: \"\",\r\n        // 收货人\r\n        receiveMan: \"\",\r\n        // 电话\r\n        phone: \"\",\r\n        // 省市区信息\r\n        provinceName: \"\",\r\n        provinceCode: \"\",\r\n        cityName: \"\",\r\n        cityCode: \"\",\r\n        areaName: \"\",\r\n        areaCode: \"\",\r\n        divisionId: \"\",\r\n        // 地址\r\n        addressInfo: \"\"\r\n      },\r\n      // 选择调出弹框\r\n      dialogTableVisible: false,\r\n      // 选择调出类型\r\n      allocatingType: true,\r\n      // 标识是否是零售门店进入\r\n      enterTypeFlag: false,\r\n      // 查询参数\r\n      formData: {\r\n        // 模糊搜索\r\n        searchWords: null,\r\n        // 订单状态\r\n        purchaseOrderStatus: null,\r\n        // 结算类型\r\n        tradeWayCode: null,\r\n        // 门店名称（采购商名称）\r\n        purchaseAgentId: null,\r\n        // 开始时间\r\n        startDate: null,\r\n        // 结束时间\r\n        endDate: null,\r\n        pageIndex: 1,\r\n        pageSize: 10\r\n      },\r\n      // 查询参数\r\n      formDataStore: {\r\n        // 模糊搜索\r\n        searchWords: null,\r\n        // 订单状态\r\n        purchaseOrderStatus: null,\r\n        // 结算类型\r\n        tradeWayCode: null,\r\n        // 门店名称（采购商名称）\r\n        purchaseAgentName: null,\r\n        // 开始时间\r\n        startDate: null,\r\n        // 结束时间\r\n        endDate: null,\r\n        pageIndex: 1,\r\n        pageSize: 10\r\n      },\r\n      // 收货差异\r\n      differenceList: [{ name: \"是\", id: 1 }, { name: \"否\", id: 0 }],\r\n      // 发货门店列表\r\n      outStoreList: [],\r\n      // 收货门店列表\r\n      inStoreList: [],\r\n      // 单据状态\r\n      billType: this.$common.getBillType(\"allot\"),\r\n      // 表格数据\r\n      tableData: {},\r\n      // 选中的表格数据\r\n      checkedTableData: [],\r\n\r\n      // 备注弹窗\r\n      remarksDialog: false,\r\n      remarksFormData: {\r\n        id: \"\",\r\n        operationRemarks: \"\"\r\n      },\r\n      rules: {\r\n        operationRemarks: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"请输入内容\",\r\n            trigger: \"blur\"\r\n          }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  // 组件\r\n  components: {\r\n    PageTable,\r\n    TimeIntervalCheck\r\n  },\r\n  created() {\r\n    this.getTableData();\r\n  },\r\n  // 初始化数据\r\n  mounted() {\r\n  },\r\n  // 方法\r\n  methods: {\r\n    /**\r\n     * 审核通过\r\n     */\r\n    purchaseOrder_checkToPass(row) {\r\n      this.$confirm(\"审核通过后，库房将接收订单发货通知！\", \"订单审核\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      })\r\n        .then(() => {\r\n          this.request(this.api.scb.purchaseOrder_checkToPass, {\r\n            orderId: row.id\r\n          }).then(data => {\r\n            this.getTableData();\r\n            this.warn(\"审核通过！\");\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.$message({\r\n            type: \"info\",\r\n            message: \"已取消删除\"\r\n          });\r\n        });\r\n    },\r\n    /**\r\n     * 提示\r\n     * @param { String } message 提示文案\r\n     * @param { String } type 提示类型\r\n     */\r\n    warn(message, type) {\r\n      this.$message({\r\n        message: message,\r\n        type: type || \"success\"\r\n      });\r\n    },\r\n    // keepAlive 返回初始化\r\n    activatedInit() {\r\n      this.getTableData();\r\n    },\r\n    // 导出\r\n    exportExcel() {\r\n      if (this.checkedTableData.length === 0) {\r\n        this.$notify.error({ title: \"错误\", message: \"请选择数据\" });\r\n        return;\r\n      }\r\n      require.ensure([], () => {\r\n        let { export_json_to_excel } = require(\"@/vendor/Export2Excel\");\r\n        let tHeader = [\r\n          \"收货单号\",\r\n          \"状态\",\r\n          \"应收数量\",\r\n          \"sku种类数\",\r\n\r\n          \"实收数量\",\r\n          \"实收商品货值\",\r\n          \"收货类型\",\r\n          \"关联单号\",\r\n\r\n          \"出货方名称\",\r\n          \"生成时间\",\r\n        ];\r\n        // 上面设置Excel的表格第一行的标题\r\n        let filterVal = [\r\n          \"receiveNum\",\r\n          \"receiveStatus\",\r\n          \"planNum\",\r\n          \"productQuantity\",\r\n\r\n          \"realityNum\",\r\n          \"amount\",\r\n          \"sourceName\",\r\n          \"allotNum\",\r\n\r\n          \"calloutName\",\r\n          \"createTime\",\r\n        ];\r\n        // 上面的index、nickName、name是tableData里对象的属性\r\n        let list = this.checkedTableData; //把data里的tableData存到list\r\n        let data = this.formatJson(filterVal, list);\r\n        export_json_to_excel(tHeader, data, \"收货单\");\r\n      });\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => v[j]));\r\n    },\r\n    // 行商品详情导出\r\n    downloadItem(row) {\r\n      this.request(this.api.order.storeAllotOrderProductInfo_list, {\r\n        orderSn: row.orderSn\r\n      }).then(data => {\r\n        this.downloadDataInit(data.data);\r\n        let downloadData = data.data;\r\n        require.ensure([], () => {\r\n          let { export_json_to_excel } = require(\"@/vendor/Export2Excel\");\r\n          let tHeader = [\r\n            \"商品款号\",\r\n            \"商品货号\",\r\n            \"名称\",\r\n            \"品牌\",\r\n            \"吊牌价\",\r\n            \"调拨单价\",\r\n            \"调拨数量\",\r\n            \"调拨金额\",\r\n            \"门店实发数量\",\r\n            \"门店实收数量\"\r\n          ];\r\n          // 上面设置Excel的表格第一行的标题\r\n          let filterVal = [\r\n            \"productCode\",\r\n            \"goodsCode\",\r\n            \"goodsName\",\r\n            \"brandName\",\r\n            \"_retailPrice\",\r\n            \"_allotPrice\",\r\n            \"quantity\",\r\n            \"_amount\",\r\n            \"shipmentsQty\",\r\n            \"receiveQty\"\r\n          ];\r\n          // 上面的index、nickName、name是tableData里对象的属性\r\n          let list = downloadData; //把data里的tableData存到list\r\n          let data = this.formatJson(filterVal, list);\r\n          export_json_to_excel(tHeader, data, \"调拨商品信息\");\r\n        });\r\n      });\r\n    },\r\n    downloadDataInit(data) {\r\n      if (data && data.length) {\r\n        data.forEach(item => {\r\n          item._retailPrice = \"￥\" + item.retailPrice.toFixed(2);\r\n          item._allotPrice = \"￥\" + item.allotPrice.toFixed(2);\r\n          item._amount = \"￥\" + (item.quantity * item.allotPrice).toFixed(2);\r\n        });\r\n      }\r\n    },\r\n    // 点击搜索\r\n    searchTableData() {\r\n      this.formData.pageIndex = 1;\r\n      this.getTableData();\r\n    },\r\n    searchTableDataIn() {\r\n      this.tuneIn_fn();\r\n    },\r\n    initFormDataIn() {},\r\n    // 获取列表数据\r\n    getTableData() {\r\n      this.request(this.api.scb.receiveGoods_list, this.formData).then(\r\n        data => {\r\n          this.tableData = data;\r\n          data.data.forEach((item, idnex) => {\r\n            Object.assign(item, item.purchaseOrderDTO);\r\n            item._purchaseOrderStatus = this.orderStarusType[\r\n              item.purchaseOrderStatus\r\n            ];\r\n            item.amount = item.amount == null ? '--' : item.amount;\r\n            item.receiveStatus = this.statusToName(item.receiveStatus);\r\n            item.createTime = this.$options.filters.timestampToTime(item.createTime);\r\n            item._tradeWayCode = this.tradeWayCodeType[item.tradeWayCode];\r\n          });\r\n        }\r\n      );\r\n    },\r\n    // 获取表格选中的\r\n    tableCheckChange(val) {\r\n      this.checkedTableData = val;\r\n    },\r\n    // 初始查询条件\r\n    initFormData() {\r\n      this.$refs.formData.resetFields();\r\n    },\r\n    // 查看\r\n    seeItem(row) {\r\n      let module = \"/\" + this.$route.path.split(\"/\")[1];\r\n      this.$router.push({\r\n        path: module + \"/order/receiveGoods_order_detail\",\r\n        query: {\r\n          id: row.id,\r\n          receiveNum: row.receiveNum\r\n        }\r\n      });\r\n    },\r\n    // 作废\r\n    delItem(row) {\r\n      this.$confirm(\"确认作废吗？\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      })\r\n        .then(() => {\r\n          this.request(this.api.scb.purchaseOrder_cancle, {\r\n            orderId: row.id\r\n          }).then(data => {\r\n            this.getTableData();\r\n            this.warn(\"作废成功！\");\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.$message({\r\n            type: \"info\",\r\n            message: \"已取消删除\"\r\n          });\r\n        });\r\n    },\r\n    // 强制完成\r\n    finishItem(row) {\r\n      this.$confirm(\"确认要强制完成吗？\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      })\r\n        .then(() => {\r\n          this.request(this.api.scb.purchaseOrder_forceTermination, {\r\n            orderId: row.id\r\n          }).then(data => {\r\n            this.getTableData();\r\n            this.warn(\"强制成功！\");\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.$message({\r\n            type: \"info\",\r\n            message: \"已取消删除\"\r\n          });\r\n        });\r\n    },\r\n    // 备注显示\r\n    remarksItem(row) {\r\n      this.remarksFormData.id = row.id;\r\n      this.remarksFormData.operationRemarks = row.operationRemarks;\r\n      this.remarksDialog = true;\r\n    },\r\n    // 备注提交\r\n    remarksSub() {\r\n      this.$refs.remarksForm.validate(valid => {\r\n        if (valid) {\r\n          this.request(\r\n            this.api.order.storeAllotGoodsOrder_insertRemarks,\r\n            this.remarksFormData\r\n          ).then(data => {\r\n            this.$notify.success({ title: \"成功\", message: \"备注成功\" });\r\n            this.remarksDialog = false;\r\n            this.getTableData();\r\n          });\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    // 状态转name\r\n    statusToName(val) {\r\n      if (!val && val !== 0) return;\r\n      let item = this.billType.find(item => {\r\n        return item.id === val;\r\n      });\r\n      if (item) {\r\n        return item.name;\r\n      } else {\r\n        return val;\r\n      }\r\n    },\r\n  },\r\n  filters: {},\r\n  // 计算属性\r\n  computed: {},\r\n  // 监听数据变化\r\n  watch: {}\r\n};\r\n",{"version":3,"sources":["receiveGoods_order.vue"],"names":[],"mappingsfile":"receiveGoods_order.vue","sourceRoot":"src/views/scb/order","sourcesContent":["<style lang=\"less\" scoped></style>\r\n<template>\r\n  <div class=\"transfer_slip_list\">\r\n    <div class=\"item-margin\">\r\n      <el-form\r\n        class=\"item-form\"\r\n        :model=\"formData\"\r\n        label-width=\"90px\"\r\n        size=\"small\"\r\n        ref=\"formData\"\r\n        inline=\"\">\r\n        <!-- 模糊查询 -->\r\n        <el-form-item label=\"模糊查询：\">\r\n          <el-input\r\n            v-model=\"formData.searchWords\"\r\n            @keyup.enter.native=\"handleSearch\"\r\n            style=\"width:310px;\"\r\n            placeholder=\"收货单号/关联单号\"\r\n            clearable\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"单据状态：\" prop=\"orderStatus\">\r\n          <el-select\r\n            placeholder=\"请选择\"\r\n            class=\"input-w\"\r\n            v-model=\"formData.purchaseOrderStatus\"\r\n            filterable\r\n            clearable>\r\n            <el-option\r\n              v-for=\"(item, index) in orderStarusType\"\r\n              :key=\"index\"\r\n              :label=\"item\"\r\n              :value=\"index\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"收货类型：\" prop=\"outStoreId\">\r\n          <el-select\r\n            v-model=\"formData.tradeWayCode\"\r\n            placeholder=\"请选择\"\r\n            class=\"input-w\"\r\n            filterable\r\n            clearable\r\n          >\r\n            <el-option\r\n              v-for=\"(item, index) in tradeWayCodeType\"\r\n              :key=\"index\"\r\n              :label=\"item\"\r\n              :value=\"index\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"创建时间：\" prop=\"startDate\">\r\n          <el-date-picker v-model=\"formData.startTime\" type=\"date\" placeholder=\"开始日期\"></el-date-picker>\r\n        </el-form-item>\r\n        <el-form-item prop=\"endDate\">\r\n            <el-date-picker v-model=\"formData.endTime\" type=\"date\" placeholder=\"结束日期\"></el-date-picker>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button @click=\"searchTableData\" type=\"primary\" plain>搜索</el-button>\r\n          <el-button @click=\"initFormData\" plain>重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n    <div class=\"item-margin item-cont\">\r\n      <div v-if=\"!enterTypeFlag\">\r\n        <el-button size=\"small\" type=\"primary\" @click=\"exportExcel\">导出</el-button>\r\n      </div>\r\n      <page-table :form-data=\"formData\" :get-data=\"getTableData\" :table-data=\"tableData\">\r\n        <el-table\r\n          :data=\"tableData.data\"\r\n          style=\"width: 100%\"\r\n          row-key=\"id\"\r\n          @selection-change=\"tableCheckChange\"\r\n          id=\"table-data\">\r\n          <el-table-column type=\"selection\" width=\"45\"></el-table-column>\r\n          <el-table-column prop=\"receiveNum\" label=\"收货单号\" width=\"200\"></el-table-column>\r\n          <el-table-column prop=\"receiveStatus\" label=\"状态\"></el-table-column>\r\n          <el-table-column prop=\"planNum\" label=\"应收数量\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n          <el-table-column prop=\"productQuantity\" label=\"sku种类数\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n          <el-table-column prop=\"realityNum\" label=\"实收数量\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n          <el-table-column prop=\"amount\" label=\"实收商品货值\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n          <el-table-column prop=\"sourceName\" label=\"收货类型\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n          <el-table-column prop=\"allotNum\" label=\"关联单号\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n          <el-table-column prop=\"calloutName\" label=\"出货方名称\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n          <el-table-column prop=\"createTime\" label=\"生成时间\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n          <el-table-column label=\"操作\" width=\"260\">\r\n            <template slot-scope=\"scope\">\r\n              <el-button type=\"text\" size=\"small\" @click=\"seeItem(scope.row)\">查看</el-button>\r\n              <el-button\r\n                type=\"text\"\r\n                size=\"small\"\r\n                @click=\"purchaseOrder_checkToPass(scope.row)\">强制完成</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </page-table>\r\n    </div>\r\n    <!--备注-->\r\n    <el-dialog title=\"备注\" :visible.sync=\"remarksDialog\" width=\"40%\" :close-on-click-modal=\"false\">\r\n      <el-form\r\n        :model=\"remarksFormData\"\r\n        :rules=\"rules\"\r\n        ref=\"remarksForm\"\r\n        label-width=\"80px\"\r\n        class=\"demo-ruleForm\"\r\n      >\r\n        <el-form-item label=\"备注：\" prop=\"reason\">\r\n          <el-input\r\n            type=\"textarea\"\r\n            maxlength=\"120\"\r\n            show-word-limit\r\n            :rows=\"3\"\r\n            placeholder=\"请输入内容\"\r\n            v-model=\"remarksFormData.operationRemarks\"\r\n          ></el-input>\r\n          <p>最大长度为120个字符</p>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"remarksDialog = false\" size=\"small\">取 消</el-button>\r\n        <el-button @click=\"remarksSub\" type=\"primary\" size=\"small\">确定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\nimport PageTable from \"@/views/collocation/components/PageTable\";\r\nimport TimeIntervalCheck from \"@/components/TimeIntervalCheck\";\r\nimport keepAliveMixin from \"@/mixins/keepAliveMixin\";\r\nexport default {\r\n  name: \"transfer_slip_list\",\r\n  mixins: [keepAliveMixin],\r\n  // 数据\r\n  data() {\r\n    return {\r\n      // 调出方列表\r\n      tuneOut_data: [],\r\n      // 调入方列表\r\n      tuneIn_data: [],\r\n      // 选中调出方信息\r\n      checkTuneOutUser: {},\r\n      // 选中调入方信息\r\n      checkTuneInUser: {},\r\n      orderStarusType: {\r\n        2: \"待收货\",\r\n        3: \"已完成\"\r\n      },\r\n      tradeWayCodeType: {\r\n        0: \"采购收货\",\r\n        1: \"调入收货\"\r\n      },\r\n      // 参数\r\n      addFormData: {\r\n        // 发货人\r\n        allotMan: \"\",\r\n        // 发货人直属机构\r\n        organizationId: \"\",\r\n        organizationName: \"\",\r\n        // 订单类型\r\n        // orderType: '0203',\r\n        // 发货门店\r\n        outStoreId: \"\",\r\n        outStoreName: \"\",\r\n        // 收货门店\r\n        inStoreId: \"\",\r\n        inStoreName: \"\",\r\n        // 收货人\r\n        receiveMan: \"\",\r\n        // 电话\r\n        phone: \"\",\r\n        // 省市区信息\r\n        provinceName: \"\",\r\n        provinceCode: \"\",\r\n        cityName: \"\",\r\n        cityCode: \"\",\r\n        areaName: \"\",\r\n        areaCode: \"\",\r\n        divisionId: \"\",\r\n        // 地址\r\n        addressInfo: \"\"\r\n      },\r\n      // 选择调出弹框\r\n      dialogTableVisible: false,\r\n      // 选择调出类型\r\n      allocatingType: true,\r\n      // 标识是否是零售门店进入\r\n      enterTypeFlag: false,\r\n      // 查询参数\r\n      formData: {\r\n        // 模糊搜索\r\n        searchWords: null,\r\n        // 订单状态\r\n        purchaseOrderStatus: null,\r\n        // 结算类型\r\n        tradeWayCode: null,\r\n        // 门店名称（采购商名称）\r\n        purchaseAgentId: null,\r\n        // 开始时间\r\n        startDate: null,\r\n        // 结束时间\r\n        endDate: null,\r\n        pageIndex: 1,\r\n        pageSize: 10\r\n      },\r\n      // 查询参数\r\n      formDataStore: {\r\n        // 模糊搜索\r\n        searchWords: null,\r\n        // 订单状态\r\n        purchaseOrderStatus: null,\r\n        // 结算类型\r\n        tradeWayCode: null,\r\n        // 门店名称（采购商名称）\r\n        purchaseAgentName: null,\r\n        // 开始时间\r\n        startDate: null,\r\n        // 结束时间\r\n        endDate: null,\r\n        pageIndex: 1,\r\n        pageSize: 10\r\n      },\r\n      // 收货差异\r\n      differenceList: [{ name: \"是\", id: 1 }, { name: \"否\", id: 0 }],\r\n      // 发货门店列表\r\n      outStoreList: [],\r\n      // 收货门店列表\r\n      inStoreList: [],\r\n      // 单据状态\r\n      billType: this.$common.getBillType(\"allot\"),\r\n      // 表格数据\r\n      tableData: {},\r\n      // 选中的表格数据\r\n      checkedTableData: [],\r\n\r\n      // 备注弹窗\r\n      remarksDialog: false,\r\n      remarksFormData: {\r\n        id: \"\",\r\n        operationRemarks: \"\"\r\n      },\r\n      rules: {\r\n        operationRemarks: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"请输入内容\",\r\n            trigger: \"blur\"\r\n          }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  // 组件\r\n  components: {\r\n    PageTable,\r\n    TimeIntervalCheck\r\n  },\r\n  created() {\r\n    this.getTableData();\r\n  },\r\n  // 初始化数据\r\n  mounted() {\r\n  },\r\n  // 方法\r\n  methods: {\r\n    /**\r\n     * 审核通过\r\n     */\r\n    purchaseOrder_checkToPass(row) {\r\n      this.$confirm(\"审核通过后，库房将接收订单发货通知！\", \"订单审核\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      })\r\n        .then(() => {\r\n          this.request(this.api.scb.purchaseOrder_checkToPass, {\r\n            orderId: row.id\r\n          }).then(data => {\r\n            this.getTableData();\r\n            this.warn(\"审核通过！\");\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.$message({\r\n            type: \"info\",\r\n            message: \"已取消删除\"\r\n          });\r\n        });\r\n    },\r\n    /**\r\n     * 提示\r\n     * @param { String } message 提示文案\r\n     * @param { String } type 提示类型\r\n     */\r\n    warn(message, type) {\r\n      this.$message({\r\n        message: message,\r\n        type: type || \"success\"\r\n      });\r\n    },\r\n    // keepAlive 返回初始化\r\n    activatedInit() {\r\n      this.getTableData();\r\n    },\r\n    // 导出\r\n    exportExcel() {\r\n      if (this.checkedTableData.length === 0) {\r\n        this.$notify.error({ title: \"错误\", message: \"请选择数据\" });\r\n        return;\r\n      }\r\n      require.ensure([], () => {\r\n        let { export_json_to_excel } = require(\"@/vendor/Export2Excel\");\r\n        let tHeader = [\r\n          \"收货单号\",\r\n          \"状态\",\r\n          \"应收数量\",\r\n          \"sku种类数\",\r\n\r\n          \"实收数量\",\r\n          \"实收商品货值\",\r\n          \"收货类型\",\r\n          \"关联单号\",\r\n\r\n          \"出货方名称\",\r\n          \"生成时间\",\r\n        ];\r\n        // 上面设置Excel的表格第一行的标题\r\n        let filterVal = [\r\n          \"receiveNum\",\r\n          \"receiveStatus\",\r\n          \"planNum\",\r\n          \"productQuantity\",\r\n\r\n          \"realityNum\",\r\n          \"amount\",\r\n          \"sourceName\",\r\n          \"allotNum\",\r\n\r\n          \"calloutName\",\r\n          \"createTime\",\r\n        ];\r\n        // 上面的index、nickName、name是tableData里对象的属性\r\n        let list = this.checkedTableData; //把data里的tableData存到list\r\n        let data = this.formatJson(filterVal, list);\r\n        export_json_to_excel(tHeader, data, \"收货单\");\r\n      });\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => v[j]));\r\n    },\r\n    // 行商品详情导出\r\n    downloadItem(row) {\r\n      this.request(this.api.order.storeAllotOrderProductInfo_list, {\r\n        orderSn: row.orderSn\r\n      }).then(data => {\r\n        this.downloadDataInit(data.data);\r\n        let downloadData = data.data;\r\n        require.ensure([], () => {\r\n          let { export_json_to_excel } = require(\"@/vendor/Export2Excel\");\r\n          let tHeader = [\r\n            \"商品款号\",\r\n            \"商品货号\",\r\n            \"名称\",\r\n            \"品牌\",\r\n            \"吊牌价\",\r\n            \"调拨单价\",\r\n            \"调拨数量\",\r\n            \"调拨金额\",\r\n            \"门店实发数量\",\r\n            \"门店实收数量\"\r\n          ];\r\n          // 上面设置Excel的表格第一行的标题\r\n          let filterVal = [\r\n            \"productCode\",\r\n            \"goodsCode\",\r\n            \"goodsName\",\r\n            \"brandName\",\r\n            \"_retailPrice\",\r\n            \"_allotPrice\",\r\n            \"quantity\",\r\n            \"_amount\",\r\n            \"shipmentsQty\",\r\n            \"receiveQty\"\r\n          ];\r\n          // 上面的index、nickName、name是tableData里对象的属性\r\n          let list = downloadData; //把data里的tableData存到list\r\n          let data = this.formatJson(filterVal, list);\r\n          export_json_to_excel(tHeader, data, \"调拨商品信息\");\r\n        });\r\n      });\r\n    },\r\n    downloadDataInit(data) {\r\n      if (data && data.length) {\r\n        data.forEach(item => {\r\n          item._retailPrice = \"￥\" + item.retailPrice.toFixed(2);\r\n          item._allotPrice = \"￥\" + item.allotPrice.toFixed(2);\r\n          item._amount = \"￥\" + (item.quantity * item.allotPrice).toFixed(2);\r\n        });\r\n      }\r\n    },\r\n    // 点击搜索\r\n    searchTableData() {\r\n      this.formData.pageIndex = 1;\r\n      this.getTableData();\r\n    },\r\n    searchTableDataIn() {\r\n      this.tuneIn_fn();\r\n    },\r\n    initFormDataIn() {},\r\n    // 获取列表数据\r\n    getTableData() {\r\n      this.request(this.api.scb.receiveGoods_list, this.formData).then(\r\n        data => {\r\n          this.tableData = data;\r\n          data.data.forEach((item, idnex) => {\r\n            Object.assign(item, item.purchaseOrderDTO);\r\n            item._purchaseOrderStatus = this.orderStarusType[\r\n              item.purchaseOrderStatus\r\n            ];\r\n            item.amount = item.amount == null ? '--' : item.amount;\r\n            item.receiveStatus = this.statusToName(item.receiveStatus);\r\n            item.createTime = this.$options.filters.timestampToTime(item.createTime);\r\n            item._tradeWayCode = this.tradeWayCodeType[item.tradeWayCode];\r\n          });\r\n        }\r\n      );\r\n    },\r\n    // 获取表格选中的\r\n    tableCheckChange(val) {\r\n      this.checkedTableData = val;\r\n    },\r\n    // 初始查询条件\r\n    initFormData() {\r\n      this.$refs.formData.resetFields();\r\n    },\r\n    // 查看\r\n    seeItem(row) {\r\n      let module = \"/\" + this.$route.path.split(\"/\")[1];\r\n      this.$router.push({\r\n        path: module + \"/order/receiveGoods_order_detail\",\r\n        query: {\r\n          id: row.id,\r\n          receiveNum: row.receiveNum\r\n        }\r\n      });\r\n    },\r\n    // 作废\r\n    delItem(row) {\r\n      this.$confirm(\"确认作废吗？\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      })\r\n        .then(() => {\r\n          this.request(this.api.scb.purchaseOrder_cancle, {\r\n            orderId: row.id\r\n          }).then(data => {\r\n            this.getTableData();\r\n            this.warn(\"作废成功！\");\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.$message({\r\n            type: \"info\",\r\n            message: \"已取消删除\"\r\n          });\r\n        });\r\n    },\r\n    // 强制完成\r\n    finishItem(row) {\r\n      this.$confirm(\"确认要强制完成吗？\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      })\r\n        .then(() => {\r\n          this.request(this.api.scb.purchaseOrder_forceTermination, {\r\n            orderId: row.id\r\n          }).then(data => {\r\n            this.getTableData();\r\n            this.warn(\"强制成功！\");\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.$message({\r\n            type: \"info\",\r\n            message: \"已取消删除\"\r\n          });\r\n        });\r\n    },\r\n    // 备注显示\r\n    remarksItem(row) {\r\n      this.remarksFormData.id = row.id;\r\n      this.remarksFormData.operationRemarks = row.operationRemarks;\r\n      this.remarksDialog = true;\r\n    },\r\n    // 备注提交\r\n    remarksSub() {\r\n      this.$refs.remarksForm.validate(valid => {\r\n        if (valid) {\r\n          this.request(\r\n            this.api.order.storeAllotGoodsOrder_insertRemarks,\r\n            this.remarksFormData\r\n          ).then(data => {\r\n            this.$notify.success({ title: \"成功\", message: \"备注成功\" });\r\n            this.remarksDialog = false;\r\n            this.getTableData();\r\n          });\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    // 状态转name\r\n    statusToName(val) {\r\n      if (!val && val !== 0) return;\r\n      let item = this.billType.find(item => {\r\n        return item.id === val;\r\n      });\r\n      if (item) {\r\n        return item.name;\r\n      } else {\r\n        return val;\r\n      }\r\n    },\r\n  },\r\n  filters: {},\r\n  // 计算属性\r\n  computed: {},\r\n  // 监听数据变化\r\n  watch: {}\r\n};\r\n</script>\r\n"]}]}