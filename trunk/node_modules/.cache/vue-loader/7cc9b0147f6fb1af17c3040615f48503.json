{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\workorder\\config\\workOrder_time_add.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\workorder\\config\\workOrder_time_add.vue","mtime":1574160264949},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport axios from \"axios\";\r\nimport { getToken } from \"@/utils/auth\";\r\nimport codeSet from \"@/components/codeSet\";\r\nimport treeDept from \"@/components/treeDept\";\r\nimport { filter } from \"minimatch\";\r\nimport { get } from \"http\";\r\nlet token = getToken();\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 预警类型列表\r\n      warningTypeList:[],\r\n      // 消息模板列表\r\n      messageTemplate_List:[],\r\n      // 适用工单列表\r\n      findAll_List:[],\r\n\r\n      // 预警设置列表备份，添加时候直接深拷贝使用\r\n      \"alarmSetsBck\":{},\r\n      // 新增工单时限对象集合\r\n      jobOrderTimeSaveObj:{\r\n        \"alarmSets\": [// 预警设置列表\r\n          {\r\n            // 预警结束时间\r\n            endTime: {\r\n              day:'00',\r\n              hour:'00',\r\n              minute:'00',\r\n              s:'00'\r\n            },\r\n            \"adminReceive\": \"\",// 管理者接收\r\n            \"localRemind\": \"\",// 站内提醒\r\n            \"signerReceive\": false,// 工单签发人接收\r\n            \"warnType\": \"\",// 预警类型\r\n            localRemindDisabled:false,// 站内提醒状态\r\n            adminReceiveDisabled:false// 管理者状态\r\n          }\r\n        ],\r\n        // 处理时间时长\r\n        handleTime: {\r\n          day:'00',\r\n          hour:'00',\r\n          minute:'00',\r\n          s:'00'\r\n        },\r\n        // 流入工单池时间\r\n        jobPoolTime: {\r\n          day:'00',\r\n          hour:'00',\r\n          minute:'00',\r\n          s:'00'\r\n        },\r\n        \"applyWorkOrders\": [],// 适用工单\r\n        \"isStart\": false,// 启停状态\r\n        \"name\": \"\",// 时限管理名称\r\n      }\r\n    };\r\n  },\r\n  created() {\r\n    // 拷贝预警设置\r\n    this.alarmSetsBck = JSON.parse(JSON.stringify(this.jobOrderTimeSaveObj.alarmSets[0]));\r\n    this.getWarningTypeList();\r\n    this.getMessageTemplate_List();\r\n    this.getFindAll_List();\r\n  },\r\n  methods: {\r\n    /**\r\n     * 获取预警类型\r\n     */\r\n    getWarningTypeList() {\r\n      const that = this;\r\n\r\n      this.request(\r\n        that.api.job_order.getWarningType_List,\r\n      ).then(res => {\r\n        that.warningTypeList = res;\r\n      });\r\n    },\r\n    /**\r\n     * 获取消息模板\r\n     */\r\n    getMessageTemplate_List() {\r\n      const that = this;\r\n\r\n      this.request(\r\n        that.api.job_order.getMessageTemplate_List,\r\n      ).then(res => {\r\n        that.messageTemplate_List = res;\r\n      });\r\n    },\r\n    /**\r\n     * 获取适用工单\r\n     */\r\n    getFindAll_List() {\r\n      const that = this;\r\n\r\n      this.request(\r\n        that.api.job_order.getFindAll_List,{}\r\n      ).then(res => {\r\n        that.findAll_List = res;\r\n      });\r\n    },\r\n    /**\r\n     * 补零函数\r\n     * @param { Nunber | String } item 数字或数字字符串 如： 1，'1'\r\n     * @return { String } 如：'01'\r\n     */\r\n    replenishZero(item) {\r\n        item = parseInt(item);\r\n\r\n        return item < 10 ? `0${item}` : item;\r\n    },\r\n    /**\r\n     * 预防js注入攻击函数\r\n     * @param { String } str 输入的文本\r\n     */\r\n    preventGsImplantAttack(str) {\r\n      const res = /(<|>)/ig;\r\n\r\n      return str.replace(res ,item => {\r\n        switch(item) {\r\n          case '<':\r\n            return '&lt;';\r\n            break;\r\n          case '>':\r\n            return '&gt;';\r\n            break;\r\n        }\r\n      });\r\n    },\r\n    /**\r\n     * 保存工单时间\r\n     */\r\n    saveJobTime() {\r\n      const that = this,\r\n            nameReg = /^([\\w\\u4E00-\\u9FA5_\\-]+)+$/;\r\n\r\n      if(!that.jobOrderTimeSaveObj.name) {\r\n        this.warn('时限管理名称不能为空！');\r\n        return;\r\n      };\r\n      if(!nameReg.test(that.jobOrderTimeSaveObj.name)) {\r\n        this.warn('时限管理名称不能含有特殊字符！');\r\n        return;\r\n      };\r\n      let handleTimeEvery = Object.values(that.jobOrderTimeSaveObj.handleTime).every(item => {\r\n        return item == false;\r\n      });\r\n      if(handleTimeEvery) {\r\n          this.warn('处理时长不能为空！');\r\n          return;\r\n      };\r\n      for(let item in that.jobOrderTimeSaveObj.handleTime) {\r\n        if(that.jobOrderTimeSaveObj.handleTime[item] < 0) {\r\n          this.warn('处理时长不能含有负数！');\r\n          return;\r\n        }\r\n      };\r\n      for(let item in that.jobOrderTimeSaveObj.jobPoolTime) {\r\n        if(that.jobOrderTimeSaveObj.jobPoolTime[item] < 0) {\r\n          this.warn('流入工单池时间不能含有负数！');\r\n          return;\r\n        }\r\n      };\r\n      // if(!that.jobOrderTimeSaveObj.applyWorkOrders.length) {\r\n      //     this.warn('请选择适用工单！');\r\n      //     return;\r\n      // };\r\n      if(!that.jobOrderTimeSaveObj.alarmSets.length) {\r\n          this.warn('请添加预警配置！');\r\n          return;\r\n      };\r\n      for(var i = 0; i < that.jobOrderTimeSaveObj.alarmSets.length; i++){\r\n        var item = that.jobOrderTimeSaveObj.alarmSets[i];\r\n        let endTimeEvery = Object.values(item.endTime).every(item => {\r\n          return item == false;\r\n        });\r\n        if(endTimeEvery) {\r\n            this.warn('预警时间段不能为空！');\r\n            return;\r\n        };\r\n        for(let i in item.endTime) {\r\n          if(item.endTime[i] < 0) {\r\n            this.warn('预警时间段不能含有负数！');\r\n            return;\r\n          }\r\n        };\r\n        //\r\n        let endTimeArr = [];\r\n        that.jobOrderTimeSaveObj.alarmSets.forEach((items, indexs) => {\r\n          for(name in items.endTime) {\r\n            items.endTime[name] = this.replenishZero(items.endTime[name]);\r\n          };\r\n          if(items !== item) {\r\n            endTimeArr.push({endTime: items.endTime});\r\n          };\r\n        });\r\n        let isEndTimes = endTimeArr.find((isItem, IsIndex) => {\r\n          let item_endTime = parseInt(Object.values(item.endTime).join(''));\r\n          let items_endTime = parseInt(Object.values(isItem.endTime).join(''));\r\n          return item_endTime === items_endTime;\r\n        });\r\n        if(isEndTimes) {\r\n          isEndTimes.endTime.isEndTime = true;\r\n          this.warn('预警时间段不能重复设置！');\r\n          return;\r\n        };\r\n        if(!item.warnType) {\r\n          this.warn('请选择预警类型！');\r\n          return;\r\n        };\r\n        if(item.localRemindDisabled && !item.localRemind) {\r\n          this.warn('请选择预警提醒！');\r\n          return;\r\n        };\r\n        if(item.localRemindDisabled && !item.signerReceive  && !item.adminReceiveDisabled) {\r\n          this.warn('请勾选接收人！');\r\n          return;\r\n        };\r\n        if(item.adminReceiveDisabled && !item.adminReceive) {\r\n          this.warn('请选择所属机构！');\r\n          return;\r\n        };\r\n      };\r\n      console.log(nameReg.test(that.jobOrderTimeSaveObj.name))\r\n      // 数据提交之前，最后一次深拷贝\r\n      let data = JSON.parse(JSON.stringify(that.jobOrderTimeSaveObj));\r\n      // 处理数据\r\n      data.handleTime = this.obj2Str(data.handleTime);\r\n      data.jobPoolTime = this.obj2Str(data.jobPoolTime);\r\n      data.isStart = data.isStart ? 1 : 0;\r\n      data.alarmSets.forEach((item ,index) => {\r\n        item.endTime = this.obj2Str(item.endTime);\r\n        // 如果站内消息没有勾选，清除站内提醒数据\r\n        item.localRemind = item.localRemindDisabled ?  item.localRemind : '';\r\n        // 如果接收人没有勾选，清除管理者接收数据\r\n        item.adminReceive = (item.adminReceiveDisabled || item.signerReceive) ? item.adminReceive : '';\r\n      });\r\n      console.log(data)\r\n      // return;\r\n      this.request(\r\n        that.api.job_order.saveJobOrderTime,\r\n        data\r\n      ).then(res => {\r\n         that.warn('新增工单时限成功！','success');\r\n          that.href('workorder/config/workOrder_time_list');\r\n      });\r\n    },\r\n    /**\r\n     * 提示\r\n     */\r\n    warn(message, type) {\r\n      this.$message({\r\n        message: message,\r\n        type: type || 'warning'\r\n      });\r\n    },\r\n    /**\r\n     * 对象拼接字符串\r\n     * @param { Object } timeObj 时间对象\r\n     */\r\n    obj2Str(timeObj) {\r\n      let  newTimeObj ='';\r\n\r\n      for(var item in timeObj) {\r\n        if(timeObj[item]) {\r\n          newTimeObj += `${timeObj[item]}-`;\r\n        }else{\r\n          newTimeObj += `0-`;\r\n        }\r\n      };\r\n      return newTimeObj.replace(/-$/g,'');\r\n    },\r\n    /**\r\n     * 添加预警\r\n     */\r\n    addAlarmSets() {\r\n      const that = this;\r\n\r\n      that.jobOrderTimeSaveObj.alarmSets.push(JSON.parse(JSON.stringify(that.alarmSetsBck)));\r\n    },\r\n    /**\r\n     * 删除预警\r\n     */\r\n    closeAlarmSets(index) {\r\n      const that = this;\r\n\r\n      that.jobOrderTimeSaveObj.alarmSets.splice(index, 1);\r\n    },\r\n    /**\r\n     * 添加适用工单，且添加的工单不能重复\r\n     * @param { Object } item 选中的每一项\r\n     */\r\n    addApplyWorkOrder(item) {\r\n      const that = this;\r\n\r\n      let isHas = that.jobOrderTimeSaveObj.applyWorkOrders.every((i) => {\r\n        return i.workOrderId != item.id;\r\n      });\r\n      if(!isHas) return;\r\n      that.jobOrderTimeSaveObj.applyWorkOrders.push({\r\n        workOrderId:item.id,\r\n        workOrderName:item.name\r\n      });\r\n    },\r\n    /**\r\n     * 删除适用工单\r\n     */\r\n    deleteTag(index) {\r\n       const that = this;\r\n\r\n      that.jobOrderTimeSaveObj.applyWorkOrders.splice(index, 1);\r\n    },\r\n    /**\r\n     * 跳转\r\n     */\r\n    href(routeName) {\r\n      this.$router.push({\r\n        path: `/${routeName}`,\r\n      });\r\n    },\r\n    /**\r\n     * 领取工单\r\n     */\r\n    open2() {\r\n      this.$message({\r\n        message: \"工单领取成功！\",\r\n        type: \"success\"\r\n      });\r\n    },\r\n  },\r\n  components: {\r\n    codeSet,\r\n    treeDept\r\n  }\r\n};\r\n",{"version":3,"sources":["workOrder_time_add.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsJA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"workOrder_time_add.vue","sourceRoot":"src/views/workorder/config","sourcesContent":["<!-- 创建新工单 -->\r\n<template>\r\n  <div>\r\n    <!-- 新建工单 -->\r\n    <div class=\"item-margin\" style=\"height:100%;\">\r\n      <div class=\"item-form\">\r\n        <el-form ref=\"form\" :model=\"jobOrderTimeSaveObj\">\r\n          <div class=\"display-flex leftName\">\r\n            <span class=\"leftName-span\"><i class=\"colorRed\">*&nbsp;</i>时限管理名称：</span>\r\n            <el-form-item>\r\n              <el-input maxlength=\"30\"  v-model=\"jobOrderTimeSaveObj.name\" class=\"width350\"></el-input>\r\n            </el-form-item>\r\n          </div>\r\n          <div class=\"display-flex leftName\">\r\n            <span class=\"leftName-span\"><i class=\"colorRed\">*&nbsp;</i>设置处理时长：</span>\r\n            <el-form-item>\r\n              <el-input type=\"number\" v-model=\"jobOrderTimeSaveObj.handleTime.day\" class=\"width50\"></el-input>&nbsp;天&nbsp;\r\n              <el-input type=\"number\" v-model=\"jobOrderTimeSaveObj.handleTime.hour\" class=\"width50\"></el-input>&nbsp;时&nbsp;\r\n              <el-input type=\"number\" v-model=\"jobOrderTimeSaveObj.handleTime.minute\" class=\"width50\"></el-input>&nbsp;分&nbsp;\r\n              <el-input type=\"number\" v-model=\"jobOrderTimeSaveObj.handleTime.s\" class=\"width50\"></el-input>&nbsp;秒&nbsp;\r\n            </el-form-item>\r\n          </div>\r\n          <div class=\"display-flex leftName\">\r\n            <span class=\"leftName-span\"><i class=\"colorRed\">&nbsp;</i>设置流入工单池时间：</span>\r\n            <el-form-item>\r\n              <el-input type=\"number\" v-model=\"jobOrderTimeSaveObj.jobPoolTime.day\" class=\"width50\"></el-input>&nbsp;天&nbsp;\r\n              <el-input type=\"number\" v-model=\"jobOrderTimeSaveObj.jobPoolTime.hour\" class=\"width50\"></el-input>&nbsp;时&nbsp;\r\n              <el-input type=\"number\" v-model=\"jobOrderTimeSaveObj.jobPoolTime.minute\" class=\"width50\"></el-input>&nbsp;分&nbsp;\r\n              <el-input type=\"number\" v-model=\"jobOrderTimeSaveObj.jobPoolTime.s\" class=\"width50\"></el-input>&nbsp;秒&nbsp;\r\n            </el-form-item>\r\n          </div>\r\n          <div class=\"display-flex leftName\">\r\n            <span class=\"leftName-span\">适用工单：</span>\r\n            <el-form-item >\r\n                <div class=\"width600\">\r\n                  <el-tag\r\n                    class=\"mr-10\"\r\n                    v-for=\"(item, index) in jobOrderTimeSaveObj.applyWorkOrders\"\r\n                    :key=\"item.workOrderName\"\r\n                    closable\r\n                    :type=\"item.type\"\r\n                    @close=\"deleteTag(index)\"\r\n                  >{{item.workOrderName}}\r\n                  </el-tag>\r\n                </div>\r\n                <el-dropdown\r\n                  size=\"medium\"\r\n                  :split-button=\"true\"\r\n                  type=\"primary\"\r\n                  @command=\"addApplyWorkOrder\">\r\n                  添加\r\n                  <el-dropdown-menu slot=\"dropdown\">\r\n                    <el-dropdown-item :command=\"item\" :key=\"index\" v-for=\"(item, index) in findAll_List\">{{ item.name }}</el-dropdown-item>\r\n                  </el-dropdown-menu>\r\n                </el-dropdown>\r\n              </el-form-item>\r\n          </div>\r\n          <div class=\"display-flex leftName\">\r\n            <span class=\"leftName-span\"><i class=\"colorRed\">*&nbsp;</i>预警设置：</span>\r\n            <el-form-item>\r\n              <div class=\"set-warning mt-10\" :class=\"{isEndTime:alaItem.endTime.isEndTime}\" :key=\"alaIndex\" v-for=\"(alaItem, alaIndex) in jobOrderTimeSaveObj.alarmSets\">\r\n                <i class=\"el-icon-close\" @click=\"closeAlarmSets(alaIndex)\"></i>\r\n                <el-form ref=\"form\" :model=\"alaItem\">\r\n                  <div class=\"display-flex leftName2 mt-20\">\r\n                    <span class=\"leftName-span2\"><i class=\"colorRed\">*&nbsp;</i>预警时间段：</span>\r\n                    <el-form-item>\r\n                      <el-input type=\"number\" v-model=\"alaItem.endTime.day\" class=\"width50\"></el-input>&nbsp;天&nbsp;\r\n                      <el-input type=\"number\" v-model=\"alaItem.endTime.hour\" class=\"width50\"></el-input>&nbsp;时&nbsp;\r\n                      <el-input type=\"number\" v-model=\"alaItem.endTime.minute\" class=\"width50\"></el-input>&nbsp;分&nbsp;\r\n                      <el-input type=\"number\" v-model=\"alaItem.endTime.s\" class=\"width50\"></el-input>&nbsp;秒&nbsp;\r\n                    </el-form-item>\r\n                  </div>\r\n                  <div class=\"display-flex leftName2 mt-20\">\r\n                    <span class=\"leftName-span2\"><i class=\"colorRed\">*&nbsp;</i>预警类型：</span>\r\n                    <el-form-item>\r\n                      <el-select v-model=\"alaItem.warnType\" placeholder=\"请选择\">\r\n                        <el-option\r\n                          :value=\"wItem.id\"\r\n                          :label=\"wItem.tag\"\r\n                          :key=\"wItem.id\"\r\n                          :style=\"{background:wItem.color}\"\r\n                          class=\"warningTypeColor\"\r\n                          v-for=\"wItem in warningTypeList.data\">\r\n                        </el-option>\r\n                      </el-select>\r\n                    </el-form-item>\r\n                  </div>\r\n                  <el-form-item label=\"预警提醒：\" label-width=\"110px\">\r\n                    <div class=\"display-flex\">\r\n                      <template>\r\n                        <!-- `checked` 为 true 或 false -->\r\n                        <el-checkbox v-model=\"alaItem.localRemindDisabled\" hca>站内提醒</el-checkbox>\r\n                      </template>\r\n                      <el-select\r\n                        v-model=\"alaItem.localRemind\"\r\n                        :disabled=\"!alaItem.localRemindDisabled\"\r\n                        placeholder=\"请选择消息模板\">\r\n                        <el-option\r\n                          :value=\"mItem.id\"\r\n                          :label=\"mItem.name\"\r\n                          :key=\"mItem.id\"\r\n                          v-for=\"mItem in messageTemplate_List.data\">\r\n                        </el-option>\r\n                      </el-select>\r\n                    </div>\r\n                  </el-form-item>\r\n                  <el-form-item label=\"接收人：\" label-width=\"110px\" class=\" mt-10\">\r\n                    <div class=\"display-flex\">\r\n                      <template>\r\n                        <el-checkbox v-model=\"alaItem.signerReceive\">工单签发人</el-checkbox>\r\n                        <el-checkbox v-model=\"alaItem.adminReceiveDisabled\">管理者</el-checkbox>\r\n                      </template>\r\n                      所属机构：&nbsp;\r\n                      <tree-dept\r\n                        v-model=\"alaItem.adminReceive\"\r\n                        :disabled=\"!alaItem.adminReceiveDisabled\"\r\n                        val-type=\"id\"\r\n                        :sel-type=\"1\"\r\n                        :default-expand-all=\"true\"\r\n                      ></tree-dept>\r\n                    </div>\r\n                  </el-form-item>\r\n                </el-form>\r\n              </div>\r\n              <el-button class=\"mt-10\" @click=\"addAlarmSets\">添加</el-button>\r\n            </el-form-item>\r\n          </div>\r\n          <div class=\"display-flex leftName\">\r\n            <span class=\"leftName-span\">启停状态:</span>\r\n            <el-form-item>\r\n              <el-switch\r\n                active-color=\"#13ce66\"\r\n                inactive-color=\"#9d9d9d\"\r\n                v-model=\"jobOrderTimeSaveObj.isStart\">\r\n              </el-switch>\r\n            </el-form-item>\r\n          </div>\r\n          <el-form-item label-width=\"200px\">\r\n            <el-button type=\"primary\" v-no-more-click @click=\"saveJobTime\"  size=\"small\">确定</el-button>\r\n            <el-button @click=\"href('workorder/config/workOrder_time_list')\" size=\"small\">取消</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n    </div>\r\n    <!-- 新建工单 -->\r\n  </div>\r\n</template>\r\n<!-- 工单池 -->\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { getToken } from \"@/utils/auth\";\r\nimport codeSet from \"@/components/codeSet\";\r\nimport treeDept from \"@/components/treeDept\";\r\nimport { filter } from \"minimatch\";\r\nimport { get } from \"http\";\r\nlet token = getToken();\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 预警类型列表\r\n      warningTypeList:[],\r\n      // 消息模板列表\r\n      messageTemplate_List:[],\r\n      // 适用工单列表\r\n      findAll_List:[],\r\n\r\n      // 预警设置列表备份，添加时候直接深拷贝使用\r\n      \"alarmSetsBck\":{},\r\n      // 新增工单时限对象集合\r\n      jobOrderTimeSaveObj:{\r\n        \"alarmSets\": [// 预警设置列表\r\n          {\r\n            // 预警结束时间\r\n            endTime: {\r\n              day:'00',\r\n              hour:'00',\r\n              minute:'00',\r\n              s:'00'\r\n            },\r\n            \"adminReceive\": \"\",// 管理者接收\r\n            \"localRemind\": \"\",// 站内提醒\r\n            \"signerReceive\": false,// 工单签发人接收\r\n            \"warnType\": \"\",// 预警类型\r\n            localRemindDisabled:false,// 站内提醒状态\r\n            adminReceiveDisabled:false// 管理者状态\r\n          }\r\n        ],\r\n        // 处理时间时长\r\n        handleTime: {\r\n          day:'00',\r\n          hour:'00',\r\n          minute:'00',\r\n          s:'00'\r\n        },\r\n        // 流入工单池时间\r\n        jobPoolTime: {\r\n          day:'00',\r\n          hour:'00',\r\n          minute:'00',\r\n          s:'00'\r\n        },\r\n        \"applyWorkOrders\": [],// 适用工单\r\n        \"isStart\": false,// 启停状态\r\n        \"name\": \"\",// 时限管理名称\r\n      }\r\n    };\r\n  },\r\n  created() {\r\n    // 拷贝预警设置\r\n    this.alarmSetsBck = JSON.parse(JSON.stringify(this.jobOrderTimeSaveObj.alarmSets[0]));\r\n    this.getWarningTypeList();\r\n    this.getMessageTemplate_List();\r\n    this.getFindAll_List();\r\n  },\r\n  methods: {\r\n    /**\r\n     * 获取预警类型\r\n     */\r\n    getWarningTypeList() {\r\n      const that = this;\r\n\r\n      this.request(\r\n        that.api.job_order.getWarningType_List,\r\n      ).then(res => {\r\n        that.warningTypeList = res;\r\n      });\r\n    },\r\n    /**\r\n     * 获取消息模板\r\n     */\r\n    getMessageTemplate_List() {\r\n      const that = this;\r\n\r\n      this.request(\r\n        that.api.job_order.getMessageTemplate_List,\r\n      ).then(res => {\r\n        that.messageTemplate_List = res;\r\n      });\r\n    },\r\n    /**\r\n     * 获取适用工单\r\n     */\r\n    getFindAll_List() {\r\n      const that = this;\r\n\r\n      this.request(\r\n        that.api.job_order.getFindAll_List,{}\r\n      ).then(res => {\r\n        that.findAll_List = res;\r\n      });\r\n    },\r\n    /**\r\n     * 补零函数\r\n     * @param { Nunber | String } item 数字或数字字符串 如： 1，'1'\r\n     * @return { String } 如：'01'\r\n     */\r\n    replenishZero(item) {\r\n        item = parseInt(item);\r\n\r\n        return item < 10 ? `0${item}` : item;\r\n    },\r\n    /**\r\n     * 预防js注入攻击函数\r\n     * @param { String } str 输入的文本\r\n     */\r\n    preventGsImplantAttack(str) {\r\n      const res = /(<|>)/ig;\r\n\r\n      return str.replace(res ,item => {\r\n        switch(item) {\r\n          case '<':\r\n            return '&lt;';\r\n            break;\r\n          case '>':\r\n            return '&gt;';\r\n            break;\r\n        }\r\n      });\r\n    },\r\n    /**\r\n     * 保存工单时间\r\n     */\r\n    saveJobTime() {\r\n      const that = this,\r\n            nameReg = /^([\\w\\u4E00-\\u9FA5_\\-]+)+$/;\r\n\r\n      if(!that.jobOrderTimeSaveObj.name) {\r\n        this.warn('时限管理名称不能为空！');\r\n        return;\r\n      };\r\n      if(!nameReg.test(that.jobOrderTimeSaveObj.name)) {\r\n        this.warn('时限管理名称不能含有特殊字符！');\r\n        return;\r\n      };\r\n      let handleTimeEvery = Object.values(that.jobOrderTimeSaveObj.handleTime).every(item => {\r\n        return item == false;\r\n      });\r\n      if(handleTimeEvery) {\r\n          this.warn('处理时长不能为空！');\r\n          return;\r\n      };\r\n      for(let item in that.jobOrderTimeSaveObj.handleTime) {\r\n        if(that.jobOrderTimeSaveObj.handleTime[item] < 0) {\r\n          this.warn('处理时长不能含有负数！');\r\n          return;\r\n        }\r\n      };\r\n      for(let item in that.jobOrderTimeSaveObj.jobPoolTime) {\r\n        if(that.jobOrderTimeSaveObj.jobPoolTime[item] < 0) {\r\n          this.warn('流入工单池时间不能含有负数！');\r\n          return;\r\n        }\r\n      };\r\n      // if(!that.jobOrderTimeSaveObj.applyWorkOrders.length) {\r\n      //     this.warn('请选择适用工单！');\r\n      //     return;\r\n      // };\r\n      if(!that.jobOrderTimeSaveObj.alarmSets.length) {\r\n          this.warn('请添加预警配置！');\r\n          return;\r\n      };\r\n      for(var i = 0; i < that.jobOrderTimeSaveObj.alarmSets.length; i++){\r\n        var item = that.jobOrderTimeSaveObj.alarmSets[i];\r\n        let endTimeEvery = Object.values(item.endTime).every(item => {\r\n          return item == false;\r\n        });\r\n        if(endTimeEvery) {\r\n            this.warn('预警时间段不能为空！');\r\n            return;\r\n        };\r\n        for(let i in item.endTime) {\r\n          if(item.endTime[i] < 0) {\r\n            this.warn('预警时间段不能含有负数！');\r\n            return;\r\n          }\r\n        };\r\n        //\r\n        let endTimeArr = [];\r\n        that.jobOrderTimeSaveObj.alarmSets.forEach((items, indexs) => {\r\n          for(name in items.endTime) {\r\n            items.endTime[name] = this.replenishZero(items.endTime[name]);\r\n          };\r\n          if(items !== item) {\r\n            endTimeArr.push({endTime: items.endTime});\r\n          };\r\n        });\r\n        let isEndTimes = endTimeArr.find((isItem, IsIndex) => {\r\n          let item_endTime = parseInt(Object.values(item.endTime).join(''));\r\n          let items_endTime = parseInt(Object.values(isItem.endTime).join(''));\r\n          return item_endTime === items_endTime;\r\n        });\r\n        if(isEndTimes) {\r\n          isEndTimes.endTime.isEndTime = true;\r\n          this.warn('预警时间段不能重复设置！');\r\n          return;\r\n        };\r\n        if(!item.warnType) {\r\n          this.warn('请选择预警类型！');\r\n          return;\r\n        };\r\n        if(item.localRemindDisabled && !item.localRemind) {\r\n          this.warn('请选择预警提醒！');\r\n          return;\r\n        };\r\n        if(item.localRemindDisabled && !item.signerReceive  && !item.adminReceiveDisabled) {\r\n          this.warn('请勾选接收人！');\r\n          return;\r\n        };\r\n        if(item.adminReceiveDisabled && !item.adminReceive) {\r\n          this.warn('请选择所属机构！');\r\n          return;\r\n        };\r\n      };\r\n      console.log(nameReg.test(that.jobOrderTimeSaveObj.name))\r\n      // 数据提交之前，最后一次深拷贝\r\n      let data = JSON.parse(JSON.stringify(that.jobOrderTimeSaveObj));\r\n      // 处理数据\r\n      data.handleTime = this.obj2Str(data.handleTime);\r\n      data.jobPoolTime = this.obj2Str(data.jobPoolTime);\r\n      data.isStart = data.isStart ? 1 : 0;\r\n      data.alarmSets.forEach((item ,index) => {\r\n        item.endTime = this.obj2Str(item.endTime);\r\n        // 如果站内消息没有勾选，清除站内提醒数据\r\n        item.localRemind = item.localRemindDisabled ?  item.localRemind : '';\r\n        // 如果接收人没有勾选，清除管理者接收数据\r\n        item.adminReceive = (item.adminReceiveDisabled || item.signerReceive) ? item.adminReceive : '';\r\n      });\r\n      console.log(data)\r\n      // return;\r\n      this.request(\r\n        that.api.job_order.saveJobOrderTime,\r\n        data\r\n      ).then(res => {\r\n         that.warn('新增工单时限成功！','success');\r\n          that.href('workorder/config/workOrder_time_list');\r\n      });\r\n    },\r\n    /**\r\n     * 提示\r\n     */\r\n    warn(message, type) {\r\n      this.$message({\r\n        message: message,\r\n        type: type || 'warning'\r\n      });\r\n    },\r\n    /**\r\n     * 对象拼接字符串\r\n     * @param { Object } timeObj 时间对象\r\n     */\r\n    obj2Str(timeObj) {\r\n      let  newTimeObj ='';\r\n\r\n      for(var item in timeObj) {\r\n        if(timeObj[item]) {\r\n          newTimeObj += `${timeObj[item]}-`;\r\n        }else{\r\n          newTimeObj += `0-`;\r\n        }\r\n      };\r\n      return newTimeObj.replace(/-$/g,'');\r\n    },\r\n    /**\r\n     * 添加预警\r\n     */\r\n    addAlarmSets() {\r\n      const that = this;\r\n\r\n      that.jobOrderTimeSaveObj.alarmSets.push(JSON.parse(JSON.stringify(that.alarmSetsBck)));\r\n    },\r\n    /**\r\n     * 删除预警\r\n     */\r\n    closeAlarmSets(index) {\r\n      const that = this;\r\n\r\n      that.jobOrderTimeSaveObj.alarmSets.splice(index, 1);\r\n    },\r\n    /**\r\n     * 添加适用工单，且添加的工单不能重复\r\n     * @param { Object } item 选中的每一项\r\n     */\r\n    addApplyWorkOrder(item) {\r\n      const that = this;\r\n\r\n      let isHas = that.jobOrderTimeSaveObj.applyWorkOrders.every((i) => {\r\n        return i.workOrderId != item.id;\r\n      });\r\n      if(!isHas) return;\r\n      that.jobOrderTimeSaveObj.applyWorkOrders.push({\r\n        workOrderId:item.id,\r\n        workOrderName:item.name\r\n      });\r\n    },\r\n    /**\r\n     * 删除适用工单\r\n     */\r\n    deleteTag(index) {\r\n       const that = this;\r\n\r\n      that.jobOrderTimeSaveObj.applyWorkOrders.splice(index, 1);\r\n    },\r\n    /**\r\n     * 跳转\r\n     */\r\n    href(routeName) {\r\n      this.$router.push({\r\n        path: `/${routeName}`,\r\n      });\r\n    },\r\n    /**\r\n     * 领取工单\r\n     */\r\n    open2() {\r\n      this.$message({\r\n        message: \"工单领取成功！\",\r\n        type: \"success\"\r\n      });\r\n    },\r\n  },\r\n  components: {\r\n    codeSet,\r\n    treeDept\r\n  }\r\n};\r\n</script>\r\n<style  lang=\"less\" scoped>\r\n.warningTypeColor{\r\n  border-radius:5px;\r\n  color:#fff;\r\n  margin-bottom:1px;\r\n}\r\n.leftName{\r\n  .leftName-span{\r\n      width: 200px;\r\n      height: 40px;\r\n      line-height: 40px;\r\n      text-align: right;\r\n      padding-right: 10px;\r\n      .colorRed{\r\n        color: red;\r\n        line-height:30px;\r\n      }\r\n  }\r\n}\r\n.leftName2{\r\n  .leftName-span2{\r\n      width: 98px;\r\n      height: 40px;\r\n      line-height: 40px;\r\n      text-align: right;\r\n      padding-right: 10px;\r\n      .colorRed{\r\n        color: red;\r\n        line-height:30px;\r\n      }\r\n  }\r\n}\r\n.el-icon-close{\r\n  cursor:pointer;\r\n}\r\nh5 {\r\n  color: #222;\r\n  margin-left: -15px;\r\n}\r\n.set-warning {\r\n  width: 650px;\r\n  padding-bottom: 10px;\r\n  border: 1px solid #dcdfe6;\r\n  border-radius: 4px;\r\n  position: relative;\r\n  .el-icon-close {\r\n    position: absolute;\r\n    top: 15px;\r\n    right: 15px;\r\n  }\r\n}\r\n.isEndTime{\r\n  border: 1px solid #FFEC8B;\r\n  box-shadow: 0 2px 2px 2px #f5f5f5;\r\n}\r\n.width600{\r\n  width: 600px;\r\n}\r\n.width350 {\r\n  width: 350px;\r\n}\r\n.width50 {\r\n  width: 75px;\r\n}\r\n.test {\r\n  color: #9d9d9d;\r\n}\r\n.display-flex {\r\n  display: flex;\r\n}\r\n.justify-content {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n.content {\r\n  height: 50px;\r\n  line-height: 50px;\r\n}\r\n.text-index10 {\r\n  text-indent: 10px;\r\n}\r\n.tree {\r\n  width: 700px;\r\n  border-right: 1px solid #ccc;\r\n  border-top: 1px solid #ccc;\r\n  border-left: 1px solid #ccc;\r\n  span {\r\n    display: inline-block;\r\n    width: 50%;\r\n  }\r\n  span {\r\n    border-bottom: 1px solid #ccc;\r\n  }\r\n  .l {\r\n    border-right: 1px solid #ccc;\r\n  }\r\n}\r\n</style>\r\n"]}]}