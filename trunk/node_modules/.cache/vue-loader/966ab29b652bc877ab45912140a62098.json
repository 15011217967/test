{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\OC\\user\\position_list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\OC\\user\\position_list.vue","mtime":1572415125203},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n/**\r\n * 职位管理\r\n */\r\nimport PositionDetailsAy from \"@/views/OC/user/position_details.vue\";\r\nimport PersonNumAy from \"@/views/OC/user/positionPersons.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    [PositionDetailsAy.name]: PositionDetailsAy,\r\n    PersonNumAy\r\n  },\r\n  data() {\r\n    return {\r\n      filtersData: {\r\n        pageIndex: 1, //当前页码\r\n        pageSize: 10, //每页数量\r\n        used: null, //有效状态\r\n        filter: \"\", //搜索关键字\r\n        startDate: \"\",\r\n        endDate: \"\"\r\n      },\r\n      tableListData: [],\r\n      cateOptions: [\r\n        {\r\n          label: \"江苏\",\r\n          cities: []\r\n        }\r\n      ],\r\n      itemStautsParam: {\r\n        type: \"add\",\r\n        title: \"新增职位\",\r\n        id: \"\"\r\n      },\r\n      props: {\r\n        value: \"id\",\r\n        label: \"name\",\r\n        children: \"cities\"\r\n      },\r\n      //搜索项职位\r\n      cateParentData: {\r\n        level: 0\r\n      },\r\n      pickerOptions: {\r\n        shortcuts: [\r\n          {\r\n            text: \"最近一周\",\r\n            onClick(picker) {\r\n              const end = new Date();\r\n              const start = new Date();\r\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n              picker.$emit(\"pick\", [start, end]);\r\n            }\r\n          },\r\n          {\r\n            text: \"最近一个月\",\r\n            onClick(picker) {\r\n              const end = new Date();\r\n              const start = new Date();\r\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n              picker.$emit(\"pick\", [start, end]);\r\n            }\r\n          },\r\n          {\r\n            text: \"最近三个月\",\r\n            onClick(picker) {\r\n              const end = new Date();\r\n              const start = new Date();\r\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\r\n              picker.$emit(\"pick\", [start, end]);\r\n            }\r\n          }\r\n        ]\r\n      },\r\n\r\n      currentPage: 1, // 当前页数\r\n      total: null //总条目数\r\n    };\r\n  },\r\n  created() {\r\n    this.getTableList();\r\n    this.getCateOptions();\r\n    var self = this;\r\n    document.onkeydown = function(e) {\r\n      var key = window.event.keyCode;\r\n      if (key == 13) {\r\n        self.handleSearch();\r\n      }\r\n    };\r\n  },\r\n  mounted() {},\r\n  methods: {\r\n    //获取列表\r\n    getTableList() {\r\n      this.request(this.api.user.position_list, this.filtersData).then(data => {\r\n        let _data = data.data,\r\n          _dataLen = _data.length;\r\n        for (let i = 0; i < _dataLen; i++) {\r\n          _data[i].isShow = true;\r\n          _data[i].isType = 1;\r\n        }\r\n        this.tableListData = _data;\r\n        this.total = data.totalCount;\r\n      });\r\n    },\r\n    //获取职位\r\n    getCateOptions() {\r\n      this.request(this.api.user.position_list, { parentId: null }).then(\r\n        data => {\r\n          let _data = data.data,\r\n            dataLen = _data.length;\r\n          console.log(_data);\r\n          function toTree(data, parent_id = null || \"\") {\r\n            var tree = [];\r\n            var temp;\r\n            for (var i = 0; i < data.length; i++) {\r\n              if (data[i].parentId == parent_id) {\r\n                var obj = data[i];\r\n                temp = toTree(data, data[i].id);\r\n                if (temp.length > 0) {\r\n                  obj.children = temp;\r\n                }\r\n                tree.push(obj);\r\n              }\r\n            }\r\n            return tree;\r\n          }\r\n\r\n          var tree;\r\n          tree = toTree(_data, 0);\r\n          console.log(tree);\r\n        }\r\n      );\r\n    },\r\n    //改变时获取子职位\r\n    handleItemChange(val) {\r\n      console.log(val);\r\n      let value = val[0];\r\n      this.request(this.api.user.position_list, { parentId: value }).then(\r\n        data => {\r\n          let cities = (data && data && data.data) || [];\r\n          for (let i = 0; i < this.cateOptions.length; i++) {\r\n            console.log(this.cateOptions[i].id == value);\r\n            if (this.cateOptions[i].id == value) {\r\n              this.cateOptions[i].cities = cities; // 视图未更新\r\n              //this.$set(this.cateOptions[i], 'cities', cities) // right\r\n              break;\r\n            }\r\n          }\r\n          console.log(this.cateOptions);\r\n        }\r\n      );\r\n    },\r\n    //滑块开关\r\n    switchValid(params) {\r\n      let self = this;\r\n      let urlCon = this.util.deepCopy(self.api.user.position_save);\r\n      urlCon.tip = false;\r\n      self.request(urlCon, params).then(data => {\r\n      });\r\n    },\r\n    deleteItem(val) {\r\n      let self = this;\r\n      self.$confirm(\"此操作将永久删除该数据, 是否继续?\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      })\r\n        .then(() => {\r\n          self.request(self.api.user.position_delete, val).then(data => {\r\n            self.getTableList();\r\n            self.$message({\r\n              type: \"success\",\r\n              message: \"删除成功!\"\r\n            });\r\n          });\r\n        })\r\n        .catch(() => {});\r\n    },\r\n    //搜索\r\n    handleSearch() {\r\n      this.filtersData.pageIndex = 1;\r\n      this.getTableList();\r\n    },\r\n    //清空重置\r\n    handleResetFilters(formName) {\r\n      this.$refs[formName].resetFields();\r\n    },\r\n    //新增职位\r\n    openAddClass() {\r\n      (this.itemStautsParam.type = \"add\"),\r\n        (this.itemStautsParam.title = \"新增职位\");\r\n      this.$refs.positionDetailsCpt.positionDetailsPopupInit();\r\n    },\r\n    //查看  //查看 及修改 只带ID过去取消传参\r\n    handleShowClick(_id) {\r\n      this.itemStautsParam.type = \"show\";\r\n      this.itemStautsParam.title = \"查看职位\";\r\n      this.itemStautsParam.id = _id;\r\n      this.$refs.positionDetailsCpt.positionDetailsPopupInit();\r\n    },\r\n    //修改职位\r\n    handleEditClick(_id) {\r\n      this.itemStautsParam.type = \"edit\";\r\n      this.itemStautsParam.title = \"修改职位\";\r\n      this.itemStautsParam.id = _id;\r\n      this.$refs.positionDetailsCpt.positionDetailsPopupInit();\r\n    },\r\n    //查看机构/部门下人员\r\n    handleShowPersonNumClick(_id) {\r\n      this.itemStautsParam.type = \"show\";\r\n      this.itemStautsParam.title = \"查看人员\";\r\n      this.itemStautsParam.id = _id;\r\n      this.$refs.personNumCpt.getClassData();\r\n    },\r\n    //当前页数修改时发生改变\r\n    handleCurrentChange(val) {\r\n      this.filtersData.pageIndex = val;\r\n      this.getTableList();\r\n    },\r\n    // 每页显示多少条时发生改变\r\n    handleSizeChange(val) {\r\n      this.filtersData.pageSize = val;\r\n      this.getTableList();\r\n    },\r\n    //子组件传参刷新 父组件\r\n    refreshList() {\r\n      this.handleResetFilters(\"filtersForm\");\r\n      this.handleSearch();\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["position_list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6GA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"position_list.vue","sourceRoot":"src/views/OC/user","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"item-margin\">\r\n      <el-form\r\n        class=\"item-form\"\r\n        :model=\"filtersData\"\r\n        label-width=\"90px\"\r\n        size=\"small\"\r\n        ref=\"filtersForm\"\r\n        inline\r\n      >\r\n        <el-form-item prop=\"filter\" label=\"模糊查询：\">\r\n          <el-input class=\"input-w\" placeholder=\"职位编号/职位名称\" v-model=\"filtersData.filter\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"创建时间：\" prop=\"startDate\">\r\n          <el-date-picker v-model=\"filtersData.startDate\" type=\"date\" placeholder=\"开始日期\"></el-date-picker>\r\n        </el-form-item>\r\n        <el-form-item prop=\"endDate\">\r\n          <el-date-picker v-model=\"filtersData.endDate\" type=\"date\" placeholder=\"结束日期\"></el-date-picker>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button @click=\"handleSearch\" type=\"primary\" plain size=\"small\">搜索</el-button>\r\n          <el-button @click=\"handleResetFilters('filtersForm')\" size=\"small\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n    <!--table  -->\r\n    <div class=\"item-margin\">\r\n      <div class=\"item-cont\">\r\n        <el-button-group>\r\n          <el-button size=\"small\" type=\"primary\" @click=\"openAddClass\" >新增</el-button>\r\n        </el-button-group>\r\n      </div>\r\n      <div class=\"item-table\">\r\n        <el-table\r\n          :data=\"tableListData\"\r\n          stripe\r\n          empty-text=\"暂无数据\"\r\n          header-align=\"center\"\r\n          header-row-class-name=\"item-table-header\"\r\n          :highlight-current-row=\"true\"\r\n        >\r\n          <el-table-column type=\"selection\" min-width=\"20\"></el-table-column>\r\n          <el-table-column prop=\"code\" align=\"center\" label=\"职位编号\" min-width=\"80\"></el-table-column>\r\n          <el-table-column prop=\"name\" align=\"center\" label=\"职位名称\" min-width=\"80\"></el-table-column>\r\n          <el-table-column prop=\"jobDescribe\" align=\"center\" label=\"职位描述\" min-width=\"80\"></el-table-column>\r\n          <el-table-column prop=\"personNum\" align=\"center\" label=\"关联人员\" min-width=\"80\">\r\n            <template slot-scope=\"scope\">\r\n              <el-button\r\n                v-if=\"scope.row.personNum !=0\"\r\n                @click=\"handleShowPersonNumClick(scope.row.id)\"\r\n                type=\"text\"\r\n                size=\"small\"\r\n              >{{scope.row.personNum}}</el-button>\r\n              <p v-else>--</p>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"createTime\" align=\"center\" label=\"创建时间\" min-width=\"80\">\r\n            <template slot-scope=\"scope\">{{scope.row.createTime|timestampToTime}}</template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"used\" align=\"center\" label=\"启停状态\" min-width=\"80\">\r\n            <template slot-scope=\"scope\">\r\n              <el-switch\r\n                v-model=\"scope.row.used\"\r\n                active-color=\"#13ce66\"\r\n                @change=\"switchValid(scope.row)\"\r\n                inactive-color=\"#9d9d9d\"\r\n              ></el-switch>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column\r\n            fixed=\"right\"\r\n            label-class-name=\"text-center\"\r\n            class-name=\"text-center\"\r\n            align=\"center\"\r\n            label=\"操作\"\r\n            width=\"140\"\r\n          >\r\n            <template slot-scope=\"scope\">\r\n              <el-button @click=\"handleEditClick(scope.row.id)\" type=\"text\" size=\"small\">编辑</el-button>\r\n              <el-button @click=\"deleteItem(scope.row)\" type=\"text\" size=\"small\">删除</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n        <div class=\"pagination mt-10 mb-20\">\r\n          <el-pagination\r\n            class=\"mr-20\"\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"filtersData.pageIndex\"\r\n            :page-sizes=\"[10,20,30,40,50]\"\r\n            :page-size=\"filtersData.pageSize\"\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=\"total\"\r\n          ></el-pagination>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!--table END  -->\r\n    <tp-class-details\r\n      :itemParam=\"itemStautsParam\"\r\n      @refreshItem=\"refreshList\"\r\n      ref=\"positionDetailsCpt\"\r\n    ></tp-class-details>\r\n    <PersonNumAy :itemParam=\"itemStautsParam\" @refreshItem=\"refreshList\" ref=\"personNumCpt\"></PersonNumAy>\r\n  </div>\r\n</template>\r\n<script>\r\n/**\r\n * 职位管理\r\n */\r\nimport PositionDetailsAy from \"@/views/OC/user/position_details.vue\";\r\nimport PersonNumAy from \"@/views/OC/user/positionPersons.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    [PositionDetailsAy.name]: PositionDetailsAy,\r\n    PersonNumAy\r\n  },\r\n  data() {\r\n    return {\r\n      filtersData: {\r\n        pageIndex: 1, //当前页码\r\n        pageSize: 10, //每页数量\r\n        used: null, //有效状态\r\n        filter: \"\", //搜索关键字\r\n        startDate: \"\",\r\n        endDate: \"\"\r\n      },\r\n      tableListData: [],\r\n      cateOptions: [\r\n        {\r\n          label: \"江苏\",\r\n          cities: []\r\n        }\r\n      ],\r\n      itemStautsParam: {\r\n        type: \"add\",\r\n        title: \"新增职位\",\r\n        id: \"\"\r\n      },\r\n      props: {\r\n        value: \"id\",\r\n        label: \"name\",\r\n        children: \"cities\"\r\n      },\r\n      //搜索项职位\r\n      cateParentData: {\r\n        level: 0\r\n      },\r\n      pickerOptions: {\r\n        shortcuts: [\r\n          {\r\n            text: \"最近一周\",\r\n            onClick(picker) {\r\n              const end = new Date();\r\n              const start = new Date();\r\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n              picker.$emit(\"pick\", [start, end]);\r\n            }\r\n          },\r\n          {\r\n            text: \"最近一个月\",\r\n            onClick(picker) {\r\n              const end = new Date();\r\n              const start = new Date();\r\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n              picker.$emit(\"pick\", [start, end]);\r\n            }\r\n          },\r\n          {\r\n            text: \"最近三个月\",\r\n            onClick(picker) {\r\n              const end = new Date();\r\n              const start = new Date();\r\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\r\n              picker.$emit(\"pick\", [start, end]);\r\n            }\r\n          }\r\n        ]\r\n      },\r\n\r\n      currentPage: 1, // 当前页数\r\n      total: null //总条目数\r\n    };\r\n  },\r\n  created() {\r\n    this.getTableList();\r\n    this.getCateOptions();\r\n    var self = this;\r\n    document.onkeydown = function(e) {\r\n      var key = window.event.keyCode;\r\n      if (key == 13) {\r\n        self.handleSearch();\r\n      }\r\n    };\r\n  },\r\n  mounted() {},\r\n  methods: {\r\n    //获取列表\r\n    getTableList() {\r\n      this.request(this.api.user.position_list, this.filtersData).then(data => {\r\n        let _data = data.data,\r\n          _dataLen = _data.length;\r\n        for (let i = 0; i < _dataLen; i++) {\r\n          _data[i].isShow = true;\r\n          _data[i].isType = 1;\r\n        }\r\n        this.tableListData = _data;\r\n        this.total = data.totalCount;\r\n      });\r\n    },\r\n    //获取职位\r\n    getCateOptions() {\r\n      this.request(this.api.user.position_list, { parentId: null }).then(\r\n        data => {\r\n          let _data = data.data,\r\n            dataLen = _data.length;\r\n          console.log(_data);\r\n          function toTree(data, parent_id = null || \"\") {\r\n            var tree = [];\r\n            var temp;\r\n            for (var i = 0; i < data.length; i++) {\r\n              if (data[i].parentId == parent_id) {\r\n                var obj = data[i];\r\n                temp = toTree(data, data[i].id);\r\n                if (temp.length > 0) {\r\n                  obj.children = temp;\r\n                }\r\n                tree.push(obj);\r\n              }\r\n            }\r\n            return tree;\r\n          }\r\n\r\n          var tree;\r\n          tree = toTree(_data, 0);\r\n          console.log(tree);\r\n        }\r\n      );\r\n    },\r\n    //改变时获取子职位\r\n    handleItemChange(val) {\r\n      console.log(val);\r\n      let value = val[0];\r\n      this.request(this.api.user.position_list, { parentId: value }).then(\r\n        data => {\r\n          let cities = (data && data && data.data) || [];\r\n          for (let i = 0; i < this.cateOptions.length; i++) {\r\n            console.log(this.cateOptions[i].id == value);\r\n            if (this.cateOptions[i].id == value) {\r\n              this.cateOptions[i].cities = cities; // 视图未更新\r\n              //this.$set(this.cateOptions[i], 'cities', cities) // right\r\n              break;\r\n            }\r\n          }\r\n          console.log(this.cateOptions);\r\n        }\r\n      );\r\n    },\r\n    //滑块开关\r\n    switchValid(params) {\r\n      let self = this;\r\n      let urlCon = this.util.deepCopy(self.api.user.position_save);\r\n      urlCon.tip = false;\r\n      self.request(urlCon, params).then(data => {\r\n      });\r\n    },\r\n    deleteItem(val) {\r\n      let self = this;\r\n      self.$confirm(\"此操作将永久删除该数据, 是否继续?\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      })\r\n        .then(() => {\r\n          self.request(self.api.user.position_delete, val).then(data => {\r\n            self.getTableList();\r\n            self.$message({\r\n              type: \"success\",\r\n              message: \"删除成功!\"\r\n            });\r\n          });\r\n        })\r\n        .catch(() => {});\r\n    },\r\n    //搜索\r\n    handleSearch() {\r\n      this.filtersData.pageIndex = 1;\r\n      this.getTableList();\r\n    },\r\n    //清空重置\r\n    handleResetFilters(formName) {\r\n      this.$refs[formName].resetFields();\r\n    },\r\n    //新增职位\r\n    openAddClass() {\r\n      (this.itemStautsParam.type = \"add\"),\r\n        (this.itemStautsParam.title = \"新增职位\");\r\n      this.$refs.positionDetailsCpt.positionDetailsPopupInit();\r\n    },\r\n    //查看  //查看 及修改 只带ID过去取消传参\r\n    handleShowClick(_id) {\r\n      this.itemStautsParam.type = \"show\";\r\n      this.itemStautsParam.title = \"查看职位\";\r\n      this.itemStautsParam.id = _id;\r\n      this.$refs.positionDetailsCpt.positionDetailsPopupInit();\r\n    },\r\n    //修改职位\r\n    handleEditClick(_id) {\r\n      this.itemStautsParam.type = \"edit\";\r\n      this.itemStautsParam.title = \"修改职位\";\r\n      this.itemStautsParam.id = _id;\r\n      this.$refs.positionDetailsCpt.positionDetailsPopupInit();\r\n    },\r\n    //查看机构/部门下人员\r\n    handleShowPersonNumClick(_id) {\r\n      this.itemStautsParam.type = \"show\";\r\n      this.itemStautsParam.title = \"查看人员\";\r\n      this.itemStautsParam.id = _id;\r\n      this.$refs.personNumCpt.getClassData();\r\n    },\r\n    //当前页数修改时发生改变\r\n    handleCurrentChange(val) {\r\n      this.filtersData.pageIndex = val;\r\n      this.getTableList();\r\n    },\r\n    // 每页显示多少条时发生改变\r\n    handleSizeChange(val) {\r\n      this.filtersData.pageSize = val;\r\n      this.getTableList();\r\n    },\r\n    //子组件传参刷新 父组件\r\n    refreshList() {\r\n      this.handleResetFilters(\"filtersForm\");\r\n      this.handleSearch();\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"less\" scoped>\r\nh5 {\r\n  color: #222;\r\n  margin-left: -15px;\r\n}\r\n.test {\r\n  color: #9d9d9d;\r\n}\r\n</style>\r\n"]}]}