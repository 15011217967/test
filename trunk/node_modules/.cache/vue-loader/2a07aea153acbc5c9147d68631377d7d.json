{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\product\\components\\CommondityBasicAndTag.vue?vue&type=template&id=63d36c06&scoped=true&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\product\\components\\CommondityBasicAndTag.vue","mtime":1585053690051},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1558492728890},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"el-tabs\",\n    {\n      staticClass: \"basic-wrap pt-20\",\n      attrs: { type: \"card\" },\n      model: {\n        value: _vm.activeName,\n        callback: function($$v) {\n          _vm.activeName = $$v\n        },\n        expression: \"activeName\"\n      }\n    },\n    [\n      _c(\n        \"el-tab-pane\",\n        { attrs: { label: \"基本信息\", name: \"basic\" } },\n        [\n          _c(\"h5\", { staticClass: \"info\" }, [\n            _vm._v(\"\\n      基本信息\\n      \")\n          ]),\n          _vm._l(_vm.productFormData.productInfoAttrs, function(item, index) {\n            return _c(\n              \"el-form-item\",\n              {\n                key: index,\n                attrs: {\n                  prop: \"productInfoAttrs.\" + index + \".infoAttrId\",\n                  label: item.infoName + \"：\",\n                  rules: {\n                    required: item.required,\n                    message: \"请选择内容\",\n                    trigger: \"change\"\n                  }\n                }\n              },\n              [\n                _c(\n                  \"el-select\",\n                  {\n                    staticClass: \"input-w\",\n                    attrs: {\n                      disabled: _vm.showDisabled,\n                      placeholder: \"请选择\"\n                    },\n                    on: { change: _vm.basicSelectGet },\n                    model: {\n                      value: item.infoAttrId,\n                      callback: function($$v) {\n                        _vm.$set(item, \"infoAttrId\", $$v)\n                      },\n                      expression: \"item.infoAttrId\"\n                    }\n                  },\n                  _vm._l(item._children, function(list) {\n                    return _c(\"el-option\", {\n                      key: list.id,\n                      attrs: { label: list.name, value: list.id }\n                    })\n                  }),\n                  1\n                )\n              ],\n              1\n            )\n          })\n        ],\n        2\n      ),\n      _c(\n        \"el-tab-pane\",\n        { attrs: { label: \"吊牌信息\", name: \"tag\" } },\n        [\n          _c(\"h5\", { staticClass: \"info\" }, [\n            _vm._v(\"\\n      档案归属\\n      \"),\n            _c(\"span\")\n          ]),\n          _c(\n            \"el-form-item\",\n            {\n              attrs: {\n                prop: \"ownerId\",\n                rules: {\n                  required: true,\n                  message: \"请选择货主\",\n                  trigger: \"change\"\n                },\n                label: \"归属货主：\",\n                \"value-key\": \"code\"\n              }\n            },\n            [\n              _c(\n                \"el-select\",\n                {\n                  staticClass: \"input-w\",\n                  attrs: {\n                    filterable: \"\",\n                    disabled: _vm.editDisabled,\n                    placeholder: \"请选择\"\n                  },\n                  on: { change: _vm.ownerGet },\n                  model: {\n                    value: _vm.productFormData.ownerName,\n                    callback: function($$v) {\n                      _vm.$set(_vm.productFormData, \"ownerName\", $$v)\n                    },\n                    expression: \"productFormData.ownerName\"\n                  }\n                },\n                _vm._l(_vm.ownerOptions, function(item, index) {\n                  return _c(\"el-option\", {\n                    key: index.id,\n                    attrs: { label: item.name, value: item.code }\n                  })\n                }),\n                1\n              )\n            ],\n            1\n          ),\n          _c(\"h5\", { staticClass: \"info\" }, [\n            _vm._v(\"\\n      吊牌信息\\n      \"),\n            _c(\"span\")\n          ]),\n          _c(\n            \"el-form-item\",\n            {\n              attrs: {\n                prop: \"name\",\n                rules: {\n                  required: true,\n                  message: \"请输入品名\",\n                  trigger: \"blur\"\n                },\n                label: \"品名：\"\n              }\n            },\n            [\n              _c(\"el-input\", {\n                staticClass: \"input-w\",\n                attrs: {\n                  disabled: _vm.showDisabled,\n                  placeholder: \"请输入内容\"\n                },\n                model: {\n                  value: _vm.productFormData.name,\n                  callback: function($$v) {\n                    _vm.$set(_vm.productFormData, \"name\", $$v)\n                  },\n                  expression: \"productFormData.name\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            {\n              attrs: {\n                prop: \"brandName\",\n                rules: {\n                  required: true,\n                  message: \"请选择品牌\",\n                  trigger: \"change\"\n                },\n                label: \"品牌：\"\n              }\n            },\n            [\n              _c(\n                \"el-select\",\n                {\n                  staticClass: \"input-w\",\n                  attrs: {\n                    loading: _vm.productStatus.brandLoading,\n                    filterable: \"\",\n                    \"value-key\": \"id\",\n                    disabled: _vm.editDisabled,\n                    placeholder: \"请选择\"\n                  },\n                  on: {\n                    \"visible-change\": function($event) {\n                      return _vm.handleVisibleChange(\n                        $event,\n                        _vm.productStatus.brandActive,\n                        \"brand\"\n                      )\n                    },\n                    change: _vm.brandIdGet\n                  },\n                  model: {\n                    value: _vm.productFormData.brandName,\n                    callback: function($$v) {\n                      _vm.$set(_vm.productFormData, \"brandName\", $$v)\n                    },\n                    expression: \"productFormData.brandName\"\n                  }\n                },\n                _vm._l(_vm.brandOptions, function(item, index) {\n                  return _c(\"el-option\", {\n                    key: index.id,\n                    attrs: { label: item.name, value: item.id }\n                  })\n                }),\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            {\n              attrs: {\n                prop: \"tagBrandName\",\n                rules: {\n                  required: true,\n                  message: \"请选择打印品牌：\",\n                  trigger: \"change\"\n                },\n                label: \"打印品牌：\"\n              }\n            },\n            [\n              _c(\n                \"el-select\",\n                {\n                  staticClass: \"input-w\",\n                  attrs: {\n                    loading: _vm.productStatus.brandLoading,\n                    filterable: \"\",\n                    \"value-key\": \"id\",\n                    disabled: _vm.showDisabled,\n                    placeholder: \"请选择\"\n                  },\n                  on: {\n                    \"visible-change\": function($event) {\n                      return _vm.handleVisibleChange(\n                        $event,\n                        _vm.productStatus.brandActive,\n                        \"brand\"\n                      )\n                    },\n                    change: _vm.tagBrandIdGet\n                  },\n                  model: {\n                    value: _vm.productFormData.tagBrandName,\n                    callback: function($$v) {\n                      _vm.$set(_vm.productFormData, \"tagBrandName\", $$v)\n                    },\n                    expression: \"productFormData.tagBrandName\"\n                  }\n                },\n                _vm._l(_vm.brandOptions, function(item, index) {\n                  return _c(\"el-option\", {\n                    key: index.id,\n                    attrs: { label: item.name, value: item.id }\n                  })\n                }),\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            {\n              attrs: {\n                prop: \"originalCode\",\n                rules: {\n                  required: true,\n                  message: \"请输入原始款号\",\n                  trigger: \"blur\"\n                },\n                label: \"原始款号：\"\n              }\n            },\n            [\n              _c(\"el-input\", {\n                staticClass: \"input-w\",\n                attrs: {\n                  disabled: _vm.editDisabled,\n                  placeholder: \"请输入原始款号\"\n                },\n                model: {\n                  value: _vm.productFormData.originalCode,\n                  callback: function($$v) {\n                    _vm.$set(_vm.productFormData, \"originalCode\", $$v)\n                  },\n                  expression: \"productFormData.originalCode\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            {\n              attrs: {\n                prop: \"seasonalStyle\",\n                rules: {\n                  required: true,\n                  message: \"请选择季节波段\",\n                  trigger: \"change\"\n                },\n                label: \"季节波段：\"\n              }\n            },\n            [\n              _c(\n                \"el-select\",\n                {\n                  staticClass: \"input-w\",\n                  attrs: { disabled: _vm.editDisabled, placeholder: \"请选择\" },\n                  on: { change: _vm.seasonalStyleGet },\n                  model: {\n                    value: _vm.productFormData.seasonalStyle,\n                    callback: function($$v) {\n                      _vm.$set(_vm.productFormData, \"seasonalStyle\", $$v)\n                    },\n                    expression: \"productFormData.seasonalStyle\"\n                  }\n                },\n                _vm._l(_vm.seasonalStyleOptions, function(item, index) {\n                  return _c(\"el-option\", {\n                    key: index.code,\n                    attrs: { label: item.name, value: item.name }\n                  })\n                }),\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { prop: \"popularYear\", label: \"年份：\" } },\n            [\n              _c(\"el-date-picker\", {\n                staticClass: \"input-w\",\n                attrs: {\n                  disabled: _vm.showDisabled,\n                  type: \"year\",\n                  \"value-format\": \"yyyy\",\n                  placeholder: \"选择年\"\n                },\n                model: {\n                  value: _vm.productFormData.popularYear,\n                  callback: function($$v) {\n                    _vm.$set(_vm.productFormData, \"popularYear\", $$v)\n                  },\n                  expression: \"productFormData.popularYear\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { prop: \"designCompanyName\", label: \"设计商：\" } },\n            [\n              _c(\n                \"el-select\",\n                {\n                  staticClass: \"input-w\",\n                  attrs: {\n                    disabled: _vm.showDisabled,\n                    placeholder: \"请选择\",\n                    loading: _vm.productStatus.designCompanyLoading,\n                    filterable: \"\",\n                    \"value-key\": \"id\"\n                  },\n                  on: {\n                    change: _vm.designCompanyGet,\n                    \"visible-change\": function($event) {\n                      return _vm.handleVisibleChange(\n                        $event,\n                        _vm.productStatus.designCompanyActive,\n                        \"designCompany\"\n                      )\n                    }\n                  },\n                  model: {\n                    value: _vm.productFormData.designCompanyName,\n                    callback: function($$v) {\n                      _vm.$set(_vm.productFormData, \"designCompanyName\", $$v)\n                    },\n                    expression: \"productFormData.designCompanyName\"\n                  }\n                },\n                _vm._l(_vm.designCompanyOptions, function(item, index) {\n                  return _c(\"el-option\", {\n                    key: index.id,\n                    attrs: { label: item.name, value: item.id }\n                  })\n                }),\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { prop: \"brandOwnerName\", label: \"品牌商：\" } },\n            [\n              _c(\n                \"el-select\",\n                {\n                  staticClass: \"input-w\",\n                  attrs: {\n                    disabled: _vm.showDisabled,\n                    \"value-key\": \"id\",\n                    loading: _vm.productStatus.brandOwnerLoading,\n                    filterable: \"\",\n                    placeholder: \"请选择\"\n                  },\n                  on: {\n                    change: _vm.brandOwnerGet,\n                    \"visible-change\": function($event) {\n                      return _vm.handleVisibleChange(\n                        $event,\n                        _vm.productStatus.brandOwnerActive,\n                        \"brandOwner\"\n                      )\n                    }\n                  },\n                  model: {\n                    value: _vm.productFormData.brandOwnerName,\n                    callback: function($$v) {\n                      _vm.$set(_vm.productFormData, \"brandOwnerName\", $$v)\n                    },\n                    expression: \"productFormData.brandOwnerName\"\n                  }\n                },\n                _vm._l(_vm.brandOwnerOptions, function(item, index) {\n                  return _c(\"el-option\", {\n                    key: index.id,\n                    attrs: { label: item.name, value: item.id }\n                  })\n                }),\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { prop: \"performanceStandard\", label: \"执行标准：\" } },\n            [\n              _c(\"el-autocomplete\", {\n                staticClass: \"input-w\",\n                attrs: {\n                  debounce: 500,\n                  \"value-key\": \"name\",\n                  \"fetch-suggestions\": _vm.queryPerformanceStandardSearch,\n                  placeholder: \"请输入内容\"\n                },\n                on: { select: _vm.handlePerformanceStandardSelect },\n                model: {\n                  value: _vm.productFormData.performanceStandard,\n                  callback: function($$v) {\n                    _vm.$set(_vm.productFormData, \"performanceStandard\", $$v)\n                  },\n                  expression: \"productFormData.performanceStandard\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { prop: \"qualityInspector\", label: \"检验员：\" } },\n            [\n              _c(\"el-input\", {\n                staticClass: \"input-w\",\n                attrs: {\n                  disabled: _vm.showDisabled,\n                  placeholder: \"请输入内容\"\n                },\n                model: {\n                  value: _vm.productFormData.qualityInspector,\n                  callback: function($$v) {\n                    _vm.$set(_vm.productFormData, \"qualityInspector\", $$v)\n                  },\n                  expression: \"productFormData.qualityInspector\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { prop: \"lining\", label: \"里料：\" } },\n            [\n              _c(\"el-input\", {\n                staticClass: \"input-w\",\n                attrs: {\n                  disabled: _vm.showDisabled,\n                  placeholder: \"请输入内容\"\n                },\n                model: {\n                  value: _vm.productFormData.lining,\n                  callback: function($$v) {\n                    _vm.$set(_vm.productFormData, \"lining\", $$v)\n                  },\n                  expression: \"productFormData.lining\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { prop: \"ingredients\", label: \"配料：\" } },\n            [\n              _c(\"el-input\", {\n                staticClass: \"input-w\",\n                attrs: {\n                  disabled: _vm.showDisabled,\n                  placeholder: \"请输入内容\"\n                },\n                model: {\n                  value: _vm.productFormData.ingredients,\n                  callback: function($$v) {\n                    _vm.$set(_vm.productFormData, \"ingredients\", $$v)\n                  },\n                  expression: \"productFormData.ingredients\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { prop: \"filler\", label: \"填充物：\" } },\n            [\n              _c(\"el-input\", {\n                staticClass: \"input-w\",\n                attrs: {\n                  disabled: _vm.showDisabled,\n                  placeholder: \"请输入内容\"\n                },\n                model: {\n                  value: _vm.productFormData.filler,\n                  callback: function($$v) {\n                    _vm.$set(_vm.productFormData, \"filler\", $$v)\n                  },\n                  expression: \"productFormData.filler\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { prop: \"fabric\", label: \"面料：\" } },\n            [\n              _c(\"el-input\", {\n                staticClass: \"input-w\",\n                attrs: {\n                  disabled: _vm.showDisabled,\n                  placeholder: \"请输入内容\"\n                },\n                model: {\n                  value: _vm.productFormData.fabric,\n                  callback: function($$v) {\n                    _vm.$set(_vm.productFormData, \"fabric\", $$v)\n                  },\n                  expression: \"productFormData.fabric\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { prop: \"level\", label: \"等级：\" } },\n            [\n              _c(\"el-input\", {\n                staticClass: \"input-w\",\n                attrs: {\n                  disabled: _vm.showDisabled,\n                  placeholder: \"请输入内容\"\n                },\n                model: {\n                  value: _vm.productFormData.level,\n                  callback: function($$v) {\n                    _vm.$set(_vm.productFormData, \"level\", $$v)\n                  },\n                  expression: \"productFormData.level\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { prop: \"postalCode\", label: \"邮编：\" } },\n            [\n              _c(\"el-input\", {\n                staticClass: \"input-w\",\n                attrs: {\n                  disabled: _vm.showDisabled,\n                  placeholder: \"请输入内容\"\n                },\n                model: {\n                  value: _vm.productFormData.postalCode,\n                  callback: function($$v) {\n                    _vm.$set(_vm.productFormData, \"postalCode\", $$v)\n                  },\n                  expression: \"productFormData.postalCode\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { prop: \"safetyGrade\", label: \"安全类别：\" } },\n            [\n              _c(\"el-autocomplete\", {\n                staticClass: \"input-w\",\n                attrs: {\n                  debounce: 500,\n                  \"value-key\": \"name\",\n                  \"fetch-suggestions\": _vm.querySafetyGradeSearch,\n                  placeholder: \"请输入内容\"\n                },\n                on: { select: _vm.handleSafetyGradeSelect },\n                model: {\n                  value: _vm.productFormData.safetyGrade,\n                  callback: function($$v) {\n                    _vm.$set(_vm.productFormData, \"safetyGrade\", $$v)\n                  },\n                  expression: \"productFormData.safetyGrade\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { prop: \"brandOwnerAddress\", label: \"地址：\" } },\n            [\n              _c(\"el-input\", {\n                staticClass: \"input-w-2\",\n                attrs: {\n                  type: \"textarea\",\n                  disabled: _vm.showDisabled,\n                  autosize: { minRows: 2, maxRows: 4 },\n                  placeholder: \"请输入内容\"\n                },\n                model: {\n                  value: _vm.productFormData.brandOwnerAddress,\n                  callback: function($$v) {\n                    _vm.$set(_vm.productFormData, \"brandOwnerAddress\", $$v)\n                  },\n                  expression: \"productFormData.brandOwnerAddress\"\n                }\n              })\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}