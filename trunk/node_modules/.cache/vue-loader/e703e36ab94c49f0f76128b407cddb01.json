{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\collocation\\distribution\\DistributionAddGoods.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\collocation\\distribution\\DistributionAddGoods.vue","mtime":1576295043104},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport PageTable from \"@/views/collocation/components/PageTable\";\nimport CheckTags from \"@/views/collocation/components/CheckTags\";\nimport GoodsTable from \"@/views/collocation/components/GoodsTable\";\nimport ImagePopover from \"@/views/collocation/components/ImagePopover\";\nexport default {\n  name: '',\n  // 数据\n  data() {\n    return {\n      // 默认显示门店信息\n      activeName: 'store',\n      // 门店信息数据\n      storeInfo: {},\n      // 门店商品相关\n      productTypeList: [],\n      // 弹窗选择商品\n      SKUDialog: false,\n      // 是否显示选中的\n      checkedGoodsShow: false,\n      // 查询商品参数\n      formData: {\n        // 所属机构或货主\n        ownerId: '',\n        // 所属仓库\n        warehouseCode: '',\n        // 商品分类\n        cateIdentifier: '',\n        // 价格筛选\n        retailPriceGE: '',\n        retailPriceLE: '',\n        // 库存量\n        availableQuantityGE: '',\n        availableQuantityLE: '',\n        // 设计商\n        designCompanyId: '',\n        // 品牌\n        brandId: '',\n        // 综合搜索\n        searchWords: '',\n        // 标签\n        collocationTagIdList: [],\n        // 当前页码\n        pageIndex: 1,\n        // 每页数量\n        pageSize: 10,\n        // 是否有效\n        valid: true,\n        validStock: true\n      },\n      // 商品主表格数据\n      tableData: {},\n      tableDataCheckedRow: {},\n      // 弹窗商品数据\n      SKUTableData: [],\n      // 选择的商品\n      checkedSKUTableData: [],\n      checkedSKUTotalPrice: 0,\n      checkedSKUTotal: 0,\n      // 提交信息\n      distributionInfo: {},\n\n      /** 商品查询辅助数据*/\n      // 验证\n      rules: {\n        money: [\n          { required: false, validator: this.moneyRule, trigger: 'blur'}\n        ],\n        count: [\n          { required: false, validator: this.countRule, trigger: 'blur'}\n        ]\n      },\n      // 分类映射\n      props:{\n        value: 'id',\n        label:'name',\n        children: 'children'\n      },\n      // 分类数据\n      classData:[],\n      classList:[],\n      // 选中的分类\n      cateArr:[],\n      // 品牌\n      brandOptions:[],\n      // 设计商\n      designCompanyOptions:[]\n      /** 商品查询辅助数据--end */\n    }\n  },\n  // 组件\n  components: {\n    PageTable,\n    GoodsTable,\n    CheckTags,\n    ImagePopover\n  },\n  created(){\n    // 获取上页面缓存的门店信息\n    let distributionInfo = sessionStorage.getItem('DISTRIBUTION_INFO');\n    if(distributionInfo){\n      this.distributionInfo = JSON.parse(distributionInfo);\n      this.formData.ownerId = this.distributionInfo.goodsOwner;\n      this.formData.warehouseCode = this.distributionInfo.warehouseCode;\n    }else {\n      this.$notify.error({ title: '错误',message: '门店信息丢失'});\n      // 回退到选择门店;\n      let module = '/' + this.$route.path.split('/')[1];\n      this.$router.push({\n        path: module + '/distribution/distribution_add'\n      });\n    }\n  },\n  // 初始化数据\n  mounted() {\n    this.$nextTick(()=> {\n      this.getStoreInfo();\n      this.getDesignCompanyOptions();\n      this.getBrandOptions();\n      this.getClassData();\n      this.getTableData();\n    })\n  },\n  // 方法\n  methods: {\n    // 获取门店信息\n    getStoreInfo(){\n      if(this.distributionInfo.storeType) return;\n      this.request(this.api.retailStore.storeBasic_get, {id: this.distributionInfo.storeId}).then(data => {\n        this.storeInfo = data;\n        this.distributionInfo.storeType = this.storeInfo.type;\n      });\n    },\n    // 获取门店热门销售标签\n    getStoreTags(){\n      if(this.productTypeList.length > 0) return;\n      this.request(this.api.retailStore.storeProduct_listTagByStoreId, {storeId: this.distributionInfo.storeId}).then(data => {\n        this.productTypeList = data;\n      });\n    },\n    // 点击搜索\n    searchTableData(){\n      this.formData.pageIndex = 1;\n      this.getTableData();\n    },\n    // 获取商品数据\n    getTableData() {\n      this.$nextTick(() => {\n        setTimeout(()=> {\n          this.$refs.searchForm.validate((valid) => {\n            if (valid) {\n              let params = JSON.parse(JSON.stringify(this.formData));\n              if(params.collocationTagIdList.length === 0){\n                params.collocationTagIdList = null;\n              }\n              if(params.availableQuantityGE || params.availableQuantityLE ){\n                params.validStock = null;\n              }\n              this.request(this.api.product.product_listProduct, params).then(data => {\n                this.tableData = data;\n              });\n            } else {\n              return false;\n            }\n          });\n        },0)\n      })\n    },\n    // 重置查询条件\n    initFormData(formName){\n      this.$refs[formName].resetFields();\n      this.cateArr = [];\n      this.formData.cateIdentifier = '';\n      this.formData.retailPriceGE = '';\n      this.formData.retailPriceLE = '';\n      this.formData.availableQuantityGE = '';\n      this.formData.availableQuantityLE = '';\n      this.$refs.checkTags.clearChecked();\n    },\n    // 获取选择商品\n    checkGoods(row){\n      this.tableDataCheckedRow = row;\n      this.request(this.api.product.productGoods_listProductGoods, {productId: row.id, validStock: 1, orderBy: 'productCode', ownerId: this.formData.ownerId, warehouseCode: this.formData.warehouseCode}).then(data => {\n        if(data.data && data.data.length){\n          for(let n = 0; n < data.data.length; n++){\n            data.data[n].quantity = 0;\n            data.data[n].purchasePrice = data.data[n].retailPrice;\n            if(this.checkedSKUTableData.length > 0){\n              for(let i = 0; i < this.checkedSKUTableData.length; i++){\n                if(this.checkedSKUTableData[i].id === data.data[n].id){\n                  data.data[n].quantity = this.checkedSKUTableData[i].quantity;\n                }\n              }\n            }\n          }\n        }\n        this.SKUTableData = data.data;\n        this.SKUDialog = true;\n      });\n    },\n    // 确认选择商品\n    checkGoodsSub(){\n      for(let i = 0; i < this.SKUTableData.length; i++){\n        let good = this.SKUTableData[i];\n        let checkedGood = this.checkedSKUTableData.find(item => {\n          return item.id === good.id;\n        });\n        if(checkedGood){\n          if(good.quantity === 0){\n            let index = this.checkedSKUTableData.find(item => {\n              return item.id === good.id;\n            });\n            this.checkedSKUTableData.splice(index, 1)\n          }else {\n            checkedGood.quantity = good.quantity;\n          }\n        }else if(!checkedGood && good.quantity > 0){\n          this.SKUTableData[i].brandName = this.tableDataCheckedRow.brandName;\n          this.SKUTableData[i].brandId = this.tableDataCheckedRow.brandId;\n          this.SKUTableData[i].designCompanyName = this.tableDataCheckedRow.designCompanyName;\n          this.SKUTableData[i].designCompanyId = this.tableDataCheckedRow.designCompanyId;\n          this.checkedSKUTableData.push(this.SKUTableData[i]);\n        }\n      }\n      // 计算总价\n      this.checkedTotalPrice();\n      this.SKUDialog = false;\n    },\n    // 类型切换\n    handleBeforeClick(activeName) {\n      if(activeName === 'store'){\n        this.getStoreInfo();\n      }\n      if(activeName === 'goods'){\n        this.getStoreTags();\n      }\n\n    },\n    // 计算总价   20191031 新增计算总件数\n    checkedTotalPrice(){\n      this.checkedSKUTotal = 0;\n      this.checkedSKUTotalPrice = 0;\n      if(this.checkedSKUTableData.length){\n        this.checkedSKUTableData.forEach(item => {\n          this.checkedSKUTotalPrice += Number(item.purchasePrice) * Number(item.quantity);\n          this.checkedSKUTotal += Number(item.quantity)\n        });\n      }\n      this.checkedSKUTotalPrice = this.checkedSKUTotalPrice.toFixed(2)\n    },\n    // 获取更多标签\n    getMoreTags() {},\n    // 最终提交\n    finalSub(){\n      if(!this.checkedSKUTableData.length){\n        return\n      }\n      this.distributionInfo.allotProductInfoList = [];\n      this.distributionInfo.totalPrice = this.checkedSKUTotalPrice;\n      let goodsNum = 0;\n      this.checkedSKUTableData.forEach(item => {\n        let obj = {\n          // 货品编码\n          goodsCode: item.code,\n          // 货品名称\n          goodsName: item.name,\n          // 商品(spu)编码\n          productCode: item.productCode,\n          // 商品类型\n          productType: item.fullCateName,\n          // 商品图片\n          image: item.image,\n          // 品牌\n          brandName: item.brandName,\n          brandCode: item.brandId,\n          // 设计商\n          designCompanyName: item.designCompanyName,\n          designCompanyCode: item.designCompanyId,\n          // 尺码\n          size: item.size,\n          // 颜色\n          color: item.color,\n          // 吊牌价\n          retailPrice: item.retailPrice,\n          // 销售单价\n          purchasePrice: item.purchasePrice,\n          // 数量\n          quantity: item.quantity\n        };\n        this.distributionInfo.allotProductInfoList.push(obj);\n        goodsNum += item.quantity;\n      });\n      this.distributionInfo.goodsNum = goodsNum;\n      this.request(this.api.order.allotGoods_save, this.distributionInfo).then(data => {\n        if(data && data.length){\n          let html = '';\n          data.forEach(errItem => {\n            for(let i = 0; i < this.checkedSKUTableData.length; i++){\n              if(this.checkedSKUTableData[i].code == errItem.code){\n                if(errItem.qty == 0){\n                  this.checkedSKUTableData.splice(i, 1);\n                  html += '<p>'+ errItem.code + '：可用库存为0，已删除该商品；</p>';\n                }else {\n                  html += '<p>'+ errItem.code + '：可用库存不足，已更新为最大值' + errItem.qty + '；</p>';\n                  this.checkedSKUTableData[i].availableQuantity = errItem.qty;\n                  this.checkedSKUTableData[i].quantity = errItem.qty;\n                }\n                break;\n              }\n            }\n          });\n          this.$notify({\n            title: '提示',\n            duration: 0,\n            dangerouslyUseHTMLString: true,\n            message: html\n          });\n          // 计算总价\n          this.checkedTotalPrice();\n        }else {\n          this.$notify.success({ title: '成功',message: '新增成功'});\n          let module = '/' + this.$route.path.split('/')[1];\n          this.$router.push({\n            path: module + '/distribution/distribution_list'\n          })\n        }\n      });\n    },\n    /**\n     * 搜索商品参数下拉数据及验证\n     */\n    // 验证价格区间\n    moneyRule(rule, value,callback) {\n      const reg = /^[0-9]*$/;\n      if(!reg.test(this.formData.retailPriceGE) || !reg.test(this.formData.retailPriceLE)){\n        callback(new Error('价格区间必须是数字'));\n        return\n      }\n      if(this.formData.retailPriceGE && this.formData.retailPriceLE && this.formData.retailPriceGE >= this.formData.retailPriceLE){\n        callback(new Error('价格区间下限应小于上限'));\n      }else {\n        callback();\n      }\n    },\n    // 验证数量区间\n    countRule(rule, value,callback) {\n      const reg = /^[0-9]*$/;\n      if(!reg.test(this.formData.availableQuantityGE) || !reg.test(this.formData.availableQuantityLE)){\n        callback(new Error('库存量区间必须是数字'));\n        return\n      }\n      if(this.formData.availableQuantityGE && this.formData.availableQuantityLE && this.formData.availableQuantityGE >= this.formData.availableQuantityLE){\n        callback(new Error('库存量区间下限应小于上限'));\n      }else {\n        callback();\n      }\n    },\n    // 获取商品分类数据\n    getClassData(){\n      //分类类型（1：标准分类，2：定制分类，3：原料分类或者称为属性分类）\n      this.$common.getClassSelect(this,1).then(res =>{\n        this.classData=res.ztree;\n        this.classList=res.list;\n      })\n    },\n    // 商品分类Change\n    classChange(e){\n      if(e.length === 0){\n        this.formData.cateIdentifier = '';\n        return;\n      }\n      let cateId  = JSON.parse(JSON.stringify(e)).pop();\n      let obj = this.classList.find((item)=>(item.id == cateId));\n      this.formData.cateIdentifier = obj.identifier;\n    },\n    // 获取设计商\n    getDesignCompanyOptions(){\n      this.request(this.api.product.designCompany_list, {}).then(data => {\n        this.designCompanyOptions=data.data;\n      });\n    },\n    // 获取品牌\n    getBrandOptions(){\n      this.request(this.api.product.productBrand_list,{}).then(data => {\n        this.brandOptions= data.data;\n      });\n    }\n    /**\n     * 搜索商品参数下拉数据--end\n     */\n  },\n  // 计算属性\n  computed: {},\n  // 监听数据变化\n  watch: {}\n}\n",{"version":3,"sources":["DistributionAddGoods.vue"],"names":[],"mappingsfile":"DistributionAddGoods.vue","sourceRoot":"src/views/collocation/distribution","sourcesContent":["<style lang=\"less\" scoped>\r\n  .distribution-add-goods{display: flex;\r\n    .side{width: 320px;background: #fff;margin-left: 8px;line-height: 24px;\r\n      .tabs{margin-top: 10px;}\r\n      .store-info{\r\n        ul{\r\n          li{margin-bottom: 5px;position: relative;padding-left: 70px;\r\n            img{width: 80px;height: 80px;margin-right: 10px;margin-bottom: 10px;}\r\n            span{width: 70px;text-align: right;display: block;position: absolute;left: 0;top: 0;}\r\n          }\r\n        }\r\n      }\r\n      .goods-info{\r\n        .category{\r\n          ul{\r\n            li{width: 50%;float: left;margin-bottom: 5px;\r\n\r\n            }\r\n          }\r\n        }\r\n        .tags{\r\n          ul{\r\n            li{display: flex;\r\n              .label{display: inline-block;width: 80px;}\r\n              div{flex: 1;\r\n                .el-tag{margin-right: 5px;margin-bottom: 5px;}\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    .table-list{flex: 1;background: #fff;margin-top: 0;\r\n      .goods-list{\r\n        .type-list{padding-top: 0;padding-bottom: 0;\r\n\r\n        }\r\n      }\r\n      .check-goods-list{\r\n\r\n      }\r\n    }\r\n    .page-more{border-top: 1px solid #e6e8ed;margin-top: 10px;\r\n      div.btn{\r\n        width: 120px;border: 1px solid #e6e8ed;border-top: 1px solid #fff;margin: -1px auto 0;text-align: center;font-size: 12px;cursor: pointer;line-height: 30px;\r\n      }\r\n    }\r\n    .item-cont{\r\n      .total-price{float: left; width: 40%;}\r\n      .btns{float: right;}\r\n    }\r\n  }\r\n</style>\r\n<template>\r\n  <div class=\"distribution-add-goods\">\r\n    <div class=\"side\">\r\n      <div class=\"item-cont\">\r\n        <el-button size=\"small\" type=\"primary\" @click=\"checkedGoodsShow = true\">已选商品</el-button>\r\n        <el-tabs v-model=\"activeName\" class=\"tabs\" :before-leave=\"handleBeforeClick\" type=\"card\">\r\n          <el-tab-pane label=\"门店资料\" name=\"store\" class=\"store-info\">\r\n            <ul>\r\n              <li><span>门店名称：</span>{{ storeInfo.name }}</li>\r\n              <li><span>所在地区：</span>{{ storeInfo.provinceName }} {{ storeInfo.cityName }} {{ storeInfo.areaName }}</li>\r\n              <li><span>门店类型：</span>{{ \"STO001\" | codeToName(storeInfo.type) }}</li>\r\n              <li v-if=\"storeInfo.infosMap && storeInfo.infosMap.length\">\r\n                <span>经营类型：</span>\r\n                <i v-for=\"info in storeInfo.infosMap[0]\">{{ \"COM002\" | codeToName(info.type) }}</i></li>\r\n              <li><span>店铺面积：</span>{{ storeInfo.storeArea }}m²</li>\r\n              <li v-if=\"storeInfo.images && storeInfo.images.length\"><span>门店图片：</span>\r\n                <img :src=\"image.url\" alt=\"图片\" v-for=\"image in storeInfo.images\">\r\n              </li>\r\n              <li><span>收货人：</span>{{ distributionInfo.receiveMan }}</li>\r\n              <li><span>联系电话：</span>{{ distributionInfo.phone }}</li>\r\n              <li><span>收货地址：</span>{{ distributionInfo.provinceName }} {{ distributionInfo.cityName }} {{ distributionInfo.areaName }} {{ distributionInfo.addressInfo }}</li>\r\n            </ul>\r\n          </el-tab-pane>\r\n          <el-tab-pane label=\"商品相关\" name=\"goods\" class=\"goods-info\">\r\n            <div class=\"category\">\r\n              <h5>热销品类</h5>\r\n              <ul class=\"clearfix\">\r\n                <li v-for=\"(item, index) in productTypeList\">{{ ++index }}.{{ item.productType }}</li>\r\n              </ul>\r\n            </div>\r\n<!--            <div class=\"tags\">-->\r\n<!--              <h5>热销标签</h5>-->\r\n<!--              <ul>-->\r\n<!--                <li>-->\r\n<!--                  <span class=\"label\">适合色系：</span>-->\r\n<!--                  <div class=\"tag\">-->\r\n<!--                    <el-tag type=\"info\" size=\"mini\">标签三</el-tag>-->\r\n<!--                    <el-tag type=\"info\" size=\"mini\">标签三</el-tag>-->\r\n<!--                    <el-tag type=\"info\" size=\"mini\">标签三</el-tag>-->\r\n<!--                    <el-tag type=\"info\" size=\"mini\">标签三</el-tag>-->\r\n<!--                    <el-tag type=\"info\" size=\"mini\">标签三</el-tag>-->\r\n<!--                    <el-tag type=\"info\" size=\"mini\">标签三</el-tag>-->\r\n<!--                    <el-tag type=\"info\" size=\"mini\">标签三</el-tag>-->\r\n<!--                    <el-tag type=\"info\" size=\"mini\">标签三</el-tag>-->\r\n<!--                    <el-tag type=\"info\" size=\"mini\">标签三</el-tag>-->\r\n<!--                  </div>-->\r\n<!--                </li>-->\r\n<!--              </ul>-->\r\n<!--              <div class=\"page-more\">-->\r\n<!--                <div @click=\"getMoreTags\" class=\"btn\">-->\r\n<!--                  更多标签<i class=\"el-icon-arrow-down\"></i>-->\r\n<!--                </div>-->\r\n<!--              </div>-->\r\n<!--            </div>-->\r\n          </el-tab-pane>\r\n        </el-tabs>\r\n      </div>\r\n    </div>\r\n    <div class=\"table-list item-margin\">\r\n      <!--商品主列表-->\r\n      <div class=\"goods-list\" v-if=\"!checkedGoodsShow\">\r\n        <div class=\"\">\r\n          <el-form class=\"item-form\" :model=\"formData\" label-width=\"90px\" size=\"small\" ref=\"searchForm\" inline :rules=\"rules\">\r\n            <el-form-item label=\"商品分类：\">\r\n              <el-cascader\r\n                  class=\"input-w\"\r\n                  :options=\"classData\"\r\n                  v-model=\"cateArr\"\r\n                  @change=\"classChange\"\r\n                  :show-all-levels=\"false\"\r\n                  :props=\"props\"\r\n                  change-on-select\r\n                  clearable\r\n              ></el-cascader>\r\n            </el-form-item>\r\n            <el-form-item label=\"价格筛选：\" prop=\"money\">\r\n              <el-input class=\"input-w\" placeholder=\"请输入区间下限\" v-model.number=\"formData.retailPriceGE\"></el-input>\r\n              &nbsp;\r\n              <el-input class=\"input-w\" placeholder=\"请输入区间上限\" v-model.number=\"formData.retailPriceLE\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"库存量：\" prop=\"count\">\r\n              <el-input class=\"input-w\" placeholder=\"请输入区间下限\" v-model.number=\"formData.availableQuantityGE\"></el-input>\r\n              &nbsp;\r\n              <el-input class=\"input-w\" placeholder=\"请输入区间上限\" v-model.number=\"formData.availableQuantityLE\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"设计商：\" prop=\"designCompanyId\">\r\n              <el-select class=\"input-w\" placeholder=\"请选择\" v-model=\"formData.designCompanyId\" clearable filterable>\r\n                <el-option\r\n                    v-for=\"item in designCompanyOptions\"\r\n                    :key=\"item.id\"\r\n                    :label=\"item.name\"\r\n                    :value=\"item.id\"\r\n                ></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"品牌：\" prop=\"brandId\">\r\n              <el-select class=\"input-w\" placeholder=\"请选择\" v-model=\"formData.brandId\" clearable filterable>\r\n                <el-option\r\n                    v-for=\"item in brandOptions\"\r\n                    :key=\"item.id\"\r\n                    :label=\"item.name\"\r\n                    :value=\"item.id\"\r\n                ></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"综合搜索：\" prop=\"searchWords\">\r\n              <el-input class=\"input-w\" placeholder=\"款号、货号、名称\" v-model=\"formData.searchWords\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button @click=\"searchTableData\" type=\"primary\" plain>搜索</el-button>\r\n              <el-button @click=\"initFormData('searchForm')\" plain>重置</el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n          <div class=\"type-list item-cont\">\r\n            <check-tags :checked-data=\"formData.collocationTagIdList\" ref=\"checkTags\"></check-tags>\r\n          </div>\r\n        </div>\r\n        <div class=\"item-cont\">\r\n          <page-table :form-data=\"formData\" :get-data=\"getTableData\" :table-data=\"tableData\">\r\n            <el-table :data=\"tableData.data\" style=\"width: 100%\">\r\n              <el-table-column prop=\"code\" label=\"商品款号\"></el-table-column>\r\n              <el-table-column prop=\"name\" label=\"名称\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n              <el-table-column label=\"商品图片\">\r\n                <template slot-scope=\"scope\">\r\n                  <image-popover :img-src=\"scope.row.image\"></image-popover>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"brandName\" label=\"品牌\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n              <el-table-column prop=\"designCompanyName\" label=\"设计商\"></el-table-column>\r\n              <el-table-column prop=\"fullCateName\" label=\"品类\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n              <el-table-column prop=\"retailPrice\" label=\"吊牌价\"></el-table-column>\r\n              <el-table-column prop=\"availableQuantity\" label=\"库存量\"></el-table-column>\r\n              <el-table-column label=\"操作\" width=\"120\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-button type=\"text\" size=\"small\" @click=\"checkGoods(scope.row)\">选择</el-button>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </page-table>\r\n        </div>\r\n      </div>\r\n      <!--选中的商品-->\r\n      <div class=\"check-goods-list\" v-if=\"checkedGoodsShow\">\r\n        <goods-table :table-data=\"checkedSKUTableData\" key=\"2\" :is-del=\"true\" v-if=\"checkedGoodsShow\"></goods-table>\r\n        <div class=\"item-cont clearfix\">\r\n          <div class=\"total-price\">商品总价：{{ checkedSKUTotalPrice }}</div>\r\n          <div class=\"total-price\">商品总数：{{ checkedSKUTotal }}</div>\r\n          <div class=\"btns\">\r\n            <el-button type=\"primary\" @click=\"finalSub\" size=\"small\">完成配货</el-button>\r\n            <el-button type=\"primary\" @click=\"checkedGoodsShow = false\" size=\"small\">继续搭配</el-button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!--点击商品主列表  弹窗选择商品-->\r\n    <el-dialog title=\"选择SKU\" :visible.sync=\"SKUDialog\" width=\"80%\" :close-on-click-modal=\"false\">\r\n      <goods-table :table-data=\"SKUTableData\" key=\"1\" v-if=\"SKUDialog\"></goods-table>\r\n      <div class=\"item-cont clearfix \">\r\n        <div class=\"btns\">\r\n          <el-button type=\"primary\" @click=\"checkGoodsSub\" size=\"small\">确定</el-button>\r\n          <el-button @click=\"SKUDialog = false\" size=\"small\">取消</el-button>\r\n        </div>\r\n      </div>\r\n    </el-dialog>\r\n\r\n  </div>\r\n</template>\r\n<script>\r\n  import PageTable from \"@/views/collocation/components/PageTable\";\r\n  import CheckTags from \"@/views/collocation/components/CheckTags\";\r\n  import GoodsTable from \"@/views/collocation/components/GoodsTable\";\r\n  import ImagePopover from \"@/views/collocation/components/ImagePopover\";\r\n  export default {\r\n    name: '',\r\n    // 数据\r\n    data() {\r\n      return {\r\n        // 默认显示门店信息\r\n        activeName: 'store',\r\n        // 门店信息数据\r\n        storeInfo: {},\r\n        // 门店商品相关\r\n        productTypeList: [],\r\n        // 弹窗选择商品\r\n        SKUDialog: false,\r\n        // 是否显示选中的\r\n        checkedGoodsShow: false,\r\n        // 查询商品参数\r\n        formData: {\r\n          // 所属机构或货主\r\n          ownerId: '',\r\n          // 所属仓库\r\n          warehouseCode: '',\r\n          // 商品分类\r\n          cateIdentifier: '',\r\n          // 价格筛选\r\n          retailPriceGE: '',\r\n          retailPriceLE: '',\r\n          // 库存量\r\n          availableQuantityGE: '',\r\n          availableQuantityLE: '',\r\n          // 设计商\r\n          designCompanyId: '',\r\n          // 品牌\r\n          brandId: '',\r\n          // 综合搜索\r\n          searchWords: '',\r\n          // 标签\r\n          collocationTagIdList: [],\r\n          // 当前页码\r\n          pageIndex: 1,\r\n          // 每页数量\r\n          pageSize: 10,\r\n          // 是否有效\r\n          valid: true,\r\n          validStock: true\r\n        },\r\n        // 商品主表格数据\r\n        tableData: {},\r\n        tableDataCheckedRow: {},\r\n        // 弹窗商品数据\r\n        SKUTableData: [],\r\n        // 选择的商品\r\n        checkedSKUTableData: [],\r\n        checkedSKUTotalPrice: 0,\r\n        checkedSKUTotal: 0,\r\n        // 提交信息\r\n        distributionInfo: {},\r\n\r\n        /** 商品查询辅助数据*/\r\n        // 验证\r\n        rules: {\r\n          money: [\r\n            { required: false, validator: this.moneyRule, trigger: 'blur'}\r\n          ],\r\n          count: [\r\n            { required: false, validator: this.countRule, trigger: 'blur'}\r\n          ]\r\n        },\r\n        // 分类映射\r\n        props:{\r\n          value: 'id',\r\n          label:'name',\r\n          children: 'children'\r\n        },\r\n        // 分类数据\r\n        classData:[],\r\n        classList:[],\r\n        // 选中的分类\r\n        cateArr:[],\r\n        // 品牌\r\n        brandOptions:[],\r\n        // 设计商\r\n        designCompanyOptions:[]\r\n        /** 商品查询辅助数据--end */\r\n      }\r\n    },\r\n    // 组件\r\n    components: {\r\n      PageTable,\r\n      GoodsTable,\r\n      CheckTags,\r\n      ImagePopover\r\n    },\r\n    created(){\r\n      // 获取上页面缓存的门店信息\r\n      let distributionInfo = sessionStorage.getItem('DISTRIBUTION_INFO');\r\n      if(distributionInfo){\r\n        this.distributionInfo = JSON.parse(distributionInfo);\r\n        this.formData.ownerId = this.distributionInfo.goodsOwner;\r\n        this.formData.warehouseCode = this.distributionInfo.warehouseCode;\r\n      }else {\r\n        this.$notify.error({ title: '错误',message: '门店信息丢失'});\r\n        // 回退到选择门店;\r\n        let module = '/' + this.$route.path.split('/')[1];\r\n        this.$router.push({\r\n          path: module + '/distribution/distribution_add'\r\n        });\r\n      }\r\n    },\r\n    // 初始化数据\r\n    mounted() {\r\n      this.$nextTick(()=> {\r\n        this.getStoreInfo();\r\n        this.getDesignCompanyOptions();\r\n        this.getBrandOptions();\r\n        this.getClassData();\r\n        this.getTableData();\r\n      })\r\n    },\r\n    // 方法\r\n    methods: {\r\n      // 获取门店信息\r\n      getStoreInfo(){\r\n        if(this.distributionInfo.storeType) return;\r\n        this.request(this.api.retailStore.storeBasic_get, {id: this.distributionInfo.storeId}).then(data => {\r\n          this.storeInfo = data;\r\n          this.distributionInfo.storeType = this.storeInfo.type;\r\n        });\r\n      },\r\n      // 获取门店热门销售标签\r\n      getStoreTags(){\r\n        if(this.productTypeList.length > 0) return;\r\n        this.request(this.api.retailStore.storeProduct_listTagByStoreId, {storeId: this.distributionInfo.storeId}).then(data => {\r\n          this.productTypeList = data;\r\n        });\r\n      },\r\n      // 点击搜索\r\n      searchTableData(){\r\n        this.formData.pageIndex = 1;\r\n        this.getTableData();\r\n      },\r\n      // 获取商品数据\r\n      getTableData() {\r\n        this.$nextTick(() => {\r\n          setTimeout(()=> {\r\n            this.$refs.searchForm.validate((valid) => {\r\n              if (valid) {\r\n                let params = JSON.parse(JSON.stringify(this.formData));\r\n                if(params.collocationTagIdList.length === 0){\r\n                  params.collocationTagIdList = null;\r\n                }\r\n                if(params.availableQuantityGE || params.availableQuantityLE ){\r\n                  params.validStock = null;\r\n                }\r\n                this.request(this.api.product.product_listProduct, params).then(data => {\r\n                  this.tableData = data;\r\n                });\r\n              } else {\r\n                return false;\r\n              }\r\n            });\r\n          },0)\r\n        })\r\n      },\r\n      // 重置查询条件\r\n      initFormData(formName){\r\n        this.$refs[formName].resetFields();\r\n        this.cateArr = [];\r\n        this.formData.cateIdentifier = '';\r\n        this.formData.retailPriceGE = '';\r\n        this.formData.retailPriceLE = '';\r\n        this.formData.availableQuantityGE = '';\r\n        this.formData.availableQuantityLE = '';\r\n        this.$refs.checkTags.clearChecked();\r\n      },\r\n      // 获取选择商品\r\n      checkGoods(row){\r\n        this.tableDataCheckedRow = row;\r\n        this.request(this.api.product.productGoods_listProductGoods, {productId: row.id, validStock: 1, orderBy: 'productCode', ownerId: this.formData.ownerId, warehouseCode: this.formData.warehouseCode}).then(data => {\r\n          if(data.data && data.data.length){\r\n            for(let n = 0; n < data.data.length; n++){\r\n              data.data[n].quantity = 0;\r\n              data.data[n].purchasePrice = data.data[n].retailPrice;\r\n              if(this.checkedSKUTableData.length > 0){\r\n                for(let i = 0; i < this.checkedSKUTableData.length; i++){\r\n                  if(this.checkedSKUTableData[i].id === data.data[n].id){\r\n                    data.data[n].quantity = this.checkedSKUTableData[i].quantity;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          this.SKUTableData = data.data;\r\n          this.SKUDialog = true;\r\n        });\r\n      },\r\n      // 确认选择商品\r\n      checkGoodsSub(){\r\n        for(let i = 0; i < this.SKUTableData.length; i++){\r\n          let good = this.SKUTableData[i];\r\n          let checkedGood = this.checkedSKUTableData.find(item => {\r\n            return item.id === good.id;\r\n          });\r\n          if(checkedGood){\r\n            if(good.quantity === 0){\r\n              let index = this.checkedSKUTableData.find(item => {\r\n                return item.id === good.id;\r\n              });\r\n              this.checkedSKUTableData.splice(index, 1)\r\n            }else {\r\n              checkedGood.quantity = good.quantity;\r\n            }\r\n          }else if(!checkedGood && good.quantity > 0){\r\n            this.SKUTableData[i].brandName = this.tableDataCheckedRow.brandName;\r\n            this.SKUTableData[i].brandId = this.tableDataCheckedRow.brandId;\r\n            this.SKUTableData[i].designCompanyName = this.tableDataCheckedRow.designCompanyName;\r\n            this.SKUTableData[i].designCompanyId = this.tableDataCheckedRow.designCompanyId;\r\n            this.checkedSKUTableData.push(this.SKUTableData[i]);\r\n          }\r\n        }\r\n        // 计算总价\r\n        this.checkedTotalPrice();\r\n        this.SKUDialog = false;\r\n      },\r\n      // 类型切换\r\n      handleBeforeClick(activeName) {\r\n        if(activeName === 'store'){\r\n          this.getStoreInfo();\r\n        }\r\n        if(activeName === 'goods'){\r\n          this.getStoreTags();\r\n        }\r\n\r\n      },\r\n      // 计算总价   20191031 新增计算总件数\r\n      checkedTotalPrice(){\r\n        this.checkedSKUTotal = 0;\r\n        this.checkedSKUTotalPrice = 0;\r\n        if(this.checkedSKUTableData.length){\r\n          this.checkedSKUTableData.forEach(item => {\r\n            this.checkedSKUTotalPrice += Number(item.purchasePrice) * Number(item.quantity);\r\n            this.checkedSKUTotal += Number(item.quantity)\r\n          });\r\n        }\r\n        this.checkedSKUTotalPrice = this.checkedSKUTotalPrice.toFixed(2)\r\n      },\r\n      // 获取更多标签\r\n      getMoreTags() {},\r\n      // 最终提交\r\n      finalSub(){\r\n        if(!this.checkedSKUTableData.length){\r\n          return\r\n        }\r\n        this.distributionInfo.allotProductInfoList = [];\r\n        this.distributionInfo.totalPrice = this.checkedSKUTotalPrice;\r\n        let goodsNum = 0;\r\n        this.checkedSKUTableData.forEach(item => {\r\n          let obj = {\r\n            // 货品编码\r\n            goodsCode: item.code,\r\n            // 货品名称\r\n            goodsName: item.name,\r\n            // 商品(spu)编码\r\n            productCode: item.productCode,\r\n            // 商品类型\r\n            productType: item.fullCateName,\r\n            // 商品图片\r\n            image: item.image,\r\n            // 品牌\r\n            brandName: item.brandName,\r\n            brandCode: item.brandId,\r\n            // 设计商\r\n            designCompanyName: item.designCompanyName,\r\n            designCompanyCode: item.designCompanyId,\r\n            // 尺码\r\n            size: item.size,\r\n            // 颜色\r\n            color: item.color,\r\n            // 吊牌价\r\n            retailPrice: item.retailPrice,\r\n            // 销售单价\r\n            purchasePrice: item.purchasePrice,\r\n            // 数量\r\n            quantity: item.quantity\r\n          };\r\n          this.distributionInfo.allotProductInfoList.push(obj);\r\n          goodsNum += item.quantity;\r\n        });\r\n        this.distributionInfo.goodsNum = goodsNum;\r\n        this.request(this.api.order.allotGoods_save, this.distributionInfo).then(data => {\r\n          if(data && data.length){\r\n            let html = '';\r\n            data.forEach(errItem => {\r\n              for(let i = 0; i < this.checkedSKUTableData.length; i++){\r\n                if(this.checkedSKUTableData[i].code == errItem.code){\r\n                  if(errItem.qty == 0){\r\n                    this.checkedSKUTableData.splice(i, 1);\r\n                    html += '<p>'+ errItem.code + '：可用库存为0，已删除该商品；</p>';\r\n                  }else {\r\n                    html += '<p>'+ errItem.code + '：可用库存不足，已更新为最大值' + errItem.qty + '；</p>';\r\n                    this.checkedSKUTableData[i].availableQuantity = errItem.qty;\r\n                    this.checkedSKUTableData[i].quantity = errItem.qty;\r\n                  }\r\n                  break;\r\n                }\r\n              }\r\n            });\r\n            this.$notify({\r\n              title: '提示',\r\n              duration: 0,\r\n              dangerouslyUseHTMLString: true,\r\n              message: html\r\n            });\r\n            // 计算总价\r\n            this.checkedTotalPrice();\r\n          }else {\r\n            this.$notify.success({ title: '成功',message: '新增成功'});\r\n            let module = '/' + this.$route.path.split('/')[1];\r\n            this.$router.push({\r\n              path: module + '/distribution/distribution_list'\r\n            })\r\n          }\r\n        });\r\n      },\r\n      /**\r\n       * 搜索商品参数下拉数据及验证\r\n       */\r\n      // 验证价格区间\r\n      moneyRule(rule, value,callback) {\r\n        const reg = /^[0-9]*$/;\r\n        if(!reg.test(this.formData.retailPriceGE) || !reg.test(this.formData.retailPriceLE)){\r\n          callback(new Error('价格区间必须是数字'));\r\n          return\r\n        }\r\n        if(this.formData.retailPriceGE && this.formData.retailPriceLE && this.formData.retailPriceGE >= this.formData.retailPriceLE){\r\n          callback(new Error('价格区间下限应小于上限'));\r\n        }else {\r\n          callback();\r\n        }\r\n      },\r\n      // 验证数量区间\r\n      countRule(rule, value,callback) {\r\n        const reg = /^[0-9]*$/;\r\n        if(!reg.test(this.formData.availableQuantityGE) || !reg.test(this.formData.availableQuantityLE)){\r\n          callback(new Error('库存量区间必须是数字'));\r\n          return\r\n        }\r\n        if(this.formData.availableQuantityGE && this.formData.availableQuantityLE && this.formData.availableQuantityGE >= this.formData.availableQuantityLE){\r\n          callback(new Error('库存量区间下限应小于上限'));\r\n        }else {\r\n          callback();\r\n        }\r\n      },\r\n      // 获取商品分类数据\r\n      getClassData(){\r\n        //分类类型（1：标准分类，2：定制分类，3：原料分类或者称为属性分类）\r\n        this.$common.getClassSelect(this,1).then(res =>{\r\n          this.classData=res.ztree;\r\n          this.classList=res.list;\r\n        })\r\n      },\r\n      // 商品分类Change\r\n      classChange(e){\r\n        if(e.length === 0){\r\n          this.formData.cateIdentifier = '';\r\n          return;\r\n        }\r\n        let cateId  = JSON.parse(JSON.stringify(e)).pop();\r\n        let obj = this.classList.find((item)=>(item.id == cateId));\r\n        this.formData.cateIdentifier = obj.identifier;\r\n      },\r\n      // 获取设计商\r\n      getDesignCompanyOptions(){\r\n        this.request(this.api.product.designCompany_list, {}).then(data => {\r\n          this.designCompanyOptions=data.data;\r\n        });\r\n      },\r\n      // 获取品牌\r\n      getBrandOptions(){\r\n        this.request(this.api.product.productBrand_list,{}).then(data => {\r\n          this.brandOptions= data.data;\r\n        });\r\n      }\r\n      /**\r\n       * 搜索商品参数下拉数据--end\r\n       */\r\n    },\r\n    // 计算属性\r\n    computed: {},\r\n    // 监听数据变化\r\n    watch: {}\r\n  }\r\n</script>\r\n"]}]}