{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\product\\added_services\\config_added_services.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\product\\added_services\\config_added_services.vue","mtime":1572415123861},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport axios from \"axios\";\r\nimport { setTimeout } from 'timers';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      propss: {\r\n        multiple: true,\r\n        value:'identifier',\r\n        label:'name'\r\n      },\r\n      // 新建门店提交对象\r\n      save_createStore_obj:{\r\n        \"used\":false,\r\n        \"price\":\"\",\r\n        \"list\":[]\r\n      },\r\n      // 获取下拉品类树结构\r\n      categories_getTree_Arr:[],\r\n      // 选中的商品集合\r\n      goodsIdArr:[],\r\n      // 增值服务配置\r\n      rules: {\r\n        storeName: [\r\n          { required: true, message: '请输入活动名称', trigger: 'blur' },\r\n        ],\r\n        region: [\r\n          { required: true, message: '请选择活动区域', trigger: 'change' }\r\n        ],\r\n        price: [\r\n          { type: 'date', required: true, message: '请选择日期', trigger: 'change' }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  created() {\r\n    // 获取下拉品类树结构\r\n    this.categories_getTree();\r\n    // 获取选中的下拉品类树结构\r\n    this.appreciationServiceConfig_get();\r\n  },\r\n  mounted() {\r\n\r\n  },\r\n  methods: {\r\n    /**\r\n     * 保存新建门店\r\n     */\r\n    save_createStore() {\r\n      const that = this,\r\n            goodsIdArr = JSON.parse(JSON.stringify(this.goodsIdArr)),\r\n            save_createStore_obj = JSON.parse(JSON.stringify(this.save_createStore_obj));\r\n      // 处理商品集合\r\n      goodsIdArr.forEach((item, index) => {\r\n        const sub = item.splice(item.length-1,1)[0];\r\n        save_createStore_obj.list.push({\r\n          identifier:sub\r\n        });\r\n      });\r\n      // 处理增值服务状态\r\n      save_createStore_obj.used = save_createStore_obj.used ? 1 : 0;\r\n      console.log(this.goodsIdArr)\r\n      console.log(save_createStore_obj)\r\n      // return;\r\n      this.request(\r\n        this.api.product.appreciationServiceConfig_save,\r\n        save_createStore_obj\r\n      ).then(res => {\r\n        that.warn('添加成功!');\r\n      });\r\n    },\r\n    /**\r\n     * 提示\r\n     */\r\n    warn(message, type) {\r\n      this.$message({\r\n        message: message,\r\n        type: type || 'success'\r\n      });\r\n    },\r\n    /**\r\n     * 获取全部下拉品类树结构\r\n     */\r\n    categories_getTree() {\r\n      this.request(\r\n        this.api.product.categories_getTree,\r\n        {\r\n          \"valid\":\"true\",\r\n          \"type\":\"1\"\r\n        }\r\n      ).then(res => {\r\n        this.categories_getTree_Arr = res;\r\n        this.isChildrenNull(res);\r\n      });\r\n    },\r\n    /**\r\n     * 递归将categories_getTree_Arr中所有空的children设置为null\r\n     * @param { Array } res 需要递归的数据数组\r\n     */\r\n    isChildrenNull(res) {\r\n      res.forEach((item, index) => {\r\n        if(item.children && item.children.length == 0) {\r\n          item.children = null;\r\n        }else{\r\n          this.isChildrenNull(item.children);\r\n        }\r\n      });\r\n    },\r\n    /**\r\n     * 获取选中的下拉品类树结构\r\n     */\r\n    appreciationServiceConfig_get() {\r\n      this.request(\r\n        this.api.product.appreciationServiceConfig_get\r\n      ).then(res => {\r\n        // 处理选中下拉品类\r\n        res.list.forEach((item, index) => {\r\n          const identifierArr = item.identifier.split('.');\r\n          const itemArr = [];\r\n          let str = '';\r\n          identifierArr.forEach((items, indexs) => {\r\n            // 如果不是第一个数组，拼接时加上点;\r\n            str += (indexs != 0) ? `.${items}` : `${items}`;\r\n            itemArr.push(str);\r\n          });\r\n          this.goodsIdArr.push(itemArr);\r\n        });\r\n\r\n        Object.assign(this.save_createStore_obj, {\r\n          used: res.used ? true : false,\r\n          price:res.price\r\n        });\r\n        console.log(this.goodsIdArr);\r\n      });\r\n    }\r\n  },\r\n  components: {}\r\n};\r\n",{"version":3,"sources":["config_added_services.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"config_added_services.vue","sourceRoot":"src/views/product/added_services","sourcesContent":["<template>\r\n  <div class=\"create-store\">\r\n    <template>\r\n      <section>\r\n        <el-form :model=\"save_createStore_obj\" :rules=\"rules\" ref=\"save_createStore_obj\" label-width=\"120px\" class=\"form-label\">\r\n          <!-- 增值服务 -->\r\n          <el-form-item label=\"增值服务：\">\r\n             <el-switch\r\n                v-model=\"save_createStore_obj.used\"\r\n                active-color=\"#13ce66\"\r\n                inactive-color=\"#9d9d9d\"\r\n            ></el-switch>\r\n            <span class=\"ml-10\">当前状态：{{ save_createStore_obj.used ? '启用' : '关闭' }}</span>\r\n          </el-form-item>\r\n          <!-- 免费品类 -->\r\n        <el-form-item  label=\"商品分类：\">\r\n          <div class=\"block\">\r\n            <el-cascader\r\n              style=\"width:370px;\"\r\n              v-model=\"goodsIdArr\"\r\n              :show-all-levels=\"false\"\r\n              :options=\"categories_getTree_Arr\"\r\n              :props=\"propss\"\r\n              clearable></el-cascader>\r\n          </div>\r\n        </el-form-item>\r\n          <!-- 服务价格 -->\r\n          <el-form-item label=\"服务价格：\">\r\n            <el-input style=\"height:40px;\" v-model=\"save_createStore_obj.price\" placeholder=\"请输入服务价格\"></el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n      </section>\r\n    </template>\r\n    <div class=\"save\">\r\n      <el-button type=\"primary\" @click=\"save_createStore\">确认</el-button>\r\n    </div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { setTimeout } from 'timers';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      propss: {\r\n        multiple: true,\r\n        value:'identifier',\r\n        label:'name'\r\n      },\r\n      // 新建门店提交对象\r\n      save_createStore_obj:{\r\n        \"used\":false,\r\n        \"price\":\"\",\r\n        \"list\":[]\r\n      },\r\n      // 获取下拉品类树结构\r\n      categories_getTree_Arr:[],\r\n      // 选中的商品集合\r\n      goodsIdArr:[],\r\n      // 增值服务配置\r\n      rules: {\r\n        storeName: [\r\n          { required: true, message: '请输入活动名称', trigger: 'blur' },\r\n        ],\r\n        region: [\r\n          { required: true, message: '请选择活动区域', trigger: 'change' }\r\n        ],\r\n        price: [\r\n          { type: 'date', required: true, message: '请选择日期', trigger: 'change' }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  created() {\r\n    // 获取下拉品类树结构\r\n    this.categories_getTree();\r\n    // 获取选中的下拉品类树结构\r\n    this.appreciationServiceConfig_get();\r\n  },\r\n  mounted() {\r\n\r\n  },\r\n  methods: {\r\n    /**\r\n     * 保存新建门店\r\n     */\r\n    save_createStore() {\r\n      const that = this,\r\n            goodsIdArr = JSON.parse(JSON.stringify(this.goodsIdArr)),\r\n            save_createStore_obj = JSON.parse(JSON.stringify(this.save_createStore_obj));\r\n      // 处理商品集合\r\n      goodsIdArr.forEach((item, index) => {\r\n        const sub = item.splice(item.length-1,1)[0];\r\n        save_createStore_obj.list.push({\r\n          identifier:sub\r\n        });\r\n      });\r\n      // 处理增值服务状态\r\n      save_createStore_obj.used = save_createStore_obj.used ? 1 : 0;\r\n      console.log(this.goodsIdArr)\r\n      console.log(save_createStore_obj)\r\n      // return;\r\n      this.request(\r\n        this.api.product.appreciationServiceConfig_save,\r\n        save_createStore_obj\r\n      ).then(res => {\r\n        that.warn('添加成功!');\r\n      });\r\n    },\r\n    /**\r\n     * 提示\r\n     */\r\n    warn(message, type) {\r\n      this.$message({\r\n        message: message,\r\n        type: type || 'success'\r\n      });\r\n    },\r\n    /**\r\n     * 获取全部下拉品类树结构\r\n     */\r\n    categories_getTree() {\r\n      this.request(\r\n        this.api.product.categories_getTree,\r\n        {\r\n          \"valid\":\"true\",\r\n          \"type\":\"1\"\r\n        }\r\n      ).then(res => {\r\n        this.categories_getTree_Arr = res;\r\n        this.isChildrenNull(res);\r\n      });\r\n    },\r\n    /**\r\n     * 递归将categories_getTree_Arr中所有空的children设置为null\r\n     * @param { Array } res 需要递归的数据数组\r\n     */\r\n    isChildrenNull(res) {\r\n      res.forEach((item, index) => {\r\n        if(item.children && item.children.length == 0) {\r\n          item.children = null;\r\n        }else{\r\n          this.isChildrenNull(item.children);\r\n        }\r\n      });\r\n    },\r\n    /**\r\n     * 获取选中的下拉品类树结构\r\n     */\r\n    appreciationServiceConfig_get() {\r\n      this.request(\r\n        this.api.product.appreciationServiceConfig_get\r\n      ).then(res => {\r\n        // 处理选中下拉品类\r\n        res.list.forEach((item, index) => {\r\n          const identifierArr = item.identifier.split('.');\r\n          const itemArr = [];\r\n          let str = '';\r\n          identifierArr.forEach((items, indexs) => {\r\n            // 如果不是第一个数组，拼接时加上点;\r\n            str += (indexs != 0) ? `.${items}` : `${items}`;\r\n            itemArr.push(str);\r\n          });\r\n          this.goodsIdArr.push(itemArr);\r\n        });\r\n\r\n        Object.assign(this.save_createStore_obj, {\r\n          used: res.used ? true : false,\r\n          price:res.price\r\n        });\r\n        console.log(this.goodsIdArr);\r\n      });\r\n    }\r\n  },\r\n  components: {}\r\n};\r\n</script>\r\n<style  lang=\"less\" scoped>\r\n  .create-store{\r\n    margin: 8px;\r\n    padding: 20px;\r\n    background: #fff;\r\n    .save{\r\n      margin-left: 120px;\r\n    }\r\n    .form-label{\r\n      margin-top: 20px;\r\n      .el-input, .el-select{\r\n        width: 370px;\r\n\r\n      }\r\n      .el-input /deep/ .el-input__inner{height: 40px;}\r\n      .el-checkbox-group{\r\n        width: 550px;\r\n      }\r\n      .el-input-short{\r\n        width: 180px;\r\n      }\r\n      .video-upload {\r\n        border: 1px dashed #d9d9d9;\r\n        border-radius: 6px;\r\n        cursor: pointer;\r\n        position: relative;\r\n        overflow: hidden;\r\n        width: 80px;\r\n        height: 80px;\r\n        text-align: center;\r\n        line-height: 80px;\r\n        span{\r\n          font-size: 35px;\r\n          color: #d9d9d9;\r\n        }\r\n      }\r\n      .video-upload-p{\r\n        color: #666;\r\n        font-size: 12px;\r\n      }\r\n      .video-upload:hover{\r\n        border: 1px dashed #409EFF;\r\n      }\r\n    }\r\n  }\r\n  .display-flex{\r\n    display:flex;\r\n  }\r\n</style>\r\n\r\n"]}]}