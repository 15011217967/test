{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\system\\shipper_list.vue?vue&type=style&index=0&id=59fb5872&lang=less&scoped=true&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\system\\shipper_list.vue","mtime":1572415124618},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\css-loader\\index.js","mtime":1558492728478},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1558492728890},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\postcss-loader\\src\\index.js","mtime":1558492728823},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\less-loader\\dist\\cjs.js","mtime":1566193719488},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["\n.base{background: #fff;}\n",{"version":3,"sources":["shipper_list.vue"],"names":[],"mappings":";AACA","file":"shipper_list.vue","sourceRoot":"src/views/system","sourcesContent":["<style lang=\"less\" scoped>\r\n  .base{background: #fff;}\r\n</style>\r\n<template>\r\n  <!-- 渠道订单 -->\r\n  <div class=\"base\">\r\n    <!-- table -->\r\n    <div class=\"table\">\r\n      <div class=\"item-cont\">\r\n        <el-button-group>\r\n          <el-button size=\"small\" type=\"primary\" @click=\"openAddClass\">新增</el-button>\r\n        </el-button-group>\r\n      </div>\r\n      <!-- table订单 -->\r\n      <template>\r\n        <el-table :data=\"tableData.data\">\r\n          <el-table-column prop=\"code\" label=\"货主编号\" width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"name\" label=\"货主名称\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"orgName\" label=\"隶属机构\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"description\" label=\"备注\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"updateTime\" label=\"更新时间\" min-width=\"90\">\r\n            <template slot-scope=\"scope\">{{scope.row.updateTime | timestampToTime}}</template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"used\" label=\"启停状态\" width=\"80\">\r\n            <template slot-scope=\"scope\">\r\n              <el-switch\r\n                  v-model=\"scope.row.used\"\r\n                  active-color=\"#13ce66\"\r\n                  @change=\"switchValid(scope.row)\"\r\n                  inactive-color=\"#9d9d9d\">\r\n              </el-switch>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column\r\n              fixed=\"right\"\r\n              label-class-name=\"text-center\"\r\n              class-name=\"text-center\"\r\n              label=\"操作\"\r\n              width=\"140\"\r\n          >\r\n            <template slot-scope=\"scope\">\r\n              <el-button @click=\"handleEditClick(scope.row.id)\" type=\"text\" size=\"small\">编辑</el-button>\r\n              <el-button @click=\"handleDeleteClick(scope.row)\" type=\"text\" size=\"small\">删除</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n        <div class=\"block\">\r\n          <el-pagination\r\n              @size-change=\"handleSizeChange\"\r\n              @current-change=\"handleCurrentChange\"\r\n              :current-page=\"tableData.pageIndex\"\r\n              :page-sizes=\"[10,20,30,40,50]\"\r\n              :page-size=\"10\"\r\n              layout=\"total, sizes, prev, pager, next, jumper\"\r\n              :total=\"tableData.totalCount\">\r\n          </el-pagination>\r\n        </div>\r\n      </template>\r\n    </div>\r\n    <!--新增 编辑-->\r\n    <el-dialog :title=\"isAdd ? '新增货主' : '编辑货主'\" :visible.sync=\"addAndEditDialog\" class=\"alarmPopup\" width=\"420px\">\r\n      <el-form :model=\"addAndEditForm\"  :rules=\"rules\"  label-width=\"100px\" size=\"small\" ref=\"addAndEditDialogForm\">\r\n        <el-form-item prop=\"orgId\" label=\"隶属机构：\">\r\n          <organization-select v-model=\"addAndEditForm.orgId\" width-class=\"input-w-2\" ref=\"organization\" :disabled=\"!isAdd\"></organization-select>\r\n        </el-form-item>\r\n        <el-form-item prop=\"code\" label=\"货主编号：\">\r\n          <el-input class=\"input-w-2\" placeholder=\"请输入内容\" v-model=\"addAndEditForm.code\" :disabled=\"!isAdd\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"name\" label=\"货主名称：\">\r\n          <el-input class=\"input-w-2\" placeholder=\"请输入内容\" v-model=\"addAndEditForm.name\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"used\" label=\"启停状态\" width=\"80\">\r\n          <el-switch v-model=\"addAndEditForm.used\" active-color=\"#13ce66\" inactive-color=\"#9d9d9d\"></el-switch>\r\n        </el-form-item>\r\n        <el-form-item prop=\"description\" label=\"备注：\">\r\n          <el-input class=\"input-w-2\" type=\"textarea\" v-model=\"addAndEditForm.description\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div class=\"item-footer item-right\">\r\n        <el-button size=\"small\" @click=\"addAndEditDialog = false\">取消</el-button>\r\n        <el-button size=\"small\" @click=\"submitForm('addAndEditDialogForm')\" type=\"primary\">确定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\n  import OrganizationSelect from \"@/views/system/components/OrganizationSelect.vue\";\r\n  import { validateNumber } from '@/utils/validate'\r\n  export default {\r\n    components: {\r\n      OrganizationSelect\r\n    },\r\n    data() {\r\n      return {\r\n        filtersData: {\r\n          pageIndex: 1,//当前页码\r\n          pageSize: 10//每页数量\r\n        },\r\n        // 表格数据\r\n        tableData: {},\r\n        // 新增和编辑\r\n        addAndEditDialog: false,\r\n        isAdd: true,\r\n        addAndEditForm: {\r\n          orgId: '',\r\n          description: '',\r\n          code: '',\r\n          name: '',\r\n          used: true\r\n        },\r\n        //验证\r\n        rules: {\r\n          code: [\r\n            { required: true, trigger: \"blur\", validator: validateNumber}\r\n          ],\r\n          name: [\r\n            {required: true, message: \"请输入货主名称\", trigger: \"blur\"}\r\n          ],\r\n          orgId: [\r\n            {required: true, message: \"请选择机构\", trigger: \"change\"}\r\n          ]\r\n        },\r\n      }\r\n    },\r\n    mounted(){\r\n      this.$nextTick(() => {\r\n        this.getTableList()\r\n      })\r\n    },\r\n    methods: {\r\n      //获取列表\r\n      getTableList(){\r\n        this.request(this.api.system.goodsOwner_list,this.filtersData).then(data=>{\r\n          this.tableData =data;\r\n        });\r\n      },\r\n      // 获取详情\r\n      getDetails(id){\r\n        this.request(this.api.system.goodsOwner_get, {id: id}).then(data => {\r\n          this.addAndEditForm = data;\r\n        });\r\n      },\r\n      //新增\r\n      openAddClass() {\r\n        this.isAdd = true;\r\n        this.addAndEditDialog = true;\r\n        this.addAndEditForm = {\r\n          orgId: '',\r\n          description: '',\r\n          code: '',\r\n          name: '',\r\n          used: true\r\n        };\r\n        this.$nextTick(() => {\r\n          this.$refs.addAndEditDialogForm.resetFields();\r\n        })\r\n      },\r\n      //修改\r\n      handleEditClick(id) {\r\n        this.isAdd = false;\r\n        this.addAndEditDialog = true;\r\n        this.getDetails(id)\r\n      },\r\n      //保存\r\n      submitForm(formName) {\r\n        this.$refs[formName].validate(valid => {\r\n          if (valid) {\r\n            this.request(this.api.system.goodsOwner_save, this.addAndEditForm).then(data => {\r\n              this.$message({\r\n                type: \"success\",\r\n                message: \"操作成功\"\r\n              });\r\n              this.addAndEditDialog = false;\r\n              this.getTableList();\r\n            });\r\n          }\r\n        });\r\n      },\r\n      //滑块开关\r\n      switchValid(params){\r\n        this.request(this.api.system.goodsOwner_updateValid,params).then(data=>{\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"状态修改成功！\"\r\n          });\r\n        })\r\n      },\r\n      //删除仓库\r\n      handleDeleteClick(params) {\r\n        if(params.used){\r\n          this.$message({\r\n            type: \"error\",\r\n            message: \"不能删除未停用的货主！\"\r\n          });\r\n          return;\r\n        }\r\n        if (!confirm(\"确定要删除当前行数据么？\")){\r\n          return;\r\n        }\r\n        this.request(this.api.system.goodsOwner_logicDelete, params).then(data => {\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"删除货主成功！\"\r\n          });\r\n          this.getTableList();\r\n        });\r\n      },\r\n\r\n      // 表格更改条数\r\n      handleSizeChange(val){\r\n        this.filtersData.pageSize=val;\r\n        this.getTableList();\r\n      },\r\n      // 表格更改页数\r\n      handleCurrentChange(val){\r\n        this.filtersData.pageIndex=val;\r\n        this.getTableList();\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n\r\n\r\n"]}]}