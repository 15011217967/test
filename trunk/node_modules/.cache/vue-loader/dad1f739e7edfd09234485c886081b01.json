{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\content\\manage\\content_manage.vue?vue&type=style&index=0&id=4f5a2595&lang=less&scoped=true&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\content\\manage\\content_manage.vue","mtime":1574160264883},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\css-loader\\index.js","mtime":1558492728478},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1558492728890},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\postcss-loader\\src\\index.js","mtime":1558492728823},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\less-loader\\dist\\cjs.js","mtime":1566193719488},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["\n@import \"../style/contentPublic.less\";\n.content-manage{\n  .page-main-inner{\n    .menu-small{position: relative;}\n    .form-data{position: absolute;right: 20px;top: 4px;}\n    .table-img{width: 100px;height: 100px;}\n    .info-list{\n      li{float: left;margin-right: 20px;}\n    }\n    .state-flag{\n      .el-tag.el-tag--mini{float: right;}\n    }\n    .table-reason{color: #e6a23c;}\n  }\n}\n",{"version":3,"sources":["content_manage.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"content_manage.vue","sourceRoot":"src/views/content/manage","sourcesContent":["<style lang=\"less\" scoped>\r\n  @import \"../style/contentPublic.less\";\r\n  .content-manage{\r\n    .page-main-inner{\r\n      .menu-small{position: relative;}\r\n      .form-data{position: absolute;right: 20px;top: 4px;}\r\n      .table-img{width: 100px;height: 100px;}\r\n      .info-list{\r\n        li{float: left;margin-right: 20px;}\r\n      }\r\n      .state-flag{\r\n        .el-tag.el-tag--mini{float: right;}\r\n      }\r\n      .table-reason{color: #e6a23c;}\r\n    }\r\n  }\r\n</style>\r\n<template>\r\n  <div class=\"content-manage page-public\">\r\n    <div class=\"page-main\">\r\n      <div class=\"page-main-inner item-margin\">\r\n        <el-menu :default-active=\"typeActiveIndex\" class=\"el-menu-demo page-menu-border\" mode=\"horizontal\" @select=\"typeActiveSelect\">\r\n          <el-menu-item index=\"4\">文章</el-menu-item>\r\n          <el-menu-item index=\"3\">图集</el-menu-item>\r\n          <el-menu-item index=\"2\">小视频</el-menu-item>\r\n          <el-menu-item index=\"1\">视频</el-menu-item>\r\n        </el-menu>\r\n        <div class=\"menu-small\">\r\n          <el-menu :default-active=\"stateActiveIndex\" class=\"el-menu-demo\" mode=\"horizontal\" @select=\"stateActiveSelect\">\r\n            <el-menu-item index=\"8\">全部</el-menu-item>\r\n            <el-menu-item index=\"2\">已发布</el-menu-item>\r\n            <el-menu-item index=\"1\">待发布</el-menu-item>\r\n            <el-menu-item index=\"3\">未通过</el-menu-item>\r\n            <el-menu-item index=\"4\">已下线</el-menu-item>\r\n            <el-menu-item index=\"0\">草稿箱</el-menu-item>\r\n            <div class=\"form-data\">\r\n              <el-form :inline=\"true\" :model=\"formData\" class=\"demo-form-inline\" size=\"small\" ref=\"form\">\r\n                <el-form-item label=\"\">\r\n                  <el-input v-model=\"formData.title\" placeholder=\"请输入关键字搜索内容\" suffix-icon=\"el-icon-search\" @keyup.13.native=\"searchTableData\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"内容分类：\">\r\n                  <el-cascader :options=\"categoryTreeList\" v-model=\"formData.contentCategory\" :props=\"categoryTreeListProps\" :show-all-levels=\"false\" clearable>\r\n                  </el-cascader>\r\n                </el-form-item>\r\n                <el-form-item>\r\n                  <el-button type=\"primary\" @click=\"searchTableData\" size=\"small\" plain>搜索</el-button>\r\n                  <el-button @click=\"initFormData\" size=\"small\" plain>重置</el-button>\r\n                </el-form-item>\r\n              </el-form>\r\n            </div>\r\n          </el-menu>\r\n        </div>\r\n        <page-table :form-data=\"formData\" :get-data=\"getData\" :table-data=\"tableData\">\r\n          <el-table :data=\"tableData.data\" style=\"width: 100%\" :show-header=\"false\">\r\n            <el-table-column label=\"\"  width=\"120\">\r\n              <template slot-scope=\"scope\">\r\n                <img :src=\"scope.row.coverList[0].url\" alt=\"\" class=\"table-img\" v-if=\"scope.row.coverList.length\">\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"\">\r\n              <template slot-scope=\"scope\">\r\n                <!--@click=\"itemEdit(scope.row)\"-->\r\n                <h6 >{{scope.row.title}}\r\n                  <el-tag size=\"mini\" type=\"danger\" v-if=\"scope.row.top === 1\">置顶</el-tag>\r\n                </h6>\r\n                <p>{{ scope.row.createTime | timestampToTime }} <span v-show=\"scope.row._categoryName\">分类：{{ scope.row._categoryName }}</span></p>\r\n                <p v-if=\"scope.row.contentStatus === 3 && scope.row.reason\" class=\"table-reason\">驳回理由：<span>{{ scope.row.reason }}</span></p>\r\n                <ul class=\"info-list\" v-if=\"scope.row.count\">\r\n                  <li>阅读：{{ scope.row.count.readCount }}</li>\r\n                  <li>评论：{{ scope.row.count.commentCount }}</li>\r\n                  <li>点赞：{{ scope.row.count.praiseCount }}</li>\r\n                  <li>收藏：{{ scope.row.count.collectCount }}</li>\r\n                </ul>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\" width=\"300\">\r\n              <template slot-scope=\"scope\">\r\n                <div class=\"state-flag clearfix\">\r\n                  <el-tag size=\"mini\" :type=\"timingStatus[scope.row.contentStatus].type\" v-if=\"scope.row.contentStatus.toString()\">{{ timingStatus[scope.row.contentStatus].name }}</el-tag>\r\n                </div>\r\n                <el-button type=\"text\" size=\"small\" @click=\"itemEdit(scope.row)\" v-if=\"scope.row.contentStatus === 4 || scope.row.contentStatus === 0 || scope.row.contentStatus === 3  ||  (scope.row.contentStatus === 2 && scope.row.isTime)\">编辑</el-button>\r\n                <el-button type=\"text\" size=\"small\" @click=\"itemDel(scope.row)\" v-if=\"scope.row.contentStatus === 4 || scope.row.contentStatus === 0 || scope.row.contentStatus === 3  ||  (scope.row.contentStatus === 2 && scope.row.isTime)\">删除</el-button>\r\n                <el-button type=\"text\" size=\"small\" @click=\"seeComment(scope.row)\" v-if=\"scope.row.contentStatus === 2 || scope.row.contentStatus === 4\">查看评论</el-button>\r\n                <!--<el-button type=\"text\" size=\"small\" @click=\"seeAnalysis(scope.row)\" v-if=\"scope.row.contentStatus === 2 || scope.row.contentStatus === 4\">数据分析</el-button>-->\r\n                <el-button type=\"text\" size=\"small\" @click=\"itemOffline(scope.row)\" v-if=\"scope.row.contentStatus === 2\">下线</el-button>\r\n                <el-button type=\"text\" size=\"small\" @click=\"itemTop(scope.row)\" v-if=\"scope.row.contentStatus === 2 && !scope.row.top \">置顶</el-button>\r\n                <el-button type=\"text\" size=\"small\" @click=\"itemTopOut(scope.row)\" v-if=\"scope.row.contentStatus === 2 && scope.row.top === 1\">取消置顶</el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </page-table>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n  import PageTable from '@/views/content/components/PageTable.vue'\r\n  import { timestampToTime } from '@/utils/util'\r\n  export default {\r\n    name: 'content_manage',\r\n    // 数据\r\n    data() {\r\n      return {\r\n        // 状态\r\n        timingStatus: {\r\n          8: {name:'全部', type: 'success'},\r\n          2: {name: '已发布', type: ''},\r\n          1: {name:'待发布', type: ''},\r\n          5: {name:'发布中', type: ''},\r\n          3: {name:'未通过', type: 'warning'},\r\n          4: {name:'已下线', type: 'info'},\r\n          0: {name:'草稿箱', type: 'info'}\r\n        },\r\n        // 类型默认选中\r\n        typeActiveIndex:'4',\r\n        // 状态默认选中\r\n        stateActiveIndex: '8',\r\n        // 分类数据\r\n        categoryTreeList: [],\r\n        // 分类映射\r\n        categoryTreeListProps:{\r\n          value: 'id',\r\n          label: 'name',\r\n          children: 'children',\r\n          expandTrigger: 'hover'\r\n        },\r\n        // 表格数据\r\n        tableData: {},\r\n        formData: {\r\n          pageIndex: 1,\r\n          pageSize: 10,\r\n          contentType: 4,\r\n          contentStatus: '',\r\n          title: '',\r\n          contentCategory: [],\r\n          contentCategoryId: ''\r\n        }\r\n      }\r\n    },\r\n    // 组件\r\n    components: {\r\n      PageTable\r\n    },\r\n    // 初始化数据\r\n    mounted() {\r\n      this.$nextTick(() => {\r\n        this.getCategoryTreeList()\r\n        this.getData()\r\n      })\r\n    },\r\n    // keepAlive 页面显示时\r\n    activated() {\r\n      this.getData();\r\n    },\r\n    // 方法\r\n    methods: {\r\n      init(){\r\n\r\n      },\r\n      initFormData(){\r\n        this.formData.title = ''\r\n        this.formData.contentCategory = []\r\n      },\r\n      // 点击搜索\r\n      searchTableData(){\r\n        this.formData.pageIndex = 1;\r\n        this.getData();\r\n      },\r\n      // 获取数据\r\n      getData(){\r\n        this.formData.contentCategoryId = this.formData.contentCategory[this.formData.contentCategory.length - 1]\r\n        // 待发布多种状态 单独接口\r\n        if(this.formData.contentStatus === '1'){\r\n          this.request(this.api.contentCore.not_active_list, this.formData).then(data => {\r\n            if(data.data && data.data.length){\r\n              this.tableDataInit(data)\r\n              this.tableData = data\r\n            }else {\r\n              this.tableData = {}\r\n            }\r\n          })\r\n          return\r\n        }\r\n        this.request(this.api.contentCore.content_list, this.formData).then(data => {\r\n          if(data.data && data.data.length){\r\n            this.tableDataInit(data)\r\n            this.tableData = data\r\n          }else {\r\n            this.tableData = {}\r\n          }\r\n        })\r\n      },\r\n      // table数据格式化\r\n      tableDataInit(data){\r\n        data.data.forEach(item => {\r\n          if(item.showIdentifier){\r\n            let showIdentifier = item.showIdentifier\r\n            if(showIdentifier.indexOf('$') > -1){\r\n              // 获取最后一个分类\r\n              let items = showIdentifier.split('$')[showIdentifier.split('$').length - 1]\r\n              if(items.split('&').length > 2){\r\n                item._categoryName = items.split('&')[items.split('&').length - 1]\r\n              }else{\r\n                item._categoryName = null\r\n              }\r\n            }else {\r\n              if(showIdentifier.split('&').length > 2){\r\n                item._categoryName = showIdentifier.split('&')[showIdentifier.split('&').length - 1]\r\n              }else{\r\n                item._categoryName = null\r\n              }\r\n            }\r\n          }else {\r\n            item._categoryName = null\r\n          }\r\n\r\n        })\r\n      },\r\n      // 编辑\r\n      itemEdit(row){\r\n        this.$router.push({\r\n          path:'/content/create/release',\r\n          query: {\r\n            id: row.id\r\n          }\r\n        });\r\n      },\r\n      // 删除\r\n      itemDel(row){\r\n        this.$confirm('确认删除吗？', '删除', {\r\n          confirmButtonText: '确认',\r\n          cancelButtonText: '取消',\r\n          showClose:false\r\n        }).then(() => {\r\n          this.request(this.api.contentCore.content_delete, row).then(data => {\r\n            this.$notify.success({ title: '成功',message: '删除成功'})\r\n            this.getData()\r\n          });\r\n        }).catch(() => {\r\n        });\r\n      },\r\n      // 查看评论\r\n      seeComment(row){\r\n        this.$router.push({\r\n          path:'/content/manage/Comment',\r\n          query: {\r\n            id: row.id,\r\n            title: row.title\r\n          }\r\n        });\r\n      },\r\n      // 查看分析\r\n      seeAnalysis(row){\r\n\r\n      },\r\n      // 强制下线\r\n      itemOffline(row){\r\n        this.$confirm('确认下线吗？', '下线', {\r\n          confirmButtonText: '确认',\r\n          cancelButtonText: '取消',\r\n          showClose:false\r\n        }).then(() => {\r\n          row.contentStatus = 4\r\n          this.request(this.api.contentCore.content_offline, row).then(data => {\r\n            this.$notify.success({ title: '成功',message: '下线成功'})\r\n            this.getData()\r\n          });\r\n        }).catch(() => {\r\n        });\r\n      },\r\n      // 置顶\r\n      itemTop(row){\r\n        this.$confirm('确认置顶吗？', '置顶', {\r\n          confirmButtonText: '确认',\r\n          cancelButtonText: '取消',\r\n          showClose:false\r\n        }).then(() => {\r\n          row.top = 1\r\n          this.request(this.api.contentCore.content_top, row).then(data => {\r\n            this.$notify.success({ title: '成功',message: '置顶成功'})\r\n            this.getData()\r\n          });\r\n        }).catch(() => {\r\n        });\r\n      },\r\n      // 取消置顶\r\n      itemTopOut(row){\r\n        this.$confirm('取消置顶吗？', '置顶', {\r\n          confirmButtonText: '确认',\r\n          cancelButtonText: '取消',\r\n          showClose:false\r\n        }).then(() => {\r\n          row.top = 0\r\n          this.request(this.api.contentCore.content_top, row).then(data => {\r\n            this.$notify.success({ title: '成功',message: '取消置顶成功'})\r\n            this.getData()\r\n          });\r\n        }).catch(() => {\r\n        });\r\n      },\r\n      // 类型切换\r\n      typeActiveSelect(index,indexPath,event) {\r\n        this.formData.pageIndex = 1\r\n        this.formData.contentType = index\r\n        this.getData()\r\n      },\r\n      // 状态切换\r\n      stateActiveSelect(index,indexPath,event){\r\n        this.formData.pageIndex = 1\r\n        // 等于4时   为全部\r\n        if(index === '8'){\r\n          this.formData.contentStatus = ''\r\n        }else{\r\n          this.formData.contentStatus = index\r\n        }\r\n        this.getData()\r\n      },\r\n      // 获取分类tree\r\n      getCategoryTreeList(){\r\n        this.request(this.api.contentCore.category_tree_list, {contentType: this.formData.contentType}).then(data => {\r\n          if(data && data.length){\r\n            this.categoryTreeListInit(data)\r\n            this.categoryTreeList = data\r\n          }\r\n        });\r\n      },\r\n      // 初始分类数据\r\n      categoryTreeListInit(data){\r\n        if(data && data.length){\r\n          data.forEach((item)=>{\r\n            if(item.children){\r\n              if(item.children.length === 0){\r\n                delete item.children\r\n              }else {\r\n                this.categoryTreeListInit(item.children)\r\n              }\r\n            }\r\n          })\r\n        }\r\n      },\r\n\r\n\r\n\r\n      //\r\n      // 强制下线\r\n      auditOffline(row){\r\n        this.$confirm('确认强制下线吗？', '强制下线', {\r\n          confirmButtonText: '确认',\r\n          cancelButtonText: '取消',\r\n          showClose:false\r\n        }).then(() => {\r\n          this.request(this.api.contentCore.audit_offline, {id: row.id}).then(data => {\r\n            this.$notify.success({ title: '成功',message: '强制下线成功'})\r\n            this.getData()\r\n          });\r\n        }).catch(() => {\r\n        });\r\n\r\n      },\r\n\r\n    },\r\n    // 计算属性\r\n    computed: {},\r\n    // 监听数据变化\r\n    watch: {}\r\n  }\r\n</script>\r\n"]}]}