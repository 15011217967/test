{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\product\\classification\\class_custom.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\product\\classification\\class_custom.vue","mtime":1572415124150},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n/**\r\n * 定制分类管理\r\n */\r\nimport CustomDetails from \"@/components/classification/custom_details.vue\";\r\nexport default {\r\n  inject: [\"reload\"],\r\n  data() {\r\n    return {\r\n      filtersData: {\r\n        pageIndex: 1, //当前页码\r\n        pageSize: 10, //每页数量\r\n        parentId: null, //父级id\r\n        valid: null, //有效状态\r\n        searchWords: \"\", //搜索关键字\r\n        type: 2 //分类类型（1：标准分类，2：定制分类，3：原料分类或者称为属性分类）\r\n      },\r\n      tableListData: [],\r\n      cateArr: [],\r\n      props: {\r\n        value: \"id\",\r\n        label: \"name\",\r\n        children: \"children\"\r\n      },\r\n      itemStautsParam: {\r\n        type: \"add\",\r\n        title: \"新增定制分类\",\r\n        id: \"\"\r\n      },\r\n      currentPage: 1, // 当前页数\r\n      total: 0, //总条目数\r\n      classData: [],\r\n      classList: []\r\n    };\r\n  },\r\n  filters:{\r\n    customizedTypeList(value){\r\n      if(!!value)\r\n      switch (value.toString()) {\r\n        case '1':\r\n            return '套装'\r\n          break;\r\n        case '2':\r\n            return '单品'\r\n          break;\r\n        default:\r\n           return '未知'\r\n          break;\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.getTableList();\r\n    this.getClassData();\r\n  },\r\n  methods: {\r\n    getClassData() {\r\n      this.$common.getClassSelect(this, 2).then(res => {\r\n        this.classData = res.ztree;\r\n        this.classList = res.list;\r\n      });\r\n    },\r\n    cascaderGet(e) {\r\n      let cateId = JSON.parse(JSON.stringify(e)).pop();\r\n      let obj = this.classList.find(item => item.id == cateId);\r\n      this.filtersData.parentId = obj.id;\r\n    },\r\n    //获取列表\r\n    getTableList() {\r\n      this.request(this.api.product.categories_list, this.filtersData).then(\r\n        data => {\r\n          this.tableListData = data.data;\r\n          this.total = data.totalCount;\r\n        }\r\n      );\r\n    },\r\n    //滑块开关\r\n    switchValid(params) {\r\n      this.request(this.api.product.categories_save, params).then(data => {\r\n        this.$message.success(\"修改成功！\");\r\n      });\r\n    },\r\n    //搜索\r\n    handleSearch() {\r\n      this.filtersData.pageIndex = 1;\r\n      this.getTableList();\r\n    },\r\n    //清空重置\r\n    handleResetFilters(formName) {\r\n      this.$refs[formName].resetFields();\r\n      this.cateArr = [];\r\n    },\r\n    //新增分类\r\n    openAddClass() {\r\n      this.itemStautsParam.type = \"add\";\r\n      this.itemStautsParam.title = \"新增定制分类\";\r\n      this.$refs.classDetailsCpt.attributePopupInit();\r\n    },\r\n   // 修改分类\r\n    handleEditClick(_id){\r\n      this.itemStautsParam.type='edit';\r\n      this.itemStautsParam.title=\"修改分类\";\r\n      this.itemStautsParam.id=_id;\r\n      this.$refs.classDetailsCpt.attributePopupInit();\r\n    },\r\n    //当前页数修改时发生改变\r\n    handleCurrentChange(val) {\r\n      this.filtersData.pageIndex = val;\r\n      this.getTableList();\r\n    },\r\n    // 每页显示多少条时发生改变\r\n    handleSizeChange(val) {\r\n      this.filtersData.pageSize = val;\r\n      this.getTableList();\r\n    },\r\n    //子组件传参刷新 父组件\r\n    refreshList() {\r\n      this.reload();\r\n    }\r\n  },\r\n  components: {\r\n    [CustomDetails.name]: CustomDetails\r\n  }\r\n};\r\n",{"version":3,"sources":["class_custom.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"class_custom.vue","sourceRoot":"src/views/product/classification","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"item-margin\">\r\n      <el-form\r\n        class=\"item-form\"\r\n        :model=\"filtersData\"\r\n        label-width=\"90px\"\r\n        size=\"small\"\r\n        ref=\"filtersForm\"\r\n        inline\r\n      >\r\n        <el-form-item prop=\"parentId\" label=\"父级分类：\">\r\n          <el-cascader\r\n            class=\"input-w\"\r\n            :options=\"classData\"\r\n            v-model=\"cateArr\"\r\n            :value=\"cateArr\"\r\n            @change=\"cascaderGet\"\r\n            :show-all-levels=\"false\"\r\n            :props=\"props\"\r\n            change-on-select\r\n          ></el-cascader>\r\n        </el-form-item>\r\n        <el-form-item prop=\"valid\" label=\"有效状态\">\r\n          <el-select class=\"input-w\" placeholder=\"请选择\" v-model=\"filtersData.valid\">\r\n            <el-option\r\n              v-for=\"item in this.$common.getValidOptions()\"\r\n              :key=\"item.status_id\"\r\n              :label=\"item.status_name\"\r\n              :value=\"item.status_id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item prop=\"searchWords\" label=\"综合搜索：\">\r\n          <el-input class=\"input-w\" placeholder=\"请输入内容\" v-model=\"filtersData.searchWords\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button size=\"small\" @click=\"handleSearch\" type=\"primary\" plain>搜索</el-button>\r\n          <el-button size=\"small\" @click=\"handleResetFilters('filtersForm')\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n    <!--table  -->\r\n    <div class=\"item-margin\">\r\n      <div class=\"item-cont\">\r\n        <el-button-group>\r\n          <el-button size=\"small\" type=\"primary\" @click=\"openAddClass\">新增分类</el-button>\r\n        </el-button-group>\r\n      </div>\r\n      <div class=\"item-table\">\r\n        <el-table\r\n          :data=\"tableListData\"\r\n          stripe\r\n          empty-text=\"暂无数据\"\r\n          header-align=\"center\"\r\n          header-row-class-name=\"item-table-header\"\r\n          :highlight-current-row=\"true\"\r\n        >\r\n          <el-table-column prop=\"code\" align=\"center\" label=\"分类编码\" width=\"120\"></el-table-column>\r\n          <el-table-column prop=\"name\" align=\"center\" label=\"分类名称\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"customizedType\" align=\"center\" label=\"定制类型\" min-width=\"100\">\r\n            <template slot-scope=\"scope\">\r\n              <p>{{ scope.row.customizedType | customizedTypeList}}</p>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"parentName\" align=\"center\" label=\"父级分类\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"description\" align=\"center\" label=\"分类描述\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"image\" align=\"center\" label=\"图片\" min-width=\"100\">\r\n            <template slot-scope=\"scope\">\r\n              <img class=\"table-img-wh\" :src=\"scope.row.image\" alt>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"valid\" align=\"center\" label=\"有效状态\" width=\"80\">\r\n            <template slot-scope=\"scope\">\r\n              <el-switch\r\n                v-model=\"scope.row.valid\"\r\n                active-color=\"#13ce66\"\r\n                @change=\"switchValid(scope.row)\"\r\n                inactive-color=\"#9d9d9d\"\r\n              ></el-switch>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column\r\n            fixed=\"right\"\r\n            label-class-name=\"text-center\"\r\n            class-name=\"text-center\"\r\n            align=\"center\"\r\n            label=\"操作\"\r\n            width=\"100\"\r\n          >\r\n            <template slot-scope=\"scope\">\r\n              <el-button @click=\"handleEditClick(scope.row.id)\" type=\"text\" size=\"small\">编辑</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n        <div class=\"pagination mt-10 mb-20\">\r\n          <el-pagination\r\n            class=\"mr-20\"\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"filtersData.pageIndex\"\r\n            :page-sizes=\"[10,20,30,40,50]\"\r\n            :page-size=\"filtersData.pageSize\"\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=\"total\"\r\n          ></el-pagination>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!--table END  -->\r\n    <tp-custom :itemParam=\"itemStautsParam\" @refreshItem=\"refreshList\" ref=\"classDetailsCpt\"></tp-custom>\r\n  </div>\r\n</template>\r\n<script>\r\n/**\r\n * 定制分类管理\r\n */\r\nimport CustomDetails from \"@/components/classification/custom_details.vue\";\r\nexport default {\r\n  inject: [\"reload\"],\r\n  data() {\r\n    return {\r\n      filtersData: {\r\n        pageIndex: 1, //当前页码\r\n        pageSize: 10, //每页数量\r\n        parentId: null, //父级id\r\n        valid: null, //有效状态\r\n        searchWords: \"\", //搜索关键字\r\n        type: 2 //分类类型（1：标准分类，2：定制分类，3：原料分类或者称为属性分类）\r\n      },\r\n      tableListData: [],\r\n      cateArr: [],\r\n      props: {\r\n        value: \"id\",\r\n        label: \"name\",\r\n        children: \"children\"\r\n      },\r\n      itemStautsParam: {\r\n        type: \"add\",\r\n        title: \"新增定制分类\",\r\n        id: \"\"\r\n      },\r\n      currentPage: 1, // 当前页数\r\n      total: 0, //总条目数\r\n      classData: [],\r\n      classList: []\r\n    };\r\n  },\r\n  filters:{\r\n    customizedTypeList(value){\r\n      if(!!value)\r\n      switch (value.toString()) {\r\n        case '1':\r\n            return '套装'\r\n          break;\r\n        case '2':\r\n            return '单品'\r\n          break;\r\n        default:\r\n           return '未知'\r\n          break;\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.getTableList();\r\n    this.getClassData();\r\n  },\r\n  methods: {\r\n    getClassData() {\r\n      this.$common.getClassSelect(this, 2).then(res => {\r\n        this.classData = res.ztree;\r\n        this.classList = res.list;\r\n      });\r\n    },\r\n    cascaderGet(e) {\r\n      let cateId = JSON.parse(JSON.stringify(e)).pop();\r\n      let obj = this.classList.find(item => item.id == cateId);\r\n      this.filtersData.parentId = obj.id;\r\n    },\r\n    //获取列表\r\n    getTableList() {\r\n      this.request(this.api.product.categories_list, this.filtersData).then(\r\n        data => {\r\n          this.tableListData = data.data;\r\n          this.total = data.totalCount;\r\n        }\r\n      );\r\n    },\r\n    //滑块开关\r\n    switchValid(params) {\r\n      this.request(this.api.product.categories_save, params).then(data => {\r\n        this.$message.success(\"修改成功！\");\r\n      });\r\n    },\r\n    //搜索\r\n    handleSearch() {\r\n      this.filtersData.pageIndex = 1;\r\n      this.getTableList();\r\n    },\r\n    //清空重置\r\n    handleResetFilters(formName) {\r\n      this.$refs[formName].resetFields();\r\n      this.cateArr = [];\r\n    },\r\n    //新增分类\r\n    openAddClass() {\r\n      this.itemStautsParam.type = \"add\";\r\n      this.itemStautsParam.title = \"新增定制分类\";\r\n      this.$refs.classDetailsCpt.attributePopupInit();\r\n    },\r\n   // 修改分类\r\n    handleEditClick(_id){\r\n      this.itemStautsParam.type='edit';\r\n      this.itemStautsParam.title=\"修改分类\";\r\n      this.itemStautsParam.id=_id;\r\n      this.$refs.classDetailsCpt.attributePopupInit();\r\n    },\r\n    //当前页数修改时发生改变\r\n    handleCurrentChange(val) {\r\n      this.filtersData.pageIndex = val;\r\n      this.getTableList();\r\n    },\r\n    // 每页显示多少条时发生改变\r\n    handleSizeChange(val) {\r\n      this.filtersData.pageSize = val;\r\n      this.getTableList();\r\n    },\r\n    //子组件传参刷新 父组件\r\n    refreshList() {\r\n      this.reload();\r\n    }\r\n  },\r\n  components: {\r\n    [CustomDetails.name]: CustomDetails\r\n  }\r\n};\r\n</script>\r\n<style lang=\"less\" scoped>\r\n</style>\r\n"]}]}