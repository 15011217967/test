{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\workorder\\config\\workOrder_time_list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\workorder\\config\\workOrder_time_list.vue","mtime":1572415123707},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport axios from 'axios'\r\nimport {getToken} from '@/utils/auth'\r\nimport codeSet from '@/components/codeSet'\r\nimport treeDept from '@/components/treeDept'\r\nimport { filter } from 'minimatch';\r\nimport { get } from 'http';\r\n\r\nlet token=getToken()\r\n\r\nexport default {\r\n\r\n   data() {\r\n      return{\r\n         job_list_obj:{},\r\n         jobOrderTime_List_backup:{},\r\n         warningTypeList:[],\r\n         // 预警提醒列表\r\n         \"alarmSets\":[\r\n            {\r\n               \"startTime\":null,\r\n               \"endTime\":null,\r\n               \"warnType\":null,\r\n               \"localRemind\":null,\r\n               \"emailRemind\":null,\r\n               \"smsRemind\":null,\r\n               \"signerReceive\":null,\r\n               \"adminReceive\":null\r\n            }\r\n         ],\r\n         formInline:{\r\n            user: '',\r\n            region: ''\r\n         },\r\n         filtersData:{\r\n            pageIndex: 1, //当前页码\r\n            pageSize: 10, //每页数量\r\n            \"orderBy\":\"createTime\",\r\n            used: null, //有效状态\r\n            filter: \"\", //搜索关键字\r\n            name:\"\",\r\n            isStart:\"\",\r\n            startDate: \"\",\r\n            endDate: \"\"\r\n         },\r\n         value: '',\r\n         storageValArr:[],\r\n         // 指派单选框\r\n         radio: '1',\r\n         // 指派\r\n         gridData: [],\r\n        dialogTableVisible: false,\r\n        dialogFormVisible: false,\r\n        form: {\r\n          name: '',\r\n          region: '',\r\n          date1: '',\r\n          date2: '',\r\n          delivery: false,\r\n          type: [],\r\n          resource: '',\r\n          desc: ''\r\n        },\r\n        formLabelWidth: '120px'\r\n      }\r\n   },\r\n   created() {\r\n      const that = this;\r\n      this.getJobOrderTime_List();\r\n      this.getWarningTypeList();\r\n   },\r\n   methods: {\r\n        /**\r\n     * 获取预警类型\r\n     */\r\n    getWarningTypeList() {\r\n      const that = this;\r\n\r\n      this.request(\r\n        that.api.job_order.getWarningType_List,\r\n      ).then(res => {\r\n        that.warningTypeList = res.data;\r\n      });\r\n    },\r\n      /**\r\n       * 编辑\r\n       */\r\n      timeRedact(id) {\r\n         this.href('workOrder_time_redact',{\r\n            id:id\r\n         })\r\n      },\r\n      // 点击页数\r\n      handleCurrentChange(pageIndex){\r\n         this.filtersData.pageIndex = pageIndex;\r\n         this.getJobOrderTime_List();\r\n      },\r\n      // 点击每页多少条数\r\n      handleSizeChange(pageSize){\r\n         this.filtersData.pageSize = pageSize;\r\n         this.getJobOrderTime_List();\r\n      },\r\n      /**\r\n       * 查看预警\r\n       */\r\n      examineWarning(scope) {\r\n         if(!scope) return;\r\n         this.alarmSets = JSON.parse(JSON.stringify(scope));\r\n         if(!this.alarmSets.length > 0) return;\r\n         this.alarmSets.forEach((item, index) => {\r\n            item.endTime = this.formattingTime(item.endTime);\r\n         });\r\n         this.dialogTableVisible = true;\r\n      },\r\n      saveTimeUpdate(isStart,index) {\r\n         const that = this,\r\n               data = that.jobOrderTime_List_backup.data[index];\r\n\r\n         data.isStart = isStart ? 1 : 0;\r\n         this.request(\r\n            that.api.job_order.jobOrderTimeUpdate,\r\n            data\r\n         ).then(res => {\r\n            that.warn('启停状态更改成功！','success');\r\n            that.getJobOrderTime_List();\r\n         });\r\n      },\r\n      /**\r\n       * 提示\r\n       */\r\n      warn(message, type) {\r\n         this.$message({\r\n         message: message,\r\n         type: type || 'warning'\r\n         });\r\n      },\r\n      /**\r\n       * 查询工单列表\r\n       */\r\n      getJobOrderTime_List(pageIndex, pageSize) {\r\n         const that = this;\r\n\r\n         this.request(\r\n         that.api.job_order.getJobOrderTime_List,\r\n         this.filtersData\r\n         ).then(res => {\r\n            this.jobOrderTime_List_backup = JSON.parse(JSON.stringify(res));\r\n            res.data.forEach((item, index) => {\r\n               // 适用工单字段拼接处理\r\n               item._applyWorkOrders = '';\r\n               if(!item.applyWorkOrders.length > 0) return;\r\n               item.applyWorkOrders.forEach((items, indexs) => {\r\n                  if(items.workOrderName) item._applyWorkOrders += `${items.workOrderName}、`;\r\n               });\r\n               item._applyWorkOrders = item._applyWorkOrders.replace(/、$/g,'');\r\n               // 处理时长字段拼接处理\r\n               item._handleTime = item.handleTime ? that.formattingTime(item.handleTime) : '';\r\n               // 启停状态字段处理\r\n               item.isStart = item.isStart ? true : false;\r\n            });\r\n            that.job_list_obj = res;\r\n         });\r\n      },\r\n      /**\r\n       * 格式化工单时间段\r\n       * @param { String } str 需要转换的字符串 如：'1-0-1-0'\r\n       * @return { String } str 如：'01-00-01-00'\r\n       */\r\n      formattingTime(str) {\r\n         let arr = str.split('-');\r\n         return `${this.replenishZero(arr[0])}天${this.replenishZero(arr[1])}时${this.replenishZero(arr[2])}分${this.replenishZero(arr[3])}秒`;\r\n      },\r\n      /**\r\n       * 补零函数\r\n       * @param { Nunber | String } item 数字或数字字符串 如： 1，'1'\r\n       * @return { String } 如：'01'\r\n       */\r\n      replenishZero(item) {\r\n         item = parseInt(item);\r\n\r\n         return item < 10 ? `0${item}` : item;\r\n      },\r\n\r\n      /**\r\n       * 新增工单\r\n       */\r\n      workOrder_add() {\r\n        this.$router.push({\r\n            path: '/workOrder_add',\r\n            name: 'workOrder_add'\r\n         });\r\n      },\r\n      /**\r\n       * 跳转工单详情\r\n       */\r\n      href(routeName, param) {\r\n         this.$router.push({\r\n            path: '/' + routeName,\r\n            name: routeName,\r\n            query: param\r\n         })\r\n      },\r\n      /**\r\n       * 删除工单\r\n       */\r\n      open(scope) {\r\n         const that = this;\r\n         console.log(scope)\r\n        this.$confirm('确定要删除吗？', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          that.request(\r\n             that.api.job_order.jobOrderTimeDelete,\r\n             {\r\n                id:scope.id\r\n             }\r\n          ).then(res => {\r\n             this.$message({\r\n               type: 'succeed',\r\n               message: '删除成功！'\r\n            });\r\n            // 如果数据大于一条，则直接请求列表\r\n            if(that.job_list_obj.data.length > 1) {\r\n               that.getJobOrderTime_List();\r\n            }else{\r\n               // 如果是第一页直接请求列表，负责页数减一再请求\r\n               if(that.filtersData.pageIndex == 1) {\r\n                  that.getJobOrderTime_List();\r\n               }else{\r\n                  that.filtersData.pageIndex --;\r\n                  that.getJobOrderTime_List();\r\n               }\r\n            }\r\n          })\r\n        }).catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '已取消删除！'\r\n          });\r\n        });\r\n      },\r\n      /**\r\n       * 领取工单\r\n       */\r\n      open2() {\r\n         this.$message({\r\n            message: '工单领取成功！',\r\n            type: 'success'\r\n         });\r\n      },\r\n      /**\r\n       * 模糊搜索\r\n       */\r\n      handleSearch() {\r\n         this.filtersData.pageIndex = 1;\r\n         this.getJobOrderTime_List();\r\n      },\r\n      /**\r\n       * 搜索重置\r\n       */\r\n      handleResetFilters() {\r\n         Object.assign(this.filtersData, {\r\n            name:\"\",\r\n            isStart:\"\",\r\n            startDate: \"\",\r\n            endDate: \"\"\r\n         });\r\n      },\r\n   },\r\n   components:{\r\n      codeSet,\r\n      treeDept\r\n   },\r\n}\r\n",{"version":3,"sources":["workOrder_time_list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"workOrder_time_list.vue","sourceRoot":"src/views/workorder/config","sourcesContent":["<!-- 工单池 -->\r\n<template>\r\n   <div>\r\n      <!-- 指派 -->\r\n      <el-dialog title=\"查看配置预警类型\" :visible.sync=\"dialogTableVisible\">\r\n        <el-table :data=\"alarmSets\" width=\"330\">\r\n          <el-table-column  label=\"预警类型\" align=\"center\">\r\n            <template  slot-scope=\"scope\">\r\n               <div class=\"warnType\" :style=\"{background:item.color}\" v-if=\"scope.row.warnType === item.id\" v-for=\"(item,index) in warningTypeList\" :key=\"index\">{{ item.tag}}</div>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column property=\"endTime\" label=\"预警时间段\" align=\"center\"></el-table-column>\r\n          <el-table-column  label=\"提醒方式\" align=\"center\">\r\n            <template  slot-scope=\"scope\">{{ scope.row.localRemind ? '站内提醒' : ''  }}</template>\r\n          </el-table-column>\r\n          <el-table-column  label=\"接收人\" align=\"center\">\r\n             <template  slot-scope=\"scope\">{{ scope.row.signerReceive && scope.row.signerReceive != 'false' ? '签收人、' : ''  }}{{ scope.row.adminReceive ? '管理者' : ''  }}</template>\r\n          </el-table-column>\r\n        </el-table>\r\n         <div slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"dialogTableVisible = false\" size=\"small\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"dialogTableVisible = false\" size=\"small\" >确 定</el-button>\r\n        </div>\r\n      </el-dialog>\r\n      <!-- 指派 -->\r\n      <!-- 模糊搜索 -->\r\n      <div class=\"item-margin\">\r\n         <el-form\r\n            class=\"item-form\"\r\n            size=\"small\"\r\n            :inline=\"true\"\r\n            :model=\"filtersData\">\r\n            <!-- 模糊查询 -->\r\n            <el-form-item label=\"模糊查询：\">\r\n               <el-input v-model=\"filtersData.name\" @keyup.enter.native=\"handleSearch\" placeholder=\"时限管理名称\"></el-input>\r\n            </el-form-item>\r\n            <!-- 状态 -->\r\n            <el-form-item label=\"状态：\">\r\n              <el-select v-model=\"filtersData.isStart\">\r\n                 <el-option v-for=\"item in this.$common.usedOptions()\" :label=\"item.name\" :key=\"item.id\" :value=\"item.id\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <br/>\r\n            <!-- 选择时间 -->\r\n            <el-form-item label=\"创建时间：\" prop=\"startDate\">\r\n               <el-date-picker value-format=\"yyyy-MM-dd\" v-model=\"filtersData.startDate\" type=\"date\" placeholder=\"开始日期\"></el-date-picker>\r\n            </el-form-item>\r\n            <el-form-item prop=\"endDate\">\r\n               <el-date-picker value-format=\"yyyy-MM-dd\" v-model=\"filtersData.endDate\" type=\"date\" placeholder=\"结束日期\"></el-date-picker>\r\n            </el-form-item>\r\n            <!-- 搜索，重置 -->\r\n            <el-form-item>\r\n               <el-button @click=\"handleSearch\" type=\"primary\" plain size=\"small\">搜索</el-button>\r\n               <el-button @click=\"handleResetFilters\" size=\"small\">重置</el-button>\r\n            </el-form-item>\r\n         </el-form>\r\n      </div>\r\n      <!-- 模糊搜索 -->\r\n      <!-- 工单列表 -->\r\n      <div class=\"item-margin\">\r\n         <div class=\"item-table\">\r\n            <el-button type=\"primary\" size=\"small\" class=\"ml-20 mt-24\" @click=\"href('workOrder_time_add')\">新增</el-button>\r\n            <el-table\r\n                class=\"mt-20\"\r\n               :data=\"job_list_obj.data\"\r\n               stripe\r\n               empty-text=\"暂无数据\"\r\n               header-align=\"center\"\r\n               header-row-class-name=\"item-table-header\"\r\n               :highlight-current-row=\"true\">\r\n               <!-- 时限管理名称 -->\r\n               <el-table-column prop=\"\" align=\"center\" label=\"时限管理名称\" min-width=\"100\">\r\n                  <template slot-scope=\"scope\">\r\n                     {{ scope.row.name }}\r\n                  </template>\r\n               </el-table-column>\r\n               <!-- 适用工单 -->\r\n               <el-table-column prop=\"\" :show-overflow-tooltip=\"true\" align=\"center\" label=\"适用工单\" min-width=\"100\">\r\n                  <template slot-scope=\"scope\">\r\n                     <span  class=\"blueness\">{{ scope.row._applyWorkOrders ? scope.row._applyWorkOrders : '--' }}</span>\r\n                  </template>\r\n               </el-table-column>\r\n               <!-- 处理时间时长 -->\r\n               <el-table-column prop=\"\" align=\"center\" label=\"处理时间时长\" min-width=\"100\">\r\n                  <template slot-scope=\"scope\">\r\n                     <span  class=\"blueness\">{{ scope.row._handleTime ? scope.row._handleTime : '--' }}</span>\r\n                  </template>\r\n               </el-table-column>\r\n               <!-- 配置预警 -->\r\n               <el-table-column align=\"center\" label=\"配置预警\" min-width=\"100\">\r\n                  <template slot-scope=\"scope\">\r\n                  <span @click=\"examineWarning(scope.row.alarmSets)\" class=\"blueness\">查看</span>\r\n                  </template>\r\n               </el-table-column>\r\n               <!-- 更新时间 -->\r\n               <el-table-column prop=\"\" align=\"center\" label=\"更新时间\" min-width=\"100\">\r\n                  <template slot-scope=\"scope\">\r\n                        {{ scope.row.updateTime | timestampToTime }}\r\n                     </template>\r\n               </el-table-column>\r\n               <!-- 启停状态 -->\r\n               <el-table-column align=\"center\" label=\"启停状态\" min-width=\"100\">\r\n                  <template slot-scope=\"scope\">\r\n                     <el-switch\r\n                        v-model=\"scope.row.isStart\"\r\n                        active-color=\"#13ce66\"\r\n                        @change=\"saveTimeUpdate(scope.row.isStart, scope.$index, scope.row)\"\r\n                        inactive-color=\"#9d9d9d\"\r\n                     ></el-switch>\r\n                  </template>\r\n               </el-table-column>\r\n               <!-- 操作 -->\r\n               <el-table-column\r\n                  fixed=\"right\"\r\n                  label-class-name=\"text-center\"\r\n                  class-name=\"text-center\"\r\n                  align=\"center\"\r\n                  label=\"操作\"\r\n                  width=\"180\">\r\n                  <template slot-scope=\"scope\">\r\n                     <el-button type=\"text\" size=\"small\" @click=\"timeRedact(scope.row.id)\">编辑</el-button>\r\n                     <el-button type=\"text\" @click=\"open(scope.row)\" size=\"small\">删除</el-button>\r\n                  </template>\r\n               </el-table-column>\r\n            </el-table>\r\n            <div class=\"pagination mt-10 mb-20\">\r\n         <!-- 分页 -->\r\n         <el-pagination\r\n            class=\"mr-20\"\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"filtersData.pageIndex\"\r\n            :page-sizes=\"[10,20,30,40,50]\"\r\n            :page-size=\"filtersData.pageSize\"\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=\"job_list_obj.totalCount\"\r\n         ></el-pagination>\r\n        </div>\r\n         </div>\r\n      </div>\r\n      <!-- 工单列表 -->\r\n   </div>\r\n</template>\r\n<!-- 工单池 -->\r\n<script>\r\nimport axios from 'axios'\r\nimport {getToken} from '@/utils/auth'\r\nimport codeSet from '@/components/codeSet'\r\nimport treeDept from '@/components/treeDept'\r\nimport { filter } from 'minimatch';\r\nimport { get } from 'http';\r\n\r\nlet token=getToken()\r\n\r\nexport default {\r\n\r\n   data() {\r\n      return{\r\n         job_list_obj:{},\r\n         jobOrderTime_List_backup:{},\r\n         warningTypeList:[],\r\n         // 预警提醒列表\r\n         \"alarmSets\":[\r\n            {\r\n               \"startTime\":null,\r\n               \"endTime\":null,\r\n               \"warnType\":null,\r\n               \"localRemind\":null,\r\n               \"emailRemind\":null,\r\n               \"smsRemind\":null,\r\n               \"signerReceive\":null,\r\n               \"adminReceive\":null\r\n            }\r\n         ],\r\n         formInline:{\r\n            user: '',\r\n            region: ''\r\n         },\r\n         filtersData:{\r\n            pageIndex: 1, //当前页码\r\n            pageSize: 10, //每页数量\r\n            \"orderBy\":\"createTime\",\r\n            used: null, //有效状态\r\n            filter: \"\", //搜索关键字\r\n            name:\"\",\r\n            isStart:\"\",\r\n            startDate: \"\",\r\n            endDate: \"\"\r\n         },\r\n         value: '',\r\n         storageValArr:[],\r\n         // 指派单选框\r\n         radio: '1',\r\n         // 指派\r\n         gridData: [],\r\n        dialogTableVisible: false,\r\n        dialogFormVisible: false,\r\n        form: {\r\n          name: '',\r\n          region: '',\r\n          date1: '',\r\n          date2: '',\r\n          delivery: false,\r\n          type: [],\r\n          resource: '',\r\n          desc: ''\r\n        },\r\n        formLabelWidth: '120px'\r\n      }\r\n   },\r\n   created() {\r\n      const that = this;\r\n      this.getJobOrderTime_List();\r\n      this.getWarningTypeList();\r\n   },\r\n   methods: {\r\n        /**\r\n     * 获取预警类型\r\n     */\r\n    getWarningTypeList() {\r\n      const that = this;\r\n\r\n      this.request(\r\n        that.api.job_order.getWarningType_List,\r\n      ).then(res => {\r\n        that.warningTypeList = res.data;\r\n      });\r\n    },\r\n      /**\r\n       * 编辑\r\n       */\r\n      timeRedact(id) {\r\n         this.href('workOrder_time_redact',{\r\n            id:id\r\n         })\r\n      },\r\n      // 点击页数\r\n      handleCurrentChange(pageIndex){\r\n         this.filtersData.pageIndex = pageIndex;\r\n         this.getJobOrderTime_List();\r\n      },\r\n      // 点击每页多少条数\r\n      handleSizeChange(pageSize){\r\n         this.filtersData.pageSize = pageSize;\r\n         this.getJobOrderTime_List();\r\n      },\r\n      /**\r\n       * 查看预警\r\n       */\r\n      examineWarning(scope) {\r\n         if(!scope) return;\r\n         this.alarmSets = JSON.parse(JSON.stringify(scope));\r\n         if(!this.alarmSets.length > 0) return;\r\n         this.alarmSets.forEach((item, index) => {\r\n            item.endTime = this.formattingTime(item.endTime);\r\n         });\r\n         this.dialogTableVisible = true;\r\n      },\r\n      saveTimeUpdate(isStart,index) {\r\n         const that = this,\r\n               data = that.jobOrderTime_List_backup.data[index];\r\n\r\n         data.isStart = isStart ? 1 : 0;\r\n         this.request(\r\n            that.api.job_order.jobOrderTimeUpdate,\r\n            data\r\n         ).then(res => {\r\n            that.warn('启停状态更改成功！','success');\r\n            that.getJobOrderTime_List();\r\n         });\r\n      },\r\n      /**\r\n       * 提示\r\n       */\r\n      warn(message, type) {\r\n         this.$message({\r\n         message: message,\r\n         type: type || 'warning'\r\n         });\r\n      },\r\n      /**\r\n       * 查询工单列表\r\n       */\r\n      getJobOrderTime_List(pageIndex, pageSize) {\r\n         const that = this;\r\n\r\n         this.request(\r\n         that.api.job_order.getJobOrderTime_List,\r\n         this.filtersData\r\n         ).then(res => {\r\n            this.jobOrderTime_List_backup = JSON.parse(JSON.stringify(res));\r\n            res.data.forEach((item, index) => {\r\n               // 适用工单字段拼接处理\r\n               item._applyWorkOrders = '';\r\n               if(!item.applyWorkOrders.length > 0) return;\r\n               item.applyWorkOrders.forEach((items, indexs) => {\r\n                  if(items.workOrderName) item._applyWorkOrders += `${items.workOrderName}、`;\r\n               });\r\n               item._applyWorkOrders = item._applyWorkOrders.replace(/、$/g,'');\r\n               // 处理时长字段拼接处理\r\n               item._handleTime = item.handleTime ? that.formattingTime(item.handleTime) : '';\r\n               // 启停状态字段处理\r\n               item.isStart = item.isStart ? true : false;\r\n            });\r\n            that.job_list_obj = res;\r\n         });\r\n      },\r\n      /**\r\n       * 格式化工单时间段\r\n       * @param { String } str 需要转换的字符串 如：'1-0-1-0'\r\n       * @return { String } str 如：'01-00-01-00'\r\n       */\r\n      formattingTime(str) {\r\n         let arr = str.split('-');\r\n         return `${this.replenishZero(arr[0])}天${this.replenishZero(arr[1])}时${this.replenishZero(arr[2])}分${this.replenishZero(arr[3])}秒`;\r\n      },\r\n      /**\r\n       * 补零函数\r\n       * @param { Nunber | String } item 数字或数字字符串 如： 1，'1'\r\n       * @return { String } 如：'01'\r\n       */\r\n      replenishZero(item) {\r\n         item = parseInt(item);\r\n\r\n         return item < 10 ? `0${item}` : item;\r\n      },\r\n\r\n      /**\r\n       * 新增工单\r\n       */\r\n      workOrder_add() {\r\n        this.$router.push({\r\n            path: '/workOrder_add',\r\n            name: 'workOrder_add'\r\n         });\r\n      },\r\n      /**\r\n       * 跳转工单详情\r\n       */\r\n      href(routeName, param) {\r\n         this.$router.push({\r\n            path: '/' + routeName,\r\n            name: routeName,\r\n            query: param\r\n         })\r\n      },\r\n      /**\r\n       * 删除工单\r\n       */\r\n      open(scope) {\r\n         const that = this;\r\n         console.log(scope)\r\n        this.$confirm('确定要删除吗？', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          that.request(\r\n             that.api.job_order.jobOrderTimeDelete,\r\n             {\r\n                id:scope.id\r\n             }\r\n          ).then(res => {\r\n             this.$message({\r\n               type: 'succeed',\r\n               message: '删除成功！'\r\n            });\r\n            // 如果数据大于一条，则直接请求列表\r\n            if(that.job_list_obj.data.length > 1) {\r\n               that.getJobOrderTime_List();\r\n            }else{\r\n               // 如果是第一页直接请求列表，负责页数减一再请求\r\n               if(that.filtersData.pageIndex == 1) {\r\n                  that.getJobOrderTime_List();\r\n               }else{\r\n                  that.filtersData.pageIndex --;\r\n                  that.getJobOrderTime_List();\r\n               }\r\n            }\r\n          })\r\n        }).catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '已取消删除！'\r\n          });\r\n        });\r\n      },\r\n      /**\r\n       * 领取工单\r\n       */\r\n      open2() {\r\n         this.$message({\r\n            message: '工单领取成功！',\r\n            type: 'success'\r\n         });\r\n      },\r\n      /**\r\n       * 模糊搜索\r\n       */\r\n      handleSearch() {\r\n         this.filtersData.pageIndex = 1;\r\n         this.getJobOrderTime_List();\r\n      },\r\n      /**\r\n       * 搜索重置\r\n       */\r\n      handleResetFilters() {\r\n         Object.assign(this.filtersData, {\r\n            name:\"\",\r\n            isStart:\"\",\r\n            startDate: \"\",\r\n            endDate: \"\"\r\n         });\r\n      },\r\n   },\r\n   components:{\r\n      codeSet,\r\n      treeDept\r\n   },\r\n}\r\n</script>\r\n<style  lang=\"less\" scoped>\r\n   .blueness{\r\n      color: #1E90FF;\r\n   }\r\n   h5 {\r\n     color: #222;\r\n     margin-left: -15px;\r\n   }\r\n   .test {\r\n     color: #9d9d9d;\r\n   }\r\n   .warnType{\r\n      color: #fff;\r\n      border-radius: 5px;\r\n   }\r\n</style>\r\n"]}]}