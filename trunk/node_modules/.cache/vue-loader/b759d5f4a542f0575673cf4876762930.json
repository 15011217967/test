{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\product\\basic_info\\color_list.vue?vue&type=style&index=0&id=e33d87c0&lang=less&scoped=true&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\product\\basic_info\\color_list.vue","mtime":1574160265236},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\css-loader\\index.js","mtime":1558492728478},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1558492728890},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\postcss-loader\\src\\index.js","mtime":1558492728823},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\less-loader\\dist\\cjs.js","mtime":1566193719488},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.color-box {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  .color-left {\r\n    min-width: 400px;\r\n    width: 400px;\r\n    margin-right: 10px;\r\n    background-color: #ffffff;\r\n    padding: 10px;\r\n  }\r\n  .color-right {\r\n    flex: 1;\r\n    background-color: #ffffff;\r\n    padding: 10px;\r\n  }\r\n}\r\n.color-top {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  height: 40px;\r\n  border-bottom: 1px solid #eeeeee;\r\n}\r\n.color-box /deep/ .nav-i {\r\n  margin: 0 8px;\r\n  cursor: pointer;\r\n  display: none;\r\n}\r\n.color-series /deep/ .el-table__row:hover .nav-i {\r\n  display: inline-block;\r\n}\r\n.color-box /deep/ .el-form-item {\r\n  margin-bottom: 0;\r\n}\r\n",{"version":3,"sources":["color_list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"color_list.vue","sourceRoot":"src/views/product/basic_info","sourcesContent":["<!--\r\n * @Author: elephant\r\n * @Date: 2019-11-06 11:39:47\r\n * @LastEditTime: 2019-11-15 14:58:58\r\n * @LastEditors: your name\r\n * @Description: 颜色属性维护\r\n * @\r\n -->\r\n<template>\r\n  <div class=\"item-margin color-box\">\r\n    <!-- 左侧色系 -->\r\n    <div class=\"color-left\">\r\n      <div class=\"color-top\">\r\n        <span>色系</span>\r\n        <el-button size=\"mini\" @click=\"addColorSeries\" type=\"primary\">新增</el-button>\r\n      </div>\r\n       <el-form\r\n          :model=\"colorSeriesForm\"\r\n          size=\"small\"\r\n          ref=\"colorSeriesFormRef\"\r\n          inline\r\n          :inline-message=\"true\"\r\n        >\r\n      <el-table\r\n        @row-click=\"colorSeriesRowClick\"\r\n        class=\"color-series\"\r\n        :data=\"colorSeriesForm.colorSeriesData\"\r\n        key=\"colorSeriesData\"\r\n        stripe\r\n        v-loading=\"colorSeriesLoading\"\r\n        empty-text=\"暂无数据\"\r\n        header-align=\"center\"\r\n        header-row-class-name=\"item-table-header\"\r\n        :highlight-current-row=\"true\"\r\n        height=\"750\"\r\n        ref=\"seriesTableRef\"\r\n      >\r\n        <el-table-column prop=\"name\" align=\"left\" label=\"色系名称\">\r\n          <template slot-scope=\"scope\">\r\n            <el-form-item\r\n                :prop=\"'colorSeriesData.' + scope.$index + '.name'\"\r\n                 :rules=\"[\r\n                  { required: true, message: '请输入色系名称',trigger: 'blur'},\r\n                  { min: 1, max: 10, message: '最长不超过10个字符', trigger: 'blur' }\r\n                ]\"\r\n              >\r\n            <el-input\r\n              data-type=\"noTrigger\" \r\n              v-if=\"scope.row._edit\"\r\n              @blur=\"colorSeriesBlur(scope.row)\"\r\n              class=\"color-series-input\"\r\n              v-model=\"scope.row.name\"\r\n            ></el-input>\r\n            <p v-else >{{scope.row.name}}</p>\r\n           </el-form-item>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column\r\n          label-class-name=\"text-center\"\r\n          class-name=\"text-center\"\r\n          align=\"right\"\r\n          width=\"100\"\r\n        >\r\n          <template slot-scope=\"scope\">\r\n            <i class=\"el-icon-edit nav-i\" data-type=\"noTrigger\" @click=\"editColorSeries(scope.row)\"></i>\r\n            <i class=\"el-icon-delete nav-i\" data-type=\"noTrigger\"  @click=\"deleteColorSeries(scope)\"></i>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n       </el-form>\r\n    </div>\r\n    <!-- 左侧色系END -->\r\n    <!-- 右侧颜色 -->\r\n    <div v-if=\"colorIsShow\" class=\"color-right\">\r\n      <div class=\"color-top\">\r\n        <span>关联颜色</span>\r\n        <el-button size=\"mini\" @click=\"addColor\" type=\"primary\">新增</el-button>\r\n      </div>\r\n       <el-form\r\n          :model=\"colorForm\"\r\n          size=\"small\"\r\n          ref=\"colorFormRef\"\r\n          inline\r\n          :inline-message=\"true\"\r\n        >\r\n      <el-table\r\n        class=\"color\"\r\n        :data=\"colorForm.colorData\"\r\n        v-loading=\"colorLoading\"\r\n        stripe\r\n        empty-text=\"暂无数据\"\r\n        header-align=\"center\"\r\n        header-row-class-name=\"item-table-header\"\r\n        :highlight-current-row=\"true\"\r\n         height=\"750\"\r\n        ref=\"colorTableRef\"\r\n      >\r\n        <el-table-column prop=\"name\" align=\"left\" label=\"颜色名称\">\r\n          <template slot-scope=\"scope\">\r\n             <el-form-item\r\n                :prop=\"'colorData.' + scope.$index + '.name'\"\r\n                 :rules=\"[\r\n                  { required: true, message: '请输入颜色名称',trigger: 'blur'},\r\n                  { min: 1, max: 10, message: '最长不超过10个字符', trigger: 'blur' }\r\n                ]\"\r\n              >\r\n            <el-input\r\n              v-show=\"scope.row._edit\"\r\n              class=\"color-series-input\"\r\n              v-model=\"scope.row.name\"\r\n            ></el-input>\r\n            <p v-show=\"!scope.row._edit\">{{scope.row.name}}</p>\r\n             </el-form-item>\r\n          </template>\r\n        </el-table-column>\r\n         <el-table-column prop=\"code\" align=\"left\" label=\"颜色编码\">\r\n          <template slot-scope=\"scope\">\r\n             <el-form-item\r\n                :prop=\"'colorData.' + scope.$index + '.code'\"\r\n                 :rules=\"[\r\n                  { required: true, message: '请输入颜色编码',trigger: 'blur'},\r\n                  {validator: validateColorCode, trigger: 'blur' }\r\n                ]\"\r\n              >\r\n            <el-input\r\n              v-show=\"scope.row._edit\"\r\n              class=\"color-series-input\"\r\n              v-model=\"scope.row.code\"\r\n            ></el-input>\r\n            <p v-show=\"!scope.row._edit\">{{scope.row.code}}</p>\r\n             </el-form-item>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column\r\n          label-class-name=\"text-center\"\r\n          class-name=\"text-center\"\r\n          align=\"right\"\r\n          width=\"100\"\r\n        >\r\n          <template slot-scope=\"scope\">\r\n             <el-button @click=\"editOrSubmitColor(scope.row)\" type=\"text\" size=\"mini\">{{!!scope.row._edit?'保存':'编辑'}}</el-button>\r\n             <el-button @click=\"deleteColor(scope)\" type=\"text\" size=\"mini\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      </el-form>\r\n    </div>\r\n    <!-- 右侧颜色 END-->\r\n  </div>\r\n</template>\r\n<script>\r\nlet mirrorColorSeriesData =[];\r\nimport { validateColorCode } from \"@/utils/validate\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      //颜色Code 验证\r\n      validateColorCode:validateColorCode,\r\n      colorSeriesForm:{\r\n        colorSeriesData: []\r\n      },\r\n\r\n      colorIsShow:false,\r\n      colorForm:{\r\n        colorData:[],\r\n      },\r\n      colorSeriesLoading:false,\r\n      colorLoading:false,\r\n      colorSeriesId:'',\r\n      colorSeriesValidate:true,\r\n    };\r\n  },\r\n  created() {\r\n    //获取色系\r\n    this.getColorSeriesData('init');\r\n  },\r\n  methods: {\r\n    //获取色系列表\r\n    getColorSeriesData(type) {\r\n      this.colorSeriesLoading=true;\r\n      this.request(this.api.product.colorSeries_list, {},true).then(res => {\r\n        let _data = res.data;\r\n        for (let i = 0; i < _data.length; i++) {\r\n          _data[i]._edit = false;\r\n        }\r\n        if(_data.length > 0 && type == 'init'){\r\n          this.colorIsShow=true;\r\n          this.colorSeriesId=_data[0].id;\r\n          this.getColorData();\r\n        }\r\n        mirrorColorSeriesData=this.$common.deepCopy(_data);\r\n        this.colorSeriesForm.colorSeriesData = _data;\r\n        this.colorSeriesLoading=false;\r\n        this.$refs['colorSeriesFormRef'].clearValidate();\r\n      });\r\n    },\r\n    //获取颜色\r\n    getColorData(){\r\n        this.colorLoading=true;\r\n       this.request(this.api.product.color_list, {seriesId:this.colorSeriesId},true)\r\n       .then(res => {\r\n        let _data = res.data;\r\n        for (let i = 0; i < _data.length; i++) {\r\n          _data[i]._edit = false;\r\n        }\r\n        this.colorForm.colorData=_data;\r\n        this.colorLoading=false;\r\n       })\r\n    },\r\n    //色系被点击\r\n    colorSeriesRowClick(row,column, event){\r\n      if(!this.colorSeriesValidate){\r\n        return\r\n      }\r\n      let attrType=event.target.getAttribute('data-type');\r\n      if(attrType != 'noTrigger'){\r\n        if(!!row.id){\r\n          this.colorSeriesId=row.id;\r\n          this.getColorData();\r\n        }\r\n      }\r\n    },\r\n    //色系修改\r\n    editColorSeries(row) {\r\n      row._edit = true;\r\n    },\r\n    //色系删除\r\n    deleteColorSeries(scope) {\r\n      if(!!scope.row.id){\r\n        this.request(this.api.product.colorSeries_delete, { id: scope.row.id }).then(\r\n          res => {\r\n            this.$message.success(\"删除成功！\");\r\n            this.removeObj(this.colorSeriesForm.colorSeriesData,scope.row.id);\r\n          }\r\n        );\r\n      }else{\r\n         this.colorSeriesForm.colorSeriesData.splice(scope.$index, 1);\r\n      }\r\n    },\r\n    //色系失去焦点\r\n    colorSeriesBlur(row) {\r\n      let colorSeriesData = this.colorSeriesForm.colorSeriesData;\r\n      let flag = true;\r\n      if(!row.name.replace(/\\s*/g, \"\")){\r\n        this.$message.error(\"请输入色系！\");\r\n        return\r\n      }\r\n      //检查重复\r\n      for (let i = 0; i < colorSeriesData.length; i++) {\r\n        if (colorSeriesData[i].id != row.id && colorSeriesData[i].name.replace(/\\s*/g, \"\") == row.name.replace(/\\s*/g, \"\")){\r\n          flag = false;\r\n          break;\r\n        }\r\n      }\r\n      if (!flag) {\r\n        this.$message.error(\"已有相同色系！\");\r\n        return\r\n      }\r\n       //根据镜像判断是否修改了字段修改了才提交\r\n      for (let i = 0; i < mirrorColorSeriesData.length; i++) {\r\n        if(mirrorColorSeriesData[i].name.replace(/\\s*/g, \"\") == row.name.replace(/\\s*/g, \"\") && row.id != null){\r\n          row._edit=false;\r\n          this.handleColorSeriesValidateError();\r\n          return\r\n        }\r\n      }\r\n      if (flag) {\r\n        this.colorSeriesSubmit(row);\r\n      }\r\n    },\r\n    //色系保存\r\n    colorSeriesSubmit(params) {\r\n      this.$refs['colorSeriesFormRef'].validate(valid => {\r\n        if (valid) {\r\n          this.request(this.api.product.colorSeries_save, params).then(res => {\r\n            params._edit = false;\r\n            this.$message.success(\"保存成功\");\r\n            this.getColorSeriesData();\r\n            this.handleColorSeriesValidateError();\r\n          });\r\n        }else{\r\n          this.handleColorSeriesValidateError();\r\n          this.$message.error(\"规则验证不通过\");\r\n        }\r\n      });\r\n    },\r\n    //点击新增色系\r\n    addColorSeries() {\r\n      this.handleEmptyColor(this.colorSeriesForm.colorSeriesData,'colorSeries');\r\n      this.$nextTick(() => {\r\n         this.tableScrollTop('seriesTableRef',this.colorSeriesForm.colorSeriesData)\r\n      })\r\n     \r\n    },\r\n    //点击新增颜色\r\n    addColor(){\r\n      this.handleEmptyColor(this.colorForm.colorData,'color');\r\n      this.$nextTick(() => {\r\n         this.tableScrollTop('colorTableRef',this.colorForm.colorData)\r\n      })\r\n    },\r\n    //点击新增时跳到指定位置\r\n    tableScrollTop(_ref,_data){\r\n      let tableData=_data;\r\n      let _el=null;\r\n      if(_ref == 'seriesTableRef'){\r\n        _el=this.$refs.seriesTableRef;\r\n      }else{\r\n        _el=this.$refs.colorTableRef;\r\n      }\r\n       _el.setCurrentRow(tableData[tableData.length - 1])\r\n      const targetTop = _el.$el.querySelectorAll('.el-table__body tr')[tableData.length -1 ].getBoundingClientRect().top;\r\n      const containerTop = _el.$el.querySelector('.el-table__body').getBoundingClientRect().top;\r\n      const scrollParent = _el.$el.querySelector('.el-table__body-wrapper');\r\n      scrollParent.scrollTop = targetTop - containerTop;\r\n    },\r\n    //编辑或保存颜色\r\n    editOrSubmitColor(params){\r\n      //params._edit=!params._edit;\r\n      if(!!params._edit){\r\n        this.$refs['colorFormRef'].validate(valid => {\r\n         if (valid) {\r\n           params.seriesId=this.colorSeriesId;\r\n           this.request(this.api.product.color_save, params).then(res => {\r\n             params._edit = false;\r\n             this.$message.success(\"保存成功\");\r\n             this.getColorData();\r\n           });\r\n         }else{\r\n           this.$message.error(\"规则验证不通过\");\r\n         }\r\n       });\r\n      }else{\r\n        params._edit=true;\r\n      }\r\n    },\r\n    //删除颜色\r\n    deleteColor(scope){\r\n      if(!!scope.row.id){\r\n        this.request(this.api.product.color_delete, { id: scope.row.id }).then(\r\n          res => {\r\n            this.$message.success(\"删除成功！\");\r\n            this.removeObj(this.colorForm.colorData,scope.row.id);\r\n          }\r\n        );\r\n      }else{\r\n         this.colorForm.colorData.splice(scope.$index, 1);\r\n      }\r\n    },\r\n    /**\r\n     * @Date: 2019-11-07 17:02:03\r\n     * @description: 增加延时 处理色系失去焦点时\r\n     * 点击列表 触发右侧列表联动\r\n     * @author: element\r\n     * @param {type} \r\n     * @return: \r\n     */\r\n    handleColorSeriesValidateError(){\r\n      this.colorSeriesValidate=false;\r\n      setTimeout(() => {\r\n        this.colorSeriesValidate=true;\r\n      }, 2000);\r\n    },\r\n    /**\r\n     * @Date: 2019-11-07 15:36:02\r\n     * @description: 处理空颜色和色系  有就提示 无增加\r\n     * @author: elephant\r\n     * @param {_arr,type}  _arr 数据源 type 区分色系和颜色\r\n     * @return: \r\n     */   \r\n    handleEmptyColor(_arr,type){\r\n      let flag = true;\r\n      for (let i = 0; i < _arr.length; i++) {\r\n        if (_arr[i].id == null) {\r\n          flag = false;\r\n          break;\r\n        }\r\n      }\r\n      if (flag) {\r\n        let obj = {\r\n          name: \"\",\r\n          _edit: true\r\n        };\r\n        if(type == 'color'){\r\n          obj.code=\"\";\r\n        }\r\n        _arr.push(obj);\r\n      } else {\r\n         if(type == 'color'){\r\n           this.$message.error(\"当前颜色未保存！\");\r\n         }else{\r\n           this.$message.error(\"当前色系未保存！\");\r\n         }\r\n      }\r\n    },\r\n    /**\r\n     * @Date: 2019-11-07 11:48:28\r\n     * @description: 删除数组中的某一个对象\r\n     * @author: elephant\r\n     * @param {_arr,_obj} 数组 需删除的对象\r\n     * @return: //返回删除后剩余的数组\r\n     */\r\n    removeObj(_arr, _obj) {\r\n      var length = _arr.length;\r\n      for (var i = 0; i < length; i++) {\r\n        if (_arr[i].id == _obj) {\r\n          if (i == 0) {\r\n            _arr.shift(); //删除并返回数组的第一个元素\r\n            return _arr;\r\n          } else if (i == length - 1) {\r\n            _arr.pop(); //删除并返回数组的最后一个元素\r\n            return _arr;\r\n          } else {\r\n            _arr.splice(i, 1); //删除下标为i的元素\r\n            return _arr;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.color-box {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  .color-left {\r\n    min-width: 400px;\r\n    width: 400px;\r\n    margin-right: 10px;\r\n    background-color: #ffffff;\r\n    padding: 10px;\r\n  }\r\n  .color-right {\r\n    flex: 1;\r\n    background-color: #ffffff;\r\n    padding: 10px;\r\n  }\r\n}\r\n.color-top {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  height: 40px;\r\n  border-bottom: 1px solid #eeeeee;\r\n}\r\n.color-box /deep/ .nav-i {\r\n  margin: 0 8px;\r\n  cursor: pointer;\r\n  display: none;\r\n}\r\n.color-series /deep/ .el-table__row:hover .nav-i {\r\n  display: inline-block;\r\n}\r\n.color-box /deep/ .el-form-item {\r\n  margin-bottom: 0;\r\n}\r\n</style>"]}]}