{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\content\\configure\\material_class.vue?vue&type=style&index=0&id=67fa2819&lang=less&scoped=true&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\content\\configure\\material_class.vue","mtime":1572415123560},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\css-loader\\index.js","mtime":1558492728478},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1558492728890},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\postcss-loader\\src\\index.js","mtime":1558492728823},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\less-loader\\dist\\cjs.js","mtime":1566193719488},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["\n@import \"../style/contentPublic.less\";\n.material-class{\n  .btns{padding-bottom: 10px;}\n  .table-img{height: 36px;}\n  .el-tag{margin-right: 10px;}\n  .add-edit  /deep/ .el-input__inner{width: 200px;}\n}\n",{"version":3,"sources":["material_class.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"material_class.vue","sourceRoot":"src/views/content/configure","sourcesContent":["<style lang=\"less\" scoped >\r\n  @import \"../style/contentPublic.less\";\r\n  .material-class{\r\n    .btns{padding-bottom: 10px;}\r\n    .table-img{height: 36px;}\r\n    .el-tag{margin-right: 10px;}\r\n    .add-edit  /deep/ .el-input__inner{width: 200px;}\r\n  }\r\n</style>\r\n<template>\r\n  <div class=\"material-class page-public\">\r\n    <div class=\"page-main\">\r\n      <div class=\"page-main-inner item-margin\">\r\n        <div class=\"btns\">\r\n          <el-button type=\"primary\" size=\"small\" @click=\"itemAdd(true)\">新建一级分类</el-button>\r\n        </div>\r\n        <el-table :data=\"tableData\" style=\"width: 100%\" row-key=\"id\" :tree-props=\"tableTreeProps\" >\r\n          <el-table-column prop=\"name\" label=\"素材分类\" width=\"280\"></el-table-column>\r\n          <el-table-column prop=\"_contentType\" label=\"素材类型\" width=\"200\">\r\n            <template slot-scope=\"scope\">\r\n              {{ scope.row.sourceType === 2 ? '图片' : '视频' }}\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"sourceCount\" label=\"文件数\"></el-table-column>\r\n          <el-table-column label=\"操作\" width=\"300\">\r\n            <template slot-scope=\"scope\">\r\n              <el-button type=\"text\" size=\"small\" @click=\"itemEdit(scope.row)\" v-if=\"scope.row.status !== 5\">编辑</el-button>\r\n              <el-button type=\"text\" size=\"small\" @click=\"itemDel(scope.row)\" v-if=\"scope.row.status !== 5\">删除</el-button>\r\n              <el-button type=\"text\" size=\"small\" @click=\"itemAdd(false, scope.row)\" v-if=\"scope.row.status !== 5\">添加子分类</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </div>\r\n    </div>\r\n    <!--新增和编辑-->\r\n    <el-dialog :title=\"addAndEditFlag ? '新增' : '编辑'\" :visible.sync=\"dialogVisible\" width=\"30%\" class=\"add-edit\">\r\n      <el-form ref=\"form\" :model=\"addAndEditFormData\" label-width=\"80px\" :rules=\"rules\">\r\n        <el-form-item label=\"上级分类\" prop=\"parentId\" v-if=\"!isAddOne\">\r\n          <el-input v-model=\"addAndEditFormData.parentName\" placeholder=\"\" disabled=\"disabled\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"分类名称\" prop=\"name\">\r\n          <el-input v-model=\"addAndEditFormData.name\" placeholder=\"请输入分类名称\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"内容类型\" prop=\"sourceType\">\r\n          <el-select v-model=\"addAndEditFormData.sourceType\" placeholder=\"请选择素材类型\" v-if=\"dialogVisible\">\r\n            <el-option v-for=\"item in materialTypeListFilter()\" :key=\"item.type\" :label=\"item.name\" :value=\"item.type\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"dialogVisible = false\" size=\"small\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"addAndEditSub\" size=\"small\">确 定</el-button>\r\n        </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\n  import PageTable from '@/views/content/components/PageTable.vue'\r\n  export default {\r\n    name: 'material_class',\r\n    // 数据\r\n    data() {\r\n      return {\r\n        // 内容类型\r\n        materialType: {\r\n          2: '图片',\r\n          1: '视频'\r\n        },\r\n        materialTypeList: [\r\n          {name: '图片', type: '2'},\r\n          {name: '视频', type: '1'}\r\n        ],\r\n        // 表格数据\r\n        tableData: [],\r\n        // 表格映射\r\n        tableTreeProps: {\r\n          children: 'children',\r\n          hasChildren: 'hasChildren'\r\n        },\r\n\r\n        // 新增和编辑\r\n        // 是否新增一级\r\n        isAddOne: false,\r\n        // 新增子类时的父row\r\n        checkRow: null,\r\n        // 标签\r\n        tagsVal: '',\r\n        dialogVisible: false,\r\n        addAndEditFlag: true,\r\n        addAndEditFormData: {\r\n          name: '',\r\n          sourceType: '',\r\n          parentId: '',\r\n          // 自用\r\n          parentName: ''\r\n        },\r\n        // 验证\r\n        rules: {\r\n          parentId: [\r\n            { type: 'string',required: true, message: '请选择上级分类', trigger: 'blur' }\r\n          ],\r\n          name: [\r\n            { type: 'string',required: true, message: '请输入分类名称', trigger: 'blur' }\r\n          ],\r\n          sourceType: [\r\n            { type: 'string',required: true, message: '请选择素材类型', trigger: 'blur' }\r\n          ]\r\n        },\r\n      }\r\n    },\r\n    // 组件\r\n    components: {\r\n      PageTable\r\n    },\r\n    // 初始化数据\r\n    mounted() {\r\n      this.$nextTick(() => {\r\n        this.getData()\r\n      })\r\n    },\r\n    // 方法\r\n    methods: {\r\n      // 获取数据\r\n      getData(){\r\n        this.request(this.api.contentCore.source_category_tree_list, {}).then(data => {\r\n          this.tableData = data\r\n        });\r\n      },\r\n      // 新增 显示\r\n      itemAdd(flag, row){\r\n        this.checkRow = null\r\n        this.isAddOne = flag\r\n        this.dialogVisible = true\r\n        this.addAndEditFlag = true\r\n        this.$nextTick(()=>{\r\n          this.addAndEditFormData = {\r\n            name: '',\r\n            sourceType: '',\r\n            // 一级默认父id = 'sys'\r\n            parentId: 'sys',\r\n            id: '',\r\n            // 自用\r\n            parentName: ''\r\n          }\r\n          if(!flag){\r\n            this.checkRow = row\r\n            this.addAndEditFormData.parentId = row.id\r\n            this.addAndEditFormData.parentName = row.name\r\n          }\r\n        })\r\n\r\n\r\n      },\r\n      // 编辑 显示\r\n      itemEdit(row){\r\n        // 判断是否是一级\r\n        if(row.parentId === 'sys'){\r\n          this.isAddOne = true\r\n        }\r\n        this.tagsVal =  ''\r\n        this.addAndEditFormData = {\r\n          name: row.name,\r\n          sourceType: row.sourceType.toString(),\r\n          parentId: row.parentId,\r\n          parentName: row.parentName,\r\n          id: row.id,\r\n        }\r\n        this.dialogVisible = true\r\n        this.addAndEditFlag = false\r\n      },\r\n      // 删除\r\n      itemDel(row){\r\n        if(row.sourceCount > 0){\r\n          this.$notify.error({ title: '错误',message: '文件数为0时才可删除'})\r\n          return\r\n        }\r\n        this.$confirm('确认删除吗？', '删除', {\r\n          confirmButtonText: '确认',\r\n          cancelButtonText: '取消',\r\n          showClose:false\r\n        }).then(() => {\r\n          this.request(this.api.contentCore.source_category_delete, {id: row.id} ).then(data => {\r\n            this.$notify.success({ title: '成功',message: '删除成功'})\r\n            this.getData()\r\n          });\r\n        }).catch(() => {\r\n        });\r\n      },\r\n      // 新增编辑提交\r\n      addAndEditSub(flag){\r\n        let url\r\n        this.$refs.form.validate((valid) => {\r\n          if (valid) {\r\n            if(this.addAndEditFlag){\r\n              url = this.api.contentCore.source_category_insert\r\n              if(this.isAddOne){\r\n                url = this.api.contentCore.source_category_add\r\n              }\r\n            }else {\r\n              url = this.api.contentCore.source_category_update\r\n            }\r\n            this.request(url, this.addAndEditFormData).then(data => {\r\n              if(this.addAndEditFlag){\r\n                this.$notify.success({ title: '成功',message: '新增成功'})\r\n              }else{\r\n                this.$notify.success({ title: '成功',message: '编辑成功'})\r\n              }\r\n              this.dialogVisible = false\r\n              this.getData()\r\n            });\r\n          } else {\r\n            return false;\r\n          }\r\n        });\r\n\r\n      },\r\n      // 过滤类型\r\n      materialTypeListFilter() {\r\n        let ary\r\n        if(!this.checkRow){\r\n          return this.materialTypeList\r\n        }else{\r\n          ary = this.materialTypeList.filter(item => item.type == this.checkRow.sourceType)\r\n          return  ary\r\n        }\r\n      }\r\n    },\r\n    // 计算属性\r\n    computed: {},\r\n    // 监听数据变化\r\n    watch: {\r\n\r\n    }\r\n  }\r\n</script>\r\n"]}]}