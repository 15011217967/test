{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\fmis\\store\\billyet\\bill_yet.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\fmis\\store\\billyet\\bill_yet.vue","mtime":1574160264558},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapGetters } from \"vuex\";\r\nimport * as userTypes from \"@/types/userConfig\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      signData: {\r\n        //对账类型（门店对账）\r\n        statementType:'01001',\r\n        //标识已对账\r\n        valid:1,\r\n        //所属门店\r\n        merchantIds: [],\r\n        //标记隶属机构\r\n        organizationCodes:[],\r\n        //机构集合Ids\r\n        organizationIds:[],\r\n        //对账方式\r\n        statementCycleTypes:[],\r\n        //当前页数\r\n        pageIndex: 1,\r\n        //每页要显示的数据条数,默认10条\r\n        pageSize: 10,\r\n      },\r\n      //得到权限Code\r\n      codeData: [],\r\n      //存储表格选择项改变时的数据\r\n      multipleSelectionData: [],\r\n      //表格数据\r\n      tableData: [],\r\n      //总条数\r\n      totalCount: 1,\r\n      //存储门店数据\r\n      storeListData: [],\r\n      //隶属机构数据\r\n      organizationListData:[],\r\n      //对账方式\r\n      typeListData:[],\r\n      //交易总金额\r\n      generalLedger:'',\r\n      //微信消费\r\n      weChatPayLedger:'',\r\n      //支付宝消费\r\n      aliPayLedger:'',\r\n      //刷卡消费\r\n      cardPayLedger:'',\r\n      //储值消费\r\n      storageCardPayLedger:'',\r\n      //现金\r\n      cashPayLedger:\"\"\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n        userInfo: userTypes.GETTER_USERINFO\r\n    })\r\n  },\r\n  //过滤器\r\n  filters: {\r\n    //过滤对账方式\r\n    filterStatementCycleType(val){\r\n      switch (val) {\r\n        case '05001':\r\n          return '日结';\r\n          break;\r\n        case '05002':\r\n          return '周结';\r\n          break;\r\n        case '05004':\r\n          return '月结';\r\n          break;\r\n        case '05010':\r\n          return '自定义';\r\n          break;\r\n        default:\r\n          return '--';\r\n          break;\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    //得到组织机构数据\r\n    this.getWarehouseListData();\r\n    //得到门店列表数据\r\n    this.getStoreBasicListData();\r\n    //得到对账方式数据\r\n    this.getStatementCycleTypeListData();\r\n  },\r\n  methods: {\r\n    //得到组织机构数据\r\n    async getWarehouseListData() {\r\n      let info = await this.request(this.api.user.get_userinfo, {}, true);\r\n      console.log(info);\r\n      //得到关联机构（type-0 机构 type-1 部门）\r\n      this.request(this.api.user.userCompany_getUserAllDepartByUserId, {\r\n        userId: info.userId,\r\n        type: 0\r\n      }).then(data => {\r\n        //得到组织机构数据\r\n        this.organizationListData=data;\r\n        console.log(data);\r\n        this.signData.organizationIds=[]\r\n        data.forEach(item => {\r\n          this.signData.organizationIds.push(item.id);\r\n        });\r\n        //得到列表数据\r\n        this.getBillWaitListData();\r\n      });\r\n    },\r\n    // 得到code码，用来限制是否显示按钮\r\n    getCodeLimitToBtnStatus(codeId) {\r\n      this.request(this.api.user.crm_userCompany_authList, {\r\n        menuId: codeId\r\n      }).then(res => {\r\n        console.log(res);\r\n        this.codeData = res;\r\n      });\r\n    },\r\n    //得到门店列表数据\r\n    getStoreBasicListData() {\r\n      this.request(this.api.store.storeBasic_list, {}).then(res => {\r\n        console.log(res);\r\n        this.storeListData = res.data;\r\n      });\r\n    },\r\n    //得到对账方式数据\r\n    getStatementCycleTypeListData(){\r\n      this.request(this.api.financial.financialBase_statementCycleTypeList,{}).then(res=>{\r\n        console.log(res);\r\n        this.typeListData = res\r\n      })  \r\n    },\r\n    //得到列表数据\r\n    getBillWaitListData() {\r\n      this.request(\r\n        this.api.financial.financialData_tdStatement_list,\r\n        this.signData\r\n      ).then(data => {\r\n        this.totalCount = data.tdStatementList.totalCount;\r\n        this.tableData = data.tdStatementList.data;\r\n        this.generalLedger=data.generalLedger;\r\n        this.cardPayLedger=data.cardPayLedger;\r\n        this.weChatPayLedger=data.weChatPayLedger;\r\n        this.aliPayLedger=data.aliPayLedger;\r\n        this.storageCardPayLedger=data.storageCardPayLedger;\r\n        this.cashPayLedger=data.cashPayLedger;\r\n        console.log(data);\r\n      });\r\n      //得到按钮操作权限数据\r\n      this.getCodeLimitToBtnStatus(this.$route.meta.currentid);\r\n    },\r\n    //查询表单数据\r\n    searchFormData(ref) {\r\n      this.signData.pageIndex=1\r\n      if(this.signData.organizationCodes.length==0){\r\n        this.getWarehouseListData()\r\n      }else{\r\n        this.signData.organizationIds=this.signData.organizationCodes\r\n        this.getBillWaitListData();\r\n      } \r\n    },\r\n    //重置表单数据\r\n    resetFormData(formData) {\r\n      this.$refs[formData].resetFields();\r\n    },\r\n    //导出\r\n    exportExcel() {\r\n      console.log(\"导出Excel表格...+++++++++++++++++++\");\r\n      require.ensure([], () => {\r\n        let { export_json_to_excel } = require(\"@/vendor/Export2Excel\");\r\n        let tHeader = [\r\n          \"对账单号\",\r\n          \"零售门店\",\r\n          \"对账方式\",\r\n          \"累计交易金额\",\r\n          \"微信消费\",\r\n          \"支付宝消费\",\r\n          \"刷卡消费\",\r\n          \"储值消费\",\r\n          \"现金\",\r\n          \"隶属机构\",\r\n          \"对账时间范围\",\r\n          \"对账人\"\r\n        ];\r\n        // 上面设置Excel的表格第一行的标题\r\n        let filterVal = [\r\n          \"statementSn\",\r\n          \"merchant\",\r\n          \"statementCycleTypeName\",\r\n          \"generalLedger\",\r\n          \"weChatPayLedger\",\r\n          \"aliPayLedger\",\r\n          \"cardPayLedger\",\r\n          \"storageCardPayLedger\",\r\n          \"cashPayLedger\",\r\n          \"organization\",\r\n          \"statementStartTimeName\",\r\n          \"updater\"\r\n        ];\r\n        // 上面的index、nickName、name是tableData里对象的属性\r\n        let list = this.multipleSelectionData; //把data里的multipleSelectionData存到list\r\n        let data = this.formatJson(filterVal, list);\r\n        export_json_to_excel(tHeader, data, \"门店已对账表单\");\r\n      });\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => v[j]));\r\n    },\r\n    //表格选择项改变时触发\r\n    selectionChange(val) {\r\n      val.forEach(item => {\r\n        item.statementCycleTypeName=this.$options.filters.filterStatementCycleType(item.statementCycleType)\r\n        item.statementStartTimeName=this.$options.filters.timestampToTime(item.statementStartTime)\r\n      });\r\n      console.log(val);\r\n      this.multipleSelectionData = val;\r\n    },\r\n    //查看Btn的事件\r\n    checkBtnClick(row) {\r\n      console.log('receiptBtnClick....');\r\n      this.$router.push({\r\n        path: \"/fmis/store/billyet/bill_yet_check\",\r\n        query:{\r\n          associationId:row.id,\r\n          storeName:row.merchant\r\n        }\r\n      });\r\n    },\r\n    //每页条数改变时\r\n    handleSizeChange(page) {\r\n      this.signData.pageSize = page;\r\n      this.getBillWaitListData();\r\n    },\r\n    //当前页改变时\r\n    handleCurrentChange(page) {\r\n      this.signData.pageIndex = page;\r\n      this.getBillWaitListData();\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["bill_yet.vue"],"names":[],"mappingsfile":"bill_yet.vue","sourceRoot":"src/views/fmis/store/billyet","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"search_div\">\r\n      <el-form ref=\"formData\" :model=\"signData\" label-width=\"110px\" :inline=\"true\">\r\n        <el-form-item label=\"所属门店：\" prop=\"merchantIds\" label-width=\"140px\">\r\n          <el-select v-model=\"signData.merchantIds\" placeholder=\"请选择\" multiple>\r\n            <el-option\r\n              v-for=\"item in storeListData\"\r\n              :label=\"item.name\"\r\n              :key=\"item.id\"\r\n              :value=\"item.id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"隶属机构：\" prop=\"organizationCodes\">\r\n          <el-select v-model=\"signData.organizationCodes\" placeholder=\"请选择\" multiple>\r\n            <el-option\r\n              v-for=\"item in organizationListData\"\r\n              :label=\"item.name\"\r\n              :key=\"item.id\"\r\n              :value=\"item.id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"对账方式：\" prop=\"statementCycleTypes\">\r\n          <el-select v-model=\"signData.statementCycleTypes\" placeholder=\"请选择\" multiple>\r\n            <el-option\r\n              v-for=\"item in typeListData\"\r\n              :label=\"item.description\"\r\n              :key=\"item.code\"\r\n              :value=\"item.code\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"searchFormData('formData')\" size=\"small\">查询</el-button>\r\n          <el-button @click=\"resetFormData('formData')\" size=\"small\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n    <div class=\"table_div\">\r\n      <el-button\r\n        v-auth=\"codeData\"\r\n        data-code=\"16010104\"\r\n        :disabled=\"multipleSelectionData.length==0\"\r\n        plain\r\n        @click=\"exportExcel\"\r\n        size=\"small\"\r\n      >导出</el-button>\r\n      <el-table\r\n        ref=\"multipleTable\"\r\n        :data=\"tableData\"\r\n        tooltip-effect=\"dark\"\r\n        style=\"width: 100%\"\r\n        header-row-class-name=\"item-table-header\"\r\n        @selection-change=\"selectionChange\"\r\n      >\r\n        <el-table-column type=\"selection\" width=\"55\"></el-table-column>\r\n        <el-table-column label=\"对账单号\" width=\"180\">\r\n          <template slot-scope=\"scope\">{{ scope.row.statementSn?scope.row.statementSn:'--' }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"merchant\" label=\"零售门店\" align=\"center\">\r\n          <template slot-scope=\"scope\">{{ scope.row.merchant?scope.row.merchant:'--' }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"statementCycleType\" label=\"对账方式\" align=\"center\">\r\n          <template slot-scope=\"scope\">{{scope.row.statementCycleType | filterStatementCycleType}}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"generalLedger\" label=\"累计交易金额\" align=\"center\" width=\"120\">\r\n          <template slot-scope=\"scope\">{{scope.row.generalLedger}}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"weChatPayLedger\" label=\"微信消费\" align=\"center\">\r\n          <template slot-scope=\"scope\">{{ scope.row.weChatPayLedger }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"aliPayLedger\" label=\"支付宝消费\" align=\"center\">\r\n          <template slot-scope=\"scope\">{{ scope.row.aliPayLedger }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"cardPayLedger\" label=\"刷卡消费\" align=\"center\">\r\n          <template slot-scope=\"scope\">{{ scope.row.cardPayLedger }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"storageCardPayLedger\" label=\"储值消费\" align=\"center\">\r\n          <template slot-scope=\"scope\">{{ scope.row.storageCardPayLedger  }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"cashPayLedger\" label=\"现金\" align=\"center\">\r\n          <template slot-scope=\"scope\">{{ scope.row.cashPayLedger }}</template>\r\n        </el-table-column>\r\n        <el-table-column label=\"隶属机构\" align=\"center\">\r\n          <template slot-scope=\"scope\">{{ scope.row.organization?scope.row.organization:'--' }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"statementStartTime\" label=\"对账时间范围\" align=\"center\" width=\"380\">\r\n          <template slot-scope=\"scope\">{{ scope.row.statementStartTime | timestampToTime }}~{{scope.row.statementEndTime | timestampToTime}}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"updater\" label=\"对账人\" align=\"center\">\r\n          <template slot-scope=\"scope\">{{ scope.row.updater?scope.row.updater:'--' }}</template>\r\n        </el-table-column>\r\n        <el-table-column fixed=\"right\" label=\"操作\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button @click=\"checkBtnClick(scope.row)\" type=\"text\" size=\"small\">查看明细</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <div class='page_div' v-show='this.tableData.length>0'>\r\n        <div style=\"color:#222;flex:auto;font-weight:700;\">\r\n          <span>累计交易金额：￥{{generalLedger}}</span>\r\n          <span style='margin-left:10px;margin-right:10px;'>微信消费：￥{{weChatPayLedger}}</span>\r\n          <span style='margin-left:10px;margin-right:10px;'>支付宝消费：￥{{aliPayLedger}}</span>\r\n          <span>刷卡消费：￥{{cardPayLedger}}</span>\r\n          <span  style='margin-left:10px;margin-right:10px;'>储值消费：￥{{storageCardPayLedger}}</span>\r\n          <span  style='margin-left:10px;margin-right:10px;'>现金：￥{{cashPayLedger}}</span>\r\n        </div>\r\n        <el-pagination \r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page.sync=\"signData.pageIndex\"\r\n          :page-sizes=\"[10, 20, 30, 40]\"\r\n          :page-size=\"signData.pageSize\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"totalCount\"\r\n        ></el-pagination>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from \"vuex\";\r\nimport * as userTypes from \"@/types/userConfig\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      signData: {\r\n        //对账类型（门店对账）\r\n        statementType:'01001',\r\n        //标识已对账\r\n        valid:1,\r\n        //所属门店\r\n        merchantIds: [],\r\n        //标记隶属机构\r\n        organizationCodes:[],\r\n        //机构集合Ids\r\n        organizationIds:[],\r\n        //对账方式\r\n        statementCycleTypes:[],\r\n        //当前页数\r\n        pageIndex: 1,\r\n        //每页要显示的数据条数,默认10条\r\n        pageSize: 10,\r\n      },\r\n      //得到权限Code\r\n      codeData: [],\r\n      //存储表格选择项改变时的数据\r\n      multipleSelectionData: [],\r\n      //表格数据\r\n      tableData: [],\r\n      //总条数\r\n      totalCount: 1,\r\n      //存储门店数据\r\n      storeListData: [],\r\n      //隶属机构数据\r\n      organizationListData:[],\r\n      //对账方式\r\n      typeListData:[],\r\n      //交易总金额\r\n      generalLedger:'',\r\n      //微信消费\r\n      weChatPayLedger:'',\r\n      //支付宝消费\r\n      aliPayLedger:'',\r\n      //刷卡消费\r\n      cardPayLedger:'',\r\n      //储值消费\r\n      storageCardPayLedger:'',\r\n      //现金\r\n      cashPayLedger:\"\"\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n        userInfo: userTypes.GETTER_USERINFO\r\n    })\r\n  },\r\n  //过滤器\r\n  filters: {\r\n    //过滤对账方式\r\n    filterStatementCycleType(val){\r\n      switch (val) {\r\n        case '05001':\r\n          return '日结';\r\n          break;\r\n        case '05002':\r\n          return '周结';\r\n          break;\r\n        case '05004':\r\n          return '月结';\r\n          break;\r\n        case '05010':\r\n          return '自定义';\r\n          break;\r\n        default:\r\n          return '--';\r\n          break;\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    //得到组织机构数据\r\n    this.getWarehouseListData();\r\n    //得到门店列表数据\r\n    this.getStoreBasicListData();\r\n    //得到对账方式数据\r\n    this.getStatementCycleTypeListData();\r\n  },\r\n  methods: {\r\n    //得到组织机构数据\r\n    async getWarehouseListData() {\r\n      let info = await this.request(this.api.user.get_userinfo, {}, true);\r\n      console.log(info);\r\n      //得到关联机构（type-0 机构 type-1 部门）\r\n      this.request(this.api.user.userCompany_getUserAllDepartByUserId, {\r\n        userId: info.userId,\r\n        type: 0\r\n      }).then(data => {\r\n        //得到组织机构数据\r\n        this.organizationListData=data;\r\n        console.log(data);\r\n        this.signData.organizationIds=[]\r\n        data.forEach(item => {\r\n          this.signData.organizationIds.push(item.id);\r\n        });\r\n        //得到列表数据\r\n        this.getBillWaitListData();\r\n      });\r\n    },\r\n    // 得到code码，用来限制是否显示按钮\r\n    getCodeLimitToBtnStatus(codeId) {\r\n      this.request(this.api.user.crm_userCompany_authList, {\r\n        menuId: codeId\r\n      }).then(res => {\r\n        console.log(res);\r\n        this.codeData = res;\r\n      });\r\n    },\r\n    //得到门店列表数据\r\n    getStoreBasicListData() {\r\n      this.request(this.api.store.storeBasic_list, {}).then(res => {\r\n        console.log(res);\r\n        this.storeListData = res.data;\r\n      });\r\n    },\r\n    //得到对账方式数据\r\n    getStatementCycleTypeListData(){\r\n      this.request(this.api.financial.financialBase_statementCycleTypeList,{}).then(res=>{\r\n        console.log(res);\r\n        this.typeListData = res\r\n      })  \r\n    },\r\n    //得到列表数据\r\n    getBillWaitListData() {\r\n      this.request(\r\n        this.api.financial.financialData_tdStatement_list,\r\n        this.signData\r\n      ).then(data => {\r\n        this.totalCount = data.tdStatementList.totalCount;\r\n        this.tableData = data.tdStatementList.data;\r\n        this.generalLedger=data.generalLedger;\r\n        this.cardPayLedger=data.cardPayLedger;\r\n        this.weChatPayLedger=data.weChatPayLedger;\r\n        this.aliPayLedger=data.aliPayLedger;\r\n        this.storageCardPayLedger=data.storageCardPayLedger;\r\n        this.cashPayLedger=data.cashPayLedger;\r\n        console.log(data);\r\n      });\r\n      //得到按钮操作权限数据\r\n      this.getCodeLimitToBtnStatus(this.$route.meta.currentid);\r\n    },\r\n    //查询表单数据\r\n    searchFormData(ref) {\r\n      this.signData.pageIndex=1\r\n      if(this.signData.organizationCodes.length==0){\r\n        this.getWarehouseListData()\r\n      }else{\r\n        this.signData.organizationIds=this.signData.organizationCodes\r\n        this.getBillWaitListData();\r\n      } \r\n    },\r\n    //重置表单数据\r\n    resetFormData(formData) {\r\n      this.$refs[formData].resetFields();\r\n    },\r\n    //导出\r\n    exportExcel() {\r\n      console.log(\"导出Excel表格...+++++++++++++++++++\");\r\n      require.ensure([], () => {\r\n        let { export_json_to_excel } = require(\"@/vendor/Export2Excel\");\r\n        let tHeader = [\r\n          \"对账单号\",\r\n          \"零售门店\",\r\n          \"对账方式\",\r\n          \"累计交易金额\",\r\n          \"微信消费\",\r\n          \"支付宝消费\",\r\n          \"刷卡消费\",\r\n          \"储值消费\",\r\n          \"现金\",\r\n          \"隶属机构\",\r\n          \"对账时间范围\",\r\n          \"对账人\"\r\n        ];\r\n        // 上面设置Excel的表格第一行的标题\r\n        let filterVal = [\r\n          \"statementSn\",\r\n          \"merchant\",\r\n          \"statementCycleTypeName\",\r\n          \"generalLedger\",\r\n          \"weChatPayLedger\",\r\n          \"aliPayLedger\",\r\n          \"cardPayLedger\",\r\n          \"storageCardPayLedger\",\r\n          \"cashPayLedger\",\r\n          \"organization\",\r\n          \"statementStartTimeName\",\r\n          \"updater\"\r\n        ];\r\n        // 上面的index、nickName、name是tableData里对象的属性\r\n        let list = this.multipleSelectionData; //把data里的multipleSelectionData存到list\r\n        let data = this.formatJson(filterVal, list);\r\n        export_json_to_excel(tHeader, data, \"门店已对账表单\");\r\n      });\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => v[j]));\r\n    },\r\n    //表格选择项改变时触发\r\n    selectionChange(val) {\r\n      val.forEach(item => {\r\n        item.statementCycleTypeName=this.$options.filters.filterStatementCycleType(item.statementCycleType)\r\n        item.statementStartTimeName=this.$options.filters.timestampToTime(item.statementStartTime)\r\n      });\r\n      console.log(val);\r\n      this.multipleSelectionData = val;\r\n    },\r\n    //查看Btn的事件\r\n    checkBtnClick(row) {\r\n      console.log('receiptBtnClick....');\r\n      this.$router.push({\r\n        path: \"/fmis/store/billyet/bill_yet_check\",\r\n        query:{\r\n          associationId:row.id,\r\n          storeName:row.merchant\r\n        }\r\n      });\r\n    },\r\n    //每页条数改变时\r\n    handleSizeChange(page) {\r\n      this.signData.pageSize = page;\r\n      this.getBillWaitListData();\r\n    },\r\n    //当前页改变时\r\n    handleCurrentChange(page) {\r\n      this.signData.pageIndex = page;\r\n      this.getBillWaitListData();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.search_div {\r\n  margin: 0 10px;\r\n  padding-top: 20px;\r\n  background-color: #fff;\r\n  .first-input {\r\n    width: 300px;\r\n  }\r\n}\r\n.table_div {\r\n  margin: 10px;\r\n  background-color: #fff;\r\n  padding-top: 20px;\r\n  padding-left: 10px;\r\n}\r\n.page_div{\r\n  margin-top:20px;\r\n  padding-bottom:10px;\r\n  margin-right:20px;\r\n  display:flex;\r\n  align-items:center;\r\n}\r\n</style>\r\n\r\n\r\n\r\n"]}]}