{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\OC\\user\\roleManage_details.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\OC\\user\\roleManage_details.vue","mtime":1572415125205},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport codeSet from \"@/components/codeSet\";\r\nimport treePer from \"@/components/treePermission\";\r\nexport default {\r\n  components: { codeSet, treePer },\r\n  data() {\r\n    return {\r\n      filtersData: {\r\n        name: \"\",\r\n        type: \"\",\r\n        code: \"\"\r\n      },\r\n      _id: null,\r\n      topChecked: false,\r\n      tableData: [],\r\n      isAdd: false,\r\n      isEdit: false,\r\n      isShow: false,\r\n      // 数据权限\r\n      dataAuthList: [\r\n        {name: '个人', authType: 0},\r\n        {name: '部门', authType: 1},\r\n        {name: '部门及以下', authType: 2},\r\n        {name: '机构', authType: 3}\r\n      ]\r\n    };\r\n  },\r\n  created() {\r\n    this.getQueryparams();\r\n  },\r\n  methods: {\r\n    // 获取上页面参数及初始化页面数据\r\n    getQueryparams() {\r\n      let t_type = this.$route.query.type;\r\n      this._id = this.$route.query.id;\r\n      switch (t_type.toString()) {\r\n        case \"add\": //新增\r\n          this.isAdd = true;\r\n          break;\r\n        case \"edit\": //修改\r\n          this.isEdit = true;\r\n          break;\r\n        case \"show\": //查看\r\n          this.isShow = true;\r\n          break;\r\n      }\r\n      this.getInfo();\r\n      this.getData();\r\n    },\r\n    // 编辑获取详情\r\n    async getInfo() {\r\n      if (this.isEdit) {\r\n        var da = await this.request(this.api.user.role_get, {\r\n          id: this._id\r\n        });\r\n        this.filtersData = da;\r\n      }\r\n    },\r\n    // 获取数据\r\n    async getData() {\r\n      var list = await this.request(this.api.system.Role_Auth_Tree, {\r\n        roleId: this._id\r\n      });\r\n      this.topChecked = list.findIndex(f => f.checked) > -1;\r\n      this.tableDataInit(list);\r\n      this.tableData = list;\r\n    },\r\n    tableDataInit(data){\r\n      if(data && data.length){\r\n        data.forEach(item => {\r\n          if(item.leaf){\r\n            let dataAuthChecked = item.sublist.find(item => item.type === 'dataAuth');\r\n            if(dataAuthChecked){\r\n              item._dataAuthChecked = dataAuthChecked.authType;\r\n            }else {\r\n              item._dataAuthChecked = 0\r\n            }\r\n            item.sublist = item.sublist.filter(item => item.type === 'auth' );\r\n            item._dataAuthList = this.dataAuthList.map(auth => {\r\n              return {\r\n                name: auth.name,\r\n                authType: auth.authType,\r\n                menuId: item.id\r\n              }\r\n            })\r\n          }else{\r\n            this.tableDataInit(item.sublist);\r\n          }\r\n        })\r\n      }\r\n    },\r\n    // 后退\r\n    routerback() {\r\n      this.$router.go(-1);\r\n    },\r\n    // 返回权限设置是否全选\r\n    treeChange(topChecked) {\r\n      var hasChecked = this.tableData.findIndex(f => f.checked) > -1;\r\n      if (hasChecked) {\r\n        this.topChecked = hasChecked;\r\n      } else {\r\n        this.topChecked = topChecked;\r\n      }\r\n    },\r\n    // 新增和编辑提交\r\n    submitForm(formName) {\r\n      if (this.isAdd || this.isEdit) {\r\n        let url = this.isAdd\r\n          ? this.api.user.role_create\r\n          : this.api.user.role_update;\r\n        this.$refs[formName].validate(valid => {\r\n          if (valid) {\r\n            let perDa = this.combinaParams();\r\n            let postDa = {\r\n              id: this._id,\r\n              type: this.filtersData.type,\r\n              name: this.filtersData.name,\r\n              code: this.filtersData.code,\r\n              menuList: perDa.menus,\r\n              authList: perDa.ops,\r\n              dataAuthList: perDa.dataAuthList,\r\n              used: true\r\n            };\r\n            this.request(url, postDa).then(data => {\r\n              this.routerback();\r\n            });\r\n          }\r\n        });\r\n      }\r\n    },\r\n    // 获取参数权限设置参数\r\n    combinaParams() {\r\n      var list = this.tableData;\r\n      let allList = {\r\n        menus: [],\r\n        ops: [],\r\n        dataAuthList: []\r\n      };\r\n      this.recurveData(allList, list);\r\n      return allList;\r\n    },\r\n    recurveData(allList, list) {\r\n      list.forEach(f => {\r\n        if(f.leaf){\r\n          let dataAuth = f._dataAuthList.find(item => {\r\n            return item.authType === f._dataAuthChecked\r\n          });\r\n          allList.dataAuthList.push(dataAuth);\r\n        }\r\n        if (f.checked) {\r\n          switch (f.type) {\r\n            case \"menu\":\r\n              allList.menus.push(f.id);\r\n              break;\r\n            case \"auth\":\r\n              allList.ops.push(f.id);\r\n              break;\r\n          }\r\n        }\r\n        if (f.sublist && f.sublist.length > 0) {\r\n          this.recurveData(allList, f.sublist);\r\n        }\r\n      });\r\n    },\r\n    // 功能权限全选\r\n    perChange(val) {\r\n      this.tableData.forEach(f => {\r\n        f.checked = val;\r\n        if (f.sublist && f.sublist.length > 0) {\r\n          this.cbChange(f.sublist, val);\r\n        }\r\n      });\r\n    },\r\n    cbChange(list, checked) {\r\n      list.forEach(f => {\r\n        f.checked = checked;\r\n        if (f.sublist && f.sublist.length > 0) {\r\n          this.cbChange(f.sublist, checked);\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["roleManage_details.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"roleManage_details.vue","sourceRoot":"src/views/OC/user","sourcesContent":["<template>\r\n  <div class=\"bg-fff item-margin roleManage-details\">\r\n    <div class=\"titles\">角色信息</div>\r\n    <el-form\r\n      class=\"item-form\"\r\n      :model=\"filtersData\"\r\n      label-width=\"100px\"\r\n      size=\"small\"\r\n      ref=\"filtersForm\"\r\n      inline\r\n      style=\"background: #fff;\"\r\n    >\r\n      <el-row>\r\n        <el-col :span=\"24\">\r\n          <el-form-item\r\n            prop=\"name\"\r\n            label=\"角色名称：\"\r\n            :rules=\"[{ required: true, message: '请输入角色名称', trigger: 'blur' },{ max: 10, message: '角色名称最多10个字符', trigger: 'change' }]\"\r\n          >\r\n            <el-input\r\n              class=\"input-w\"\r\n              placeholder=\"请输入内容\"\r\n              :disabled=\"isShow\"\r\n              v-model=\"filtersData.name\"\r\n            ></el-input>\r\n          </el-form-item>\r\n          <el-form-item\r\n            :disabled=\"isShow\"\r\n            prop=\"type\"\r\n            label=\"角色类型：\"\r\n            :rules=\"[{ required: true, message: '请选择角色类型', trigger: 'blur' },]\"\r\n          >\r\n            <code-set v-model=\"filtersData.type\" code=\"CEN003\"/>\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n    </el-form>\r\n    <div class=\"titles\">权限设置</div>\r\n    <div class=\"rebort_table\">\r\n      <ul class=\"rebort_table_title rebort_table_title_top\">\r\n        <li>\r\n          <el-checkbox v-model=\"topChecked\" @change=\"perChange\">功能权限</el-checkbox>\r\n        </li>\r\n        <li>操作权限</li>\r\n        <li>字段权限</li>\r\n        <li class=\"lasttopli\">数据权限</li>\r\n      </ul>\r\n      <tree-per :data=\"tableData\" @item-change=\"treeChange\"></tree-per>\r\n    </div>\r\n    <div class=\"item-footer\">\r\n      <el-button v-if=\"isEdit||isAdd\" @click=\"submitForm('filtersForm')\" type=\"primary\" size=\"small\">确定</el-button>\r\n      <el-button @click=\"routerback('filtersForm')\" size=\"small\">取消</el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport codeSet from \"@/components/codeSet\";\r\nimport treePer from \"@/components/treePermission\";\r\nexport default {\r\n  components: { codeSet, treePer },\r\n  data() {\r\n    return {\r\n      filtersData: {\r\n        name: \"\",\r\n        type: \"\",\r\n        code: \"\"\r\n      },\r\n      _id: null,\r\n      topChecked: false,\r\n      tableData: [],\r\n      isAdd: false,\r\n      isEdit: false,\r\n      isShow: false,\r\n      // 数据权限\r\n      dataAuthList: [\r\n        {name: '个人', authType: 0},\r\n        {name: '部门', authType: 1},\r\n        {name: '部门及以下', authType: 2},\r\n        {name: '机构', authType: 3}\r\n      ]\r\n    };\r\n  },\r\n  created() {\r\n    this.getQueryparams();\r\n  },\r\n  methods: {\r\n    // 获取上页面参数及初始化页面数据\r\n    getQueryparams() {\r\n      let t_type = this.$route.query.type;\r\n      this._id = this.$route.query.id;\r\n      switch (t_type.toString()) {\r\n        case \"add\": //新增\r\n          this.isAdd = true;\r\n          break;\r\n        case \"edit\": //修改\r\n          this.isEdit = true;\r\n          break;\r\n        case \"show\": //查看\r\n          this.isShow = true;\r\n          break;\r\n      }\r\n      this.getInfo();\r\n      this.getData();\r\n    },\r\n    // 编辑获取详情\r\n    async getInfo() {\r\n      if (this.isEdit) {\r\n        var da = await this.request(this.api.user.role_get, {\r\n          id: this._id\r\n        });\r\n        this.filtersData = da;\r\n      }\r\n    },\r\n    // 获取数据\r\n    async getData() {\r\n      var list = await this.request(this.api.system.Role_Auth_Tree, {\r\n        roleId: this._id\r\n      });\r\n      this.topChecked = list.findIndex(f => f.checked) > -1;\r\n      this.tableDataInit(list);\r\n      this.tableData = list;\r\n    },\r\n    tableDataInit(data){\r\n      if(data && data.length){\r\n        data.forEach(item => {\r\n          if(item.leaf){\r\n            let dataAuthChecked = item.sublist.find(item => item.type === 'dataAuth');\r\n            if(dataAuthChecked){\r\n              item._dataAuthChecked = dataAuthChecked.authType;\r\n            }else {\r\n              item._dataAuthChecked = 0\r\n            }\r\n            item.sublist = item.sublist.filter(item => item.type === 'auth' );\r\n            item._dataAuthList = this.dataAuthList.map(auth => {\r\n              return {\r\n                name: auth.name,\r\n                authType: auth.authType,\r\n                menuId: item.id\r\n              }\r\n            })\r\n          }else{\r\n            this.tableDataInit(item.sublist);\r\n          }\r\n        })\r\n      }\r\n    },\r\n    // 后退\r\n    routerback() {\r\n      this.$router.go(-1);\r\n    },\r\n    // 返回权限设置是否全选\r\n    treeChange(topChecked) {\r\n      var hasChecked = this.tableData.findIndex(f => f.checked) > -1;\r\n      if (hasChecked) {\r\n        this.topChecked = hasChecked;\r\n      } else {\r\n        this.topChecked = topChecked;\r\n      }\r\n    },\r\n    // 新增和编辑提交\r\n    submitForm(formName) {\r\n      if (this.isAdd || this.isEdit) {\r\n        let url = this.isAdd\r\n          ? this.api.user.role_create\r\n          : this.api.user.role_update;\r\n        this.$refs[formName].validate(valid => {\r\n          if (valid) {\r\n            let perDa = this.combinaParams();\r\n            let postDa = {\r\n              id: this._id,\r\n              type: this.filtersData.type,\r\n              name: this.filtersData.name,\r\n              code: this.filtersData.code,\r\n              menuList: perDa.menus,\r\n              authList: perDa.ops,\r\n              dataAuthList: perDa.dataAuthList,\r\n              used: true\r\n            };\r\n            this.request(url, postDa).then(data => {\r\n              this.routerback();\r\n            });\r\n          }\r\n        });\r\n      }\r\n    },\r\n    // 获取参数权限设置参数\r\n    combinaParams() {\r\n      var list = this.tableData;\r\n      let allList = {\r\n        menus: [],\r\n        ops: [],\r\n        dataAuthList: []\r\n      };\r\n      this.recurveData(allList, list);\r\n      return allList;\r\n    },\r\n    recurveData(allList, list) {\r\n      list.forEach(f => {\r\n        if(f.leaf){\r\n          let dataAuth = f._dataAuthList.find(item => {\r\n            return item.authType === f._dataAuthChecked\r\n          });\r\n          allList.dataAuthList.push(dataAuth);\r\n        }\r\n        if (f.checked) {\r\n          switch (f.type) {\r\n            case \"menu\":\r\n              allList.menus.push(f.id);\r\n              break;\r\n            case \"auth\":\r\n              allList.ops.push(f.id);\r\n              break;\r\n          }\r\n        }\r\n        if (f.sublist && f.sublist.length > 0) {\r\n          this.recurveData(allList, f.sublist);\r\n        }\r\n      });\r\n    },\r\n    // 功能权限全选\r\n    perChange(val) {\r\n      this.tableData.forEach(f => {\r\n        f.checked = val;\r\n        if (f.sublist && f.sublist.length > 0) {\r\n          this.cbChange(f.sublist, val);\r\n        }\r\n      });\r\n    },\r\n    cbChange(list, checked) {\r\n      list.forEach(f => {\r\n        f.checked = checked;\r\n        if (f.sublist && f.sublist.length > 0) {\r\n          this.cbChange(f.sublist, checked);\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n  .roleManage-details /deep/ .el-radio {margin-right: 10px;}\r\n\r\n  .title {\r\n  background-color: #fff;\r\n  padding: 15px 0 15px 30px;\r\n  margin-bottom: 10px;\r\n}\r\n.titles {\r\n  width: 100%;\r\n  height: 80px;\r\n  background: #fff;\r\n  display: flex;\r\n  align-items: center;\r\n  padding-left: 18px;\r\n  box-sizing: border-box;\r\n  font-weight: bold;\r\n}\r\n\r\n.rebort_table {\r\n  padding: 0 18px;\r\n  box-sizing: border-box;\r\n  background: #fff;\r\n}\r\n.rebort_table_title {\r\n  display: flex;\r\n  border: 1px solid #ccc;\r\n  border-right: none;\r\n  border-top: none;\r\n}\r\n.rebort_table_title {\r\n  border-top: 1px solid #ccc;\r\n}\r\n.rebort_table_title li {\r\n  width: calc(25%-13px);\r\n}\r\n.rebort_table_title:last-child,\r\n.rebort_table_list:last-child {\r\n  border-bottom: 1px solid #ccc;\r\n}\r\n.rebort_table_title li,\r\n.rebort_table_list li {\r\n  width: 25.6%;\r\n  height: 47px;\r\n  display: flex;\r\n  align-items: center;\r\n  border-right: 1px solid #ccc;\r\n  padding-left: 18px;\r\n  /* box-sizing: border-box; */\r\n}\r\n.rebort_table_title li:last-child {\r\n  /* background-color: rebeccapurple; */\r\n  width: 25.6%;\r\n}\r\n.el-checkbox {\r\n  margin-right: 10px;\r\n}\r\n.item-footer {\r\n  background: #fff;\r\n  padding: 18px;\r\n}\r\n.rebort_table_title_top {\r\n  overflow-y: scroll;\r\n}\r\n\r\n.rebort_table_title_top::-webkit-scrollbar-thumb {\r\n  background: #fff;\r\n}\r\n.rebort_table_title_top::-webkit-scrollbar-track {\r\n  background: #fff;\r\n  border-right: 1px solid #ccc !important;\r\n}\r\n.lasttopli {\r\n  border-right: none !important;\r\n}\r\n</style>\r\n"]}]}