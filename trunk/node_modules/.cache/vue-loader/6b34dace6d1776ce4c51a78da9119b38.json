{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\OS\\salesReturn\\channelReturn\\channelReturn_editor.vue?vue&type=template&id=aaa2f6ee&scoped=true&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\OS\\salesReturn\\channelReturn\\channelReturn_editor.vue","mtime":1572415124199},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1558492728890},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"content\" }, [\n    _c(\"label\", [_vm._v(\"基本信息\")]),\n    _c(\n      \"div\",\n      { staticClass: \"form_div\" },\n      [\n        _c(\n          \"el-form\",\n          {\n            ref: \"formData\",\n            staticClass: \"demo-form-inline\",\n            attrs: { model: _vm.signData, inline: true, rules: _vm.rules }\n          },\n          [\n            _c(\n              \"el-row\",\n              [\n                _c(\n                  \"el-col\",\n                  { attrs: { span: 8 } },\n                  [\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"组织机构：\", prop: \"organization\" } },\n                      [\n                        _c(\n                          \"el-select\",\n                          {\n                            attrs: { placeholder: \"请选择机构\" },\n                            on: { change: _vm.getTreeDeptName },\n                            model: {\n                              value: _vm.signData.organization,\n                              callback: function($$v) {\n                                _vm.$set(_vm.signData, \"organization\", $$v)\n                              },\n                              expression: \"signData.organization\"\n                            }\n                          },\n                          _vm._l(_vm.organizationListData, function(item) {\n                            return _c(\"el-option\", {\n                              key: item.id,\n                              attrs: { label: item.name, value: item.name }\n                            })\n                          }),\n                          1\n                        )\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"渠道订单号：\", prop: \"orderSn\" } },\n                      [\n                        _c(\n                          \"div\",\n                          { staticClass: \"order_div\" },\n                          [\n                            _c(\"el-input\", {\n                              model: {\n                                value: _vm.signData.orderSn,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.signData, \"orderSn\", $$v)\n                                },\n                                expression: \"signData.orderSn\"\n                              }\n                            }),\n                            _c(\n                              \"p\",\n                              {\n                                directives: [\n                                  {\n                                    name: \"popover\",\n                                    rawName: \"v-popover:popover\",\n                                    arg: \"popover\"\n                                  }\n                                ],\n                                staticClass: \"select_order_label\",\n                                on: { click: _vm.selectOrderSnClickEvent }\n                              },\n                              [_vm._v(\"选择订单\")]\n                            )\n                          ],\n                          1\n                        )\n                      ]\n                    ),\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"收货仓库：\", prop: \"warehouse\" } },\n                      [\n                        _c(\n                          \"el-select\",\n                          {\n                            attrs: { placeholder: \"请选择仓库\" },\n                            on: { change: _vm.selectwarehouseCodeChange },\n                            model: {\n                              value: _vm.signData.warehouse,\n                              callback: function($$v) {\n                                _vm.$set(_vm.signData, \"warehouse\", $$v)\n                              },\n                              expression: \"signData.warehouse\"\n                            }\n                          },\n                          _vm._l(_vm.WarehouseCodeData, function(item) {\n                            return _c(\"el-option\", {\n                              key: item.id,\n                              attrs: { label: item.name, value: item.name }\n                            })\n                          }),\n                          1\n                        )\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"el-form-item\",\n                      {\n                        attrs: { label: \"物流公司：\", prop: \"logisticsCompany\" }\n                      },\n                      [\n                        _c(\n                          \"el-select\",\n                          {\n                            attrs: { placeholder: \"请选择物流公司\" },\n                            on: { change: _vm.selectwarehouseCodeChange },\n                            model: {\n                              value: _vm.signData.logisticsCompany,\n                              callback: function($$v) {\n                                _vm.$set(_vm.signData, \"logisticsCompany\", $$v)\n                              },\n                              expression: \"signData.logisticsCompany\"\n                            }\n                          },\n                          _vm._l(_vm.logisticsListData, function(item) {\n                            return _c(\"el-option\", {\n                              key: item.id,\n                              attrs: { label: item.name, value: item.name }\n                            })\n                          }),\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                ),\n                _c(\n                  \"el-col\",\n                  { attrs: { span: 6 } },\n                  [\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"退货日期：\" } },\n                      [\n                        _c(\"el-date-picker\", {\n                          attrs: { type: \"date\", placeholder: \"选择日期\" },\n                          model: {\n                            value: _vm.signData.refundTime,\n                            callback: function($$v) {\n                              _vm.$set(_vm.signData, \"refundTime\", $$v)\n                            },\n                            expression: \"signData.refundTime\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"退货商户：\", prop: \"storeName\" } },\n                      [\n                        _c(\"el-input\", {\n                          attrs: { placeholder: \"请输入\" },\n                          model: {\n                            value: _vm.signData.storeName,\n                            callback: function($$v) {\n                              _vm.$set(_vm.signData, \"storeName\", $$v)\n                            },\n                            expression: \"signData.storeName\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"联系电话：\", prop: \"mobile\" } },\n                      [\n                        _c(\"el-input\", {\n                          attrs: { placeholder: \"请输入\" },\n                          model: {\n                            value: _vm.signData.mobile,\n                            callback: function($$v) {\n                              _vm.$set(_vm.signData, \"mobile\", $$v)\n                            },\n                            expression: \"signData.mobile\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"el-form-item\",\n                      {\n                        attrs: { label: \"物流单号：\", prop: \"logisticsOrderSn\" }\n                      },\n                      [\n                        _c(\"el-input\", {\n                          attrs: { placeholder: \"请输入\" },\n                          model: {\n                            value: _vm.signData.logisticsOrderSn,\n                            callback: function($$v) {\n                              _vm.$set(_vm.signData, \"logisticsOrderSn\", $$v)\n                            },\n                            expression: \"signData.logisticsOrderSn\"\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              ],\n              1\n            )\n          ],\n          1\n        ),\n        _c(\"div\", { staticClass: \"table_msg\" }, [\n          _c(\"div\", { staticClass: \"title_span\" }, [\n            _c(\"span\", [_vm._v(\"商品信息\")]),\n            _c(\n              \"span\",\n              {\n                staticClass: \"select_shop_title\",\n                on: { click: _vm.selectShopClickEvent }\n              },\n              [_vm._v(\"选择商品\")]\n            )\n          ]),\n          _c(\n            \"div\",\n            { staticClass: \"table_div\" },\n            [\n              _c(\n                \"el-table\",\n                {\n                  staticStyle: { width: \"100%\" },\n                  attrs: {\n                    data: _vm.signData.tableData,\n                    stripe: \"\",\n                    \"header-row-class-name\": \"item-table-header\",\n                    \"max-height\": \"400\"\n                  }\n                },\n                [\n                  _c(\"el-table-column\", {\n                    attrs: { prop: \"date\", label: \"商品款号\", width: \"180\" }\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: { prop: \"name\", label: \"商品货号\", width: \"180\" }\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: { prop: \"address\", label: \"商品图片\" }\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: { prop: \"date\", label: \"商品名称\", width: \"180\" }\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: { prop: \"name\", label: \"商品类型\", width: \"180\" },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _c(\"span\", [\n                              _vm._v(\"颜色：\" + _vm._s(scope.row.name))\n                            ]),\n                            _c(\"br\"),\n                            _c(\"span\", [\n                              _vm._v(\"尺寸：\" + _vm._s(scope.row.name))\n                            ])\n                          ]\n                        }\n                      }\n                    ])\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: { prop: \"address\", label: \"品牌\" }\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: { prop: \"date\", label: \"商品品类\", width: \"180\" }\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: { prop: \"name\", label: \"规格属性\", width: \"180\" },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _c(\"span\", [\n                              _vm._v(\"颜色：\" + _vm._s(scope.row.name))\n                            ]),\n                            _c(\"br\"),\n                            _c(\"span\", [\n                              _vm._v(\"尺寸：\" + _vm._s(scope.row.name))\n                            ])\n                          ]\n                        }\n                      }\n                    ])\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: { prop: \"address\", label: \"销售单价\" },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _c(\"span\", [_vm._v(\"￥\" + _vm._s(scope.row.name))])\n                          ]\n                        }\n                      }\n                    ])\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      prop: \"arrivalQuantity\",\n                      label: \"退货单价\",\n                      width: \"120\",\n                      align: \"center\"\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _c(\n                              \"div\",\n                              { staticClass: \"tag_div\" },\n                              [\n                                _c(\"span\", [_vm._v(\"￥\")]),\n                                _c(\"el-input\", {\n                                  attrs: {\n                                    min: \"0\",\n                                    max: \"9\",\n                                    type: \"number\",\n                                    placeholder: \"填写数量\"\n                                  },\n                                  on: {\n                                    change: function($event) {\n                                      return _vm.shopNumberChange(\n                                        $event,\n                                        scope.row\n                                      )\n                                    }\n                                  },\n                                  model: {\n                                    value: scope.row.arrivalQuantity,\n                                    callback: function($$v) {\n                                      _vm.$set(\n                                        scope.row,\n                                        \"arrivalQuantity\",\n                                        $$v\n                                      )\n                                    },\n                                    expression: \"scope.row.arrivalQuantity\"\n                                  }\n                                })\n                              ],\n                              1\n                            )\n                          ]\n                        }\n                      }\n                    ])\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: { prop: \"address\", label: \"销售数量\" }\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      prop: \"address\",\n                      label: \"退货数量\",\n                      width: \"180\",\n                      align: \"center\"\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _c(\"el-input-number\", {\n                              directives: [\n                                {\n                                  name: \"enter-number\",\n                                  rawName: \"v-enter-number\"\n                                }\n                              ],\n                              attrs: { min: 0, max: 100 },\n                              on: { change: _vm.bottomShopNumberChange },\n                              model: {\n                                value: scope.row.num,\n                                callback: function($$v) {\n                                  _vm.$set(scope.row, \"num\", $$v)\n                                },\n                                expression: \"scope.row.num\"\n                              }\n                            })\n                          ]\n                        }\n                      }\n                    ])\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\"div\", { staticClass: \"money-div\" }, [\n            _c(\"span\", [\n              _vm._v(\n                \"商品总金额：￥\" +\n                  _vm._s(_vm.signData.amount ? _vm.signData.amount : \"--\")\n              )\n            ]),\n            _c(\"div\", { staticClass: \"money-content\" }, [\n              _c(\"span\", [_vm._v(\"优惠金额：\")]),\n              _c(\"input\", {\n                staticClass: \"input-price\",\n                attrs: { type: \"text\", placeholder: \"填写优惠项\" }\n              }),\n              _c(\"span\", [_vm._v(\"￥\")]),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.signData.preferentialAmount,\n                    expression: \"signData.preferentialAmount\"\n                  }\n                ],\n                staticClass: \"input-price\",\n                attrs: {\n                  type: \"number\",\n                  min: \"0\",\n                  max: \"100\",\n                  placeholder: \"0.00\"\n                },\n                domProps: { value: _vm.signData.preferentialAmount },\n                on: {\n                  change: _vm.priceInputChangeEvent,\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(\n                      _vm.signData,\n                      \"preferentialAmount\",\n                      $event.target.value\n                    )\n                  }\n                }\n              })\n            ]),\n            _c(\"span\", [\n              _vm._v(\n                \"订单金额：￥\" +\n                  _vm._s(\n                    _vm.signData.actualAmount ? _vm.signData.actualAmount : \"--\"\n                  )\n              )\n            ])\n          ]),\n          _c(\n            \"div\",\n            { staticClass: \"remarks-textarea\" },\n            [\n              _c(\"span\", [_vm._v(\"退货备注：\")]),\n              _c(\"el-input\", {\n                staticClass: \"textarea\",\n                attrs: {\n                  type: \"textarea\",\n                  rows: 2,\n                  placeholder: \"请输入内容\",\n                  resize: \"none\"\n                },\n                model: {\n                  value: _vm.signData.remarks,\n                  callback: function($$v) {\n                    _vm.$set(_vm.signData, \"remarks\", $$v)\n                  },\n                  expression: \"signData.remarks\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            { staticClass: \"btn-div\" },\n            [\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\", size: \"small\" },\n                  on: { click: _vm.primaryBtnClick }\n                },\n                [_vm._v(\"确认\")]\n              ),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { plain: \"\", size: \"small\" },\n                  on: { click: _vm.plainBtnClick }\n                },\n                [_vm._v(\"取消\")]\n              )\n            ],\n            1\n          )\n        ])\n      ],\n      1\n    ),\n    _c(\n      \"div\",\n      [\n        _c(\n          \"el-popover\",\n          {\n            ref: \"popover\",\n            attrs: { placement: \"right\", width: \"800\", trigger: \"click\" },\n            model: {\n              value: _vm.visible,\n              callback: function($$v) {\n                _vm.visible = $$v\n              },\n              expression: \"visible\"\n            }\n          },\n          [\n            _c(\n              \"div\",\n              {\n                staticStyle: {\n                  width: \"100%\",\n                  display: \"flex\",\n                  \"border-bottom\": \"1px solid #ccc\",\n                  \"padding-bottom\": \"8px\"\n                }\n              },\n              [\n                _c(\n                  \"span\",\n                  { staticStyle: { color: \"#409eff\", flex: \"auto\" } },\n                  [_vm._v(\"选择退货单\")]\n                ),\n                _c(\"i\", {\n                  staticClass: \"el-icon-close\",\n                  on: {\n                    click: function($event) {\n                      _vm.visible = false\n                    }\n                  }\n                })\n              ]\n            ),\n            _c(\n              \"div\",\n              { staticStyle: { \"margin-top\": \"20px\" } },\n              [\n                _c(\n                  \"el-form\",\n                  {\n                    ref: \"gridTableForm\",\n                    attrs: {\n                      model: _vm.gridTableData,\n                      \"label-width\": \"90px\",\n                      size: \"small\",\n                      inline: \"\"\n                    }\n                  },\n                  [\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { prop: \"searchKey\", label: \"模糊查询：\" } },\n                      [\n                        _c(\"el-input\", {\n                          staticClass: \"input-w\",\n                          attrs: { placeholder: \"定单号/商户名称/联系电话\" },\n                          model: {\n                            value: _vm.gridTableData.searchKey,\n                            callback: function($$v) {\n                              _vm.$set(_vm.gridTableData, \"searchKey\", $$v)\n                            },\n                            expression: \"gridTableData.searchKey\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { prop: \"channelCodes\", label: \"订单来源：\" } },\n                      [\n                        _c(\"code-set\", {\n                          attrs: { code: \"ORD001\", multiple: true },\n                          model: {\n                            value: _vm.gridTableData.channelCodes,\n                            callback: function($$v) {\n                              _vm.$set(_vm.gridTableData, \"channelCodes\", $$v)\n                            },\n                            expression: \"gridTableData.channelCodes\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"el-form-item\",\n                      [\n                        _c(\n                          \"el-button\",\n                          {\n                            attrs: {\n                              type: \"primary\",\n                              plain: \"\",\n                              size: \"small\"\n                            },\n                            on: { click: _vm.gridFormDataSearch }\n                          },\n                          [_vm._v(\"搜索\")]\n                        ),\n                        _c(\n                          \"el-button\",\n                          {\n                            attrs: { size: \"small\" },\n                            on: {\n                              click: function($event) {\n                                return _vm.gridFormDataResetFilters(\n                                  \"gridTableForm\"\n                                )\n                              }\n                            }\n                          },\n                          [_vm._v(\"重置\")]\n                        )\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              ],\n              1\n            ),\n            _c(\n              \"el-table\",\n              {\n                attrs: {\n                  data: _vm.gridTableData.gridData,\n                  \"header-row-class-name\": \"item-table-header\",\n                  height: \"350\"\n                }\n              },\n              [\n                _c(\"el-table-column\", {\n                  attrs: { width: \"150\", property: \"date\", label: \"订单号\" }\n                }),\n                _c(\"el-table-column\", {\n                  attrs: { width: \"100\", property: \"name\", label: \"商户姓名\" }\n                }),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    width: \"300\",\n                    property: \"address\",\n                    label: \"联系电话\"\n                  }\n                }),\n                _c(\"el-table-column\", {\n                  attrs: { width: \"150\", property: \"date\", label: \"订单来源\" }\n                }),\n                _c(\"el-table-column\", {\n                  attrs: { fixed: \"right\", label: \"操作\" },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"default\",\n                      fn: function(scope) {\n                        return [\n                          _c(\n                            \"el-button\",\n                            {\n                              staticStyle: { color: \"#409eff\" },\n                              attrs: { type: \"text\", size: \"small\" },\n                              on: {\n                                click: function($event) {\n                                  return _vm.selectBtnClick(scope.row)\n                                }\n                              }\n                            },\n                            [_vm._v(\"选择\")]\n                          )\n                        ]\n                      }\n                    }\n                  ])\n                })\n              ],\n              1\n            ),\n            _c(\n              \"div\",\n              {\n                staticStyle: {\n                  \"margin-top\": \"20px\",\n                  \"padding-bottom\": \"10px\",\n                  \"margin-right\": \"20px\"\n                }\n              },\n              [\n                _c(\"el-pagination\", {\n                  attrs: {\n                    \"current-page\": _vm.gridTableData.pageIndex,\n                    \"page-sizes\": [10, 20, 30, 40],\n                    \"page-size\": _vm.gridTableData.pageSize,\n                    layout: \"total, sizes, prev, pager, next, jumper\",\n                    total: 400\n                  },\n                  on: {\n                    \"size-change\": _vm.handleSizeChange,\n                    \"current-change\": _vm.handleCurrentChange,\n                    \"update:currentPage\": function($event) {\n                      return _vm.$set(_vm.gridTableData, \"pageIndex\", $event)\n                    },\n                    \"update:current-page\": function($event) {\n                      return _vm.$set(_vm.gridTableData, \"pageIndex\", $event)\n                    }\n                  }\n                })\n              ],\n              1\n            )\n          ],\n          1\n        )\n      ],\n      1\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}