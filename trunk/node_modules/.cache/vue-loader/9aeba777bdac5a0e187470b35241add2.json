{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\product\\components\\videoPlay.vue?vue&type=template&id=58e63c60&scoped=true&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\product\\components\\videoPlay.vue","mtime":1572415123937},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1558492728890},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm.videoVisible\n    ? _c(\n        \"el-dialog\",\n        {\n          staticClass: \"video-wrap\",\n          attrs: {\n            title: \"视频播放\",\n            width: \"400px\",\n            \"before-close\": _vm.closeDialog,\n            visible: _vm.videoVisible,\n            \"append-to-body\": \"\"\n          },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.videoVisible = $event\n            }\n          }\n        },\n        [\n          _c(\n            \"div\",\n            {\n              ref: \"vcontainer\",\n              staticClass: \"video\",\n              on: {\n                pointermove: function($event) {\n                  $event.preventDefault()\n                  return _vm.handleMouseMove($event)\n                },\n                pointerup: function($event) {\n                  $event.preventDefault()\n                  return _vm.stopDragging($event)\n                },\n                pointerleave: _vm.handleMouseLeave,\n                pointerenter: _vm.handleMouseEnter\n              }\n            },\n            [\n              _c(\n                \"video\",\n                {\n                  ref: \"v\",\n                  staticClass: \"video__player\",\n                  on: { timeupdate: _vm.handleTimeUpdate, ended: _vm.handleEnd }\n                },\n                [_c(\"source\", { attrs: { src: _vm.videoUrl } })]\n              ),\n              _c(\n                \"div\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: _vm.isControlVisible,\n                      expression: \"isControlVisible\"\n                    }\n                  ],\n                  staticClass: \"controller\"\n                },\n                [\n                  _c(\"div\", { staticClass: \"controller__progress-wrapper\" }, [\n                    _c(\n                      \"div\",\n                      {\n                        ref: \"p\",\n                        staticClass: \"controller__progress\",\n                        on: {\n                          click: function($event) {\n                            return _vm.handleProgressClick($event)\n                          }\n                        }\n                      },\n                      [\n                        _c(\"div\", {\n                          staticClass:\n                            \"controller__progress controller__progress--passed\",\n                          style: { width: _vm.videoProgressPercent }\n                        }),\n                        _c(\n                          \"div\",\n                          {\n                            staticClass: \"controller__dot\",\n                            style: { left: _vm.videoProgressPercent },\n                            on: {\n                              pointerdown: function($event) {\n                                return _vm.startDragging($event)\n                              }\n                            }\n                          },\n                          [_c(\"div\", { staticClass: \"controller__inner-dot\" })]\n                        )\n                      ]\n                    )\n                  ]),\n                  _c(\"div\", { staticClass: \"controller__btn-wrapper\" }, [\n                    _c(\n                      \"div\",\n                      {\n                        staticClass: \"controller__btn\",\n                        on: { click: _vm.togglePlaying }\n                      },\n                      [\n                        _vm.isPaused\n                          ? _c(\"font-awesome-icon\", {\n                              attrs: { icon: [\"fas\", \"play\"] }\n                            })\n                          : _c(\"font-awesome-icon\", {\n                              attrs: { icon: [\"fas\", \"pause\"] }\n                            })\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"div\",\n                      {\n                        staticClass: \"controller__btn\",\n                        on: { click: _vm.stopPlaying }\n                      },\n                      [\n                        _c(\"font-awesome-icon\", {\n                          attrs: { icon: [\"fas\", \"stop\"] }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"div\",\n                      {\n                        staticClass: \"controller__btn\",\n                        on: { click: _vm.toggleMute }\n                      },\n                      [\n                        _vm.isMuted\n                          ? _c(\"font-awesome-icon\", {\n                              attrs: { icon: [\"fas\", \"volume-up\"] }\n                            })\n                          : _c(\"font-awesome-icon\", {\n                              attrs: { icon: [\"fas\", \"volume-mute\"] }\n                            })\n                      ],\n                      1\n                    ),\n                    _c(\"div\", { staticClass: \"controller__timer\" }, [\n                      _vm._v(_vm._s(_vm.videoTime))\n                    ]),\n                    _c(\n                      \"div\",\n                      {\n                        staticClass:\n                          \"controller__btn controller__btn--fullscreen\",\n                        on: { click: _vm.toggleFullscreen }\n                      },\n                      [\n                        _c(\"font-awesome-icon\", {\n                          attrs: { icon: [\"fas\", \"expand\"] }\n                        })\n                      ],\n                      1\n                    )\n                  ])\n                ]\n              )\n            ]\n          )\n        ]\n      )\n    : _vm._e()\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}