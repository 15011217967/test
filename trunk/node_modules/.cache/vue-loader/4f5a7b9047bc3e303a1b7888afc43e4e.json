{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\fmis\\detail\\channelTrad\\channel_trad.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\fmis\\detail\\channelTrad\\channel_trad.vue","mtime":1572415125009},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapGetters } from \"vuex\";\r\nimport * as userTypes from \"@/types/userConfig\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      signData: {\r\n        //交易编码来源\r\n        sourceType:'03001',\r\n        //搜索关键字\r\n        searchKey:\"\",\r\n        //交易类型\r\n        tradeType:\"\",\r\n        //渠道商户\r\n        mchIds:[],\r\n        //标记隶属机构\r\n        organizationCodes:[],\r\n        //机构Id的集合\r\n        organizationIds: [],\r\n        //收/付款方式\r\n        paymentCodes:[],\r\n        //交易开始时间\r\n        tradeTimeStart:'',\r\n        //交易结束时间\r\n        tradeTimeEnd:'',\r\n        //当前页数\r\n        pageIndex: 1,\r\n        //每页要显示的数据条数,默认10条\r\n        pageSize: 10\r\n      },\r\n      //得到权限Code\r\n      codeData: [],\r\n      //存储表格选择项改变时的数据\r\n      multipleSelectionData: [],\r\n      //表格数据\r\n      tableData: [],\r\n      //累计交易金额\r\n      transactionLedger:null,\r\n      //总条数\r\n      totalCount: 1,\r\n      //存储门店数据\r\n      storeListData: [],\r\n      //隶属机构数据\r\n      organizationListData:[],\r\n      //交易类型数据\r\n      tradeTypeData:[],\r\n      //收/付款方式数据\r\n      paymentCodesData:[],\r\n      //对账方式\r\n      typeListData:[\r\n        {\r\n          name:'日结',\r\n          id:'1'\r\n        },\r\n        {\r\n          name:'周结',\r\n          id:'2'\r\n        },\r\n        {\r\n          name:'月结',\r\n          id:'3'\r\n        },\r\n        {\r\n          name:'自定义',\r\n          id:'4'\r\n        }\r\n      ]\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n        userInfo: userTypes.GETTER_USERINFO\r\n    })\r\n  },\r\n  //过滤器\r\n  filters: {\r\n    //过滤是否对账\r\n    filterValid(val) {\r\n      switch (val) {\r\n        case false:\r\n          return \"否\";\r\n          break;\r\n        case true:\r\n          return \"是\";\r\n          break;\r\n        default:\r\n          return \"--\";\r\n          break; \r\n      }\r\n    },\r\n    //过滤交易类型\r\n    filterTradeType(val) {\r\n      switch (val) {\r\n        case \"02001\":\r\n          return \"销售\";\r\n          break;\r\n        case \"02002\":\r\n          return \"退款\";\r\n          break;\r\n        case \"02003\":\r\n          return \"配货\";\r\n          break;\r\n        case \"02004\":\r\n          return \"返货\";\r\n          break;\r\n      }\r\n    },\r\n    //过滤支付方式\r\n    filerPaymentCode(val) {\r\n      switch (val) {\r\n         case \"08001\":\r\n          return \"刷卡支付\";\r\n          break;\r\n        case \"08002\":\r\n          return \"微信支付\";\r\n          break;\r\n        case \"08003\":\r\n          return \"支付宝支付\";\r\n          break;\r\n        case \"08004\":\r\n          return \"储值卡支付\";\r\n          break;\r\n        case \"08005\":\r\n          return \"现金支付\";\r\n          break;\r\n        case \"08006\":\r\n          return \"支票支付\";\r\n          break;\r\n        case \"08007\":\r\n          return \"电子汇款\";\r\n          break;\r\n        case \"08008\":\r\n          return \"汇票\";\r\n          break;\r\n        case \"08009\":\r\n          return \"其他\";\r\n          break;\r\n        default:\r\n          return '--'\r\n          break;\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    //得到组织机构数据\r\n    this.getWarehouseListData();\r\n    //得到交易类型数据\r\n    this.getTradeTypeListData();\r\n    //得到收付款方式数据\r\n    this.getPaymentCodesListData();\r\n  },\r\n  methods: {\r\n    //得到组织机构数据\r\n    async getWarehouseListData() {\r\n      let info = await this.request(this.api.user.get_userinfo, {}, true);\r\n      console.log(info);\r\n      //得到当前登录人的直属机构id\r\n      this.request(this.api.user.userCompany_getUserOrgByUserId, {\r\n        userId: info.userId,\r\n        type: 0\r\n      }).then(data => {\r\n        console.log(data);\r\n        //得到门店列表数据\r\n        this.getStoreBasicListData(data.id);\r\n      });\r\n      //得到关联机构（type-0 机构 type-1 部门）\r\n      this.request(this.api.user.userCompany_getUserAllDepartByUserId, {\r\n        userId: info.userId,\r\n        type: 0\r\n      }).then(data => {\r\n        //得到组织机构数据\r\n        this.organizationListData=data;\r\n        console.log(data);\r\n        this.signData.organizationIds=[]\r\n        data.forEach(item => {\r\n          this.signData.organizationIds.push(item.id);\r\n        });\r\n        //得到列表数据\r\n        this.getBillWaitListData();\r\n      });\r\n    },\r\n    // 得到code码，用来限制是否显示按钮\r\n    getCodeLimitToBtnStatus(codeId) {\r\n      this.request(this.api.user.crm_userCompany_authList, {\r\n        menuId: codeId\r\n      }).then(res => {\r\n        console.log(res);\r\n        this.codeData = res;\r\n      });\r\n    },\r\n    //得到门店列表数据\r\n    getStoreBasicListData(organizationId) {\r\n      this.request(this.api.financial.financialBase_merchantListByType, {organizationId:organizationId,merchantType:\"06003\"}).then(res => {\r\n      console.log(res);\r\n      res.forEach(item=>{\r\n        if(item.storeName){\r\n          item.name=item.storeName\r\n        }\r\n      })\r\n      this.storeListData = res;\r\n    });\r\n    },\r\n    \r\n    //得到交易类型数据\r\n    getTradeTypeListData(){\r\n      this.request(this.api.financial.financialBase_transactionTypeList,{}).then(res => {\r\n       console.log(res);\r\n      //  this.tradeTypeData=res;\r\n       this.tradeTypeData.push(res[0])\r\n       this.tradeTypeData.push(res[1])\r\n      })\r\n    },\r\n    //得到收付款方式数据\r\n    getPaymentCodesListData(){\r\n      this.request(this.api.financial.financialBase_paymentTypeList,{}).then(res => {\r\n       console.log(res);\r\n       this.paymentCodesData=res;\r\n      })\r\n    },\r\n    //得到列表数据\r\n    getBillWaitListData() {\r\n      let filter = this.$common.deepCopy(this.signData);\r\n      if (filter.tradeTimeEnd != null) {\r\n        let date = new Date(filter.tradeTimeEnd);\r\n        let t = (date.getTime() / 1000 + 86399) * 1000;\r\n        filter.tradeTimeEnd = new Date(t);\r\n      }\r\n      this.request(\r\n        this.api.financial.financialData_tdTransactionDetail_list,\r\n        filter\r\n      ).then(data => {\r\n        this.totalCount = data.TransactionDetailList.totalCount;\r\n        this.tableData = data.TransactionDetailList.data;\r\n        this.transactionLedger=data.TransactionLedger\r\n        console.log(data);\r\n      });\r\n      //得到按钮操作权限数据\r\n      this.getCodeLimitToBtnStatus(this.$route.meta.currentid);\r\n    },\r\n    //查询表单数据\r\n    searchFormData(ref) {\r\n      this.signData.pageIndex=1\r\n      if(this.signData.organizationCodes.length==0){\r\n        this.getWarehouseListData()\r\n      }else{\r\n        this.signData.organizationIds=this.signData.organizationCodes\r\n        this.getBillWaitListData();\r\n      } \r\n    },\r\n    //重置表单数据\r\n    resetFormData(formData) {\r\n      this.$refs[formData].resetFields();\r\n    },\r\n    //导出\r\n    exportExcel() {\r\n      console.log(\"导出Excel表格...+++++++++++++++++++\");\r\n      require.ensure([], () => {\r\n        let { export_json_to_excel } = require(\"@/vendor/Export2Excel\");\r\n        let tHeader = [\r\n          \"交易单号\",\r\n          \"是否对账\",\r\n          \"交易类型\",\r\n          \"交易金额\",\r\n          \"收/付款方式\",\r\n          \"收/付款流水号\",\r\n          \"渠道商户\",\r\n          \"隶属机构\",\r\n          \"交易操作人\",\r\n          \"交易时间\",\r\n          \"对账人\"\r\n        ];\r\n        // 上面设置Excel的表格第一行的标题\r\n        let filterVal = [\r\n          \"orderSn\",\r\n          \"validStatusName\",\r\n          \"tradeTypeStatusName\",\r\n          \"amount\",\r\n          \"paymentCodeStatusName\",\r\n          \"serialNumber\",\r\n          \"merchant\",\r\n          \"organization\",\r\n          \"operator\",\r\n          \"tradeTimeStatusName\",\r\n          \"checker\"\r\n        ];\r\n        // 上面的index、nickName、name是tableData里对象的属性\r\n        let list = this.multipleSelectionData; //把data里的multipleSelectionData存到list\r\n        let data = this.formatJson(filterVal, list);\r\n        export_json_to_excel(tHeader, data, \"渠道交易明细表单\");\r\n      });\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => v[j]));\r\n    },\r\n    //表格选择项改变时触发\r\n    selectionChange(val) {\r\n      val.forEach(item => {\r\n        item.validStatusName=this.$options.filters.filterValid(item.valid)\r\n        item.tradeTypeStatusName=this.$options.filters.filterTradeType(item.tradeType)\r\n        item.paymentCodeStatusName=this.$options.filters.filerPaymentCode(item.paymentCode)\r\n        item.tradeTimeStatusName=this.$options.filters.timestampToTime(item.tradeTime)\r\n      });\r\n      console.log(val);\r\n      this.multipleSelectionData = val;\r\n    },\r\n    //每页条数改变时\r\n    handleSizeChange(page) {\r\n      this.signData.pageSize = page;\r\n      this.getBillWaitListData();\r\n    },\r\n    //当前页改变时\r\n    handleCurrentChange(page) {\r\n      this.signData.pageIndex = page;\r\n      this.getBillWaitListData();\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["channel_trad.vue"],"names":[],"mappingsfile":"channel_trad.vue","sourceRoot":"src/views/fmis/detail/channelTrad","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"search_div\">\r\n      <el-form ref=\"formData\" :model=\"signData\" label-width=\"110px\" :inline=\"true\">\r\n        <el-form-item label=\"模糊查询：\" prop=\"searchKey\" label-width=\"120px\">\r\n          <el-input\r\n            style=\"width:300px;\"\r\n            v-model=\"signData.searchKey\"\r\n            placeholder=\"交易单号/收款流水号/交易操作人/对账人\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"交易类型：\" prop=\"tradeType\">\r\n          <el-select v-model=\"signData.tradeType\" placeholder=\"请选择\">\r\n            <el-option\r\n              v-for=\"item in tradeTypeData\"\r\n              :label=\"item.description\"\r\n              :key=\"item.code\"\r\n              :value=\"item.code\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"渠道商户：\" prop=\"mchIds\" label-width=\"140px\">\r\n          <el-select v-model=\"signData.mchIds\" placeholder=\"请选择\" multiple>\r\n            <el-option\r\n              v-for=\"item in storeListData\"\r\n              :label=\"item.name\"\r\n              :key=\"item.id\"\r\n              :value=\"item.id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"隶属机构：\" prop=\"organizationCodes\">\r\n          <el-select v-model=\"signData.organizationCodes\" placeholder=\"请选择\" multiple>\r\n            <el-option\r\n              v-for=\"item in organizationListData\"\r\n              :label=\"item.name\"\r\n              :key=\"item.id\"\r\n              :value=\"item.id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"收/付款方式：\" prop=\"paymentCodes\" label-width='120px'>\r\n          <el-select v-model=\"signData.paymentCodes\" placeholder=\"请选择\" multiple>\r\n            <el-option\r\n              v-for=\"item in paymentCodesData\"\r\n              :label=\"item.description\"\r\n              :key=\"item.code\"\r\n              :value=\"item.code\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"交易时间：\" prop=\"tradeTimeStart\">\r\n          <el-date-picker\r\n            v-model=\"signData.tradeTimeStart\"\r\n            type=\"date\"\r\n            placeholder=\"开始时间\"\r\n          ></el-date-picker>\r\n        </el-form-item>\r\n        <el-form-item prop=\"tradeTimeEnd\">\r\n            <el-date-picker v-model=\"signData.tradeTimeEnd\" type=\"date\" placeholder=\"结束时间\"></el-date-picker>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"searchFormData('formData')\" size=\"small\">查询</el-button>\r\n          <el-button @click=\"resetFormData('formData')\" size=\"small\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n    <div class=\"table_div\">\r\n      <el-button\r\n        :disabled=\"multipleSelectionData.length==0\"\r\n        plain\r\n        @click=\"exportExcel\"\r\n        size=\"small\"\r\n        v-auth=\"codeData\"\r\n        data-code=\"16030301\"\r\n      >导出</el-button>\r\n      <el-table\r\n        ref=\"multipleTable\"\r\n        :data=\"tableData\"\r\n        tooltip-effect=\"dark\"\r\n        style=\"width: 100%\"\r\n        header-row-class-name=\"item-table-header\"\r\n        @selection-change=\"selectionChange\"\r\n      >\r\n        <el-table-column type=\"selection\" width=\"55\"></el-table-column>\r\n        <el-table-column label=\"交易单号\" width=\"170\">\r\n          <template slot-scope=\"scope\">{{ scope.row.orderSn?scope.row.orderSn:'--' }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"valid\" label=\"是否对账\">\r\n          <template slot-scope=\"scope\">{{ scope.row.valid | filterValid}}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"tradeType\" label=\"交易类型\">\r\n          <template slot-scope=\"scope\">{{scope.row.tradeType | filterTradeType}}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"amount\" label=\"交易金额\">\r\n          <template slot-scope=\"scope\">{{ scope.row.amount?scope.row.amount:'--' }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"paymentCode\" label=\"收/付款方式\">\r\n          <template slot-scope=\"scope\">{{ scope.row.paymentCode | filerPaymentCode }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"serialNumber\" label=\"收/付款流水号\">\r\n          <template slot-scope=\"scope\">{{ scope.row.serialNumber?scope.row.serialNumber:'--' }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"merchant\" label=\"渠道商户\" show-overflow-tooltip>\r\n          <template slot-scope=\"scope\">{{ scope.row.merchant ?scope.row.merchant:'--' }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"organization\" label=\"隶属机构\">\r\n          <template slot-scope=\"scope\">{{ scope.row.organization ?scope.row.organization:'--' }}</template>\r\n        </el-table-column>\r\n        <el-table-column label=\"交易操作人\">\r\n          <template slot-scope=\"scope\">{{ scope.row.operator?scope.row.operator:'--' }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"tradeTime\" label=\"交易时间\" width=\"160\">\r\n          <template slot-scope=\"scope\">{{ scope.row.tradeTime | timestampToTime }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"checker\" label=\"对账人\">\r\n          <template slot-scope=\"scope\">{{ scope.row.checker ? scope.row.checker:'--' }}</template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <div class='page_div'>\r\n        <div style=\"color:#222;flex:auto;font-weight:700;text-align:right;padding-right:30px;\">\r\n          <span>累计交易金额：￥{{transactionLedger}}</span>\r\n        </div>\r\n        <el-pagination \r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page.sync=\"signData.pageIndex\"\r\n          :page-sizes=\"[10, 20, 30, 40]\"\r\n          :page-size=\"signData.pageSize\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"totalCount\"\r\n        ></el-pagination>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from \"vuex\";\r\nimport * as userTypes from \"@/types/userConfig\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      signData: {\r\n        //交易编码来源\r\n        sourceType:'03001',\r\n        //搜索关键字\r\n        searchKey:\"\",\r\n        //交易类型\r\n        tradeType:\"\",\r\n        //渠道商户\r\n        mchIds:[],\r\n        //标记隶属机构\r\n        organizationCodes:[],\r\n        //机构Id的集合\r\n        organizationIds: [],\r\n        //收/付款方式\r\n        paymentCodes:[],\r\n        //交易开始时间\r\n        tradeTimeStart:'',\r\n        //交易结束时间\r\n        tradeTimeEnd:'',\r\n        //当前页数\r\n        pageIndex: 1,\r\n        //每页要显示的数据条数,默认10条\r\n        pageSize: 10\r\n      },\r\n      //得到权限Code\r\n      codeData: [],\r\n      //存储表格选择项改变时的数据\r\n      multipleSelectionData: [],\r\n      //表格数据\r\n      tableData: [],\r\n      //累计交易金额\r\n      transactionLedger:null,\r\n      //总条数\r\n      totalCount: 1,\r\n      //存储门店数据\r\n      storeListData: [],\r\n      //隶属机构数据\r\n      organizationListData:[],\r\n      //交易类型数据\r\n      tradeTypeData:[],\r\n      //收/付款方式数据\r\n      paymentCodesData:[],\r\n      //对账方式\r\n      typeListData:[\r\n        {\r\n          name:'日结',\r\n          id:'1'\r\n        },\r\n        {\r\n          name:'周结',\r\n          id:'2'\r\n        },\r\n        {\r\n          name:'月结',\r\n          id:'3'\r\n        },\r\n        {\r\n          name:'自定义',\r\n          id:'4'\r\n        }\r\n      ]\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n        userInfo: userTypes.GETTER_USERINFO\r\n    })\r\n  },\r\n  //过滤器\r\n  filters: {\r\n    //过滤是否对账\r\n    filterValid(val) {\r\n      switch (val) {\r\n        case false:\r\n          return \"否\";\r\n          break;\r\n        case true:\r\n          return \"是\";\r\n          break;\r\n        default:\r\n          return \"--\";\r\n          break; \r\n      }\r\n    },\r\n    //过滤交易类型\r\n    filterTradeType(val) {\r\n      switch (val) {\r\n        case \"02001\":\r\n          return \"销售\";\r\n          break;\r\n        case \"02002\":\r\n          return \"退款\";\r\n          break;\r\n        case \"02003\":\r\n          return \"配货\";\r\n          break;\r\n        case \"02004\":\r\n          return \"返货\";\r\n          break;\r\n      }\r\n    },\r\n    //过滤支付方式\r\n    filerPaymentCode(val) {\r\n      switch (val) {\r\n         case \"08001\":\r\n          return \"刷卡支付\";\r\n          break;\r\n        case \"08002\":\r\n          return \"微信支付\";\r\n          break;\r\n        case \"08003\":\r\n          return \"支付宝支付\";\r\n          break;\r\n        case \"08004\":\r\n          return \"储值卡支付\";\r\n          break;\r\n        case \"08005\":\r\n          return \"现金支付\";\r\n          break;\r\n        case \"08006\":\r\n          return \"支票支付\";\r\n          break;\r\n        case \"08007\":\r\n          return \"电子汇款\";\r\n          break;\r\n        case \"08008\":\r\n          return \"汇票\";\r\n          break;\r\n        case \"08009\":\r\n          return \"其他\";\r\n          break;\r\n        default:\r\n          return '--'\r\n          break;\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    //得到组织机构数据\r\n    this.getWarehouseListData();\r\n    //得到交易类型数据\r\n    this.getTradeTypeListData();\r\n    //得到收付款方式数据\r\n    this.getPaymentCodesListData();\r\n  },\r\n  methods: {\r\n    //得到组织机构数据\r\n    async getWarehouseListData() {\r\n      let info = await this.request(this.api.user.get_userinfo, {}, true);\r\n      console.log(info);\r\n      //得到当前登录人的直属机构id\r\n      this.request(this.api.user.userCompany_getUserOrgByUserId, {\r\n        userId: info.userId,\r\n        type: 0\r\n      }).then(data => {\r\n        console.log(data);\r\n        //得到门店列表数据\r\n        this.getStoreBasicListData(data.id);\r\n      });\r\n      //得到关联机构（type-0 机构 type-1 部门）\r\n      this.request(this.api.user.userCompany_getUserAllDepartByUserId, {\r\n        userId: info.userId,\r\n        type: 0\r\n      }).then(data => {\r\n        //得到组织机构数据\r\n        this.organizationListData=data;\r\n        console.log(data);\r\n        this.signData.organizationIds=[]\r\n        data.forEach(item => {\r\n          this.signData.organizationIds.push(item.id);\r\n        });\r\n        //得到列表数据\r\n        this.getBillWaitListData();\r\n      });\r\n    },\r\n    // 得到code码，用来限制是否显示按钮\r\n    getCodeLimitToBtnStatus(codeId) {\r\n      this.request(this.api.user.crm_userCompany_authList, {\r\n        menuId: codeId\r\n      }).then(res => {\r\n        console.log(res);\r\n        this.codeData = res;\r\n      });\r\n    },\r\n    //得到门店列表数据\r\n    getStoreBasicListData(organizationId) {\r\n      this.request(this.api.financial.financialBase_merchantListByType, {organizationId:organizationId,merchantType:\"06003\"}).then(res => {\r\n      console.log(res);\r\n      res.forEach(item=>{\r\n        if(item.storeName){\r\n          item.name=item.storeName\r\n        }\r\n      })\r\n      this.storeListData = res;\r\n    });\r\n    },\r\n    \r\n    //得到交易类型数据\r\n    getTradeTypeListData(){\r\n      this.request(this.api.financial.financialBase_transactionTypeList,{}).then(res => {\r\n       console.log(res);\r\n      //  this.tradeTypeData=res;\r\n       this.tradeTypeData.push(res[0])\r\n       this.tradeTypeData.push(res[1])\r\n      })\r\n    },\r\n    //得到收付款方式数据\r\n    getPaymentCodesListData(){\r\n      this.request(this.api.financial.financialBase_paymentTypeList,{}).then(res => {\r\n       console.log(res);\r\n       this.paymentCodesData=res;\r\n      })\r\n    },\r\n    //得到列表数据\r\n    getBillWaitListData() {\r\n      let filter = this.$common.deepCopy(this.signData);\r\n      if (filter.tradeTimeEnd != null) {\r\n        let date = new Date(filter.tradeTimeEnd);\r\n        let t = (date.getTime() / 1000 + 86399) * 1000;\r\n        filter.tradeTimeEnd = new Date(t);\r\n      }\r\n      this.request(\r\n        this.api.financial.financialData_tdTransactionDetail_list,\r\n        filter\r\n      ).then(data => {\r\n        this.totalCount = data.TransactionDetailList.totalCount;\r\n        this.tableData = data.TransactionDetailList.data;\r\n        this.transactionLedger=data.TransactionLedger\r\n        console.log(data);\r\n      });\r\n      //得到按钮操作权限数据\r\n      this.getCodeLimitToBtnStatus(this.$route.meta.currentid);\r\n    },\r\n    //查询表单数据\r\n    searchFormData(ref) {\r\n      this.signData.pageIndex=1\r\n      if(this.signData.organizationCodes.length==0){\r\n        this.getWarehouseListData()\r\n      }else{\r\n        this.signData.organizationIds=this.signData.organizationCodes\r\n        this.getBillWaitListData();\r\n      } \r\n    },\r\n    //重置表单数据\r\n    resetFormData(formData) {\r\n      this.$refs[formData].resetFields();\r\n    },\r\n    //导出\r\n    exportExcel() {\r\n      console.log(\"导出Excel表格...+++++++++++++++++++\");\r\n      require.ensure([], () => {\r\n        let { export_json_to_excel } = require(\"@/vendor/Export2Excel\");\r\n        let tHeader = [\r\n          \"交易单号\",\r\n          \"是否对账\",\r\n          \"交易类型\",\r\n          \"交易金额\",\r\n          \"收/付款方式\",\r\n          \"收/付款流水号\",\r\n          \"渠道商户\",\r\n          \"隶属机构\",\r\n          \"交易操作人\",\r\n          \"交易时间\",\r\n          \"对账人\"\r\n        ];\r\n        // 上面设置Excel的表格第一行的标题\r\n        let filterVal = [\r\n          \"orderSn\",\r\n          \"validStatusName\",\r\n          \"tradeTypeStatusName\",\r\n          \"amount\",\r\n          \"paymentCodeStatusName\",\r\n          \"serialNumber\",\r\n          \"merchant\",\r\n          \"organization\",\r\n          \"operator\",\r\n          \"tradeTimeStatusName\",\r\n          \"checker\"\r\n        ];\r\n        // 上面的index、nickName、name是tableData里对象的属性\r\n        let list = this.multipleSelectionData; //把data里的multipleSelectionData存到list\r\n        let data = this.formatJson(filterVal, list);\r\n        export_json_to_excel(tHeader, data, \"渠道交易明细表单\");\r\n      });\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => v[j]));\r\n    },\r\n    //表格选择项改变时触发\r\n    selectionChange(val) {\r\n      val.forEach(item => {\r\n        item.validStatusName=this.$options.filters.filterValid(item.valid)\r\n        item.tradeTypeStatusName=this.$options.filters.filterTradeType(item.tradeType)\r\n        item.paymentCodeStatusName=this.$options.filters.filerPaymentCode(item.paymentCode)\r\n        item.tradeTimeStatusName=this.$options.filters.timestampToTime(item.tradeTime)\r\n      });\r\n      console.log(val);\r\n      this.multipleSelectionData = val;\r\n    },\r\n    //每页条数改变时\r\n    handleSizeChange(page) {\r\n      this.signData.pageSize = page;\r\n      this.getBillWaitListData();\r\n    },\r\n    //当前页改变时\r\n    handleCurrentChange(page) {\r\n      this.signData.pageIndex = page;\r\n      this.getBillWaitListData();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.search_div {\r\n  margin: 0 10px;\r\n  padding-top: 20px;\r\n  background-color: #fff;\r\n  .first-input {\r\n    width: 300px;\r\n  }\r\n}\r\n.table_div {\r\n  margin: 10px;\r\n  background-color: #fff;\r\n  padding-top: 20px;\r\n  padding-left: 10px;\r\n}\r\n.page_div{\r\n  margin-top:20px;\r\n  padding-bottom:10px;\r\n  margin-right:20px;\r\n  display:flex;\r\n  align-items:center;\r\n}\r\n</style>\r\n\r\n\r\n\r\n"]}]}