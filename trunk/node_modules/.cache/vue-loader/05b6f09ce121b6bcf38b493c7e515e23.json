{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\product\\components\\dialog_video_upImg.vue?vue&type=style&index=0&id=db47a088&lang=less&scoped=true&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\product\\components\\dialog_video_upImg.vue","mtime":1572415123943},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\css-loader\\index.js","mtime":1558492728478},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1558492728890},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\postcss-loader\\src\\index.js","mtime":1558492728823},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\less-loader\\dist\\cjs.js","mtime":1566193719488},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.btn-wrap {\r\n  width: 120px;\r\n   height: 150px;\r\n  border: 1px dashed #c0ccda;\r\n  border-radius: 6px;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  line-height: 150px;\r\n  i {\r\n    font-size: 28px;\r\n    color: #8c939d;\r\n  }\r\n}\r\n",{"version":3,"sources":["dialog_video_upImg.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"dialog_video_upImg.vue","sourceRoot":"src/views/product/components","sourcesContent":["<!--\r\n * @Description: 商品中心上传图片使用\r\n * @Author: elephant\r\n * @Date: 2019-08-23 11:35:03\r\n * @LastEditTime: 2019-10-23 09:47:53\r\n * @LastEditors: your name\r\n -->\r\n<template>\r\n  <div class=\"upload-img\" v-loading=\"isLoading\">\r\n    <el-upload\r\n      class=\"avatar-uploader\"\r\n      :action=\"imgAction()\"\r\n      accept=\"image/png, image/jpg, image/webp, image/jpeg\"\r\n      :show-file-list=\"false\"\r\n      :on-success=\"handleAvatarSuccess\"\r\n      :before-upload=\"beforeAvatarUpload\"\r\n      :data=\"uploadData\"\r\n      :multiple=\"isMultiple\"\r\n    >\r\n      <nav v-if=\"upIsShow\" class=\"btn-wrap mt-10\">\r\n        <i slot=\"default\" class=\"el-icon-plus\"></i>\r\n      </nav>\r\n    </el-upload>\r\n    <!-- 图片预览 -->\r\n    <el-dialog :visible.sync=\"dialogImgVisible\" append-to-body>\r\n      <img width=\"100%\" :src=\"dialogImageUrl\" alt />\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { getToken } from \"@/utils/auth\";\r\nlet token = getToken(); /// localStorage.getItem('token') // 要保证取到\r\nexport default {\r\n  props: {\r\n    //根据type 取决于回调方法\r\n    imgType: {\r\n      type: String,\r\n      default: \"MASTER_IMAGE\"\r\n    },\r\n    upIsShow:{\r\n        type:Boolean,\r\n        default:true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      dialogImgVisible: false,\r\n      dialogImageUrl: \"\",\r\n      isMultiple: false,\r\n      isLoading:false,\r\n      uploadData: { catalog: \"product\" }\r\n    };\r\n  },\r\n  methods: {\r\n    init() {},\r\n    imgAction() {\r\n      return this.api.FN_ALLPATH(this.api.content.picture_upload);\r\n    },\r\n    handlePictureCardPreview(file) {\r\n      //预览图片时调用\r\n      this.dialogImageUrl = file.url;\r\n      this.dialogImgVisible = true;\r\n    },\r\n    beforeAvatarUpload(file) {\r\n      //文件上传之前调用做一些拦截限制\r\n      const isLtM = file.size / 1024 / 1024 < 5;\r\n      const str = file.type.split(\"/\")[1].toLowerCase();\r\n      if (!isLtM) {\r\n        this.$message.error(\"上传图片大小不能超过\" + 5 + \"MB!\");\r\n        return false;\r\n      }\r\n      if (!str.match(/png|jpg|gif|webp|jpeg/)) {\r\n        this.$message.error(\"上传图片只能是 jpeg | jpg | png格式!\");\r\n        return false;\r\n      }\r\n       this.isLoading = true\r\n        return true;\r\n    },\r\n    //图片上传成功\r\n    handleAvatarSuccess(res, file) {\r\n        this.isLoading = false;\r\n        //主图\r\n        if(this.imgType == 'MASTER_IMAGE'){\r\n            this.$emit('setParentMasterImg',res.data);\r\n        }else if(this.imgType == 'DETAIL_IMAGE'){\r\n            //详情\r\n             this.$emit('setParentDetailImg',res.data);\r\n        }else{\r\n          //其他\r\n            this.$emit('setParentImg',res.data);\r\n        }\r\n      // this.$emit('parentRef',res.data.imageUrl);\r\n      // this.imageUrl = URL.createObjectURL(file.raw);\r\n    },\r\n    handleExceed(files, fileList) {\r\n      //图片上传超过数量限制\r\n      this.$message.error(\"只能上传一张!\");\r\n    }\r\n  },\r\n  watch: {\r\n    upIsShow(val){\r\n        this.upIsShow=val;\r\n    }  \r\n  },\r\n  components: {}\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.btn-wrap {\r\n  width: 120px;\r\n   height: 150px;\r\n  border: 1px dashed #c0ccda;\r\n  border-radius: 6px;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  line-height: 150px;\r\n  i {\r\n    font-size: 28px;\r\n    color: #8c939d;\r\n  }\r\n}\r\n</style>"]}]}