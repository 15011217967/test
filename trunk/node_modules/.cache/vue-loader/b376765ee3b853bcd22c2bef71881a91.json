{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\scb\\order\\sell_order.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\scb\\order\\sell_order.vue","mtime":1576824875518},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport PageTable from \"@/views/collocation/components/PageTable\";\r\nimport TimeIntervalCheck from \"@/components/TimeIntervalCheck\";\r\nimport keepAliveMixin from \"@/mixins/keepAliveMixin\";\r\nimport axios from 'axios'\r\nimport {getToken} from '@/utils/auth'\r\nimport codeSet from '@/components/codeSet'\r\nimport treeDept from '@/components/treeDept'\r\nimport { filter } from 'minimatch';\r\nimport { get } from 'http';\r\nexport default {\r\n  name: \"transfer_slip_list\",\r\n  mixins: [keepAliveMixin],\r\n  // 数据\r\n  data() {\r\n    return {\r\n      fromStore:{\r\n        name:null\r\n      },\r\n      // 调出方列表\r\n      tuneOut_data:[],\r\n      // 调入方列表\r\n      tuneIn_data:[],\r\n      // 选中调出方信息\r\n      checkTuneOutUser:{},\r\n      // 选中调入方信息\r\n      checkTuneInUser:{},\r\n      orderStarusType:{\r\n        100:'待编辑',\r\n        101:'待审核',\r\n        102:'待发货',\r\n        103:'部分已发货',\r\n        104:'异常完成',\r\n        105:'已完成',\r\n        106:'已作废'\r\n      },\r\n      tradeWayCodeType:{\r\n        1:'现金',\r\n        2:'押款代销'\r\n      },\r\n      // 参数\r\n      addFormData: {\r\n        // 发货人\r\n        allotMan: '',\r\n        // 发货人直属机构\r\n        organizationId: '',\r\n        organizationName: '',\r\n        // 订单类型\r\n        // orderType: '0203',\r\n        // 发货门店\r\n        outStoreId: '',\r\n        outStoreName: '',\r\n        // 收货门店\r\n        inStoreId: '',\r\n        inStoreName: '',\r\n        // 收货人\r\n        receiveMan: '',\r\n        // 电话\r\n        phone: '',\r\n        // 省市区信息\r\n        provinceName: '',\r\n        provinceCode: '',\r\n        cityName: '',\r\n        cityCode: '',\r\n        areaName: '',\r\n        areaCode: '',\r\n        divisionId: '',\r\n        // 地址\r\n        addressInfo: ''\r\n      },\r\n      // 选择调出弹框\r\n      dialogTableVisible:false,\r\n      // 选择调出类型\r\n      allocatingType:true,\r\n      // 标识是否是零售门店进入\r\n      enterTypeFlag: false,\r\n      // 查询参数\r\n      formData: {\r\n        // 模糊搜索\r\n        searchWords:null,\r\n        // 订单状态\r\n        purchaseOrderStatus:null,\r\n        // 结算类型\r\n        tradeWayCode:null,\r\n        // 门店名称（采购商名称）\r\n        purchaseAgentId:null,\r\n        // 开始时间\r\n        startDate:null,\r\n        // 结束时间\r\n        endDate:null,\r\n        pageIndex: 1,\r\n        pageSize: 10\r\n      },\r\n      // 查询参数\r\n      formDataStore: {\r\n        // 模糊搜索\r\n        searchWords:null,\r\n        // 订单状态\r\n        purchaseOrderStatus:null,\r\n        // 结算类型\r\n        tradeWayCode:null,\r\n        // 门店名称（采购商名称）\r\n        purchaseAgentName:null,\r\n        // 开始时间\r\n        startDate:null,\r\n        // 结束时间\r\n        endDate:null,\r\n        pageIndex: 1,\r\n        pageSize: 10\r\n      },\r\n      // 收货差异\r\n      differenceList: [{ name: \"是\", id: 1 }, { name: \"否\", id: 0 }],\r\n      // 发货门店列表\r\n      outStoreList: [],\r\n      // 收货门店列表\r\n      inStoreList: [],\r\n      // 单据状态\r\n      billType: this.$common.getBillType(\"transferSlip\"),\r\n      // 表格数据\r\n      tableData: {},\r\n      // 选中的表格数据\r\n      checkedTableData: [],\r\n\r\n      // 备注弹窗\r\n      remarksDialog: false,\r\n      remarksFormData: {\r\n        id: \"\",\r\n        operationRemarks: \"\"\r\n      },\r\n      rules: {\r\n        operationRemarks: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"请输入内容\",\r\n            trigger: \"blur\"\r\n          }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  // 组件\r\n  components: {\r\n    PageTable,\r\n    TimeIntervalCheck\r\n  },\r\n  created() {\r\n    // 删除子页面的门店缓存\r\n    sessionStorage.removeItem(\"TRANSFER_SLIP_APP_INFO\");\r\n    this.info();\r\n  },\r\n  // 初始化数据\r\n  mounted() {\r\n    this.$nextTick(() => {\r\n      this.getInStoreList();\r\n      this.getOutStoreList();\r\n      this.getTableData();\r\n      // 调入、调出门店接口列表，调出传入调入ID（SCB)\r\n      this.tuneIn_fn();\r\n    });\r\n  },\r\n  // 方法\r\n  methods: {\r\n    /**\r\n     * 审核通过\r\n     */\r\n    purchaseOrder_checkToPass(row) {\r\n      this.$confirm('审核通过后，库房将接收订单发货通知！', '订单审核', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.request(\r\n          this.api.scb.purchaseOrder_checkToPass,\r\n          {\r\n            \"orderId\": row.id\r\n          }\r\n        ).then(data => {\r\n          this.getTableData();\r\n          this.warn('审核通过！');\r\n        });\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消删除'\r\n        });          \r\n      });\r\n      \r\n    },\r\n    async info() {\r\n      // 获取userId\r\n      let info = await this.request(this.api.user.get_userinfo, {}, true);\r\n      // 保存用户名称\r\n      this.addFormData.allotMan = info.name;\r\n      // 获取直属机构\r\n      let organization = await this.request(this.api.user.userCompany_getUserOrgByUserId, {userId: info.userId}, true);\r\n      this.addFormData.organizationId =  organization.id;\r\n      this.addFormData.organizationName =  organization.name;\r\n    },\r\n    /**\r\n     * 获取客户列表\r\n     * @param { String } id 调出方id\r\n     */\r\n    tuneIn_fn() {\r\n      this.request(\r\n        this.api.store.storeBasic_listStoreBasic,\r\n        this.fromStore\r\n      ).then(res => {\r\n        this.tuneIn_data = res;\r\n        res.data.forEach((item, index) => {\r\n          item._createTime = this.$options.filters.timestampToTime(item.createTime);\r\n        });\r\n      });\r\n    },\r\n    /**\r\n     * 调入下一步\r\n     */\r\n    drNext() {\r\n      if(JSON.stringify(this.checkTuneInUser) == '{}') {\r\n          this.warn('请选择渠道客户！', 'warning');\r\n          return; \r\n        };\r\n      Object.assign(this.addFormData, {\r\n        outStoreId: this.checkTuneInUser.id,\r\n        outStoreName: this.checkTuneInUser.name,\r\n        // 收货门店\r\n        inStoreId: this.checkTuneInUser.id,\r\n        inStoreName: this.checkTuneInUser.name,\r\n        // 收货人\r\n        receiveMan: this.checkTuneInUser.linkman,\r\n        // 电话\r\n        phone: this.checkTuneInUser.phone,\r\n        // 省市区信息\r\n        provinceName: this.checkTuneInUser.provinceName,\r\n        provinceCode: this.checkTuneInUser.provinceCode,\r\n        cityName: this.checkTuneInUser.cityName,\r\n        cityCode: this.checkTuneInUser.cityCode,\r\n        areaName: this.checkTuneInUser.areaName,\r\n        areaCode: this.checkTuneInUser.areaCode,\r\n        divisionId: this.checkTuneInUser.divisionId,\r\n        // 地址\r\n        addressInfo: this.checkTuneInUser.addressInfo\r\n      });\r\n      console.log(this.addFormData);\r\n      sessionStorage.setItem('TRANSFER_SLIP_APP_INFO', JSON.stringify(this.addFormData));\r\n      // return;\r\n      let module = \"/\" + this.$route.path.split(\"/\")[1];\r\n      this.$router.push({\r\n        path: module + \"/order/sell_order_edit\"\r\n      });\r\n    },\r\n    /**\r\n     * 提示\r\n     * @param { String } message 提示文案\r\n     * @param { String } type 提示类型\r\n     */\r\n    warn(message, type) {\r\n      this.$message({\r\n        message: message,\r\n        type: type || \"success\"\r\n      });\r\n    },\r\n    // keepAlive 返回初始化\r\n    activatedInit() {\r\n      this.getTableData();\r\n    },\r\n    // 导出\r\n    exportExcel(row) {\r\n      if (row.purchaseOrderProductDTOS.length === 0) {\r\n        this.$notify.error({ title: \"错误\", message: \"请选择数据\" });\r\n        return;\r\n      }\r\n      require.ensure([], () => {\r\n        let { export_json_to_excel } = require(\"@/vendor/Export2Excel\");\r\n        let tHeader = [\r\n          \"商品款号\",\r\n          \"商品货号\",\r\n          \"商品图片\",\r\n          \"颜色\",\r\n          \"规格\",\r\n          \"品牌\",\r\n          \"吊牌单价\",\r\n          \"结算单价\",\r\n          \"销售数量\",\r\n          \"实发数量\",\r\n        ];\r\n        // 上面设置Excel的表格第一行的标题\r\n        let filterVal = [\r\n          \"productCode\",\r\n          \"goodsCode\",\r\n          \"image\",\r\n          \"color\",\r\n          \"size\",\r\n          \"brandName\",\r\n          \"price\",\r\n          \"purchasePrice\",\r\n          \"skuModifyQuantity\",\r\n          \"actualSendQty\",\r\n        ];\r\n        // 上面的index、nickName、name是tableData里对象的属性\r\n        let list = row.purchaseOrderProductDTOS; //把data里的tableData存到list\r\n        let data = this.formatJson(filterVal, list);\r\n        export_json_to_excel(tHeader, data, \"销售订单商品明细\");\r\n      });\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => v[j]));\r\n    },\r\n    // 行商品详情导出\r\n    downloadItem(row) {\r\n      this.request(this.api.order.storeAllotOrderProductInfo_list, {\r\n        orderSn: row.orderSn\r\n      }).then(data => {\r\n        this.downloadDataInit(data.data);\r\n        let downloadData = data.data;\r\n        require.ensure([], () => {\r\n          let { export_json_to_excel } = require(\"@/vendor/Export2Excel\");\r\n          let tHeader = [\r\n            \"商品款号\",\r\n            \"商品货号\",\r\n            \"名称\",\r\n            \"品牌\",\r\n            \"吊牌价\",\r\n            \"调拨单价\",\r\n            \"调拨数量\",\r\n            \"调拨金额\",\r\n            \"门店实发数量\",\r\n            \"门店实收数量\"\r\n          ];\r\n          // 上面设置Excel的表格第一行的标题\r\n          let filterVal = [\r\n            \"productCode\",\r\n            \"goodsCode\",\r\n            \"goodsName\",\r\n            \"brandName\",\r\n            \"_retailPrice\",\r\n            \"_allotPrice\",\r\n            \"quantity\",\r\n            \"_amount\",\r\n            \"shipmentsQty\",\r\n            \"receiveQty\"\r\n          ];\r\n          // 上面的index、nickName、name是tableData里对象的属性\r\n          let list = downloadData; //把data里的tableData存到list\r\n          let data = this.formatJson(filterVal, list);\r\n          export_json_to_excel(tHeader, data, \"调拨商品信息\");\r\n        });\r\n      });\r\n    },\r\n    downloadDataInit(data) {\r\n      if (data && data.length) {\r\n        data.forEach(item => {\r\n          item._retailPrice = \"￥\" + item.retailPrice;\r\n          item._allotPrice = \"￥\" + item.allotPrice;\r\n          item._amount = \"￥\" + (item.quantity * item.allotPrice);\r\n        });\r\n      }\r\n    },\r\n    // 点击搜索\r\n    searchTableData() {\r\n      this.formData.pageIndex = 1;\r\n      this.getTableData();\r\n    },\r\n    searchTableDataIn() {\r\n      this.tuneIn_fn();\r\n    },\r\n    initFormDataIn() {\r\n      Object.assign(this.fromStore, {\r\n        name:null\r\n      });\r\n    },\r\n    // 获取列表数据\r\n    getTableData() {\r\n      this.request(\r\n        this.api.scb.purchaseOrder_list,\r\n        this.formData\r\n      ).then(data => {\r\n        this.initTableData(data.data);\r\n        this.tableData = data;\r\n        data.data.forEach((item, idnex) => {\r\n          Object.assign(item, item.purchaseOrderDTO);\r\n          item._createTime = this.$options.filters.timestampToTime(item.createTime);\r\n          item._purchaseOrderStatus = this.orderStarusType[item.purchaseOrderStatus]; \r\n          item._tradeWayCode = this.tradeWayCodeType[item.tradeWayCode]; \r\n        });\r\n      });\r\n    },\r\n    // 初始化数据 导出使用\r\n    initTableData(data) {\r\n      if (data && data.length) {\r\n        data.forEach(item => {\r\n          item._amount = \"￥\" + item.amount;\r\n          item._difference =\r\n            item.difference === null ? \"--\" : item.difference ? \"是\" : \"否\";\r\n          item._differenceQty =\r\n            item.differenceQty === null ? \"--\" : item.differenceQty;\r\n          item._orderStatus = this.statusToName(item.orderStatus);\r\n        });\r\n      }\r\n    },\r\n    // 获取表格选中的\r\n    tableCheckChange(val) {\r\n      this.checkedTableData = val;\r\n    },\r\n    // 初始查询条件\r\n    initFormData() {\r\n      Object.assign(this.formData, {\r\n        // 模糊搜索\r\n        searchWords:null,\r\n        // 订单状态\r\n        purchaseOrderStatus:null,\r\n        // 结算类型\r\n        tradeWayCode:null,\r\n        // 门店名称（采购商名称）\r\n        purchaseAgentId:null,\r\n        // 开始时间\r\n        startDate:null,\r\n        // 结束时间\r\n        endDate:null,\r\n        pageIndex: 1,\r\n        pageSize: 10\r\n      })\r\n    },\r\n    // 新增\r\n    addItem() {\r\n      let module = \"/\" + this.$route.path.split(\"/\")[1];\r\n      this.$router.push({\r\n        path: module + \"/order/allotGoods_order_edit\"\r\n      });\r\n    },\r\n    // 查看\r\n    seeItem(row) {\r\n      let module = \"/\" + this.$route.path.split(\"/\")[1];\r\n      this.$router.push({\r\n        path: module + \"/order/sell_order_detail\",\r\n        query: {\r\n          id: row.id\r\n        }\r\n      });\r\n    },\r\n    // 编辑\r\n    editItem(row) {\r\n      let module = \"/\" + this.$route.path.split(\"/\")[1];\r\n      this.$router.push({\r\n        path: module + \"/order/sell_order_edit\",\r\n        query: {\r\n          id: row.id,\r\n          outStoreId:row.purchaseAgentId,\r\n          orderNum:row.purchaseOrderNum\r\n        }\r\n      });\r\n    },\r\n    // 作废\r\n    delItem(row) {\r\n      this.$confirm('确认作废吗？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.request(\r\n          this.api.scb.purchaseOrder_cancle,\r\n          {\r\n            orderId: row.id\r\n          }\r\n        ).then(data => {\r\n          this.getTableData();\r\n          this.warn('作废成功！');\r\n        });\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消删除'\r\n        });          \r\n      });\r\n    },\r\n    // 强制完成\r\n    finishItem(row) {\r\n      this.$confirm('确认要强制完成吗？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.request(\r\n          this.api.scb.purchaseOrder_forceTermination,\r\n          {\r\n            orderId: row.id\r\n          }\r\n        ).then(data => {\r\n          this.getTableData();\r\n          this.warn('强制成功！');\r\n        });\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消删除'\r\n        });          \r\n      });\r\n    },\r\n    // 备注显示\r\n    remarksItem(row) {\r\n      this.remarksFormData.id = row.id;\r\n      this.remarksFormData.operationRemarks = row.operationRemarks;\r\n      this.remarksDialog = true;\r\n    },\r\n    // 备注提交\r\n    remarksSub() {\r\n      this.$refs.remarksForm.validate(valid => {\r\n        if (valid) {\r\n          this.request(\r\n            this.api.order.storeAllotGoodsOrder_insertRemarks,\r\n            this.remarksFormData\r\n          ).then(data => {\r\n            this.$notify.success({ title: \"成功\", message: \"备注成功\" });\r\n            this.remarksDialog = false;\r\n            this.getTableData();\r\n          });\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    // 状态转name\r\n    statusToName(val) {\r\n      if (!val && val !== 0) return;\r\n      let item = this.billType.find(item => {\r\n        return item.id === val;\r\n      });\r\n      if (item) {\r\n        return item.name;\r\n      } else {\r\n        return val;\r\n      }\r\n    },\r\n    // 获取发货门店数据\r\n    async getOutStoreList() {\r\n      // 获取userId\r\n      let info = await this.request(this.api.user.get_userinfo, {}, true);\r\n      // 获取直属机构\r\n      let organization = await this.request(\r\n        this.api.user.userCompany_getUserOrgByUserId,\r\n        { userId: info.userId },\r\n        true\r\n      );\r\n      // enableAllocation: 1  (启用门店调拨 后端需要)\r\n      this.request(this.api.retailStore.storeBasic_listBase, {\r\n        organizationId: organization.id,\r\n        enableAllocation: 1\r\n      }).then(data => {\r\n        this.outStoreList = data.data;\r\n      });\r\n    },\r\n    // 获取收货门店数据\r\n    getInStoreList() {\r\n      this.request(this.api.store.storeBasic_listStoreBasic, {}).then(data => {\r\n        this.inStoreList = data.data;\r\n      });\r\n    }\r\n  },\r\n  filters: {},\r\n  // 计算属性\r\n  computed: {},\r\n  // 监听数据变化\r\n  watch: {}\r\n};\r\n",{"version":3,"sources":["sell_order.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"sell_order.vue","sourceRoot":"src/views/scb/order","sourcesContent":["<style lang=\"less\" scoped></style>\r\n<template>\r\n  <div class=\"transfer_slip_list\">\r\n    <!-- 选择调出入方信息 -->\r\n    <el-dialog width=\"1200px\" title=\"选择渠道客户\" :visible.sync=\"dialogTableVisible\">\r\n      <el-form\r\n        class=\"item-form\"\r\n        :model=\"fromStore\"\r\n        label-width=\"90px\"\r\n        size=\"small\"\r\n        ref=\"formDataStore\"\r\n        inline>\r\n        <el-form-item label=\"客户名称：\" prop=\"inStoreId\">\r\n          <el-select\r\n            v-model=\"fromStore.name\"\r\n            placeholder=\"请选择\"\r\n            class=\"input-w\"\r\n            filterable\r\n            clearable>\r\n            <el-option\r\n              v-for=\"item in inStoreList\"\r\n              :key=\"item.id\"\r\n              :label=\"item.name\"\r\n              :value=\"item.name\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button @click=\"searchTableDataIn\" type=\"primary\" plain>搜索</el-button>\r\n          <el-button @click=\"initFormDataIn\" plain>重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n      <el-table :data=\"tuneIn_data.data\" max-height=\"350\" class=\"mt-10\">\r\n        <el-table-column label=\"单选\" align=\"center\" min-width=\"50\">\r\n          <template slot-scope=\"scope\">\r\n            <el-radio-group v-model=\"checkTuneInUser\">\r\n              <el-radio :disabled=\"scope.row.status == 10\" :label=\"scope.row\">&nbsp;</el-radio>\r\n            </el-radio-group>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column :show-overflow-tooltip=\"true\" label=\"渠道客户名称\" align=\"center\" min-width=\"90\">\r\n          <template slot-scope=\"scope\">{{ scope.row.name }}</template>\r\n        </el-table-column>\r\n        <el-table-column :show-overflow-tooltip=\"true\" label=\"渠道类型\" align=\"center\" min-width=\"90\">\r\n          <template slot-scope=\"scope\">零售商</template>\r\n        </el-table-column>\r\n        <el-table-column :show-overflow-tooltip=\"true\" label=\"所在省/直辖市\" align=\"center\" min-width=\"90\">\r\n          <template slot-scope=\"scope\">{{ scope.row.provinceName }}</template>\r\n        </el-table-column>\r\n        <el-table-column :show-overflow-tooltip=\"true\" label=\"市/区\" align=\"center\" min-width=\"90\">\r\n          <template slot-scope=\"scope\">{{ scope.row.cityName }}</template>\r\n        </el-table-column>\r\n          <el-table-column :show-overflow-tooltip=\"true\" label=\"详细地址\" align=\"center\" min-width=\"90\">\r\n          <template slot-scope=\"scope\">{{ scope.row.addressInfo }}</template>\r\n        </el-table-column>\r\n          <el-table-column :show-overflow-tooltip=\"true\" label=\"联系人\" align=\"center\" min-width=\"90\">\r\n          <template slot-scope=\"scope\">{{ scope.row.linkman }}</template>\r\n        </el-table-column>\r\n          <el-table-column :show-overflow-tooltip=\"true\" label=\"联系电话\" align=\"center\" min-width=\"90\">\r\n          <template slot-scope=\"scope\">{{ scope.row.phone }}</template>\r\n        </el-table-column>\r\n          <el-table-column :show-overflow-tooltip=\"true\" label=\"最后一次采配时间\" align=\"center\" min-width=\"90\">\r\n          <template slot-scope=\"scope\">{{ scope.row._createTime }}</template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogTableVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"drNext\">下一步</el-button>\r\n      </span>\r\n    </el-dialog>\r\n    <div class=\"item-margin\">\r\n      <el-form\r\n        class=\"item-form\"\r\n        :model=\"formData\"\r\n        label-width=\"90px\"\r\n        size=\"small\"\r\n        ref=\"formData\"\r\n        inline\r\n      >\r\n        <!-- 模糊查询 -->\r\n        <el-form-item label=\"模糊查询：\">\r\n          <el-input\r\n            v-model=\"formData.searchWords\"\r\n            @keyup.enter.native=\"handleSearch\"\r\n            style=\"width:310px;\"\r\n            placeholder=\"订单编号/收货人/收货地址\"\r\n            clearable\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"订单状态：\" prop=\"orderStatus\">\r\n          <el-select\r\n            placeholder=\"请选择\"\r\n            class=\"input-w\"\r\n            v-model=\"formData.purchaseOrderStatus\"\r\n            filterable\r\n            clearable\r\n          >\r\n            <el-option v-for=\"(item, index) in orderStarusType\" :key=\"index\" :label=\"item\" :value=\"index\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"结算类型：\" prop=\"outStoreId\">\r\n          <el-select\r\n            v-model=\"formData.tradeWayCode\"\r\n            placeholder=\"请选择\"\r\n            class=\"input-w\"\r\n            filterable\r\n            clearable\r\n          >\r\n            <el-option\r\n              v-for=\"(item, index) in tradeWayCodeType\"\r\n              :key=\"index\"\r\n              :label=\"item\"\r\n              :value=\"index\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"门店名称：\" prop=\"inStoreId\">\r\n          <el-select\r\n            v-model=\"formData.purchaseAgentId\"\r\n            placeholder=\"请选择\"\r\n            class=\"input-w\"\r\n            filterable\r\n            clearable\r\n          >\r\n            <el-option\r\n              v-for=\"item in inStoreList\"\r\n              :key=\"item.id\"\r\n              :label=\"item.name\"\r\n              :value=\"item.id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"创建时间：\" prop=\"startDate\">\r\n          <el-date-picker v-model=\"formData.startDate\" type=\"date\" placeholder=\"开始日期\"></el-date-picker>\r\n        </el-form-item>\r\n        <el-form-item prop=\"endDate\">\r\n          <el-date-picker v-model=\"formData.endDate\" type=\"date\" placeholder=\"结束日期\"></el-date-picker>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button @click=\"searchTableData\" type=\"primary\" plain>搜索</el-button>\r\n          <el-button @click=\"initFormData\" plain>重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n    <div class=\"item-margin item-cont\">\r\n      <div v-if=\"!enterTypeFlag\">\r\n        <el-button size=\"small\" type=\"primary\" @click=\"dialogTableVisible = true\">新增</el-button>\r\n      </div>\r\n      <page-table :form-data=\"formData\" :get-data=\"getTableData\" :table-data=\"tableData\">\r\n        <el-table\r\n          :data=\"tableData.data\"\r\n          style=\"width: 100%\"\r\n          row-key=\"id\"\r\n          @selection-change=\"tableCheckChange\"\r\n          id=\"table-data\"\r\n        >\r\n          <el-table-column prop=\"purchaseOrderNum\" label=\"订单编号\" width=\"200\"></el-table-column>\r\n          <el-table-column prop=\"_purchaseOrderStatus\" label=\"订单状态\"></el-table-column>\r\n          <el-table-column prop=\"_tradeWayCode\" label=\"结算类型\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n          <el-table-column prop=\"receiveMan\" label=\"收货人\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n          <el-table-column prop=\"addressInfo\" label=\"收货地址\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n          <el-table-column prop=\"productQty\" label=\"订单商品件数\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n          <el-table-column prop=\"goodsCodeQty\" label=\"sku种类数\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n          <el-table-column prop=\"priceSumAmount\" label=\"吊牌价总额\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n          <el-table-column prop=\"purchaseAgentName\" label=\"客户名称\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n          <el-table-column prop=\"purchaseSumAmount\" label=\"结算额\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n          <el-table-column prop=\"_createTime\" label=\"创建时间\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n          <el-table-column label=\"操作\" width=\"260\">\r\n            <template slot-scope=\"scope\">\r\n              <el-button\r\n                  type=\"text\"\r\n                  size=\"small\"\r\n                  @click=\"purchaseOrder_checkToPass(scope.row)\"\r\n                  v-if=\"scope.row.purchaseOrderStatus == 101\"\r\n                >审核</el-button>\r\n              <el-button type=\"text\" size=\"small\" @click=\"seeItem(scope.row)\">查看</el-button>\r\n              <template v-if=\"!enterTypeFlag\">\r\n                <el-button\r\n                  type=\"text\"\r\n                  size=\"small\"\r\n                  @click=\"editItem(scope.row)\"\r\n                  v-if=\"scope.row.purchaseOrderStatus == 100 || scope.row.purchaseOrderStatus == 101\"\r\n                >修改</el-button>\r\n                <el-button\r\n                  type=\"text\"\r\n                  size=\"small\"\r\n                  @click=\"delItem(scope.row)\"\r\n                  v-if=\"scope.row.purchaseOrderStatus < 103\"\r\n                >作废</el-button>\r\n                <el-button\r\n                  type=\"text\"\r\n                  size=\"small\"\r\n                  @click=\"finishItem(scope.row)\"\r\n                  v-if=\"scope.row.purchaseOrderStatus == 103\"\r\n                >强制完成</el-button>\r\n              </template>\r\n              <el-button type=\"text\" size=\"small\" @click=\"exportExcel(scope.row)\">导出</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </page-table>\r\n    </div>\r\n    <!--备注-->\r\n    <el-dialog title=\"备注\" :visible.sync=\"remarksDialog\" width=\"40%\" :close-on-click-modal=\"false\">\r\n      <el-form\r\n        :model=\"remarksFormData\"\r\n        :rules=\"rules\"\r\n        ref=\"remarksForm\"\r\n        label-width=\"80px\"\r\n        class=\"demo-ruleForm\"\r\n      >\r\n        <el-form-item label=\"备注：\" prop=\"reason\">\r\n          <el-input\r\n            type=\"textarea\"\r\n            maxlength=\"120\"\r\n            show-word-limit\r\n            :rows=\"3\"\r\n            placeholder=\"请输入内容\"\r\n            v-model=\"remarksFormData.operationRemarks\"\r\n          ></el-input>\r\n          <p>最大长度为120个字符</p>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"remarksDialog = false\" size=\"small\">取 消</el-button>\r\n        <el-button @click=\"remarksSub\" type=\"primary\" size=\"small\">确定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\nimport PageTable from \"@/views/collocation/components/PageTable\";\r\nimport TimeIntervalCheck from \"@/components/TimeIntervalCheck\";\r\nimport keepAliveMixin from \"@/mixins/keepAliveMixin\";\r\nimport axios from 'axios'\r\nimport {getToken} from '@/utils/auth'\r\nimport codeSet from '@/components/codeSet'\r\nimport treeDept from '@/components/treeDept'\r\nimport { filter } from 'minimatch';\r\nimport { get } from 'http';\r\nexport default {\r\n  name: \"transfer_slip_list\",\r\n  mixins: [keepAliveMixin],\r\n  // 数据\r\n  data() {\r\n    return {\r\n      fromStore:{\r\n        name:null\r\n      },\r\n      // 调出方列表\r\n      tuneOut_data:[],\r\n      // 调入方列表\r\n      tuneIn_data:[],\r\n      // 选中调出方信息\r\n      checkTuneOutUser:{},\r\n      // 选中调入方信息\r\n      checkTuneInUser:{},\r\n      orderStarusType:{\r\n        100:'待编辑',\r\n        101:'待审核',\r\n        102:'待发货',\r\n        103:'部分已发货',\r\n        104:'异常完成',\r\n        105:'已完成',\r\n        106:'已作废'\r\n      },\r\n      tradeWayCodeType:{\r\n        1:'现金',\r\n        2:'押款代销'\r\n      },\r\n      // 参数\r\n      addFormData: {\r\n        // 发货人\r\n        allotMan: '',\r\n        // 发货人直属机构\r\n        organizationId: '',\r\n        organizationName: '',\r\n        // 订单类型\r\n        // orderType: '0203',\r\n        // 发货门店\r\n        outStoreId: '',\r\n        outStoreName: '',\r\n        // 收货门店\r\n        inStoreId: '',\r\n        inStoreName: '',\r\n        // 收货人\r\n        receiveMan: '',\r\n        // 电话\r\n        phone: '',\r\n        // 省市区信息\r\n        provinceName: '',\r\n        provinceCode: '',\r\n        cityName: '',\r\n        cityCode: '',\r\n        areaName: '',\r\n        areaCode: '',\r\n        divisionId: '',\r\n        // 地址\r\n        addressInfo: ''\r\n      },\r\n      // 选择调出弹框\r\n      dialogTableVisible:false,\r\n      // 选择调出类型\r\n      allocatingType:true,\r\n      // 标识是否是零售门店进入\r\n      enterTypeFlag: false,\r\n      // 查询参数\r\n      formData: {\r\n        // 模糊搜索\r\n        searchWords:null,\r\n        // 订单状态\r\n        purchaseOrderStatus:null,\r\n        // 结算类型\r\n        tradeWayCode:null,\r\n        // 门店名称（采购商名称）\r\n        purchaseAgentId:null,\r\n        // 开始时间\r\n        startDate:null,\r\n        // 结束时间\r\n        endDate:null,\r\n        pageIndex: 1,\r\n        pageSize: 10\r\n      },\r\n      // 查询参数\r\n      formDataStore: {\r\n        // 模糊搜索\r\n        searchWords:null,\r\n        // 订单状态\r\n        purchaseOrderStatus:null,\r\n        // 结算类型\r\n        tradeWayCode:null,\r\n        // 门店名称（采购商名称）\r\n        purchaseAgentName:null,\r\n        // 开始时间\r\n        startDate:null,\r\n        // 结束时间\r\n        endDate:null,\r\n        pageIndex: 1,\r\n        pageSize: 10\r\n      },\r\n      // 收货差异\r\n      differenceList: [{ name: \"是\", id: 1 }, { name: \"否\", id: 0 }],\r\n      // 发货门店列表\r\n      outStoreList: [],\r\n      // 收货门店列表\r\n      inStoreList: [],\r\n      // 单据状态\r\n      billType: this.$common.getBillType(\"transferSlip\"),\r\n      // 表格数据\r\n      tableData: {},\r\n      // 选中的表格数据\r\n      checkedTableData: [],\r\n\r\n      // 备注弹窗\r\n      remarksDialog: false,\r\n      remarksFormData: {\r\n        id: \"\",\r\n        operationRemarks: \"\"\r\n      },\r\n      rules: {\r\n        operationRemarks: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"请输入内容\",\r\n            trigger: \"blur\"\r\n          }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  // 组件\r\n  components: {\r\n    PageTable,\r\n    TimeIntervalCheck\r\n  },\r\n  created() {\r\n    // 删除子页面的门店缓存\r\n    sessionStorage.removeItem(\"TRANSFER_SLIP_APP_INFO\");\r\n    this.info();\r\n  },\r\n  // 初始化数据\r\n  mounted() {\r\n    this.$nextTick(() => {\r\n      this.getInStoreList();\r\n      this.getOutStoreList();\r\n      this.getTableData();\r\n      // 调入、调出门店接口列表，调出传入调入ID（SCB)\r\n      this.tuneIn_fn();\r\n    });\r\n  },\r\n  // 方法\r\n  methods: {\r\n    /**\r\n     * 审核通过\r\n     */\r\n    purchaseOrder_checkToPass(row) {\r\n      this.$confirm('审核通过后，库房将接收订单发货通知！', '订单审核', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.request(\r\n          this.api.scb.purchaseOrder_checkToPass,\r\n          {\r\n            \"orderId\": row.id\r\n          }\r\n        ).then(data => {\r\n          this.getTableData();\r\n          this.warn('审核通过！');\r\n        });\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消删除'\r\n        });          \r\n      });\r\n      \r\n    },\r\n    async info() {\r\n      // 获取userId\r\n      let info = await this.request(this.api.user.get_userinfo, {}, true);\r\n      // 保存用户名称\r\n      this.addFormData.allotMan = info.name;\r\n      // 获取直属机构\r\n      let organization = await this.request(this.api.user.userCompany_getUserOrgByUserId, {userId: info.userId}, true);\r\n      this.addFormData.organizationId =  organization.id;\r\n      this.addFormData.organizationName =  organization.name;\r\n    },\r\n    /**\r\n     * 获取客户列表\r\n     * @param { String } id 调出方id\r\n     */\r\n    tuneIn_fn() {\r\n      this.request(\r\n        this.api.store.storeBasic_listStoreBasic,\r\n        this.fromStore\r\n      ).then(res => {\r\n        this.tuneIn_data = res;\r\n        res.data.forEach((item, index) => {\r\n          item._createTime = this.$options.filters.timestampToTime(item.createTime);\r\n        });\r\n      });\r\n    },\r\n    /**\r\n     * 调入下一步\r\n     */\r\n    drNext() {\r\n      if(JSON.stringify(this.checkTuneInUser) == '{}') {\r\n          this.warn('请选择渠道客户！', 'warning');\r\n          return; \r\n        };\r\n      Object.assign(this.addFormData, {\r\n        outStoreId: this.checkTuneInUser.id,\r\n        outStoreName: this.checkTuneInUser.name,\r\n        // 收货门店\r\n        inStoreId: this.checkTuneInUser.id,\r\n        inStoreName: this.checkTuneInUser.name,\r\n        // 收货人\r\n        receiveMan: this.checkTuneInUser.linkman,\r\n        // 电话\r\n        phone: this.checkTuneInUser.phone,\r\n        // 省市区信息\r\n        provinceName: this.checkTuneInUser.provinceName,\r\n        provinceCode: this.checkTuneInUser.provinceCode,\r\n        cityName: this.checkTuneInUser.cityName,\r\n        cityCode: this.checkTuneInUser.cityCode,\r\n        areaName: this.checkTuneInUser.areaName,\r\n        areaCode: this.checkTuneInUser.areaCode,\r\n        divisionId: this.checkTuneInUser.divisionId,\r\n        // 地址\r\n        addressInfo: this.checkTuneInUser.addressInfo\r\n      });\r\n      console.log(this.addFormData);\r\n      sessionStorage.setItem('TRANSFER_SLIP_APP_INFO', JSON.stringify(this.addFormData));\r\n      // return;\r\n      let module = \"/\" + this.$route.path.split(\"/\")[1];\r\n      this.$router.push({\r\n        path: module + \"/order/sell_order_edit\"\r\n      });\r\n    },\r\n    /**\r\n     * 提示\r\n     * @param { String } message 提示文案\r\n     * @param { String } type 提示类型\r\n     */\r\n    warn(message, type) {\r\n      this.$message({\r\n        message: message,\r\n        type: type || \"success\"\r\n      });\r\n    },\r\n    // keepAlive 返回初始化\r\n    activatedInit() {\r\n      this.getTableData();\r\n    },\r\n    // 导出\r\n    exportExcel(row) {\r\n      if (row.purchaseOrderProductDTOS.length === 0) {\r\n        this.$notify.error({ title: \"错误\", message: \"请选择数据\" });\r\n        return;\r\n      }\r\n      require.ensure([], () => {\r\n        let { export_json_to_excel } = require(\"@/vendor/Export2Excel\");\r\n        let tHeader = [\r\n          \"商品款号\",\r\n          \"商品货号\",\r\n          \"商品图片\",\r\n          \"颜色\",\r\n          \"规格\",\r\n          \"品牌\",\r\n          \"吊牌单价\",\r\n          \"结算单价\",\r\n          \"销售数量\",\r\n          \"实发数量\",\r\n        ];\r\n        // 上面设置Excel的表格第一行的标题\r\n        let filterVal = [\r\n          \"productCode\",\r\n          \"goodsCode\",\r\n          \"image\",\r\n          \"color\",\r\n          \"size\",\r\n          \"brandName\",\r\n          \"price\",\r\n          \"purchasePrice\",\r\n          \"skuModifyQuantity\",\r\n          \"actualSendQty\",\r\n        ];\r\n        // 上面的index、nickName、name是tableData里对象的属性\r\n        let list = row.purchaseOrderProductDTOS; //把data里的tableData存到list\r\n        let data = this.formatJson(filterVal, list);\r\n        export_json_to_excel(tHeader, data, \"销售订单商品明细\");\r\n      });\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => v[j]));\r\n    },\r\n    // 行商品详情导出\r\n    downloadItem(row) {\r\n      this.request(this.api.order.storeAllotOrderProductInfo_list, {\r\n        orderSn: row.orderSn\r\n      }).then(data => {\r\n        this.downloadDataInit(data.data);\r\n        let downloadData = data.data;\r\n        require.ensure([], () => {\r\n          let { export_json_to_excel } = require(\"@/vendor/Export2Excel\");\r\n          let tHeader = [\r\n            \"商品款号\",\r\n            \"商品货号\",\r\n            \"名称\",\r\n            \"品牌\",\r\n            \"吊牌价\",\r\n            \"调拨单价\",\r\n            \"调拨数量\",\r\n            \"调拨金额\",\r\n            \"门店实发数量\",\r\n            \"门店实收数量\"\r\n          ];\r\n          // 上面设置Excel的表格第一行的标题\r\n          let filterVal = [\r\n            \"productCode\",\r\n            \"goodsCode\",\r\n            \"goodsName\",\r\n            \"brandName\",\r\n            \"_retailPrice\",\r\n            \"_allotPrice\",\r\n            \"quantity\",\r\n            \"_amount\",\r\n            \"shipmentsQty\",\r\n            \"receiveQty\"\r\n          ];\r\n          // 上面的index、nickName、name是tableData里对象的属性\r\n          let list = downloadData; //把data里的tableData存到list\r\n          let data = this.formatJson(filterVal, list);\r\n          export_json_to_excel(tHeader, data, \"调拨商品信息\");\r\n        });\r\n      });\r\n    },\r\n    downloadDataInit(data) {\r\n      if (data && data.length) {\r\n        data.forEach(item => {\r\n          item._retailPrice = \"￥\" + item.retailPrice;\r\n          item._allotPrice = \"￥\" + item.allotPrice;\r\n          item._amount = \"￥\" + (item.quantity * item.allotPrice);\r\n        });\r\n      }\r\n    },\r\n    // 点击搜索\r\n    searchTableData() {\r\n      this.formData.pageIndex = 1;\r\n      this.getTableData();\r\n    },\r\n    searchTableDataIn() {\r\n      this.tuneIn_fn();\r\n    },\r\n    initFormDataIn() {\r\n      Object.assign(this.fromStore, {\r\n        name:null\r\n      });\r\n    },\r\n    // 获取列表数据\r\n    getTableData() {\r\n      this.request(\r\n        this.api.scb.purchaseOrder_list,\r\n        this.formData\r\n      ).then(data => {\r\n        this.initTableData(data.data);\r\n        this.tableData = data;\r\n        data.data.forEach((item, idnex) => {\r\n          Object.assign(item, item.purchaseOrderDTO);\r\n          item._createTime = this.$options.filters.timestampToTime(item.createTime);\r\n          item._purchaseOrderStatus = this.orderStarusType[item.purchaseOrderStatus]; \r\n          item._tradeWayCode = this.tradeWayCodeType[item.tradeWayCode]; \r\n        });\r\n      });\r\n    },\r\n    // 初始化数据 导出使用\r\n    initTableData(data) {\r\n      if (data && data.length) {\r\n        data.forEach(item => {\r\n          item._amount = \"￥\" + item.amount;\r\n          item._difference =\r\n            item.difference === null ? \"--\" : item.difference ? \"是\" : \"否\";\r\n          item._differenceQty =\r\n            item.differenceQty === null ? \"--\" : item.differenceQty;\r\n          item._orderStatus = this.statusToName(item.orderStatus);\r\n        });\r\n      }\r\n    },\r\n    // 获取表格选中的\r\n    tableCheckChange(val) {\r\n      this.checkedTableData = val;\r\n    },\r\n    // 初始查询条件\r\n    initFormData() {\r\n      Object.assign(this.formData, {\r\n        // 模糊搜索\r\n        searchWords:null,\r\n        // 订单状态\r\n        purchaseOrderStatus:null,\r\n        // 结算类型\r\n        tradeWayCode:null,\r\n        // 门店名称（采购商名称）\r\n        purchaseAgentId:null,\r\n        // 开始时间\r\n        startDate:null,\r\n        // 结束时间\r\n        endDate:null,\r\n        pageIndex: 1,\r\n        pageSize: 10\r\n      })\r\n    },\r\n    // 新增\r\n    addItem() {\r\n      let module = \"/\" + this.$route.path.split(\"/\")[1];\r\n      this.$router.push({\r\n        path: module + \"/order/allotGoods_order_edit\"\r\n      });\r\n    },\r\n    // 查看\r\n    seeItem(row) {\r\n      let module = \"/\" + this.$route.path.split(\"/\")[1];\r\n      this.$router.push({\r\n        path: module + \"/order/sell_order_detail\",\r\n        query: {\r\n          id: row.id\r\n        }\r\n      });\r\n    },\r\n    // 编辑\r\n    editItem(row) {\r\n      let module = \"/\" + this.$route.path.split(\"/\")[1];\r\n      this.$router.push({\r\n        path: module + \"/order/sell_order_edit\",\r\n        query: {\r\n          id: row.id,\r\n          outStoreId:row.purchaseAgentId,\r\n          orderNum:row.purchaseOrderNum\r\n        }\r\n      });\r\n    },\r\n    // 作废\r\n    delItem(row) {\r\n      this.$confirm('确认作废吗？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.request(\r\n          this.api.scb.purchaseOrder_cancle,\r\n          {\r\n            orderId: row.id\r\n          }\r\n        ).then(data => {\r\n          this.getTableData();\r\n          this.warn('作废成功！');\r\n        });\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消删除'\r\n        });          \r\n      });\r\n    },\r\n    // 强制完成\r\n    finishItem(row) {\r\n      this.$confirm('确认要强制完成吗？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.request(\r\n          this.api.scb.purchaseOrder_forceTermination,\r\n          {\r\n            orderId: row.id\r\n          }\r\n        ).then(data => {\r\n          this.getTableData();\r\n          this.warn('强制成功！');\r\n        });\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消删除'\r\n        });          \r\n      });\r\n    },\r\n    // 备注显示\r\n    remarksItem(row) {\r\n      this.remarksFormData.id = row.id;\r\n      this.remarksFormData.operationRemarks = row.operationRemarks;\r\n      this.remarksDialog = true;\r\n    },\r\n    // 备注提交\r\n    remarksSub() {\r\n      this.$refs.remarksForm.validate(valid => {\r\n        if (valid) {\r\n          this.request(\r\n            this.api.order.storeAllotGoodsOrder_insertRemarks,\r\n            this.remarksFormData\r\n          ).then(data => {\r\n            this.$notify.success({ title: \"成功\", message: \"备注成功\" });\r\n            this.remarksDialog = false;\r\n            this.getTableData();\r\n          });\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    // 状态转name\r\n    statusToName(val) {\r\n      if (!val && val !== 0) return;\r\n      let item = this.billType.find(item => {\r\n        return item.id === val;\r\n      });\r\n      if (item) {\r\n        return item.name;\r\n      } else {\r\n        return val;\r\n      }\r\n    },\r\n    // 获取发货门店数据\r\n    async getOutStoreList() {\r\n      // 获取userId\r\n      let info = await this.request(this.api.user.get_userinfo, {}, true);\r\n      // 获取直属机构\r\n      let organization = await this.request(\r\n        this.api.user.userCompany_getUserOrgByUserId,\r\n        { userId: info.userId },\r\n        true\r\n      );\r\n      // enableAllocation: 1  (启用门店调拨 后端需要)\r\n      this.request(this.api.retailStore.storeBasic_listBase, {\r\n        organizationId: organization.id,\r\n        enableAllocation: 1\r\n      }).then(data => {\r\n        this.outStoreList = data.data;\r\n      });\r\n    },\r\n    // 获取收货门店数据\r\n    getInStoreList() {\r\n      this.request(this.api.store.storeBasic_listStoreBasic, {}).then(data => {\r\n        this.inStoreList = data.data;\r\n      });\r\n    }\r\n  },\r\n  filters: {},\r\n  // 计算属性\r\n  computed: {},\r\n  // 监听数据变化\r\n  watch: {}\r\n};\r\n</script>\r\n"]}]}