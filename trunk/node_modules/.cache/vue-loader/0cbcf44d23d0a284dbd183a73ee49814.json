{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\components\\editor\\UploadVideo.vue?vue&type=style&index=0&id=17601348&lang=less&scoped=true&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\components\\editor\\UploadVideo.vue","mtime":1572415127780},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\css-loader\\index.js","mtime":1558492728478},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1558492728890},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\postcss-loader\\src\\index.js","mtime":1558492728823},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\less-loader\\dist\\cjs.js","mtime":1566193719488},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["\n.upload-video{;width: 80px;height: 80px;display: inline-block;overflow: hidden;\n  .content{\n        .content-item{height: 80px;width: 80px;border-radius: 5px;border: 1px dashed #d9d9d9;cursor: pointer;float: left;margin-right: 20px;\n          img{width: 80px;height: 80px;}\n          video{width: 80px;height: 80px;}\n          span{display: block;line-height: 80px;color: #333;text-align: center;font-size: 14px;}\n        }\n    .content-item:hover{border: 1px dashed #409EFF;}\n  }\n}\n",{"version":3,"sources":["UploadVideo.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UploadVideo.vue","sourceRoot":"src/components/editor","sourcesContent":["<style lang=\"less\" scoped>\r\n  .upload-video{;width: 80px;height: 80px;display: inline-block;overflow: hidden;\r\n    .content{\r\n          .content-item{height: 80px;width: 80px;border-radius: 5px;border: 1px dashed #d9d9d9;cursor: pointer;float: left;margin-right: 20px;\r\n            img{width: 80px;height: 80px;}\r\n            video{width: 80px;height: 80px;}\r\n            span{display: block;line-height: 80px;color: #333;text-align: center;font-size: 14px;}\r\n          }\r\n      .content-item:hover{border: 1px dashed #409EFF;}\r\n    }\r\n  }\r\n</style>\r\n<template>\r\n  <div class=\"upload-video\">\r\n    <form ref=\"upLoadForm\">\r\n      <input type=\"file\" style=\"display: none;\" ref=\"videoInput\" @change=\"setVideoInfo()\"/>\r\n    </form>\r\n    <div class=\"content clearfix\">\r\n      <div class=\"content-item\"  @click.stop=\"addVideo\" v-loading=\"loading\">\r\n        <video :src=\"videoUrl\" v-show=\"videoUrl\"></video>\r\n        <span v-show=\"!videoUrl\">上传视频</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n  import TcVod from 'vod-js-sdk-v6/lib/tc_vod'\r\n  export default {\r\n    name: 'upload-video',\r\n    props:{\r\n      // 是否单选\r\n      isRadio: {\r\n        type: Boolean,\r\n        default: true\r\n      },\r\n      callBack: {\r\n        type: Function\r\n      },\r\n      value: {\r\n        default: \"\"\r\n      },\r\n      // 上传的视频list\r\n      videoList: {\r\n        type: Array\r\n      },\r\n      // 单个视频的信息\r\n      videoInfoParams: {\r\n        type: Object\r\n      }\r\n    },\r\n    // 数据\r\n    data() {\r\n      return {\r\n        // 上传实例\r\n        tcVod: '',\r\n        videoInfoOld: null,\r\n        videoInfo: null,\r\n        // 最终后台参数\r\n        videoParams: null,\r\n        // 页面回显路径\r\n        videoUrl: '',\r\n        // 签名\r\n        signature: null,\r\n        loading: false\r\n      }\r\n    },\r\n    // 组件\r\n    components: {\r\n\r\n    },\r\n    created(){\r\n      this.init()\r\n      // 编辑\r\n      if(this.videoInfoParams && this.videoInfoParams.info){\r\n        this.videoParams = this.videoInfoParams.info\r\n        this.videoUrl = this.videoInfoParams.info.mediaUrl\r\n      }\r\n      this.videoUrl = this.value\r\n    },\r\n\r\n    // 初始化数据\r\n    mounted() {\r\n      this.$nextTick(() => {\r\n\r\n      })\r\n    },\r\n    // 方法\r\n    methods: {\r\n      // 初始化\r\n      init(){\r\n        this.videoInfoOld = null\r\n        this.videoInfo = null\r\n        this.videoParams = {}\r\n        this.videoUrl = ''\r\n        this.tcVod = new TcVod({\r\n          getSignature: this.getSignature\r\n        })\r\n      },\r\n      // 获取签名\r\n      getSignature(){\r\n        if(this.signature){\r\n          return this.signature\r\n        }else {\r\n          this.request(this.api.contentCore.picture_get, {}).then(data => {\r\n            this.signature = data.signature\r\n            return data.signature\r\n          });\r\n        }\r\n      },\r\n      // 添加视频\r\n      addVideo() {\r\n        if(this.loading) return\r\n        this.$refs.videoInput.click()\r\n      },\r\n      // 判断上传文件是否是视频\r\n      checkVideoType(type){\r\n        if(!type){\r\n          this.$message.error('视频类型必须是,mp4中的一种');\r\n          this.loading = false\r\n          return false\r\n        }\r\n        const str = type.split('/')[1].toLowerCase()\r\n        if (!str.match(/mp4/)) {\r\n          this.loading = false\r\n          this.$message.error('视频类型必须是,mp4中的一种');\r\n          return false;\r\n        }else {\r\n          return true\r\n        }\r\n      },\r\n      // 上传的视频信息\r\n      setVideoInfo() {\r\n        this.loading = true\r\n        this.videoInfo = this.$refs.videoInput.files[0];\r\n        // 解决 chrome input 上传取消bug\r\n        if(!this.videoInfo){\r\n          this.videoInfo =  this.videoInfoOld.get(\"imgInfo\")\r\n        }else{\r\n          this.videoInfoOld = new FormData()\r\n          this.videoInfoOld.set(\"imgInfo\", this.videoInfo);\r\n        }\r\n        const flag = this.checkVideoType(this.videoInfo.type)\r\n        if(flag){\r\n          this.addUpload()\r\n        }\r\n      },\r\n      // 上传过程\r\n      addUpload() {\r\n        let self = this;\r\n        let uploader = this.tcVod.upload({\r\n          mediaFile: this.videoInfo\r\n        })\r\n        // 视频上传进度\r\n        uploader.on('media_progress', function(info) {\r\n\r\n        })\r\n        // 视频上传完成时\r\n        uploader.on('media_upload', function(info) {\r\n\r\n        })\r\n        // 完成回调\r\n        uploader.done().then(function (doneResult) {\r\n          self.videoSave(doneResult)\r\n\r\n        }).then(function (videoUrl) {\r\n\r\n        })\r\n      },\r\n\r\n\r\n      // 保存视频\r\n      videoSave(params){\r\n        setTimeout(()=>{\r\n          this.loading = false\r\n          this.videoParams = {\r\n            fileId: params.fileId,\r\n            mediaUrl: params.video.url\r\n          }\r\n          if(!this.isRadio){\r\n            this.videoList.push({\r\n              fileId: params.fileId,\r\n              url: params.video.url\r\n            })\r\n            this.init()\r\n            this.videoUrl = ''\r\n            this.$refs.upLoadForm.reset()\r\n          }else{\r\n            this.videoUrl = this.videoParams.mediaUrl\r\n            this.$emit('input', this.videoParams.mediaUrl )\r\n            if(this.callBack){\r\n              this.callBack(this.videoParams)\r\n            }\r\n            if(this.videoInfoParams){\r\n              this.videoInfoParams.info = this.videoParams\r\n            }\r\n          }\r\n        },5000)\r\n      },\r\n      getUploadVideoInfo(){\r\n        return  this.videoParams\r\n      }\r\n\r\n    },\r\n    // 计算属性\r\n    computed: {},\r\n    // 监听数据变化\r\n    watch: {\r\n\r\n    }\r\n  }\r\n</script>\r\n"]}]}