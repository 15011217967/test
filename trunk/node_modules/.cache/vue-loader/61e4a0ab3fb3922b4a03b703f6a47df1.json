{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\OS\\salesReturn\\channelReturn\\channelReturn_shop.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\OS\\salesReturn\\channelReturn\\channelReturn_shop.vue","mtime":1572415124203},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport axios from \"axios\";\r\nimport { constants } from \"crypto\";\r\nimport treeDept from \"@/components/treeDept\";\r\nimport { debuglog } from \"util\";\r\nlet sourceCategoryList = [];\r\nexport default {\r\n  components: {\r\n    treeDept\r\n  },\r\n  data() {\r\n    return {\r\n      //控制继续选择\r\n      showContineBtn: true,\r\n      // 获取商品参数\r\n      formInline: {\r\n        //全部商品--当前页\r\n        pageIndex: 1,\r\n        //全部商品--当前页显示数据\r\n        pageSize: 30,\r\n        //输入的搜索内容\r\n        searchWords: \"\",\r\n        //所属机构\r\n        tenantId: \"\",\r\n        //分类的Id\r\n        cateIdentifier: \"\",\r\n        //记录选中的品牌id\r\n        brandId: \"\",\r\n        //是否查询有效状态值\r\n        validStock:0,\r\n        warehouseCode:''\r\n      },\r\n\r\n      /**\r\n       * 分类\r\n       **/\r\n      // 分类数据\r\n      categoryList: [],\r\n      //是否显示上拉箭头\r\n      isArrowShowUp:false,\r\n      //分类的初始高度\r\n      allCategoryHeight:true,\r\n      //三级更多分类品牌icon的下标\r\n      isRightCategory:true,\r\n      //记录品牌icon的下标   分类的icon下标\r\n      categoryIndex:-1,\r\n\r\n      /**\r\n       * 品牌\r\n       **/\r\n      //品牌数据\r\n      allBrandDataArr: [],\r\n      //全部的下标\r\n      allBrand_index: -1,\r\n      //全部下的分类下标\r\n      brand_index: -1,\r\n      //更多品牌的初始高度\r\n      initialHeight:true,\r\n      // 品牌的下拉箭头\r\n      allBrand:false,\r\n\r\n      /**\r\n       * 商品\r\n       **/\r\n      //商品名称\r\n      shopName: \"\",\r\n      //全部商品数据\r\n      productData: [],\r\n      //全部商品总数\r\n      allProductCount: \"\",\r\n      //标识是否展开选中商品的数据\r\n      isShowBottomTableModel: false,\r\n      //底部弹起的data的数据  选中商品的数据\r\n      bottomTableData: [],\r\n      //临时的底部数据（单独给取消使用）\r\n      bottomTempTableData:[],\r\n      //是否显示动画\r\n      showZoomTable: false,\r\n      //请求的tabbleData数据  根据商品类型查询的商品数据\r\n      productGoodsData: [],\r\n      //总的数量 商品选中的\r\n      allTotal: 0,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.pageShow();\r\n  },\r\n  filters: {\r\n    categoryNumber(val) {\r\n      switch (val) {\r\n        case 1:\r\n          return \"一\";\r\n          break;\r\n        case 2:\r\n          return \"二\";\r\n          break;\r\n        case 3:\r\n          return \"三\";\r\n          break;\r\n        case 4:\r\n          return \"四\";\r\n          break;\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    // 初始化\r\n    pageShow() {\r\n     //得到机构信息\r\n      this.formInline.tenantId = this.$route.query.tenantId;\r\n     //得到仓库Id\r\n      this.formInline.warehouseCode = this.$route.query.warehouseId;\r\n      //得到全部品牌数据\r\n      this.getProductBrandListData();\r\n      //得到分类品牌数据\r\n      this.getCategoryListData();\r\n      //得到全部商品数据\r\n      this.getProductAvailableQuantityListData();\r\n\r\n      if (localStorage.getItem(\"localTableData\")) {\r\n        this.bottomTableData = JSON.parse(\r\n          localStorage.getItem(\"localTableData\")\r\n        );\r\n        this.allTotal=0\r\n        this.bottomTableData.forEach(item=>{\r\n          this.allTotal+=item.num\r\n        })\r\n      }\r\n    },\r\n    //点击回车键发起搜索\r\n    searchShopWithKey() {\r\n      this.getProductAvailableQuantityListData();\r\n    },\r\n    //返回新增页面\r\n    backToPreRoute() {\r\n\r\n      this.cancleBtnClcikEventToBackPrePage()\r\n    },\r\n\r\n    /**\r\n     * 分类\r\n     **/\r\n    //得到分类数据\r\n    getCategoryListData() {\r\n      this.request(this.api.product.categories_list, { type: 1 }).then(data => {\r\n        //存储分类品牌数据\r\n        let _data = data.data;\r\n        let level = 0;\r\n        let calssArr = this.getCurrentCategoryClassArr(_data, level);\r\n        sourceCategoryList = [...calssArr];\r\n        this.categoryList = calssArr;\r\n        for (var i = 0; i < this.categoryList.length; i++) {\r\n          if (i < 3) {\r\n            this.categoryList[i].view = true;\r\n          }\r\n          if (i >= 3) {\r\n            this.categoryList[i].view = false;\r\n          }\r\n        }\r\n      });\r\n    },\r\n    //分类的点击事件\r\n    categoryBrandLiClick(item, index, elem, _index) {\r\n      // 重置商品全部选中\r\n      this.allBrand_index = -1;\r\n      this.brand_index = -1;\r\n      this.formInline.brandId = ''\r\n      this.formInline.pageIndex=1\r\n      item.isSelect = false;\r\n      item.identifier = elem.identifier\r\n      //替换样式\r\n      for (let k = 0; k < item.list.length; k++) {\r\n        item.list[k]._type = false;\r\n      }\r\n      elem._type = true;\r\n      // 如果是最后一级 不再刷新分类\r\n      if (index != this.categoryList.length - 1) {\r\n        // 刷新分类\r\n        this.getCurrentCategoryChildData(index, elem);\r\n      }\r\n      // 获取选中的分类\r\n      this.formInline.cateIdentifier = elem.identifier\r\n      // 刷新品牌\r\n      this.getProductBrandListData()\r\n      // 刷新商品数据\r\n      this.getProductAvailableQuantityListData();\r\n    },\r\n    // 初始化分类数据\r\n    getCurrentCategoryClassArr(__data, _level) {\r\n      let arr = [];\r\n      function getClassArr(__data, _level) {\r\n        let arr1 = [],\r\n          arr2 = [];\r\n        for (let i = 0; i < __data.length; i++) {\r\n          if (_level == __data[i].level) {\r\n            arr1.push(__data[i]);\r\n          } else if(_level < __data[i].level ){\r\n            arr2.push(__data[i]);\r\n          }\r\n        }\r\n        arr.push({ isSelect: true, list: arr1, identifier: '', level: _level});\r\n        if (arr2.length > 0) {\r\n          _level++;\r\n          getClassArr(arr2, _level);\r\n        }\r\n      }\r\n      getClassArr(__data, _level);\r\n      return arr;\r\n    },\r\n    //得到当前点击子类下的所有子类数据\r\n    getCurrentCategoryChildData(index, elem) {\r\n      this.request(this.api.product.categories_list, {\r\n        type: 1,\r\n        identifier: elem.identifier\r\n      }).then(res => {\r\n        let _data = res.data;\r\n        let level = elem.level;\r\n        let list = this.getCurrentCategoryClassArr(_data, level+1);\r\n        if (list.length > 0) {\r\n          this.categoryList.splice(index + 1,sourceCategoryList.length-1, ...list);\r\n        }else{\r\n          this.categoryList.splice(index + 1,sourceCategoryList.length-1,{ isSelect: true, list: [] });\r\n        }\r\n        for (var i = 0; i < this.categoryList.length; i++) {\r\n          if (i < 3) {\r\n            this.categoryList[i].view = true;\r\n          }\r\n          if (i >= 3) {\r\n            this.categoryList[i].view = false;\r\n          }\r\n        }\r\n      });\r\n    },\r\n    //分类的全部按钮\r\n    categoryAllClick(item, index, e) {\r\n      // 选中全部\r\n      item.isSelect = true\r\n      // 页码重置\r\n      this.formInline.pageIndex = 1\r\n      // 初始该行下的分类全部不选中\r\n      for (let k = 0; k < item.list.length; k++) {\r\n        item.list[k]._type = false;\r\n      }\r\n      // 如果当前行有选中分类\r\n      if(item.identifier){\r\n        // 重置\r\n        item.identifier = ''\r\n      }\r\n      // 重置商品全部选中\r\n      this.allBrand_index = -1;\r\n      this.brand_index = -1;\r\n      this.formInline.brandId = ''\r\n      this.formInline.pageIndex=1\r\n      // 获取上级选中的分类\r\n      const identifier = this.getCheckCategory(index)\r\n      if(identifier){\r\n        this.formInline.cateIdentifier = identifier\r\n      }else{\r\n        this.formInline.cateIdentifier = ''\r\n      }\r\n      // 如果是最后一级 不再刷新分类\r\n      if (index != this.categoryList.length - 1) {\r\n        // 刷新分类\r\n        this.getCurrentCategoryChildData(index, item);\r\n      }\r\n      // 刷新品牌\r\n      this.getProductBrandListData()\r\n      // 刷新商品数据\r\n      this.getProductAvailableQuantityListData();\r\n    },\r\n    // 分类-更换箭头icon\r\n    categoryMoreClick(index){\r\n      console.log(index)\r\n      if(this.categoryIndex==index){\r\n        this.categoryIndex=-1\r\n        return\r\n      }\r\n      this.categoryIndex=index\r\n    },\r\n    //三级更多分类-点击事件-更换icon\r\n    categoryMoreRightClick(index){\r\n      this.isRightCategory=!this.isRightCategory\r\n      console.log(this.isRightCategory)\r\n      if(!this.isRightCategory){\r\n        for (var i = 0; i < this.categoryList.length; i++) {\r\n          this.categoryList[i].view = true;\r\n        }\r\n      }else{\r\n        for (var i = 0; i < this.categoryList.length; i++) {\r\n          if (i < 3) {\r\n            this.categoryList[i].view = true;\r\n          }\r\n          if (i >= 3) {\r\n            this.categoryList[i].view = false;\r\n          }\r\n        }\r\n      }\r\n\r\n    },\r\n    // 获取选中的分类  index   该行的index\r\n    getCheckCategory(index){\r\n      if(index == 0){\r\n        return ''\r\n      }\r\n      let identifier = '',length;\r\n      if(index){\r\n        length = index\r\n      }else{\r\n        length = this.categoryList.length\r\n      }\r\n      for(let i = length; i > -1 ; i--){\r\n\r\n        if(this.categoryList[i].identifier){\r\n          identifier = this.categoryList[i].identifier\r\n          break\r\n        }\r\n      }\r\n      return identifier\r\n    },\r\n    /**\r\n     * 品牌\r\n     */\r\n    //得到品牌的全部数据\r\n    getProductBrandListData() {\r\n      this.request(this.api.product.productBrand_listForCate, {cateIdentifier:this.formInline.cateIdentifier}).then(res => {\r\n        this.allBrandDataArr = res.data;\r\n      });\r\n    },\r\n    //全部品牌的全部点击事件\r\n    allBrandShopClick() {\r\n      this.allBrand_index = -1;\r\n      this.brand_index = -1;\r\n      this.formInline.brandId = ''\r\n      this.formInline.pageIndex=1\r\n      this.getProductAvailableQuantityListData();\r\n    },\r\n    //全部品牌的里面的每一个品牌的点击事件\r\n    allBrandLiClickEvent(index) {\r\n      this.allBrand_index = 0;\r\n      this.brand_index = index;\r\n      this.formInline.pageIndex=1\r\n      //记录选中的品牌id\r\n      this.formInline.brandId = this.allBrandDataArr[index].id;\r\n      //点击全部品牌里面的品牌时，发送id请求数据\r\n      this.getProductAvailableQuantityListData();\r\n    },\r\n    //更多品牌-更换箭头icon\r\n    showArrowUpClick(){\r\n      this.isArrowShowUp=!this.isArrowShowUp\r\n      // this.initialHeight=!this.initialHeight\r\n      this.allBrand = !this.allBrand\r\n    },\r\n\r\n    /**\r\n     * 商品\r\n     */\r\n    //得到全部商品数据\r\n    getProductAvailableQuantityListData() {\r\n      // pageStart:1,pageSize:30\r\n      this.request(\r\n        this.api.product.product_listAvailableQuantityForProduct,\r\n        this.formInline\r\n      ).then(data => {\r\n        // let concatData = this.productData.concat(data.data);\r\n        this.productData = data.data;\r\n        this.allProductCount = data.totalCount;\r\n      });\r\n    },\r\n    //点击了加号按钮\r\n    addLabelClickEvent(currentShopId, index) {\r\n      this.request(\r\n        this.api.product.productGoods_listAvailableQuantityForProductGoods,\r\n        {\r\n          productId: currentShopId,\r\n          warehouseCode:this.formInline.warehouseCode,\r\n          tenantId:this.formInline.tenantId,\r\n          validStock:0\r\n        }\r\n      ).then(data => {\r\n        let _data = data.data;\r\n        _data.forEach((item, index) => {\r\n          item.num = \"0\";\r\n        });\r\n        let _bottomData = this.bottomTableData,\r\n          _bottomDataLen = _bottomData.length;\r\n        for (let i = 0; i < _bottomDataLen; i++) {\r\n          for (let j = 0; j < _data.length; j++) {\r\n            if (_data[j].id == _bottomData[i].id) {\r\n              _data[j].num = _bottomData[i].num;\r\n            }\r\n          }\r\n        }\r\n        this.productGoodsData = _data;\r\n        //得到当前数据的index\r\n        this.shopName = this.productData[index].name;\r\n        //显示底部table表格\r\n        this.showZoomTable = true;\r\n        //显示继续选择按钮\r\n        this.showContineBtn = false;\r\n      });\r\n    },\r\n    //展开按钮的点击事件\r\n    clickShowBottomModel() {\r\n      this.showZoomTable = false;\r\n      this.isShowBottomTableModel = !this.isShowBottomTableModel;\r\n    },\r\n    //本地缓存选中的商品数据\r\n    bottomShopNumberChange(val){\r\n      this.$nextTick(()=>{\r\n        this.bottomTableData=this.bottomTableData.filter(item=>{\r\n          return item.num && item.num!=0\r\n        })\r\n        if(this.bottomTableData.length==0){\r\n          this.clickShowBottomModel()\r\n        }\r\n        this.allTotal = 0;\r\n        this.bottomTableData.forEach(item => {\r\n          this.allTotal += item.num;\r\n        });\r\n      })\r\n    },\r\n\r\n    /**\r\n     * 提交\r\n     */\r\n    //确认按钮的点击事件\r\n    successBtnClickEvent() {\r\n      this.showZoomTable = false;\r\n      let content = 0;\r\n      for (let i = 0; i < this.bottomTableData.length; i++) {\r\n        content+=this.bottomTableData[i].num * this.bottomTableData[i].retailPrice;\r\n      }\r\n      let filterBottomData=this.bottomTableData.filter(item=>{\r\n          return item.num!=0\r\n      })\r\n      this.bottomTableData=filterBottomData\r\n      //存储商品总金额过去\r\n      localStorage.setItem(\"allShopPrice\",content)\r\n      localStorage.setItem(\"localTableData\",JSON.stringify(this.bottomTableData));\r\n      localStorage.removeItem('type')\r\n      this.$router.go(-1)\r\n    },\r\n    //点击取消返回上级页面\r\n    cancleBtnClcikEventToBackPrePage(){\r\n      this.$router.go(-1)\r\n    },\r\n    //取消按钮的点击事件\r\n    cancleBtnClcikEvent() {\r\n      this.showZoomTable = false;\r\n      this.isShowBottomTableModel=false\r\n      //显示继续选择按钮\r\n      this.showContineBtn = true;\r\n    },\r\n    //继续选择\r\n    continueBtnClickEvent() {\r\n      this.showZoomTable = false;\r\n      //显示继续选择按钮\r\n      this.showContineBtn = true;\r\n\r\n      for (var i = 0; i < this.productGoodsData.length; i++) {\r\n        var goodsDataId = this.productGoodsData[i].id;\r\n        for (var j = 0; j < this.bottomTableData.length; j++) {\r\n          if (this.bottomTableData[j].id === goodsDataId) {\r\n            //说明已经存在该Id\r\n            this.bottomTableData[j].num = this.productGoodsData[i].num;\r\n            if (i == this.productGoodsData.length - 1) {\r\n              return;\r\n            } else {\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      //确认选择加入购物车\r\n      this.bottomTableData = this.bottomTableData.concat(this.productGoodsData);\r\n      //去除重复的对象\r\n      this.bottomTableData = this.deteleBottonTableDataObject(this.bottomTableData);\r\n      //计算已添加的数量\r\n      this.allTotal = 0;\r\n      this.bottomTableData.forEach(item => {\r\n        this.allTotal += item.num;\r\n      });\r\n      //将数据存储本地\r\n      // localStorage.setItem(\"localTableData\",JSON.stringify(this.bottomTableData));\r\n    },\r\n    //去除对象中的重复对象\r\n    deteleBottonTableDataObject(arr) {\r\n      var hash = {};\r\n      const newArr = arr.reduce((item, next) => {\r\n        hash[next.id] ? \"\" : (hash[next.id] = true && item.push(next));\r\n        return item;\r\n      }, []);\r\n      return newArr;\r\n    },\r\n    shopNumberChange(val) {\r\n\r\n    },\r\n    //监听滚动事件,懒加载\r\n    shopContentScroll(e) {\r\n      this.$nextTick(() => {\r\n        const el = this.$refs.shopContent;\r\n        const offsetHeight = el.offsetHeight;\r\n        const scrollTop = el.scrollTop;\r\n        const scrollHeight = el.scrollHeight;\r\n        let allPage = Math.ceil(\r\n          this.allProductCount / this.formInline.pageSize\r\n        );\r\n        if (offsetHeight + scrollTop - scrollHeight >= -1) {\r\n          //判断当前页是否小于总页数\r\n          if (this.formInline.pageIndex <= allPage) {\r\n            this.formInline.pageIndex++;\r\n            // this.getProductAvailableQuantityListData();\r\n             this.request(\r\n              this.api.product.product_listAvailableQuantityForProduct,\r\n              this.formInline\r\n            ).then(data => {\r\n              let concatData = this.productData.concat(data.data);\r\n              this.productData = concatData;\r\n            });\r\n          } else {\r\n            console.log(\"已经没有新数据了。。。。。\");\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["channelReturn_shop.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"channelReturn_shop.vue","sourceRoot":"src/views/OS/salesReturn/channelReturn","sourcesContent":["<template>\r\n  <div class=\"base\">\r\n    <div class=\"title\">\r\n      <i class=\"el-icon-back\" @click=\"backToPreRoute\"></i>\r\n      <span>选择商品</span>\r\n    </div>\r\n    <!--主题-->\r\n    <div class=\"content\">\r\n      <!--查询条件-->\r\n      <div class=\"organizationVal-div\">\r\n        <el-form :inline=\"true\" :model=\"formInline\" @submit.native.prevent>\r\n          <el-form-item label=\"所属机构：\" label-width=\"130px\">\r\n            <treeDept v-model=\"formInline.tenantId\"></treeDept>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-input\r\n              v-model=\"formInline.searchWords\"\r\n              @keyup.enter.native=\"searchShopWithKey\"\r\n              placeholder=\"请输入搜索内容\"\r\n            ></el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n      <!--分类-->\r\n      <span class=\"category-span\">分类</span>\r\n      <div class=\"category-span-all\" :style=\"{'min-height':allCategoryHeight?'180px':''}\">\r\n        <div v-for=\"(item,index) in categoryList\" :key=\"index\">\r\n          <div class=\"all\" v-show=\"item.view\" v-if=\"item.list && item.list.length > 0\">\r\n            <div class=\"shop-brand\">\r\n              <span>{{index+1 | categoryNumber}}级分类：</span>\r\n              <span\r\n                class=\"i-cursor\"\r\n                @click=\"categoryAllClick(item,index,$event)\"\r\n                :class=\"item.isSelect?'selcte_color':'normal_color'\"\r\n              >全部</span>\r\n            </div>\r\n            <div class=\"all-brand\" :style=\"{'height':categoryIndex!=index?'25px':''}\">\r\n              <ul>\r\n                <li\r\n                  v-for=\"(elem,_index) in item.list\"\r\n                  :class=\"elem._type ==true?'selcte_color':'normal_color'\"\r\n                  @click.stop=\"categoryBrandLiClick(item,index,elem,_index)\"\r\n                  :key=\"_index\"\r\n                >{{elem.name}}</li>\r\n              </ul>\r\n            </div>\r\n            <div class=\"category-more\" @click=\"categoryMoreClick(index)\">\r\n              <span>更多</span>\r\n              <i v-if=\"categoryIndex!=index\" class=\"el-icon-arrow-down\"></i>\r\n              <i v-else class=\"el-icon-arrow-up\"></i>\r\n            </div>\r\n            <div class=\"category-more\" v-show=\"index==2\" @click=\"categoryMoreRightClick(index)\">\r\n              <span>更多分类</span>\r\n              <i v-show=\"isRightCategory\" class=\"el-icon-arrow-down\"></i>\r\n              <i v-show=\"!isRightCategory\" class=\"el-icon-arrow-up\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!--区分线-->\r\n      <label class='line'></label>\r\n      <!--品牌列表-->\r\n      <span class=\"brand-span\">品牌</span>\r\n      <div class=\"all\">\r\n        <div class=\"shop-brand \">\r\n          <span>商品品牌：</span>\r\n          <span\r\n            @click=\"allBrandShopClick\"\r\n            :class=\"allBrand_index==-1?'selcte_color':'normal_color'\"\r\n          >全部</span>\r\n        </div>\r\n        <div :class=\"allBrand?'all-brand-p item-b':'all-brand-p item-n'\" >\r\n          <ul>\r\n            <li\r\n              :class=\"brand_index==index?'selcte_color':'normal_color'\"\r\n              v-for=\"(item,index) in allBrandDataArr\"\r\n              @click.stop=\"allBrandLiClickEvent(index)\"\r\n              :key=\"index\"\r\n            >{{item.name}}</li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"all-brand-more\" @click=\"showArrowUpClick\">\r\n          <span>更多品牌</span>\r\n          <i v-show=\"!isArrowShowUp\" class=\"el-icon-arrow-down\"></i>\r\n          <i v-show=\"isArrowShowUp\" class=\"el-icon-arrow-up\"></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!--商品-->\r\n    <div class=\"shop\">\r\n      <div class=\"tip-title\">\r\n        <span>全部></span>\r\n        <span>已加入{{allTotal}}件商品</span>\r\n      </div>\r\n      <div class=\"shop-content\" @scroll=\"shopContentScroll\" ref=\"shopContent\">\r\n        <!-- 显示独立数据 -->\r\n        <div class=\"show-specific-shop\" v-for=\"(item,index) in productData\" :key=\"index\">\r\n          <div>\r\n            <img :src=\"item.image\" alt=\"占位图\">\r\n          </div>\r\n          <div class=\"shop-specific-title\">\r\n            <span>{{item.name}}</span>\r\n            <span>吊牌价：{{item.retailPrice}}</span>\r\n            <span style=\"font-size:12px;\">库存量：{{item.stock}}</span>\r\n          </div>\r\n          <label class=\"add_icon\" @click=\"addLabelClickEvent(item.id,index)\">＋</label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!--统计-->\r\n    <div class=\"bottom_view\" v-if=\"showContineBtn\">\r\n      <div class=\"left-bottom\">\r\n        <span>合计商品件数：</span>\r\n        <span>{{allTotal}}</span>\r\n        <span>件</span>\r\n        <span\r\n          v-if=\"bottomTableData.length>0\"\r\n          @click=\"clickShowBottomModel\"\r\n        >{{isShowBottomTableModel?'收起':'展开'}}</span>\r\n      </div>\r\n      <div class=\"right-bottom\">\r\n        <el-button type=\"primary\" size=\"small\" @click=\"successBtnClickEvent\">确认</el-button>\r\n        <el-button plain size=\"small\" @click=\"cancleBtnClcikEventToBackPrePage\">取消</el-button>\r\n      </div>\r\n    </div>\r\n    <!--提交-->\r\n    <div class=\"bottom_view\" v-else>\r\n      <div class=\"contine-btn\">\r\n        <el-button type=\"primary\" size=\"small\" @click=\"continueBtnClickEvent\">继续选择</el-button>\r\n        <el-button plain size=\"small\" @click=\"cancleBtnClcikEvent\">取消</el-button>\r\n      </div>\r\n    </div>\r\n\r\n    <!--根据商品类型查询的商品数据-->\r\n    <transition name=\"el-zoom-in-bottom\">\r\n      <div v-show=\"showZoomTable\" class=\"transition-table\">\r\n        <span style=\"display:inline-block;margin:10px 0 10px 10px;\">{{shopName}}</span>\r\n        <div class=\"table-div\">\r\n          <el-table :data=\"productGoodsData\" header-row-class-name=\"item-table-header\" width=\"100%\" height=\"270\">\r\n            <el-table-column prop label=\"商品图片\" width=\"100\">\r\n              <template slot-scope=\"scope\">\r\n                <img :src=\"scope.row.image\" style=\"width:64px;height:64px;\">\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"name\" label=\"商品名称\" align=\"center\"></el-table-column>\r\n            <el-table-column prop label=\"商品类型\" align=\"center\">\r\n              <template slot-scope=\"scope\">\r\n                <span>{{scope.row.type!=null?scope.row.type:'成品'}}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"brandName\" label=\"品牌\" align=\"center\"></el-table-column>\r\n            <el-table-column prop=\"fullCateName\" label=\"商品类目\" align=\"center\"></el-table-column>\r\n            <el-table-column prop=\"code\" label=\"商品货号\" align=\"center\"></el-table-column>\r\n            <el-table-column prop label=\"规格属性\" align=\"center\">\r\n              <template slot-scope=\"scope\">\r\n                <span>颜色：{{scope.row.color}}</span>\r\n                <br>\r\n                <span>尺寸：{{scope.row.size}}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"availableQuantity\" label=\"库存数量\" align=\"center\"></el-table-column>\r\n            <el-table-column prop=\"retailPrice\" label=\"吊牌价\" align=\"center\"></el-table-column>\r\n            <el-table-column prop=\"stock\" label=\"数量\" align=\"center\">\r\n              <template slot-scope=\"scope\">\r\n                <el-input-number\r\n                  v-model=\"scope.row.num\"\r\n                  @change=\"shopNumberChange\"\r\n                  :min=\"0\"\r\n                  :max=\"scope.row.availableQuantity\"\r\n                  style=\"width:150px;line-height:30px;\"\r\n                  v-enter-number\r\n                ></el-input-number>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </div>\r\n      </div>\r\n    </transition>\r\n\r\n    <!-- 展示的是本地缓存的数据 -->\r\n    <!--选中的商品-->\r\n    <transition name=\"el-zoom-in-bottom\">\r\n      <div v-show=\"isShowBottomTableModel\" class=\"transition-table\">\r\n        <!-- <span style=\"display:inline-block;margin:10px 0 10px 10px;\">{{shopName}}</span> -->\r\n        <div class=\"table-div\">\r\n          <el-table\r\n            :data=\"bottomTableData\"\r\n            style=\"width: 100%\"\r\n             height=\"250\"\r\n            header-row-class-name=\"item-table-header\"\r\n          >\r\n            <el-table-column prop=\"date\" label=\"商品图片\" width=\"160\">\r\n              <template slot-scope=\"scope\">\r\n                <img :src=\"scope.row.image\" style=\"width:64px;height:64px;\">\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"name\" label=\"商品名称\" width=\"150\" align=\"center\"></el-table-column>\r\n            <el-table-column prop=\"code\" label=\"商品货号\" width=\"260\" align=\"center\"></el-table-column>\r\n            <el-table-column prop=\"color\" label=\"商品规格\" width=\"260\" align=\"center\">\r\n              <template slot-scope=\"scope\">\r\n                <span>颜色：{{scope.row.color}}</span>\r\n                <br>\r\n                <span>尺寸：{{scope.row.size}}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"retailPrice\" label=\"单价\" width=\"160\" align=\"center\"></el-table-column>\r\n            <el-table-column prop=\"stock\" label=\"数量\" align=\"center\">\r\n              <template slot-scope=\"scope\">\r\n                <el-input-number\r\n                  v-model=\"scope.row.num\"\r\n                  @change=\"bottomShopNumberChange\"\r\n                  :min=\"0\"\r\n                  :max=\"scope.row.availableQuantity\"\r\n                  style=\"width:150px;line-height:30px;\"\r\n                  v-enter-number\r\n                ></el-input-number>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </div>\r\n      </div>\r\n    </transition>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { constants } from \"crypto\";\r\nimport treeDept from \"@/components/treeDept\";\r\nimport { debuglog } from \"util\";\r\nlet sourceCategoryList = [];\r\nexport default {\r\n  components: {\r\n    treeDept\r\n  },\r\n  data() {\r\n    return {\r\n      //控制继续选择\r\n      showContineBtn: true,\r\n      // 获取商品参数\r\n      formInline: {\r\n        //全部商品--当前页\r\n        pageIndex: 1,\r\n        //全部商品--当前页显示数据\r\n        pageSize: 30,\r\n        //输入的搜索内容\r\n        searchWords: \"\",\r\n        //所属机构\r\n        tenantId: \"\",\r\n        //分类的Id\r\n        cateIdentifier: \"\",\r\n        //记录选中的品牌id\r\n        brandId: \"\",\r\n        //是否查询有效状态值\r\n        validStock:0,\r\n        warehouseCode:''\r\n      },\r\n\r\n      /**\r\n       * 分类\r\n       **/\r\n      // 分类数据\r\n      categoryList: [],\r\n      //是否显示上拉箭头\r\n      isArrowShowUp:false,\r\n      //分类的初始高度\r\n      allCategoryHeight:true,\r\n      //三级更多分类品牌icon的下标\r\n      isRightCategory:true,\r\n      //记录品牌icon的下标   分类的icon下标\r\n      categoryIndex:-1,\r\n\r\n      /**\r\n       * 品牌\r\n       **/\r\n      //品牌数据\r\n      allBrandDataArr: [],\r\n      //全部的下标\r\n      allBrand_index: -1,\r\n      //全部下的分类下标\r\n      brand_index: -1,\r\n      //更多品牌的初始高度\r\n      initialHeight:true,\r\n      // 品牌的下拉箭头\r\n      allBrand:false,\r\n\r\n      /**\r\n       * 商品\r\n       **/\r\n      //商品名称\r\n      shopName: \"\",\r\n      //全部商品数据\r\n      productData: [],\r\n      //全部商品总数\r\n      allProductCount: \"\",\r\n      //标识是否展开选中商品的数据\r\n      isShowBottomTableModel: false,\r\n      //底部弹起的data的数据  选中商品的数据\r\n      bottomTableData: [],\r\n      //临时的底部数据（单独给取消使用）\r\n      bottomTempTableData:[],\r\n      //是否显示动画\r\n      showZoomTable: false,\r\n      //请求的tabbleData数据  根据商品类型查询的商品数据\r\n      productGoodsData: [],\r\n      //总的数量 商品选中的\r\n      allTotal: 0,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.pageShow();\r\n  },\r\n  filters: {\r\n    categoryNumber(val) {\r\n      switch (val) {\r\n        case 1:\r\n          return \"一\";\r\n          break;\r\n        case 2:\r\n          return \"二\";\r\n          break;\r\n        case 3:\r\n          return \"三\";\r\n          break;\r\n        case 4:\r\n          return \"四\";\r\n          break;\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    // 初始化\r\n    pageShow() {\r\n     //得到机构信息\r\n      this.formInline.tenantId = this.$route.query.tenantId;\r\n     //得到仓库Id\r\n      this.formInline.warehouseCode = this.$route.query.warehouseId;\r\n      //得到全部品牌数据\r\n      this.getProductBrandListData();\r\n      //得到分类品牌数据\r\n      this.getCategoryListData();\r\n      //得到全部商品数据\r\n      this.getProductAvailableQuantityListData();\r\n\r\n      if (localStorage.getItem(\"localTableData\")) {\r\n        this.bottomTableData = JSON.parse(\r\n          localStorage.getItem(\"localTableData\")\r\n        );\r\n        this.allTotal=0\r\n        this.bottomTableData.forEach(item=>{\r\n          this.allTotal+=item.num\r\n        })\r\n      }\r\n    },\r\n    //点击回车键发起搜索\r\n    searchShopWithKey() {\r\n      this.getProductAvailableQuantityListData();\r\n    },\r\n    //返回新增页面\r\n    backToPreRoute() {\r\n\r\n      this.cancleBtnClcikEventToBackPrePage()\r\n    },\r\n\r\n    /**\r\n     * 分类\r\n     **/\r\n    //得到分类数据\r\n    getCategoryListData() {\r\n      this.request(this.api.product.categories_list, { type: 1 }).then(data => {\r\n        //存储分类品牌数据\r\n        let _data = data.data;\r\n        let level = 0;\r\n        let calssArr = this.getCurrentCategoryClassArr(_data, level);\r\n        sourceCategoryList = [...calssArr];\r\n        this.categoryList = calssArr;\r\n        for (var i = 0; i < this.categoryList.length; i++) {\r\n          if (i < 3) {\r\n            this.categoryList[i].view = true;\r\n          }\r\n          if (i >= 3) {\r\n            this.categoryList[i].view = false;\r\n          }\r\n        }\r\n      });\r\n    },\r\n    //分类的点击事件\r\n    categoryBrandLiClick(item, index, elem, _index) {\r\n      // 重置商品全部选中\r\n      this.allBrand_index = -1;\r\n      this.brand_index = -1;\r\n      this.formInline.brandId = ''\r\n      this.formInline.pageIndex=1\r\n      item.isSelect = false;\r\n      item.identifier = elem.identifier\r\n      //替换样式\r\n      for (let k = 0; k < item.list.length; k++) {\r\n        item.list[k]._type = false;\r\n      }\r\n      elem._type = true;\r\n      // 如果是最后一级 不再刷新分类\r\n      if (index != this.categoryList.length - 1) {\r\n        // 刷新分类\r\n        this.getCurrentCategoryChildData(index, elem);\r\n      }\r\n      // 获取选中的分类\r\n      this.formInline.cateIdentifier = elem.identifier\r\n      // 刷新品牌\r\n      this.getProductBrandListData()\r\n      // 刷新商品数据\r\n      this.getProductAvailableQuantityListData();\r\n    },\r\n    // 初始化分类数据\r\n    getCurrentCategoryClassArr(__data, _level) {\r\n      let arr = [];\r\n      function getClassArr(__data, _level) {\r\n        let arr1 = [],\r\n          arr2 = [];\r\n        for (let i = 0; i < __data.length; i++) {\r\n          if (_level == __data[i].level) {\r\n            arr1.push(__data[i]);\r\n          } else if(_level < __data[i].level ){\r\n            arr2.push(__data[i]);\r\n          }\r\n        }\r\n        arr.push({ isSelect: true, list: arr1, identifier: '', level: _level});\r\n        if (arr2.length > 0) {\r\n          _level++;\r\n          getClassArr(arr2, _level);\r\n        }\r\n      }\r\n      getClassArr(__data, _level);\r\n      return arr;\r\n    },\r\n    //得到当前点击子类下的所有子类数据\r\n    getCurrentCategoryChildData(index, elem) {\r\n      this.request(this.api.product.categories_list, {\r\n        type: 1,\r\n        identifier: elem.identifier\r\n      }).then(res => {\r\n        let _data = res.data;\r\n        let level = elem.level;\r\n        let list = this.getCurrentCategoryClassArr(_data, level+1);\r\n        if (list.length > 0) {\r\n          this.categoryList.splice(index + 1,sourceCategoryList.length-1, ...list);\r\n        }else{\r\n          this.categoryList.splice(index + 1,sourceCategoryList.length-1,{ isSelect: true, list: [] });\r\n        }\r\n        for (var i = 0; i < this.categoryList.length; i++) {\r\n          if (i < 3) {\r\n            this.categoryList[i].view = true;\r\n          }\r\n          if (i >= 3) {\r\n            this.categoryList[i].view = false;\r\n          }\r\n        }\r\n      });\r\n    },\r\n    //分类的全部按钮\r\n    categoryAllClick(item, index, e) {\r\n      // 选中全部\r\n      item.isSelect = true\r\n      // 页码重置\r\n      this.formInline.pageIndex = 1\r\n      // 初始该行下的分类全部不选中\r\n      for (let k = 0; k < item.list.length; k++) {\r\n        item.list[k]._type = false;\r\n      }\r\n      // 如果当前行有选中分类\r\n      if(item.identifier){\r\n        // 重置\r\n        item.identifier = ''\r\n      }\r\n      // 重置商品全部选中\r\n      this.allBrand_index = -1;\r\n      this.brand_index = -1;\r\n      this.formInline.brandId = ''\r\n      this.formInline.pageIndex=1\r\n      // 获取上级选中的分类\r\n      const identifier = this.getCheckCategory(index)\r\n      if(identifier){\r\n        this.formInline.cateIdentifier = identifier\r\n      }else{\r\n        this.formInline.cateIdentifier = ''\r\n      }\r\n      // 如果是最后一级 不再刷新分类\r\n      if (index != this.categoryList.length - 1) {\r\n        // 刷新分类\r\n        this.getCurrentCategoryChildData(index, item);\r\n      }\r\n      // 刷新品牌\r\n      this.getProductBrandListData()\r\n      // 刷新商品数据\r\n      this.getProductAvailableQuantityListData();\r\n    },\r\n    // 分类-更换箭头icon\r\n    categoryMoreClick(index){\r\n      console.log(index)\r\n      if(this.categoryIndex==index){\r\n        this.categoryIndex=-1\r\n        return\r\n      }\r\n      this.categoryIndex=index\r\n    },\r\n    //三级更多分类-点击事件-更换icon\r\n    categoryMoreRightClick(index){\r\n      this.isRightCategory=!this.isRightCategory\r\n      console.log(this.isRightCategory)\r\n      if(!this.isRightCategory){\r\n        for (var i = 0; i < this.categoryList.length; i++) {\r\n          this.categoryList[i].view = true;\r\n        }\r\n      }else{\r\n        for (var i = 0; i < this.categoryList.length; i++) {\r\n          if (i < 3) {\r\n            this.categoryList[i].view = true;\r\n          }\r\n          if (i >= 3) {\r\n            this.categoryList[i].view = false;\r\n          }\r\n        }\r\n      }\r\n\r\n    },\r\n    // 获取选中的分类  index   该行的index\r\n    getCheckCategory(index){\r\n      if(index == 0){\r\n        return ''\r\n      }\r\n      let identifier = '',length;\r\n      if(index){\r\n        length = index\r\n      }else{\r\n        length = this.categoryList.length\r\n      }\r\n      for(let i = length; i > -1 ; i--){\r\n\r\n        if(this.categoryList[i].identifier){\r\n          identifier = this.categoryList[i].identifier\r\n          break\r\n        }\r\n      }\r\n      return identifier\r\n    },\r\n    /**\r\n     * 品牌\r\n     */\r\n    //得到品牌的全部数据\r\n    getProductBrandListData() {\r\n      this.request(this.api.product.productBrand_listForCate, {cateIdentifier:this.formInline.cateIdentifier}).then(res => {\r\n        this.allBrandDataArr = res.data;\r\n      });\r\n    },\r\n    //全部品牌的全部点击事件\r\n    allBrandShopClick() {\r\n      this.allBrand_index = -1;\r\n      this.brand_index = -1;\r\n      this.formInline.brandId = ''\r\n      this.formInline.pageIndex=1\r\n      this.getProductAvailableQuantityListData();\r\n    },\r\n    //全部品牌的里面的每一个品牌的点击事件\r\n    allBrandLiClickEvent(index) {\r\n      this.allBrand_index = 0;\r\n      this.brand_index = index;\r\n      this.formInline.pageIndex=1\r\n      //记录选中的品牌id\r\n      this.formInline.brandId = this.allBrandDataArr[index].id;\r\n      //点击全部品牌里面的品牌时，发送id请求数据\r\n      this.getProductAvailableQuantityListData();\r\n    },\r\n    //更多品牌-更换箭头icon\r\n    showArrowUpClick(){\r\n      this.isArrowShowUp=!this.isArrowShowUp\r\n      // this.initialHeight=!this.initialHeight\r\n      this.allBrand = !this.allBrand\r\n    },\r\n\r\n    /**\r\n     * 商品\r\n     */\r\n    //得到全部商品数据\r\n    getProductAvailableQuantityListData() {\r\n      // pageStart:1,pageSize:30\r\n      this.request(\r\n        this.api.product.product_listAvailableQuantityForProduct,\r\n        this.formInline\r\n      ).then(data => {\r\n        // let concatData = this.productData.concat(data.data);\r\n        this.productData = data.data;\r\n        this.allProductCount = data.totalCount;\r\n      });\r\n    },\r\n    //点击了加号按钮\r\n    addLabelClickEvent(currentShopId, index) {\r\n      this.request(\r\n        this.api.product.productGoods_listAvailableQuantityForProductGoods,\r\n        {\r\n          productId: currentShopId,\r\n          warehouseCode:this.formInline.warehouseCode,\r\n          tenantId:this.formInline.tenantId,\r\n          validStock:0\r\n        }\r\n      ).then(data => {\r\n        let _data = data.data;\r\n        _data.forEach((item, index) => {\r\n          item.num = \"0\";\r\n        });\r\n        let _bottomData = this.bottomTableData,\r\n          _bottomDataLen = _bottomData.length;\r\n        for (let i = 0; i < _bottomDataLen; i++) {\r\n          for (let j = 0; j < _data.length; j++) {\r\n            if (_data[j].id == _bottomData[i].id) {\r\n              _data[j].num = _bottomData[i].num;\r\n            }\r\n          }\r\n        }\r\n        this.productGoodsData = _data;\r\n        //得到当前数据的index\r\n        this.shopName = this.productData[index].name;\r\n        //显示底部table表格\r\n        this.showZoomTable = true;\r\n        //显示继续选择按钮\r\n        this.showContineBtn = false;\r\n      });\r\n    },\r\n    //展开按钮的点击事件\r\n    clickShowBottomModel() {\r\n      this.showZoomTable = false;\r\n      this.isShowBottomTableModel = !this.isShowBottomTableModel;\r\n    },\r\n    //本地缓存选中的商品数据\r\n    bottomShopNumberChange(val){\r\n      this.$nextTick(()=>{\r\n        this.bottomTableData=this.bottomTableData.filter(item=>{\r\n          return item.num && item.num!=0\r\n        })\r\n        if(this.bottomTableData.length==0){\r\n          this.clickShowBottomModel()\r\n        }\r\n        this.allTotal = 0;\r\n        this.bottomTableData.forEach(item => {\r\n          this.allTotal += item.num;\r\n        });\r\n      })\r\n    },\r\n\r\n    /**\r\n     * 提交\r\n     */\r\n    //确认按钮的点击事件\r\n    successBtnClickEvent() {\r\n      this.showZoomTable = false;\r\n      let content = 0;\r\n      for (let i = 0; i < this.bottomTableData.length; i++) {\r\n        content+=this.bottomTableData[i].num * this.bottomTableData[i].retailPrice;\r\n      }\r\n      let filterBottomData=this.bottomTableData.filter(item=>{\r\n          return item.num!=0\r\n      })\r\n      this.bottomTableData=filterBottomData\r\n      //存储商品总金额过去\r\n      localStorage.setItem(\"allShopPrice\",content)\r\n      localStorage.setItem(\"localTableData\",JSON.stringify(this.bottomTableData));\r\n      localStorage.removeItem('type')\r\n      this.$router.go(-1)\r\n    },\r\n    //点击取消返回上级页面\r\n    cancleBtnClcikEventToBackPrePage(){\r\n      this.$router.go(-1)\r\n    },\r\n    //取消按钮的点击事件\r\n    cancleBtnClcikEvent() {\r\n      this.showZoomTable = false;\r\n      this.isShowBottomTableModel=false\r\n      //显示继续选择按钮\r\n      this.showContineBtn = true;\r\n    },\r\n    //继续选择\r\n    continueBtnClickEvent() {\r\n      this.showZoomTable = false;\r\n      //显示继续选择按钮\r\n      this.showContineBtn = true;\r\n\r\n      for (var i = 0; i < this.productGoodsData.length; i++) {\r\n        var goodsDataId = this.productGoodsData[i].id;\r\n        for (var j = 0; j < this.bottomTableData.length; j++) {\r\n          if (this.bottomTableData[j].id === goodsDataId) {\r\n            //说明已经存在该Id\r\n            this.bottomTableData[j].num = this.productGoodsData[i].num;\r\n            if (i == this.productGoodsData.length - 1) {\r\n              return;\r\n            } else {\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      //确认选择加入购物车\r\n      this.bottomTableData = this.bottomTableData.concat(this.productGoodsData);\r\n      //去除重复的对象\r\n      this.bottomTableData = this.deteleBottonTableDataObject(this.bottomTableData);\r\n      //计算已添加的数量\r\n      this.allTotal = 0;\r\n      this.bottomTableData.forEach(item => {\r\n        this.allTotal += item.num;\r\n      });\r\n      //将数据存储本地\r\n      // localStorage.setItem(\"localTableData\",JSON.stringify(this.bottomTableData));\r\n    },\r\n    //去除对象中的重复对象\r\n    deteleBottonTableDataObject(arr) {\r\n      var hash = {};\r\n      const newArr = arr.reduce((item, next) => {\r\n        hash[next.id] ? \"\" : (hash[next.id] = true && item.push(next));\r\n        return item;\r\n      }, []);\r\n      return newArr;\r\n    },\r\n    shopNumberChange(val) {\r\n\r\n    },\r\n    //监听滚动事件,懒加载\r\n    shopContentScroll(e) {\r\n      this.$nextTick(() => {\r\n        const el = this.$refs.shopContent;\r\n        const offsetHeight = el.offsetHeight;\r\n        const scrollTop = el.scrollTop;\r\n        const scrollHeight = el.scrollHeight;\r\n        let allPage = Math.ceil(\r\n          this.allProductCount / this.formInline.pageSize\r\n        );\r\n        if (offsetHeight + scrollTop - scrollHeight >= -1) {\r\n          //判断当前页是否小于总页数\r\n          if (this.formInline.pageIndex <= allPage) {\r\n            this.formInline.pageIndex++;\r\n            // this.getProductAvailableQuantityListData();\r\n             this.request(\r\n              this.api.product.product_listAvailableQuantityForProduct,\r\n              this.formInline\r\n            ).then(data => {\r\n              let concatData = this.productData.concat(data.data);\r\n              this.productData = concatData;\r\n            });\r\n          } else {\r\n            console.log(\"已经没有新数据了。。。。。\");\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style lang=\"less\" scoped>\r\n.base {margin-top: -70px;\r\n  width: 100%;\r\n  //计算高度\r\n  // height: calc(100% - 100px);\r\n  height: 100%;\r\n  // background-color: greenyellow;\r\n  position: relative;\r\n  box-sizing: border-box;\r\n\r\n  .organizationVal-div {\r\n    //   background-color: aqua;\r\n    position: absolute;\r\n    z-index: 0;\r\n    right: 0;\r\n    width: 40%;\r\n    white-space: nowrap;\r\n  }\r\n  .span-btn {\r\n    // background-color: red;\r\n    white-space: nowrap;\r\n    span {\r\n      display: inline-block;\r\n      width: 40px;\r\n      height: 40px;\r\n      font-size: 25px;\r\n      text-align: center;\r\n      line-height: 40px;\r\n      border: 1px solid pink;\r\n    }\r\n    span:nth-child(1) {\r\n      border-top-left-radius: 5px;\r\n      border-bottom-left-radius: 5px;\r\n    }\r\n    span:nth-child(2) {\r\n      padding: 0 20px;\r\n      border-left: none;\r\n      border-right: none;\r\n      border-radius: 0;\r\n    }\r\n    span:nth-child(3) {\r\n      border-top-right-radius: 5px;\r\n      border-bottom-right-radius: 5px;\r\n    }\r\n  }\r\n  .category-span-all {\r\n    overflow: hidden;\r\n  }\r\n  .all-brand-more {\r\n    // background-color: #ccc;\r\n    // border: 1px solid pink;\r\n    cursor: pointer;\r\n    position: relative;\r\n    height: 25px;\r\n    min-width: 81px;\r\n    top: 20px;\r\n    // left: 80%;\r\n    line-height: 25px;\r\n    padding: 2px;\r\n    padding-top: 0;\r\n    color: #ABADB6;\r\n    span {\r\n      // display: inline-block;\r\n      margin-right: 5px;\r\n    }\r\n  }\r\n  .title {\r\n    background-color: #fff;\r\n    padding: 15px 0 15px 30px;\r\n    i{font-size: 20px;margin-right: 10px;line-height: 25px;cursor: pointer;}\r\n  }\r\n  .content {\r\n    background-color: #fff;\r\n    padding: 15px 0 0 30px;\r\n    margin: 10px;\r\n    .all {\r\n      display: flex;\r\n      position: relative;\r\n    }\r\n    .shop-brand {\r\n      margin: 20px 30px 10px 0;\r\n    }\r\n    .category-more {\r\n      // background-color: #fff;\r\n      // border: 1px solid #ABADB6;\r\n      cursor: pointer;\r\n      position: relative;\r\n      min-width: 50px;\r\n      text-align: center;\r\n      height: 25px;\r\n      line-height: 25px;\r\n      position: relative;\r\n      top: 20px;\r\n      margin-right: 10px;\r\n      border-radius: 3px;\r\n      padding: 0 3px;\r\n      color: #ABADB6;\r\n    }\r\n    // .category-more-right{\r\n\r\n    // }\r\n    .all-brand {\r\n      // position: relative;\r\n      overflow: hidden;\r\n      margin: 20px 30px 10px 0;\r\n      max-width: 75%;\r\n    }\r\n    .all-brand ul li,.all-brand-p ul li {\r\n      cursor: pointer;\r\n      float: left;\r\n      margin-right: 10px;\r\n      margin-bottom: 10px;\r\n      padding: 0 6px;\r\n      border-radius: 3px;\r\n    }\r\n    // .category{\r\n    //     background-color: pink;\r\n    // }\r\n    .one_category_brand {\r\n      display: flex;\r\n      align-items: center;\r\n      flex-wrap: wrap;\r\n      .one_category_li ul {\r\n        margin-right: 10px;\r\n        li {\r\n          margin-right: 30px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .category-span {\r\n    width: 100%;\r\n    display: inline-block;\r\n    margin-top: 45px;\r\n    font-size: 18px;\r\n  }\r\n  .line {\r\n    width: 95%;\r\n    // background-color:red;\r\n    display: block;\r\n    border-bottom: 1px solid #ccc;\r\n  }\r\n  .brand-span {\r\n    display: block;\r\n    margin-top: 20px;\r\n    font-size: 18px;\r\n  }\r\n  .shop {\r\n    position: relative;\r\n    background-color: #fff;\r\n    margin: 10px;\r\n    padding: 30px;\r\n    z-index: 1;\r\n    .tip-title {\r\n      display: flex;\r\n      span:first-child {\r\n        flex: 1;\r\n      }\r\n    }\r\n    .shop-content {\r\n      // background-color: red;\r\n      position: relative;\r\n      overflow: hidden;\r\n      overflow-x: hidden;\r\n      overflow-y: scroll;\r\n      height: 400px;\r\n      margin-top: 20px;\r\n      margin-bottom: 30px;\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      // border: 1px solid rebeccapurple;\r\n      .show-specific-shop {\r\n        border: 1px solid #ececec;\r\n        padding: 10px;\r\n        width: 150px;\r\n        height: 200px;\r\n        box-sizing: border-box;\r\n        margin: 0 30px 30px 0;\r\n        position: relative;\r\n        img {\r\n          display: inline-block;\r\n          width: 100px;\r\n          height: 100px;\r\n          border: 1px solid #ccc;\r\n          padding: 5px;\r\n          box-sizing: border-box;\r\n          margin-left: 14px;\r\n          margin-bottom: 5px;\r\n        }\r\n        .shop-specific-title {\r\n          display: flex;\r\n          flex-direction: column;\r\n          // align-items: center;\r\n          span:first-child {\r\n            display: inline-block;\r\n            margin-bottom: 3px;\r\n            // text-align: center;\r\n          }\r\n        }\r\n        .add_icon {\r\n          text-align: center;\r\n          // background-color: aqua;\r\n          display: inline-block;\r\n          border: 1px solid #ABADB6;\r\n          width: 19px;\r\n          height: 19px;\r\n          line-height: 19px;\r\n          cursor: pointer;\r\n          position: absolute;\r\n          right: 5px;\r\n          bottom: 5px;\r\n          border-radius: 50%;\r\n        }\r\n        .add_icon:hover {\r\n          border: 1px solid #2290E8;\r\n          font-weight: 600;\r\n          color: #2290E8;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .bottom_view {\r\n    background-color: #fff;\r\n    position: fixed;\r\n    left: 0;\r\n    bottom: 0;\r\n    z-index: 3;\r\n    padding: 20px;\r\n    padding-left: 250px;\r\n    width: 100%;\r\n    -webkit-box-align: center;\r\n    -ms-flex-align: center;\r\n    align-items: center;\r\n    display: -webkit-box;\r\n    display: -ms-flexbox;\r\n    justify-content: flex-end;\r\n    display: flex;\r\n    border: 1px solid #ccc;\r\n    .left-bottom {\r\n      flex: 1;\r\n      // background-color: aqua;\r\n      span {\r\n        display: inline-block;\r\n      }\r\n      span:nth-child(2) {\r\n        border: 1px solid #ccc;\r\n        border-radius: 3px;\r\n        padding: 0 30px;\r\n        margin-right: 3px;\r\n      }\r\n      span:nth-child(4) {\r\n        margin-left: 25px;\r\n        color: #2290E8;\r\n      }\r\n    }\r\n  }\r\n\r\n  .transition-table {\r\n    padding-right: 250px;\r\n    position: fixed;\r\n    bottom: 0;\r\n    z-index: 2;\r\n    background-color: #fff;\r\n    width: 100%;\r\n    height: 400px;\r\n    .table-div {\r\n      padding: 0 30px;\r\n    }\r\n  }\r\n  .selcte_color {\r\n    color: #2290E8;\r\n    font-weight: 600;\r\n    // border: 1px solid orange;\r\n    padding: 3px;\r\n    border-radius: 3px;\r\n  }\r\n  .normal_color {\r\n    color: #ABADB6;\r\n    // border: 1px solid #ABADB6;\r\n    padding: 3px;\r\n    border-radius: 3px;\r\n  }\r\n  .normal_color:hover,.category-more:hover,.selcte_color:hover,.all-brand-more:hover{\r\n    color: #6DBEFF;\r\n  }\r\n}\r\n.all-brand-p{\r\n  margin: 20px 30px 10px 0;\r\n    max-width: 75%;\r\n}\r\n.item-n{\r\n  height: 25px;\r\n  overflow: hidden;\r\n}\r\n.item-b{\r\n  height: 130px;\r\n  overflow-y: scroll;\r\n  border: 1px solid #e7e7e7;\r\n}\r\n</style>\r\n\r\n\r\n"]}]}