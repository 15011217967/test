{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\store\\components\\selectDate.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\store\\components\\selectDate.vue","mtime":1572415124703},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n\r\nimport { getToken } from \"@/utils/auth\";\r\nlet token = getToken();\r\nlet timeOptionRange = null;\r\nexport default {\r\n  props: {\r\n    // 是否按照月份筛选\r\n    isMonthSelect:[Boolean],\r\n  },\r\n  data() {\r\n    return {\r\n      value:'',\r\n      minDate: '',\r\n      maxDate: '',\r\n      // this.nowNum == 1时不包含当前日期， this.nowNum == 0时包含当前日期\r\n      nowNum: 0,\r\n      pickerOptions:{\r\n        onPick: ({ maxDate, minDate }) => {\r\n          this.maxDate = maxDate;\r\n          this.minDate = minDate;\r\n        },\r\n        disabledDate: (date) => {\r\n          let maxDate = this.maxDate;\r\n          let minDate = this.minDate;\r\n\r\n          let endTime = '';\r\n          if (minDate) {\r\n            let val = Date.now() - (new Date(this.minDate).valueOf() + 31 * 24 * 60 * 60 * 1000);\r\n            if (val < 0) {\r\n              endTime = Date.now() - this.nowNum * 24 * 60 * 60 * 1000;\r\n            } else {\r\n              endTime = (new Date(this.minDate).valueOf() + 31 * 24 * 60 * 60 * 1000);\r\n            }\r\n            if (minDate && maxDate) {\r\n              return date && (date.valueOf() > endTime)\r\n            }\r\n            return date && (date.valueOf() > endTime || date.valueOf() < minDate.valueOf() - 31 * 24 * 60 * 60 * 1000)\r\n          } else {\r\n            return date && (date.valueOf() > Date.now() - this.nowNum * 24 * 60 * 60 * 1000)\r\n          }\r\n        },\r\n      },\r\n      // 选中筛选日期下标\r\n      checkDate_index:0,\r\n      // 选中筛选图表下标\r\n      checkChart_index:0,\r\n      // 筛选日期列表\r\n      filtersDate_list:[\r\n        {\r\n          name:'今日',\r\n          type:'1'\r\n        },{\r\n          name:'近7日',\r\n          type:'7'\r\n        },{\r\n          name:'近30日',\r\n          type:'30'\r\n        },{\r\n          name:'本月',\r\n          type:'current'\r\n        }],\r\n      // 筛选日期列表\r\n      filtersDates_list:[\r\n        {\r\n          name:'本月',\r\n          type:'current'\r\n        },{\r\n          name:'上月',\r\n          type:'s'\r\n        },{\r\n          name:'上上月',\r\n          type:'ss'\r\n        }\r\n      ],\r\n      // 筛选图表列表\r\n      filtersChart_list:[\r\n        {\r\n          name:'趋势图',\r\n          type:0\r\n        },{\r\n          name:'汇总图',\r\n          type:1\r\n        }\r\n      ]\r\n    };\r\n  },\r\n  created() {\r\n    // 按月筛选从本月开始，具体期限从近30天开始\r\n    var type = this.isMonthSelect ? 'current' : '1';\r\n    this.$emit('changeDate',this.initDate(type));\r\n  },\r\n  mounted(){\r\n\r\n  },\r\n  watch: {\r\n\r\n  },\r\n  methods: {\r\n    /**\r\n     * 日期筛选时\r\n     */\r\n    selectDate(dateArr) {\r\n      if(!dateArr){\r\n        this.minDate = '';\r\n        this.maxDate = '';\r\n        return;\r\n      }\r\n      // 重置日期选择下标\r\n      if(dateArr instanceof Array) {\r\n        this.checkDate_index = null;\r\n        // this.$emit('clickDate',dateArr);\r\n        this.$emit('changeDate',dateArr);\r\n      }else{\r\n        var oDate = new Date(dateArr);\r\n        var resultDate = new Date(oDate.setMonth(oDate.getMonth() + 1,0));\r\n        this.checkDate_index = null;\r\n        // this.$emit('clickDate',[dateArr,resultDate]);\r\n        this.$emit('changeDate',[dateArr,resultDate]);\r\n      };\r\n    },\r\n    /**\r\n     * 获取焦点\r\n     */\r\n    selectDateFocus() {\r\n      this.minDate = '';\r\n      this.maxDate = '';\r\n    },\r\n     /**\r\n     * 选择筛选日期\r\n     */\r\n    handleFiltersDate(index, type) {\r\n        this.checkDate_index = index;\r\n\r\n        // this.$emit('clickDate',this.initDate(type));\r\n        this.$emit('changeDate',this.initDate(type));\r\n        this.value = '';\r\n    },\r\n    /**\r\n     * 选择筛选图表\r\n     */\r\n    handleFiltersChart(index, type) {\r\n        this.checkChart_index = index;\r\n        this.$emit('selectChart', type);\r\n    },\r\n    /**\r\n     * 格式化日期\r\n     * @param { String } type 日期类型\r\n     */\r\n    initDate(type) {\r\n      // 获取日期对象\r\n      var oDate = new Date();\r\n      // 将时间设置为00点00分00秒\r\n      var currentDate = new Date(oDate.toLocaleDateString());\r\n      // 集合\r\n      var dateArr = [];\r\n\r\n      switch(type) {\r\n        // 今日\r\n        case '1':\r\n          dateArr = [currentDate, currentDate];\r\n        break;\r\n        // 近7日\r\n        case '7':\r\n          var oDate = new Date();\r\n          // 获取7天前日期 如：13\r\n          var date = oDate.getDate()-6;\r\n          // 获取7天前GMT格式日期\r\n          var disDate = new Date(oDate.setDate(date));\r\n          // 将时间设置为00点00分00秒\r\n          var resultDate = new Date(disDate.toLocaleDateString());\r\n\r\n          dateArr = [resultDate, currentDate];\r\n        break;\r\n        // 近30日\r\n        case '30':\r\n          var oDate = new Date();\r\n          // 获取30天前日期 如：30\r\n          var date = oDate.getDate()-29;\r\n          // 获取30天前GMT格式日期\r\n          var disDate = new Date(oDate.setDate(date));\r\n          // 将时间设置为00点00分00秒\r\n          var resultDate = new Date(disDate.toLocaleDateString());\r\n\r\n          dateArr = [resultDate, currentDate];\r\n        break;\r\n        // 本月\r\n        case 'current':\r\n          var oDate = new Date();\r\n          // 获取本月1号GMT格式日期\r\n          var disDate = new Date(oDate.setDate(1));\r\n          // 将时间设置为00点00分00秒\r\n          var resultDate = new Date(disDate.toLocaleDateString());\r\n\r\n          dateArr = [resultDate, currentDate];\r\n        break;\r\n        // 上月\r\n        case 's':\r\n          var oDate = new Date();\r\n          // 获取上个月月份\r\n          var getMonth = oDate.getMonth()-1;\r\n          // 将日期设置为1号\r\n          oDate.setMonth(getMonth, 1);\r\n          // 获取上个月1号日期\r\n          var startDate = new Date(oDate.toLocaleDateString());\r\n          // 重置日期对象\r\n          var oDate = new Date();\r\n          // 获取上个月最后一天\r\n          var getDate = new Date(oDate.setDate(0)).getDate();\r\n          // 将日期设置为最后一天\r\n          oDate.setMonth(getMonth, getDate);\r\n          // 获取上个月最后一天日期\r\n          var endDate = new Date(oDate.toLocaleDateString());\r\n\r\n          dateArr = [startDate, endDate];\r\n        break;\r\n        // 上上月\r\n        case 'ss':\r\n          var oDate = new Date();\r\n          // 获取上个月月份\r\n          var getMon = oDate.getMonth()-1;\r\n          // 获取上上个月月份\r\n          var getMonth = oDate.getMonth()-2;\r\n          // 将日期设置为1号\r\n          oDate.setMonth(getMonth, 1);\r\n          // 获取上上个月1号日期\r\n          var startDate = new Date(oDate.toLocaleDateString());\r\n          // 重置日期对象\r\n          var oDate = new Date();\r\n          // 获取上上个月最后一天\r\n          var getDate = new Date(oDate.setMonth(getMon, 0)).getDate();\r\n          // 将日期设置为最后一天\r\n          oDate.setMonth(getMonth, getDate);\r\n          // 获取上个月最后一天日期\r\n          var endDate = new Date(oDate.toLocaleDateString());\r\n\r\n          dateArr = [startDate, endDate];\r\n        break;\r\n      };\r\n      return dateArr;\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["selectDate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"selectDate.vue","sourceRoot":"src/views/store/components","sourcesContent":["<template>\r\n  <div class=\"chart-filters\">\r\n    <!-- 时间筛选 -->\r\n    <div>\r\n      <span\r\n        :class=\"{'filters-check':checkDate_index == index}\"\r\n        :key=\"index\"\r\n        v-for=\"(item, index) in isMonthSelect ? filtersDates_list : filtersDate_list\"\r\n        @click=\"handleFiltersDate(index, item.type)\"\r\n        >{{ item.name }}\r\n      </span>\r\n      <span>\r\n        <!-- 按日筛选 -->\r\n        <template v-if=\"!isMonthSelect\">\r\n            <div class=\"block\">\r\n              <span class=\"demonstration\">时间筛选：</span>\r\n              <el-date-picker\r\n                  size=\"mini\"\r\n                  v-model=\"value\"\r\n                  @change=\"selectDate\"\r\n                  @focus=\"selectDateFocus\"\r\n                  type=\"daterange\"\r\n                  range-separator=\"至\"\r\n                  value-format=\"\"\r\n                  start-placeholder=\"开始日期\"\r\n                  :picker-options=\"pickerOptions\"\r\n                  end-placeholder=\"结束日期\">\r\n              </el-date-picker>\r\n            </div>\r\n        </template>\r\n        <!-- 按月筛选 -->\r\n        <template v-else>\r\n          <div class=\"block\">\r\n            <span class=\"demonstration\">时间筛选：</span>\r\n            <el-date-picker\r\n              v-model=\"value\"\r\n              size=\"mini\"\r\n              @change=\"selectDate\"\r\n              type=\"month\"\r\n              placeholder=\"选择月\">\r\n            </el-date-picker>\r\n          </div>\r\n        </template>\r\n      </span>\r\n    </div>\r\n    <!-- 图表筛选 -->\r\n    <div class=\"chart-classify\">\r\n        <span\r\n          :class=\"{'chart-classify-check':checkChart_index == index}\"\r\n          :key=\"index\"\r\n          v-for=\"(item, index) in filtersChart_list\"\r\n          @click=\"handleFiltersChart(index, item.type)\"\r\n        >{{ item.name }}</span>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n\r\nimport { getToken } from \"@/utils/auth\";\r\nlet token = getToken();\r\nlet timeOptionRange = null;\r\nexport default {\r\n  props: {\r\n    // 是否按照月份筛选\r\n    isMonthSelect:[Boolean],\r\n  },\r\n  data() {\r\n    return {\r\n      value:'',\r\n      minDate: '',\r\n      maxDate: '',\r\n      // this.nowNum == 1时不包含当前日期， this.nowNum == 0时包含当前日期\r\n      nowNum: 0,\r\n      pickerOptions:{\r\n        onPick: ({ maxDate, minDate }) => {\r\n          this.maxDate = maxDate;\r\n          this.minDate = minDate;\r\n        },\r\n        disabledDate: (date) => {\r\n          let maxDate = this.maxDate;\r\n          let minDate = this.minDate;\r\n\r\n          let endTime = '';\r\n          if (minDate) {\r\n            let val = Date.now() - (new Date(this.minDate).valueOf() + 31 * 24 * 60 * 60 * 1000);\r\n            if (val < 0) {\r\n              endTime = Date.now() - this.nowNum * 24 * 60 * 60 * 1000;\r\n            } else {\r\n              endTime = (new Date(this.minDate).valueOf() + 31 * 24 * 60 * 60 * 1000);\r\n            }\r\n            if (minDate && maxDate) {\r\n              return date && (date.valueOf() > endTime)\r\n            }\r\n            return date && (date.valueOf() > endTime || date.valueOf() < minDate.valueOf() - 31 * 24 * 60 * 60 * 1000)\r\n          } else {\r\n            return date && (date.valueOf() > Date.now() - this.nowNum * 24 * 60 * 60 * 1000)\r\n          }\r\n        },\r\n      },\r\n      // 选中筛选日期下标\r\n      checkDate_index:0,\r\n      // 选中筛选图表下标\r\n      checkChart_index:0,\r\n      // 筛选日期列表\r\n      filtersDate_list:[\r\n        {\r\n          name:'今日',\r\n          type:'1'\r\n        },{\r\n          name:'近7日',\r\n          type:'7'\r\n        },{\r\n          name:'近30日',\r\n          type:'30'\r\n        },{\r\n          name:'本月',\r\n          type:'current'\r\n        }],\r\n      // 筛选日期列表\r\n      filtersDates_list:[\r\n        {\r\n          name:'本月',\r\n          type:'current'\r\n        },{\r\n          name:'上月',\r\n          type:'s'\r\n        },{\r\n          name:'上上月',\r\n          type:'ss'\r\n        }\r\n      ],\r\n      // 筛选图表列表\r\n      filtersChart_list:[\r\n        {\r\n          name:'趋势图',\r\n          type:0\r\n        },{\r\n          name:'汇总图',\r\n          type:1\r\n        }\r\n      ]\r\n    };\r\n  },\r\n  created() {\r\n    // 按月筛选从本月开始，具体期限从近30天开始\r\n    var type = this.isMonthSelect ? 'current' : '1';\r\n    this.$emit('changeDate',this.initDate(type));\r\n  },\r\n  mounted(){\r\n\r\n  },\r\n  watch: {\r\n\r\n  },\r\n  methods: {\r\n    /**\r\n     * 日期筛选时\r\n     */\r\n    selectDate(dateArr) {\r\n      if(!dateArr){\r\n        this.minDate = '';\r\n        this.maxDate = '';\r\n        return;\r\n      }\r\n      // 重置日期选择下标\r\n      if(dateArr instanceof Array) {\r\n        this.checkDate_index = null;\r\n        // this.$emit('clickDate',dateArr);\r\n        this.$emit('changeDate',dateArr);\r\n      }else{\r\n        var oDate = new Date(dateArr);\r\n        var resultDate = new Date(oDate.setMonth(oDate.getMonth() + 1,0));\r\n        this.checkDate_index = null;\r\n        // this.$emit('clickDate',[dateArr,resultDate]);\r\n        this.$emit('changeDate',[dateArr,resultDate]);\r\n      };\r\n    },\r\n    /**\r\n     * 获取焦点\r\n     */\r\n    selectDateFocus() {\r\n      this.minDate = '';\r\n      this.maxDate = '';\r\n    },\r\n     /**\r\n     * 选择筛选日期\r\n     */\r\n    handleFiltersDate(index, type) {\r\n        this.checkDate_index = index;\r\n\r\n        // this.$emit('clickDate',this.initDate(type));\r\n        this.$emit('changeDate',this.initDate(type));\r\n        this.value = '';\r\n    },\r\n    /**\r\n     * 选择筛选图表\r\n     */\r\n    handleFiltersChart(index, type) {\r\n        this.checkChart_index = index;\r\n        this.$emit('selectChart', type);\r\n    },\r\n    /**\r\n     * 格式化日期\r\n     * @param { String } type 日期类型\r\n     */\r\n    initDate(type) {\r\n      // 获取日期对象\r\n      var oDate = new Date();\r\n      // 将时间设置为00点00分00秒\r\n      var currentDate = new Date(oDate.toLocaleDateString());\r\n      // 集合\r\n      var dateArr = [];\r\n\r\n      switch(type) {\r\n        // 今日\r\n        case '1':\r\n          dateArr = [currentDate, currentDate];\r\n        break;\r\n        // 近7日\r\n        case '7':\r\n          var oDate = new Date();\r\n          // 获取7天前日期 如：13\r\n          var date = oDate.getDate()-6;\r\n          // 获取7天前GMT格式日期\r\n          var disDate = new Date(oDate.setDate(date));\r\n          // 将时间设置为00点00分00秒\r\n          var resultDate = new Date(disDate.toLocaleDateString());\r\n\r\n          dateArr = [resultDate, currentDate];\r\n        break;\r\n        // 近30日\r\n        case '30':\r\n          var oDate = new Date();\r\n          // 获取30天前日期 如：30\r\n          var date = oDate.getDate()-29;\r\n          // 获取30天前GMT格式日期\r\n          var disDate = new Date(oDate.setDate(date));\r\n          // 将时间设置为00点00分00秒\r\n          var resultDate = new Date(disDate.toLocaleDateString());\r\n\r\n          dateArr = [resultDate, currentDate];\r\n        break;\r\n        // 本月\r\n        case 'current':\r\n          var oDate = new Date();\r\n          // 获取本月1号GMT格式日期\r\n          var disDate = new Date(oDate.setDate(1));\r\n          // 将时间设置为00点00分00秒\r\n          var resultDate = new Date(disDate.toLocaleDateString());\r\n\r\n          dateArr = [resultDate, currentDate];\r\n        break;\r\n        // 上月\r\n        case 's':\r\n          var oDate = new Date();\r\n          // 获取上个月月份\r\n          var getMonth = oDate.getMonth()-1;\r\n          // 将日期设置为1号\r\n          oDate.setMonth(getMonth, 1);\r\n          // 获取上个月1号日期\r\n          var startDate = new Date(oDate.toLocaleDateString());\r\n          // 重置日期对象\r\n          var oDate = new Date();\r\n          // 获取上个月最后一天\r\n          var getDate = new Date(oDate.setDate(0)).getDate();\r\n          // 将日期设置为最后一天\r\n          oDate.setMonth(getMonth, getDate);\r\n          // 获取上个月最后一天日期\r\n          var endDate = new Date(oDate.toLocaleDateString());\r\n\r\n          dateArr = [startDate, endDate];\r\n        break;\r\n        // 上上月\r\n        case 'ss':\r\n          var oDate = new Date();\r\n          // 获取上个月月份\r\n          var getMon = oDate.getMonth()-1;\r\n          // 获取上上个月月份\r\n          var getMonth = oDate.getMonth()-2;\r\n          // 将日期设置为1号\r\n          oDate.setMonth(getMonth, 1);\r\n          // 获取上上个月1号日期\r\n          var startDate = new Date(oDate.toLocaleDateString());\r\n          // 重置日期对象\r\n          var oDate = new Date();\r\n          // 获取上上个月最后一天\r\n          var getDate = new Date(oDate.setMonth(getMon, 0)).getDate();\r\n          // 将日期设置为最后一天\r\n          oDate.setMonth(getMonth, getDate);\r\n          // 获取上个月最后一天日期\r\n          var endDate = new Date(oDate.toLocaleDateString());\r\n\r\n          dateArr = [startDate, endDate];\r\n        break;\r\n      };\r\n      return dateArr;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n // 图表筛选条件\r\n  .chart-filters{\r\n    display: flex;\r\n    justify-content: space-between;\r\n    cursor: pointer;\r\n  }\r\n  .chart-classify span{\r\n    padding: 5px 10px;\r\n    margin:0 10px;\r\n    font-weight: bold;\r\n    font-size: 15px;\r\n  }\r\n  .chart-classify .chart-classify-check{\r\n    color: #409EFF;\r\n  }\r\n  span{\r\n    padding: 5px 10px;\r\n    margin:0 10px;\r\n    display: inline-block;\r\n    text-align: center;\r\n  }\r\n  .filters-check{\r\n    background: #f1f1f1;\r\n    color: #409EFF;\r\n    border-radius: 5px;\r\n    font-weight: 400;\r\n  }\r\n</style>\r\n\r\n"]}]}