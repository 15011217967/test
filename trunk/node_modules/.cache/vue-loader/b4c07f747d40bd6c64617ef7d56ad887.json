{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\scb\\channel\\noSettlementGoods_order.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\scb\\channel\\noSettlementGoods_order.vue","mtime":1577762419775},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport axios from 'axios'\r\nimport {getToken} from '@/utils/auth'\r\nimport codeSet from '@/components/codeSet'\r\nimport treeDept from '@/components/treeDept'\r\nimport { filter } from 'minimatch';\r\nimport { get } from 'http';\r\n\r\nlet token=getToken()\r\n\r\nexport default {\r\n   name:'storeSell_order_list',\r\n   data() {\r\n      return{\r\n         storeList:{\r\n            0:'零时尚'\r\n         },\r\n         // 全部品牌\r\n         brandOptions:[],\r\n         // 订单状态\r\n         orderStatus:{\r\n            101:'未付款',\r\n            102:'已付款',\r\n            103:'已关闭'\r\n         },\r\n         // 订单商品类型\r\n         OrderProductType:{\r\n            0:'服装商品',\r\n            1:'虚拟商品'\r\n         },\r\n         returnGoodsAllOrPartList:{\r\n            0:'未退货',\r\n            1:'部分退货',\r\n            2:'全部退货'\r\n         },\r\n         // 支付方式\r\n         PaymentWayCode:{\r\n            1:'现金',\r\n            2:'微信付款',\r\n            3:'刷卡',\r\n            4:'余额支付',\r\n            5:'支付宝'\r\n         },\r\n         // 支付状态\r\n         PaymentStatus:{\r\n            201:'未支付',\r\n            202:'已支付'\r\n         },\r\n         // data数据\r\n         getList_data:{},\r\n         // 订单数据统计\r\n         storeRetailOrder_pcListStatistics_data:{},\r\n         // 选中的表格数据\r\n         checkedTableData: [],\r\n         // 获取门店信列表\r\n         getStoreList_data:[],\r\n         formInline:{\r\n            user: '',\r\n            region: ''\r\n         },\r\n        filtersData: {\r\n            \"filter\": \"\",\r\n            \"brandName\": \"\",\r\n            \"storeName\": \"\",\r\n            \"pageIndex\":1,\r\n            \"pageSize\":10,\r\n         },\r\n         // 门店列表请求参数\r\n         filtersDataStore:{\r\n            pageIndex: '',// 当前页码\r\n            pageSize: '',// 每页数量\r\n            name:'',// 门店名称\r\n            organizationId:'',// 隶属机构\r\n            businessStatus:'',// 营业状态\r\n            type:'',// 门店类型\r\n            createBegin:'',// 创建时间开始\r\n            createEnd:''// 创建时间结束\r\n         },\r\n         value: '',\r\n         storageValArr:[],\r\n         // 指派单选框\r\n         radio: '1',\r\n         // 指派\r\n         gridData: [],\r\n        dialogTableVisible: false,\r\n        dialogFormVisible: false,\r\n        form: {\r\n          name: '',\r\n          region: '',\r\n          date1: '',\r\n          date2: '',\r\n          delivery: false,\r\n          type: [],\r\n          resource: '',\r\n          desc: ''\r\n        },\r\n        formLabelWidth: '120px'\r\n      }\r\n   },\r\n   created() {\r\n      const that = this;\r\n      this.getBrandOptions(); // 获取品牌\r\n      this.getList();\r\n      this.getStoreList();\r\n\r\n   },\r\n   activated() {\r\n      this.getList();\r\n   },\r\n   methods: {\r\n      /**\r\n       * 获取品牌\r\n       */\r\n      getBrandOptions() {\r\n      this.request(\r\n         this.api.product.productBrand_list,\r\n         {},\r\n         true\r\n         ).then(data => {\r\n            let _data = data.data;\r\n            this.brandOptions = _data;\r\n      });\r\n      },\r\n      // 导出\r\n      exportExcel() {\r\n         if (this.checkedTableData.length === 0) {\r\n            this.checkedTableData = this.getList_data.dataList.data;\r\n         }\r\n         require.ensure([], () => {\r\n         let { export_json_to_excel } = require(\"@/vendor/Export2Excel\");\r\n         let tHeader = [\r\n            \"商品款号\",\r\n            \"货号\",\r\n            \"名称\",\r\n            \"商品图片\",\r\n\r\n            \"颜色\",\r\n            \"规格\",\r\n            \"品牌\",\r\n            \"吊牌价\",\r\n\r\n            \"结算平均单价\",\r\n            \"未结算数量\",\r\n            \"未结算货值\",\r\n            \"渠道客户名称\"\r\n         ];\r\n         // 上面设置Excel的表格第一行的标题\r\n         let filterVal = [\r\n            \"productCode\",\r\n            \"goodsCode\",\r\n            \"goodsName\",\r\n            \"image\",\r\n\r\n            \"color\",\r\n            \"size\",\r\n            \"brandName\",\r\n            \"priceTagCopy\",\r\n\r\n            \"priceCopy\",\r\n            \"quantity\",\r\n            \"amountCopy\",\r\n            \"storeName\"\r\n         ];\r\n         // 上面的index、nickName、name是tableData里对象的属性\r\n         let list = this.checkedTableData; //把data里的tableData存到list\r\n         let data = this.formatJson(filterVal, list);\r\n         export_json_to_excel(tHeader, data, \"未结算货品记录\");\r\n         });\r\n      },\r\n      formatJson(filterVal, jsonData) {\r\n         return jsonData.map(v => filterVal.map(j => v[j]));\r\n      },\r\n      tableCheckChange(val){\r\n         this.checkedTableData = val;\r\n      },\r\n      /**\r\n       *\r\n       */\r\n      fnDialogTableVisible() {\r\n         console.log(this.ls)\r\n         this.workOrderPoolAssign();\r\n         this.dialogTableVisible = false;\r\n      },\r\n      /**\r\n       * 查看\r\n       */\r\n      timeRedact(id, storeId) {\r\n         this.href('/order/storeSell_order_detail',{\r\n            id,\r\n            storeId\r\n         })\r\n      },\r\n      // 点击页数\r\n      handleCurrentChange(pageIndex){\r\n         this.filtersData.pageIndex = pageIndex;\r\n         this.getList();\r\n      },\r\n      // 点击每页多少条数\r\n      handleSizeChange(pageSize){\r\n         this.filtersData.pageSize = pageSize;\r\n         this.getList();\r\n      },\r\n      /**\r\n       * 查询门店销售订单列表\r\n       */\r\n      getList() {\r\n         const that = this;\r\n\r\n         this.request(\r\n         that.api.scb.movingAveragePrice_datalist,\r\n         this.filtersData\r\n         ).then(res => {\r\n            that.getList_data = res;\r\n         });\r\n      },\r\n       /**\r\n       * 查询门店销售订单列表\r\n       */\r\n      storeRetailOrder_pcListStatistics() {\r\n         const that = this;\r\n\r\n         this.request(\r\n         that.api.store.storeRetailOrder_pcListStatistics,\r\n         this.filtersData\r\n         ).then(res => {\r\n            that.storeRetailOrder_pcListStatistics_data = res;\r\n         });\r\n      },\r\n      /**\r\n       * 查询列表\r\n       */\r\n      getStoreList() {\r\n         const that = this;\r\n\r\n         this.request(\r\n         that.api.store.storeBasic_listStoreBasic,\r\n         this.filtersDataStore\r\n         ).then(res => {\r\n            that.getStoreList_data = res;\r\n         });\r\n      },\r\n      /**\r\n       * 跳转工单详情\r\n       */\r\n      href(routeName, param) {\r\n         let module = this.$route.path.split('/')[1];\r\n\r\n         this.$router.push({\r\n            path: '/' + module + routeName,\r\n            query: param\r\n         })\r\n      },\r\n      /**\r\n       * 模糊搜索\r\n       */\r\n      handleSearch() {\r\n         this.filtersData.pageIndex = 1;\r\n         this.getList();\r\n      },\r\n      /**\r\n       * 搜索重置\r\n       */\r\n      handleResetFilters() {\r\n         Object.assign(this.filtersData, {\r\n            \"filter\": \"\",\r\n            \"brandName\": \"\",\r\n            \"storeName\": \"\",\r\n            \"pageIndex\":1,\r\n            \"pageSize\":10,\r\n         });\r\n      },\r\n   },\r\n   components:{\r\n      codeSet,\r\n      treeDept\r\n   }\r\n}\r\n",{"version":3,"sources":["noSettlementGoods_order.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"noSettlementGoods_order.vue","sourceRoot":"src/views/scb/channel","sourcesContent":["<template>\r\n   <div>\r\n      <!-- 模糊搜索 -->\r\n      <div class=\"item-margin\">\r\n         <el-form\r\n            class=\"item-form\"\r\n            size=\"small\"\r\n            :inline=\"true\"\r\n            :model=\"filtersData\">\r\n            <!-- 模糊查询 -->\r\n            <el-form-item label=\"模糊查询：\">\r\n               <el-input v-model=\"filtersData.filter\" @keyup.enter.native=\"handleSearch\" style=\"width:310px;\" placeholder=\"商品款号/商品货号/商品名称/订单号\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"品牌：\">\r\n               <el-select class=\"input-w\" filterable clearable placeholder=\"请选择\" v-model=\"filtersData.brandName\">\r\n                  <el-option\r\n                     v-for=\"item in brandOptions\"\r\n                     :key=\"item.id\"\r\n                     :label=\"item.name\"\r\n                     :value=\"item.name\"\r\n                  ></el-option>\r\n               </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"渠道客户名称：\">\r\n              <el-select v-model=\"filtersData.storeName\" clearable filterable>\r\n                 <el-option v-for=\"(item, index) in getStoreList_data.data\" :label=\"item.name\" :key=\"index\" :value=\"item.name\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <!-- <el-form-item label=\"渠道客户名称：\">\r\n              <el-select v-model=\"filtersData.storeName\" clearable filterable>\r\n                 <el-option v-for=\"(item, index) in storeList\" :label=\"item\" :key=\"index\" :value=\"item\"></el-option>\r\n              </el-select>\r\n            </el-form-item> -->\r\n            <!-- 搜索，重置 -->\r\n            <el-form-item>\r\n               <el-button @click=\"handleSearch\" type=\"primary\" plain size=\"small\">搜索</el-button>\r\n               <el-button @click=\"handleResetFilters\" size=\"small\">重置</el-button>\r\n            </el-form-item>\r\n         </el-form>\r\n      </div>\r\n      <!-- 模糊搜索 -->\r\n      <!-- 列表 -->\r\n      <div class=\"box\">\r\n         <el-button size=\"small\" type=\"primary\" @click=\"exportExcel\">导出</el-button>\r\n         <el-table\r\n            :data=\"getList_data.dataList.data\"\r\n            stripe\r\n            empty-text=\"暂无数据\"\r\n            header-align=\"center\"\r\n            header-row-class-name=\"item-table-header\"\r\n            @selection-change=\"tableCheckChange\"\r\n            :highlight-current-row=\"true\">\r\n            <el-table-column type=\"selection\" width=\"45\"></el-table-column>\r\n            <el-table-column align=\"left\" :show-overflow-tooltip=\"true\" label=\"商品款号\" min-width=\"60\">\r\n               <template  slot-scope=\"scope\">{{ scope.row.productCode }}</template>\r\n            </el-table-column>\r\n            <el-table-column align=\"left\" :show-overflow-tooltip=\"true\" label=\"货号\" min-width=\"60\">\r\n               <template  slot-scope=\"scope\">{{ scope.row.goodsCode }}</template>\r\n            </el-table-column>\r\n            <el-table-column :show-overflow-tooltip=\"true\" align=\"left\" label=\"名称\" min-width=\"60\">\r\n               <template  slot-scope=\"scope\">{{ scope.row.goodsName }}</template>\r\n            </el-table-column>\r\n            <el-table-column align=\"left\" :show-overflow-tooltip=\"true\" label=\"商品图片\" min-width=\"60\">\r\n               <template  slot-scope=\"scope\">\r\n                  <img class=\"tableImage\" :src=\"scope.row.image\" alt=\"\">\r\n               </template>\r\n            </el-table-column>\r\n            <el-table-column align=\"left\" :show-overflow-tooltip=\"true\" label=\"颜色\" min-width=\"60\">\r\n               <template  slot-scope=\"scope\">{{ scope.row.color }}</template>\r\n            </el-table-column>\r\n            <el-table-column align=\"left\" :show-overflow-tooltip=\"true\" label=\"规格\" min-width=\"60\">\r\n               <template  slot-scope=\"scope\">{{ scope.row.size }}</template>\r\n            </el-table-column>\r\n            <el-table-column align=\"left\" :show-overflow-tooltip=\"true\" label=\"品牌\" min-width=\"60\">\r\n               <template  slot-scope=\"scope\">{{ scope.row.brandName }}</template>\r\n            </el-table-column>\r\n            <el-table-column align=\"left\" :show-overflow-tooltip=\"true\" label=\"吊牌价\" min-width=\"60\">\r\n               <template  slot-scope=\"scope\">{{ scope.row.priceTagCopy }}</template>\r\n            </el-table-column>\r\n            <el-table-column align=\"left\" :show-overflow-tooltip=\"true\" label=\"结算平均单价\" min-width=\"60\">\r\n               <template  slot-scope=\"scope\">{{ scope.row.priceCopy }}</template>\r\n            </el-table-column>\r\n            <el-table-column align=\"left\" :show-overflow-tooltip=\"true\" label=\"未结算数量\" min-width=\"60\">\r\n               <template  slot-scope=\"scope\">{{ scope.row.quantity }}</template>\r\n            </el-table-column>\r\n            <!-- 新增 -->\r\n            <el-table-column align=\"left\" :show-overflow-tooltip=\"true\" label=\"未结算货值\" min-width=\"60\">\r\n               <template  slot-scope=\"scope\">{{ scope.row.amountCopy }}</template>\r\n            </el-table-column>\r\n            <!-- 新增 -->\r\n            <el-table-column align=\"left\" :show-overflow-tooltip=\"true\" label=\"渠道客户名称\" min-width=\"60\">\r\n               <template  slot-scope=\"scope\">{{ scope.row.storeName }}</template>\r\n            </el-table-column>\r\n         </el-table>\r\n         <div class=\"pagination\" :class=\"{ 'justify-content': getList_data.dataList.data && getList_data.dataList.data.length > 0 }\">\r\n            <div v-if=\"getList_data.dataList.data && getList_data.dataList.data.length > 0\">\r\n               累计未结算数：<span>{{ getList_data.info.totalStatistics }}</span>\r\n               累计未结算货值：<span>{{ getList_data.info.valueStatistics }}</span>\r\n            </div>\r\n            <!-- 分页 -->\r\n            <el-pagination\r\n               class=\"\"\r\n               @size-change=\"handleSizeChange\"\r\n               @current-change=\"handleCurrentChange\"\r\n               :current-page=\"filtersData.pageIndex\"\r\n               :page-sizes=\"[10,20,30,40,50]\"\r\n               :page-size=\"filtersData.pageSize\"\r\n               layout=\"total, sizes, prev, pager, next, jumper\"\r\n               :total=\"getList_data.dataList.totalCount\"\r\n            ></el-pagination>\r\n         </div>\r\n      </div>\r\n      <!-- 列表 -->\r\n   </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios'\r\nimport {getToken} from '@/utils/auth'\r\nimport codeSet from '@/components/codeSet'\r\nimport treeDept from '@/components/treeDept'\r\nimport { filter } from 'minimatch';\r\nimport { get } from 'http';\r\n\r\nlet token=getToken()\r\n\r\nexport default {\r\n   name:'storeSell_order_list',\r\n   data() {\r\n      return{\r\n         storeList:{\r\n            0:'零时尚'\r\n         },\r\n         // 全部品牌\r\n         brandOptions:[],\r\n         // 订单状态\r\n         orderStatus:{\r\n            101:'未付款',\r\n            102:'已付款',\r\n            103:'已关闭'\r\n         },\r\n         // 订单商品类型\r\n         OrderProductType:{\r\n            0:'服装商品',\r\n            1:'虚拟商品'\r\n         },\r\n         returnGoodsAllOrPartList:{\r\n            0:'未退货',\r\n            1:'部分退货',\r\n            2:'全部退货'\r\n         },\r\n         // 支付方式\r\n         PaymentWayCode:{\r\n            1:'现金',\r\n            2:'微信付款',\r\n            3:'刷卡',\r\n            4:'余额支付',\r\n            5:'支付宝'\r\n         },\r\n         // 支付状态\r\n         PaymentStatus:{\r\n            201:'未支付',\r\n            202:'已支付'\r\n         },\r\n         // data数据\r\n         getList_data:{},\r\n         // 订单数据统计\r\n         storeRetailOrder_pcListStatistics_data:{},\r\n         // 选中的表格数据\r\n         checkedTableData: [],\r\n         // 获取门店信列表\r\n         getStoreList_data:[],\r\n         formInline:{\r\n            user: '',\r\n            region: ''\r\n         },\r\n        filtersData: {\r\n            \"filter\": \"\",\r\n            \"brandName\": \"\",\r\n            \"storeName\": \"\",\r\n            \"pageIndex\":1,\r\n            \"pageSize\":10,\r\n         },\r\n         // 门店列表请求参数\r\n         filtersDataStore:{\r\n            pageIndex: '',// 当前页码\r\n            pageSize: '',// 每页数量\r\n            name:'',// 门店名称\r\n            organizationId:'',// 隶属机构\r\n            businessStatus:'',// 营业状态\r\n            type:'',// 门店类型\r\n            createBegin:'',// 创建时间开始\r\n            createEnd:''// 创建时间结束\r\n         },\r\n         value: '',\r\n         storageValArr:[],\r\n         // 指派单选框\r\n         radio: '1',\r\n         // 指派\r\n         gridData: [],\r\n        dialogTableVisible: false,\r\n        dialogFormVisible: false,\r\n        form: {\r\n          name: '',\r\n          region: '',\r\n          date1: '',\r\n          date2: '',\r\n          delivery: false,\r\n          type: [],\r\n          resource: '',\r\n          desc: ''\r\n        },\r\n        formLabelWidth: '120px'\r\n      }\r\n   },\r\n   created() {\r\n      const that = this;\r\n      this.getBrandOptions(); // 获取品牌\r\n      this.getList();\r\n      this.getStoreList();\r\n\r\n   },\r\n   activated() {\r\n      this.getList();\r\n   },\r\n   methods: {\r\n      /**\r\n       * 获取品牌\r\n       */\r\n      getBrandOptions() {\r\n      this.request(\r\n         this.api.product.productBrand_list,\r\n         {},\r\n         true\r\n         ).then(data => {\r\n            let _data = data.data;\r\n            this.brandOptions = _data;\r\n      });\r\n      },\r\n      // 导出\r\n      exportExcel() {\r\n         if (this.checkedTableData.length === 0) {\r\n            this.checkedTableData = this.getList_data.dataList.data;\r\n         }\r\n         require.ensure([], () => {\r\n         let { export_json_to_excel } = require(\"@/vendor/Export2Excel\");\r\n         let tHeader = [\r\n            \"商品款号\",\r\n            \"货号\",\r\n            \"名称\",\r\n            \"商品图片\",\r\n\r\n            \"颜色\",\r\n            \"规格\",\r\n            \"品牌\",\r\n            \"吊牌价\",\r\n\r\n            \"结算平均单价\",\r\n            \"未结算数量\",\r\n            \"未结算货值\",\r\n            \"渠道客户名称\"\r\n         ];\r\n         // 上面设置Excel的表格第一行的标题\r\n         let filterVal = [\r\n            \"productCode\",\r\n            \"goodsCode\",\r\n            \"goodsName\",\r\n            \"image\",\r\n\r\n            \"color\",\r\n            \"size\",\r\n            \"brandName\",\r\n            \"priceTagCopy\",\r\n\r\n            \"priceCopy\",\r\n            \"quantity\",\r\n            \"amountCopy\",\r\n            \"storeName\"\r\n         ];\r\n         // 上面的index、nickName、name是tableData里对象的属性\r\n         let list = this.checkedTableData; //把data里的tableData存到list\r\n         let data = this.formatJson(filterVal, list);\r\n         export_json_to_excel(tHeader, data, \"未结算货品记录\");\r\n         });\r\n      },\r\n      formatJson(filterVal, jsonData) {\r\n         return jsonData.map(v => filterVal.map(j => v[j]));\r\n      },\r\n      tableCheckChange(val){\r\n         this.checkedTableData = val;\r\n      },\r\n      /**\r\n       *\r\n       */\r\n      fnDialogTableVisible() {\r\n         console.log(this.ls)\r\n         this.workOrderPoolAssign();\r\n         this.dialogTableVisible = false;\r\n      },\r\n      /**\r\n       * 查看\r\n       */\r\n      timeRedact(id, storeId) {\r\n         this.href('/order/storeSell_order_detail',{\r\n            id,\r\n            storeId\r\n         })\r\n      },\r\n      // 点击页数\r\n      handleCurrentChange(pageIndex){\r\n         this.filtersData.pageIndex = pageIndex;\r\n         this.getList();\r\n      },\r\n      // 点击每页多少条数\r\n      handleSizeChange(pageSize){\r\n         this.filtersData.pageSize = pageSize;\r\n         this.getList();\r\n      },\r\n      /**\r\n       * 查询门店销售订单列表\r\n       */\r\n      getList() {\r\n         const that = this;\r\n\r\n         this.request(\r\n         that.api.scb.movingAveragePrice_datalist,\r\n         this.filtersData\r\n         ).then(res => {\r\n            that.getList_data = res;\r\n         });\r\n      },\r\n       /**\r\n       * 查询门店销售订单列表\r\n       */\r\n      storeRetailOrder_pcListStatistics() {\r\n         const that = this;\r\n\r\n         this.request(\r\n         that.api.store.storeRetailOrder_pcListStatistics,\r\n         this.filtersData\r\n         ).then(res => {\r\n            that.storeRetailOrder_pcListStatistics_data = res;\r\n         });\r\n      },\r\n      /**\r\n       * 查询列表\r\n       */\r\n      getStoreList() {\r\n         const that = this;\r\n\r\n         this.request(\r\n         that.api.store.storeBasic_listStoreBasic,\r\n         this.filtersDataStore\r\n         ).then(res => {\r\n            that.getStoreList_data = res;\r\n         });\r\n      },\r\n      /**\r\n       * 跳转工单详情\r\n       */\r\n      href(routeName, param) {\r\n         let module = this.$route.path.split('/')[1];\r\n\r\n         this.$router.push({\r\n            path: '/' + module + routeName,\r\n            query: param\r\n         })\r\n      },\r\n      /**\r\n       * 模糊搜索\r\n       */\r\n      handleSearch() {\r\n         this.filtersData.pageIndex = 1;\r\n         this.getList();\r\n      },\r\n      /**\r\n       * 搜索重置\r\n       */\r\n      handleResetFilters() {\r\n         Object.assign(this.filtersData, {\r\n            \"filter\": \"\",\r\n            \"brandName\": \"\",\r\n            \"storeName\": \"\",\r\n            \"pageIndex\":1,\r\n            \"pageSize\":10,\r\n         });\r\n      },\r\n   },\r\n   components:{\r\n      codeSet,\r\n      treeDept\r\n   }\r\n}\r\n</script>\r\n<style  lang=\"less\" scoped>\r\n   .tableImage{\r\n      width: 45px;\r\n      height: 45px;\r\n   }\r\n   .justify-content{\r\n      justify-content: space-between;\r\n      display: flex;\r\n      align-items: center;\r\n      margin-top: 20px;\r\n      span{\r\n         margin-right: 15px;\r\n      }\r\n   }\r\n   .box{\r\n      padding: 20px;\r\n      margin: 8px;\r\n      background: #fff;\r\n   }\r\n   .blueness{\r\n      color: #1E90FF;\r\n   }\r\n   .warningType{\r\n    width: 20px;\r\n    height: 20px;\r\n    line-height: 20px;\r\n    display: inline-block;\r\n    background: red;\r\n    color: #fff;\r\n    font-size: 12px;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    text-align: center;\r\n   }\r\n   .color{\r\n      background: #FF6347;\r\n   }\r\n   h5 {\r\n     color: #222;\r\n     margin-left: -15px;\r\n   }\r\n   .test {\r\n     color: #9d9d9d;\r\n   }\r\n</style>\r\n"]}]}