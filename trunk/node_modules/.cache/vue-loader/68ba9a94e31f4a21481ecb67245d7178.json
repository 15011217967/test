{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\components\\TimeIntervalCheck.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\components\\TimeIntervalCheck.vue","mtime":1574385237033},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'time-interval-check',\n  props: {\n    // label文字\n    label: {\n      default: '创建时间：'\n    },\n    // 参数对象\n    formData: {\n      default() {\n        return {}\n      }\n    },\n    // 字段映射\n    propsOptions: {\n      default() {\n        return {\n          timeBegin: 'createTimeBegin',\n          timeEnd: 'createTimeEnd',\n        }\n      }\n    }\n  },\n  // 数据\n  data() {\n    return {\n      // 时间禁选\n      pickerBeginOptions: {\n        disabledDate: (time) => {\n          let timeEnd = this.formData[this.propsOptions.timeEnd];\n          if (timeEnd) {\n            return time.getTime() > timeEnd  ||  time.getTime() > Date.now();\n          } else {\n            return time.getTime() > Date.now();\n          }\n        }\n      },\n      pickerEndOptions: {\n        disabledDate: (time) => {\n          return time.getTime() < this.formData[this.propsOptions.timeBegin] || time.getTime() > Date.now();\n        }\n      },\n    }\n  },\n  // 方法\n  methods: {\n    handleEndPicker() {\n    const endTime = this.handleEndTime(this.formData[this.propsOptions.timeEnd]);\n    this.formData[this.propsOptions.timeEnd] = endTime;\n  },\n  // 时间处理\n  // eslint-disable-next-line consistent-return\n  handleEndTime(val) {\n    if (val != null) {\n      const date = new Date(val);\n      const t = (date.getTime() / 1000 + 86399) * 1000;\n      return new Date(t);\n    }\n  }\n  },\n}\n",{"version":3,"sources":["TimeIntervalCheck.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TimeIntervalCheck.vue","sourceRoot":"src/components","sourcesContent":["<style lang=\"less\" scoped></style>\r\n<template>\r\n  <span>\r\n    <el-form-item :label=\"label\" :prop=\"propsOptions.timeBegin\">\r\n      <el-date-picker v-model=\"formData[propsOptions.timeBegin]\" type=\"date\" placeholder=\"开始日期\" :picker-options=\"pickerBeginOptions\"></el-date-picker>\r\n    </el-form-item>\r\n    <el-form-item :prop=\"propsOptions.timeEnd\">\r\n      <el-date-picker v-model=\"formData[propsOptions.timeEnd]\"  @change=\"handleEndPicker\" type=\"date\" placeholder=\"结束日期\" :picker-options=\"pickerEndOptions\"></el-date-picker>\r\n    </el-form-item>\r\n  </span>\r\n</template>\r\n<script>\r\n  export default {\r\n    name: 'time-interval-check',\r\n    props: {\r\n      // label文字\r\n      label: {\r\n        default: '创建时间：'\r\n      },\r\n      // 参数对象\r\n      formData: {\r\n        default() {\r\n          return {}\r\n        }\r\n      },\r\n      // 字段映射\r\n      propsOptions: {\r\n        default() {\r\n          return {\r\n            timeBegin: 'createTimeBegin',\r\n            timeEnd: 'createTimeEnd',\r\n          }\r\n        }\r\n      }\r\n    },\r\n    // 数据\r\n    data() {\r\n      return {\r\n        // 时间禁选\r\n        pickerBeginOptions: {\r\n          disabledDate: (time) => {\r\n            let timeEnd = this.formData[this.propsOptions.timeEnd];\r\n            if (timeEnd) {\r\n              return time.getTime() > timeEnd  ||  time.getTime() > Date.now();\r\n            } else {\r\n              return time.getTime() > Date.now();\r\n            }\r\n          }\r\n        },\r\n        pickerEndOptions: {\r\n          disabledDate: (time) => {\r\n            return time.getTime() < this.formData[this.propsOptions.timeBegin] || time.getTime() > Date.now();\r\n          }\r\n        },\r\n      }\r\n    },\r\n    // 方法\r\n    methods: {\r\n      handleEndPicker() {\r\n      const endTime = this.handleEndTime(this.formData[this.propsOptions.timeEnd]);\r\n      this.formData[this.propsOptions.timeEnd] = endTime;\r\n    },\r\n    // 时间处理\r\n    // eslint-disable-next-line consistent-return\r\n    handleEndTime(val) {\r\n      if (val != null) {\r\n        const date = new Date(val);\r\n        const t = (date.getTime() / 1000 + 86399) * 1000;\r\n        return new Date(t);\r\n      }\r\n    }\r\n    },\r\n  }\r\n</script>\r\n"]}]}