{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\OC\\user\\position_details.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\OC\\user\\position_details.vue","mtime":1572415125221},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport codeSet from \"@/components/codeSet\";\r\nexport default {\r\n  components: { codeSet },\r\n  name: \"tp-class-details\",\r\n  props: {\r\n    itemParam: {\r\n      type: Object\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      classDialogVisible: false,\r\n      filtersData: {\r\n        name: \"\", //职位名称\r\n        type: \"\",\r\n        used: false\r\n      },\r\n      CategoryOptions: [],\r\n      //验证\r\n      rules: {\r\n        name: [\r\n          { required: true, message: \"请输入职位名称\", trigger: \"blur\" },\r\n          { max: 10, message: '职位名称最多10个字符', trigger: 'change' }\r\n        ],\r\n        jobDescribe: [{ required: false,max: 20, message: \"职位描述最多20个字符\", trigger: \"change\" }],\r\n        type: [{ required: true, message: \"请选择职位类型\", trigger: \"blur\" }]\r\n      },\r\n      editDisabled: true, //可编辑状态  除使用状态其他都不可编辑\r\n      showDisabled: true //查看时 使用状态不可编辑\r\n    };\r\n  },\r\n  watch: {\r\n    // itemJsonParam(newData,oldData){\r\n    //   this.filtersData=newData;\r\n    // }\r\n  },\r\n  methods: {\r\n    getValidOptions() {\r\n      let arr = [\r\n        {\r\n          status_id: true,\r\n          status_name: \"使用中\"\r\n        },\r\n        {\r\n          status_id: false,\r\n          status_name: \"未使用\"\r\n        }\r\n      ];\r\n      return arr;\r\n    },\r\n    //初始化\r\n    positionDetailsPopupInit() {\r\n      this.filtersData = {\r\n        code: \"\",\r\n        name: \"\",\r\n        type: \"\",\r\n        used: false\r\n      };\r\n      //对象还需初始化\r\n      let itemStatus = this.itemParam.type;\r\n      switch (itemStatus.toString()) {\r\n        case \"add\": //新增\r\n          this.editDisabled = false;\r\n          this.showDisabled = false;\r\n          break;\r\n        case \"edit\": //修改\r\n          this.editDisabled = true;\r\n          this.showDisabled = false;\r\n          this.getClassData();\r\n          break;\r\n        case \"show\": //查看\r\n          this.editDisabled = true;\r\n          this.showDisabled = true;\r\n          this.getClassData();\r\n          break;\r\n      }\r\n      this.classDialogVisible = true;\r\n    },\r\n    //关闭\r\n    closeDialog(formName) {\r\n      this.classDialogVisible = false;\r\n      this.$refs[formName].resetFields(); //重置选项\r\n    },\r\n    //保存表单\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          this.request(this.api.user.position_save, this.filtersData).then(\r\n            data => {\r\n              this.closeDialog(formName);\r\n              this.$emit(\"refreshItem\", \"刷新\");\r\n            }\r\n          );\r\n        } else {\r\n          console.log(\"error submit!!\");\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    //获取列表数据\r\n    getClassData() {\r\n      this.request(this.api.user.position_get, { id: this.itemParam.id }).then(\r\n        data => {\r\n          this.filtersData = data;\r\n        }\r\n      );\r\n    },\r\n    //修改表单\r\n    editForm(formName) {\r\n      this.submitForm(formName);\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["position_details.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"position_details.vue","sourceRoot":"src/views/OC/user","sourcesContent":["<template>\r\n  <el-dialog\r\n    :title=\"itemParam.title\"\r\n    :visible.sync=\"classDialogVisible\"\r\n    class=\"alarmPopup\"\r\n    width=\"500px\"\r\n  >\r\n    <el-form\r\n      :model=\"filtersData\"\r\n      :rules=\"rules\"\r\n      label-width=\"100px\"\r\n      size=\"small\"\r\n      ref=\"filtersForm\"\r\n      inline\r\n    >\r\n      <el-form-item prop=\"name\" label=\"职位名称：\">\r\n        <el-input\r\n          placeholder=\"请输入内容\"\r\n          class=\"input-w\"\r\n          :disabled=\"showDisabled\"\r\n          v-model=\"filtersData.name\"\r\n        ></el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"jobDescribe\" label=\"职位描述：\">\r\n        <el-input\r\n          placeholder=\"请输入内容\"\r\n          class=\"input-w\"\r\n          :disabled=\"showDisabled\"\r\n          v-model=\"filtersData.jobDescribe\"\r\n        ></el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"type\" label=\"职位类型：\" :disabled=\"showDisabled\">\r\n        <code-set v-model=\"filtersData.type\" code=\"CEN004\"/>\r\n      </el-form-item>\r\n      <el-form-item prop=\"used\" align=\"center\" label=\"启停状态\" width=\"80\" :disabled=\"showDisabled\">\r\n        <el-switch v-model=\"filtersData.used\" active-color=\"#13ce66\" inactive-color=\"#9d9d9d\"></el-switch>\r\n      </el-form-item>\r\n    </el-form>\r\n    <div class=\"item-right\">\r\n      <el-button size=\"small\" @click=\"closeDialog('filtersForm')\">取消</el-button>\r\n      <el-button\r\n        v-if=\"this.itemParam.type == 'add'\"\r\n        size=\"small\"\r\n        @click=\"submitForm('filtersForm')\"\r\n        type=\"primary\"\r\n      >确定</el-button>\r\n      <el-button\r\n        v-else-if=\"this.itemParam.type == 'edit'\"\r\n        size=\"small\"\r\n        @click=\"editForm('filtersForm')\"\r\n        type=\"primary\"\r\n      >修改</el-button>\r\n    </div>\r\n  </el-dialog>\r\n</template>\r\n<script>\r\nimport codeSet from \"@/components/codeSet\";\r\nexport default {\r\n  components: { codeSet },\r\n  name: \"tp-class-details\",\r\n  props: {\r\n    itemParam: {\r\n      type: Object\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      classDialogVisible: false,\r\n      filtersData: {\r\n        name: \"\", //职位名称\r\n        type: \"\",\r\n        used: false\r\n      },\r\n      CategoryOptions: [],\r\n      //验证\r\n      rules: {\r\n        name: [\r\n          { required: true, message: \"请输入职位名称\", trigger: \"blur\" },\r\n          { max: 10, message: '职位名称最多10个字符', trigger: 'change' }\r\n        ],\r\n        jobDescribe: [{ required: false,max: 20, message: \"职位描述最多20个字符\", trigger: \"change\" }],\r\n        type: [{ required: true, message: \"请选择职位类型\", trigger: \"blur\" }]\r\n      },\r\n      editDisabled: true, //可编辑状态  除使用状态其他都不可编辑\r\n      showDisabled: true //查看时 使用状态不可编辑\r\n    };\r\n  },\r\n  watch: {\r\n    // itemJsonParam(newData,oldData){\r\n    //   this.filtersData=newData;\r\n    // }\r\n  },\r\n  methods: {\r\n    getValidOptions() {\r\n      let arr = [\r\n        {\r\n          status_id: true,\r\n          status_name: \"使用中\"\r\n        },\r\n        {\r\n          status_id: false,\r\n          status_name: \"未使用\"\r\n        }\r\n      ];\r\n      return arr;\r\n    },\r\n    //初始化\r\n    positionDetailsPopupInit() {\r\n      this.filtersData = {\r\n        code: \"\",\r\n        name: \"\",\r\n        type: \"\",\r\n        used: false\r\n      };\r\n      //对象还需初始化\r\n      let itemStatus = this.itemParam.type;\r\n      switch (itemStatus.toString()) {\r\n        case \"add\": //新增\r\n          this.editDisabled = false;\r\n          this.showDisabled = false;\r\n          break;\r\n        case \"edit\": //修改\r\n          this.editDisabled = true;\r\n          this.showDisabled = false;\r\n          this.getClassData();\r\n          break;\r\n        case \"show\": //查看\r\n          this.editDisabled = true;\r\n          this.showDisabled = true;\r\n          this.getClassData();\r\n          break;\r\n      }\r\n      this.classDialogVisible = true;\r\n    },\r\n    //关闭\r\n    closeDialog(formName) {\r\n      this.classDialogVisible = false;\r\n      this.$refs[formName].resetFields(); //重置选项\r\n    },\r\n    //保存表单\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          this.request(this.api.user.position_save, this.filtersData).then(\r\n            data => {\r\n              this.closeDialog(formName);\r\n              this.$emit(\"refreshItem\", \"刷新\");\r\n            }\r\n          );\r\n        } else {\r\n          console.log(\"error submit!!\");\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    //获取列表数据\r\n    getClassData() {\r\n      this.request(this.api.user.position_get, { id: this.itemParam.id }).then(\r\n        data => {\r\n          this.filtersData = data;\r\n        }\r\n      );\r\n    },\r\n    //修改表单\r\n    editForm(formName) {\r\n      this.submitForm(formName);\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"less\" scoped>\r\n</style>\r\n"]}]}