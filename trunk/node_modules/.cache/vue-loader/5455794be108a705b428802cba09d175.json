{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\scb\\goods\\classify_list.vue?vue&type=style&index=0&id=17732259&lang=less&scoped=true&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\scb\\goods\\classify_list.vue","mtime":1578973431474},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\css-loader\\index.js","mtime":1558492728478},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1558492728890},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\postcss-loader\\src\\index.js","mtime":1558492728823},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\less-loader\\dist\\cjs.js","mtime":1566193719488},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.box {\r\n  padding: 20px;\r\n  margin: 8px 8px 20px 8px;\r\n  background: #fff;\r\n}\r\n.el-input /deep/ .el-input__inner {\r\n  width: 198px;\r\n}\r\n.image{\r\n  width: 45px;\r\n  height: 45px;\r\n}\r\n.drag-tree-table-body /deep/.action-item{\r\n  margin-left: 10px;\r\n}\r\n",{"version":3,"sources":["classify_list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"classify_list.vue","sourceRoot":"src/views/scb/goods","sourcesContent":["<template>\r\n  <div class=\"box\">\r\n    <el-dialog :before-close=\"handleClose\" title=\"分类管理\" width=\"520px\" :visible.sync=\"dialogForm\" v-if=\"dialogForm\">\r\n      <el-form :model=\"ruleForm\"  :rules=\"rules\" ref=\"ruleForm\" label-width=\"120px\">\r\n        <el-form-item label=\"分类名称：\" prop=\"name\">\r\n          <el-input placeholder=\"请填写分类名称，不能超过5个中文\" v-model=\"ruleForm.name\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"父级分类：\">\r\n          <el-cascader :disabled=\"isEdit\" ref=\"cascader\" v-model=\"ruleForm.parentId\" :options=\"categories_categoriesTreeList_data\" :props=\"{ checkStrictly: true, label: 'name', value: 'id', emitPath: false }\" clearable></el-cascader>\r\n        </el-form-item>\r\n        <el-form-item label=\"缩略图：\" prop=\"storeImgs_list\" res=\"uploadElement\">\r\n          <el-upload-img\r\n            v-model=\"ruleForm.storeImgs_list\"\r\n            :EchoDisplayImages=\"ruleForm.storeImgs_list\"\r\n            CatalogName=\"store\"\r\n            :imgApi=\"imgApi\"\r\n            :describe=\"describe\"\r\n            :LssUpimgLimit=\"LssUpimgLimit\"\r\n          ></el-upload-img>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"handleClose\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">保存</el-button>\r\n      </span>\r\n    </el-dialog>\r\n    <el-button size=\"small\" type=\"primary\" @click=\"dialogForm = true\">新增分类</el-button>\r\n    <dragTreeTable\r\n      ref=\"table\"\r\n      :data=\"treeData\"\r\n      :onDrag=\"onTreeDataChange\"\r\n      resize\r\n      fixed\r\n      :isdraggable=\"true\">\r\n    </dragTreeTable>\r\n  </div>\r\n  <!-- 列表 -->\r\n</template>\r\n\r\n<script>\r\nimport ElUploadImg from \"../components/el_upload_img_multi\";\r\nimport codeSet from \"@/components/codeSet\";\r\nimport Sortable from 'sortablejs';\r\nimport dragTreeTable from \"./lib/dragTreeTable.vue\";\r\nimport demoDataList from './lib/data';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      treeData: {\r\n        columns: [],\r\n        lists: []\r\n      },\r\n      dialogForm: false,\r\n      categories_categoriesTreeList_data:[],// 创建分类所用-分类下拉（一二级）\r\n      // 上传图片路径\r\n      imgApi: this.api.content.aLiYun_upload,\r\n      LssUpimgLimit: 1,\r\n      // 上传图片描述\r\n      describe: \"图片尺寸为200×200，大小不超过200KB；\",\r\n      ruleForm: {\r\n        \"merchantId\": null,\r\n        \"merchantName\":null,\r\n        \"name\": \"\",\r\n        \"parentId\":null,\r\n        \"parentName\":null,\r\n        storeImgs_list:[]\r\n      },\r\n      isEdit:false,\r\n      checkId:null,\r\n      getList_data: [],\r\n      filtersData: {\r\n        pageIndex: 1, // 当前页码\r\n        pageSize: 10, // 每页数量\r\n        orderBy: \"\",\r\n        \"merchantId\": \"\"\r\n      },\r\n      rules:{\r\n        name:[{required:true, validator: (rule, value, callback) => {\r\n          if(!value) {\r\n            callback(new Error('请输入分类名称！'));\r\n          };\r\n          var len = 0;    \r\n          for (var i=0; i< value.length; i++) {    \r\n            if (value.charCodeAt(i)>127 || value.charCodeAt(i)==94) {    \r\n              len += 2;    \r\n            } else {    \r\n              len ++;    \r\n            }    \r\n          }    \r\n          if(len > 10) {\r\n            callback(new Error('限制5个中文、10个字符！'));\r\n          }else{\r\n            callback();\r\n          };\r\n        }, trigger:'change'}],\r\n        storeImgs_list:[{type:'array',required:true,message:'缩略图未上传!',trigger:'change'}]\r\n      }\r\n    };\r\n  },\r\n  created() {\r\n    this.categories_categoriesTreeList();// 创建分类所用-分类下拉（一二级）\r\n    // this.categories_sort();\r\n  },\r\n  mounted(){\r\n      this.$nextTick(() => {\r\n       \r\n      this.categories_getListDTO();// 获取分类\r\n    })\r\n  },\r\n  computed: {\r\n    storeImgs_list() {\r\n      return this.ruleForm.storeImgs_list;\r\n    },\r\n  },\r\n  watch:{\r\n    /**\r\n     * 监听门店图片\r\n     */\r\n    storeImgs_list(value) {\r\n      if(value && value.length > 0) {\r\n        this.$refs.ruleForm.clearValidate('storeImgs_list');\r\n      }else{\r\n        this.$refs.ruleForm.validateField('storeImgs_list');\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    onTreeDataChange(list) {\r\n      console.log(list);\r\n      this.treeData.lists = list;\r\n    },\r\n    /**\r\n     * 弹框取消\r\n     */\r\n    handleClose() {\r\n      this.dialogForm = false;\r\n      this.isEdit = false;\r\n      this.checkId = null;\r\n      Object.assign(this.ruleForm, {\r\n        \"merchantId\": null,\r\n        \"merchantName\":null,\r\n        \"name\": \"\",\r\n        \"parentId\":null,\r\n        \"parentName\":null,\r\n        storeImgs_list:[]\r\n      });\r\n    },\r\n    /**\r\n     * 修改\r\n     */\r\n    edit(row) {\r\n      Object.assign(this.ruleForm, row);\r\n      this.isEdit = true;\r\n      this.checkId = row.id;\r\n      row.image && this.ruleForm.storeImgs_list.push({url:row.image});\r\n      this.dialogForm = true;\r\n    },\r\n    /**\r\n     * 获取分类\r\n     */\r\n    categories_getListDTO() {\r\n      const that = this;\r\n    \r\n      this.request(\r\n        this.api.scb.categories_getListDTO,\r\n        this.filtersData,\r\n        true\r\n      ).then(res => {\r\n        var columns = [\r\n          {\r\n            type: \"selection\",\r\n            title: \"分类名称\",\r\n            field: \"name\",\r\n            flex: 1,\r\n            align: \"left\",\r\n            titleAlign: \"left\",\r\n            formatter: item => {\r\n              return \"<span>\" + item.name + \"</span>\";\r\n            }\r\n          },\r\n          {\r\n            type:'image',\r\n            title: \"父分图片\",\r\n            field: \"image\",\r\n            flex: 1,\r\n            align: \"center\"\r\n          },\r\n          {\r\n            title: \"父分类\",\r\n            field: \"parentName\",\r\n            flex: 1,\r\n            align: \"center\"\r\n          },\r\n          {\r\n            title: \"商品数量\",\r\n            field: \"allQty\",\r\n            flex: 1,\r\n            align: \"center\"\r\n          },\r\n          {\r\n            title: \"操作\",\r\n            type: \"action\",\r\n            flex: 1,\r\n            align: \"center\",\r\n            actions: [\r\n              {\r\n                text: \"修改\",\r\n                onclick: this.edit,\r\n                formatter: item => {\r\n                  return \"<i>修改 </i>\";\r\n                }\r\n              },\r\n              {\r\n                text: \"查看商品\",\r\n                onclick: this.showGoods,\r\n                formatter: item => {\r\n                  return \"<i>查看商品</i>\";\r\n                }\r\n              },\r\n              {\r\n                text: \"删除\",\r\n                onclick: this.categories_recursionDelete,\r\n                formatter: item => {\r\n                  return \"<i>删除</i>\";\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        ];\r\n        res = JSON.parse(JSON.stringify(res).replace(/children/g, 'lists'));\r\n        that.getList_data = res;\r\n        that.treeData = {\r\n          columns: columns,\r\n          lists:res\r\n        };\r\n      });\r\n    },\r\n    /**\r\n     * 查看商品\r\n     */\r\n    showGoods(row) {\r\n      this.href('/goods/goods_list',{ id: row.id });\r\n    },\r\n    /**\r\n     * 拖拽同级切换位置\r\n     */\r\n    categories_sort() {\r\n      const that = this;\r\n\r\n      this.request(\r\n        this.api.scb.categories_sort,\r\n        {\r\n          sortVO:[{\r\n            id:'b5aa0bcc-58db-4f08-9211-7120449a20ae',\r\n            sort:1\r\n          },{\r\n            id:'739c39f8-8692-45d7-8517-d182d08728d2',\r\n            sort:2\r\n          },{\r\n            id:'35fdc669-482e-4cce-9103-08ee9cbaca4c',\r\n            sort:3\r\n          }]\r\n        },\r\n        true\r\n      ).then(res => {\r\n        \r\n      });\r\n    },\r\n    /**\r\n     * 保存分类\r\n     */\r\n    save() {\r\n      const that = this;\r\n      this.$refs.ruleForm.validate((valid) => {\r\n        if (valid) {\r\n          let cascader = that.$refs.cascader;\r\n          let cascaderValue = cascader.inputValue;\r\n          if(cascaderValue){\r\n            let isHave = cascaderValue.indexOf('/');\r\n            that.ruleForm.parentName = isHave != -1 ? cascaderValue.split('/')[1] : cascaderValue;\r\n            that.ruleForm.parentName = that.ruleForm.parentName.replace(/^\\s*|\\s*$/g,'');\r\n          }\r\n          that.ruleForm.image = that.ruleForm.storeImgs_list[0].url;\r\n\r\n          if(this.checkId) {\r\n            Object.assign(this.ruleForm, {\r\n              id:this.checkId\r\n            });\r\n          };\r\n          let url = this.checkId ? that.api.scb.categories_updateSelective : that.api.scb.categories_create;\r\n\r\n          that.request(\r\n            url,\r\n            that.ruleForm,\r\n            true\r\n          ).then(res => {\r\n            Object.assign(this.ruleForm, {\r\n              \"merchantId\": null,\r\n              \"merchantName\":null,\r\n              \"name\": \"\",\r\n              \"parentId\":null,\r\n              \"parentName\":null,\r\n              storeImgs_list:[]\r\n            });\r\n            that.warn('新建成功!');\r\n            that.categories_categoriesTreeList();\r\n            that.categories_getListDTO();\r\n            that.dialogForm = false;\r\n            this.isEdit = false;\r\n            this.checkId = null;\r\n          });\r\n        }\r\n      });\r\n    },\r\n    /**\r\n     * 创建分类所用-分类下拉（一二级）\r\n     */\r\n    categories_categoriesTreeList() {\r\n      const that = this;\r\n\r\n      this.request(\r\n        this.api.scb.categories_categoriesTreeList,\r\n        this.filtersData,\r\n        true\r\n      ).then(res => {\r\n        that.categories_categoriesTreeList_data = res;\r\n      });\r\n    },\r\n    /**\r\n     * 删除分类\r\n     */\r\n    categories_recursionDelete(obj) {\r\n      var that = this;\r\n      this.$confirm('删除后会解除商品与该分类的关系，本操作不可恢复，确认删除分类吗？', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n      }).then(() => {\r\n        that.request(\r\n          that.api.scb.categories_recursionDelete,\r\n          {\r\n            id:obj.id\r\n          },\r\n          true\r\n        ).then(res => {\r\n          that.warn('删除成功！');\r\n          that.categories_getListDTO();\r\n          that.categories_categoriesTreeList();\r\n        });\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消删除'\r\n        });          \r\n      });\r\n    },\r\n    /**\r\n     * 提示\r\n     * @param { String } message 提示文案\r\n     * @param { String } type 提示类型\r\n     */\r\n    warn(message, type) {\r\n      this.$message({\r\n        message: message,\r\n        type: type || \"success\"\r\n      });\r\n    },\r\n   /**\r\n     * 路由跳转\r\n     * @param { String } routeName 路由路径\r\n     * @param { Object } param 路由参数\r\n     */\r\n    href(routeName, param) {\r\n      let module = '/' + this.$route.path.split('/')[1];\r\n      this.$router.push({\r\n        path: module + routeName,\r\n        query: param\r\n      });\r\n    },\r\n    /**\r\n     * 模糊搜索\r\n     */\r\n    handleSearch() {\r\n      this.filtersData.pageIndex = 1;\r\n      this.getData();\r\n    },\r\n    /**\r\n     * 搜索重置\r\n     */\r\n    handleResetFilters() {\r\n      Object.assign(this.filtersData, {\r\n        pageIndex: 1, // 当前页码\r\n        pageSize: 10 // 每页数量\r\n      });\r\n    },\r\n    /**\r\n     * 点击页数\r\n     * @param { Number } pageIndex 当前页\r\n     */\r\n    handleCurrentChange(pageIndex) {\r\n      this.filtersData.pageIndex = pageIndex;\r\n      this.getData();\r\n    },\r\n    /**\r\n     *  选择每页多少条数\r\n     *  @param { Number } pageSize 每页条数\r\n     */\r\n    handleSizeChange(pageSize) {\r\n      this.filtersData.pageSize = pageSize;\r\n      this.getData();\r\n    }\r\n  },\r\n  components: {\r\n    ElUploadImg,\r\n    codeSet,\r\n    dragTreeTable\r\n  }\r\n};\r\n</script>\r\n<style  lang=\"less\" scoped>\r\n.box {\r\n  padding: 20px;\r\n  margin: 8px 8px 20px 8px;\r\n  background: #fff;\r\n}\r\n.el-input /deep/ .el-input__inner {\r\n  width: 198px;\r\n}\r\n.image{\r\n  width: 45px;\r\n  height: 45px;\r\n}\r\n.drag-tree-table-body /deep/.action-item{\r\n  margin-left: 10px;\r\n}\r\n</style>"]}]}