{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\scb\\channel\\channel_list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\scb\\channel\\channel_list.vue","mtime":1576824875419},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport PageTable from \"@/views/collocation/components/PageTable\";\r\nimport TimeIntervalCheck from \"@/components/TimeIntervalCheck\";\r\nimport keepAliveMixin from \"@/mixins/keepAliveMixin\";\r\nexport default {\r\n  name: \"transfer_slip_list\",\r\n  mixins: [keepAliveMixin],\r\n  // 数据\r\n  data() {\r\n    return {\r\n      check_item:{},\r\n      // 调出方列表\r\n      tuneOut_data: [],\r\n      // 调入方列表\r\n      tuneIn_data: [],\r\n      // 选中调出方信息\r\n      checkTuneOutUser: {},\r\n      // 选中调入方信息\r\n      checkTuneInUser: {},\r\n      orderStarusType: {\r\n        100: \"主单待编辑\",\r\n        101: \"主单待审核\",\r\n        102: \"主单待发货\",\r\n        103: \"主单部分已发货\",\r\n        104: \"主单异常完成\",\r\n        105: \"主单已完成\",\r\n        106: \"主单已作废\"\r\n      },\r\n      tradeWayCodeType: {\r\n        1: \"现金\",\r\n        2: \"代销\"\r\n      },\r\n      valueType: {\r\n        0: \"期初货量\",\r\n        1: \"期初货值\",\r\n        2: \"配货总件数\",\r\n        3: \"退返总件数\",\r\n        4: \"核销件数\",\r\n        5: \"核销货值\",\r\n        6: \"核销货值\",\r\n        7: \"期末货量\",\r\n        8: \"期末货值\",\r\n      },\r\n      symbolType: {\r\n        0: \"小于\",\r\n        1: \"小于等于\",\r\n        2: \"等于\",\r\n        3: \"大于\",\r\n        4: \"大于等于\"\r\n      },\r\n      // 参数\r\n      addFormData: {\r\n        // 发货人\r\n        allotMan: \"\",\r\n        // 发货人直属机构\r\n        organizationId: \"\",\r\n        organizationName: \"\",\r\n        // 订单类型\r\n        // orderType: '0203',\r\n        // 发货门店\r\n        outStoreId: \"\",\r\n        outStoreName: \"\",\r\n        // 收货门店\r\n        inStoreId: \"\",\r\n        inStoreName: \"\",\r\n        // 收货人\r\n        receiveMan: \"\",\r\n        // 电话\r\n        phone: \"\",\r\n        // 省市区信息\r\n        provinceName: \"\",\r\n        provinceCode: \"\",\r\n        cityName: \"\",\r\n        cityCode: \"\",\r\n        areaName: \"\",\r\n        areaCode: \"\",\r\n        divisionId: \"\",\r\n        // 地址\r\n        addressInfo: \"\"\r\n      },\r\n      // 选择调出弹框\r\n      dialogTableVisible:false,\r\n      // 结算弹框\r\n      dialogJs:false,\r\n      // 选择调出类型\r\n      allocatingType: true,\r\n      // 标识是否是零售门店进入\r\n      enterTypeFlag: false,\r\n      // 查询参数\r\n      formData: {\r\n        // 结算客户名称\r\n        channelCustomerName: null,\r\n        // 结算类型\r\n        settleTypeName: null,\r\n        // 开始时间\r\n        startTime: null,\r\n        // 结束时间\r\n        endTime: null,\r\n        pageIndex: 1,\r\n        pageSize: 10\r\n      },\r\n      // 查询参数\r\n      formDataIn: {\r\n        // 模糊搜索\r\n        searchWords: null,\r\n        // 订单状态\r\n        purchaseOrderStatus: null,\r\n        pageIndex: 1,\r\n        pageSize: 10\r\n      },\r\n      // 查询参数\r\n      formDataStore: {\r\n        // 模糊搜索\r\n        searchWords: null,\r\n        // 订单状态\r\n        purchaseOrderStatus: null,\r\n        // 结算类型\r\n        tradeWayCode: null,\r\n        // 门店名称（采购商名称）\r\n        purchaseAgentName: null,\r\n        // 开始时间\r\n        startDate: null,\r\n        // 结束时间\r\n        endDate: null,\r\n        pageIndex: 1,\r\n        pageSize: 10\r\n      },\r\n      // 收货差异\r\n      differenceList: [{ name: \"是\", id: 1 }, { name: \"否\", id: 0 }],\r\n      // 发货门店列表\r\n      outStoreList: [],\r\n      // 收货门店列表\r\n      inStoreList: [],\r\n      // 单据状态\r\n      billType: this.$common.getBillType(\"transferSlip\"),\r\n      // 表格数据\r\n      tableData: {},\r\n      // 选中的表格数据\r\n      checkedTableData: [],\r\n\r\n      // 备注弹窗\r\n      remarksDialog: false,\r\n      remarksFormData: {\r\n        id: \"\",\r\n        operationRemarks: \"\"\r\n      },\r\n      rules: {\r\n        operationRemarks: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"请输入内容\",\r\n            trigger: \"blur\"\r\n          }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  // 组件\r\n  components: {\r\n    PageTable,\r\n    TimeIntervalCheck\r\n  },\r\n  created() {\r\n    // 删除子页面的门店缓存\r\n    sessionStorage.removeItem(\"TRANSFER_SLIP_APP_INFO\");\r\n    this.info();\r\n  },\r\n  // 初始化数据\r\n  mounted() {\r\n    this.$nextTick(() => {\r\n      this.getInStoreList();\r\n      this.getOutStoreList();\r\n      this.getTableData();\r\n      // 调入、调出门店接口列表，调出传入调入ID（SCB)\r\n      this.tuneIn_fn();\r\n    });\r\n  },\r\n  // 方法\r\n  methods: {\r\n    /**\r\n     * 结算\r\n     */\r\n    channelWriteOffSettle_settlement(row) {\r\n      if(parseInt(row.writeOffValueCopy) == 0) {\r\n        this.warn('核销货值必须大于零时，可进行结算!','warning');\r\n        return;\r\n      }\r\n      this.dialogJs = true;\r\n      this.check_item = row;\r\n    },\r\n    qrJs() {\r\n      this.request(this.api.scb.channelWriteOffSettle_settlement, \r\n      {\r\n        writeOffTotal:this.check_item.writeOffTotal,\r\n        writeOffValue:this.check_item.writeOffValue,\r\n        channelCustomerId:this.check_item.channelCustomerId,\r\n        operator:this.addFormData.allotMan\r\n      }).then(data => {\r\n        this.dialogJs = false;\r\n        this.getTableData();\r\n        this.warn(\"审核通过！\");\r\n      });\r\n    },\r\n    /**\r\n     * 审核通过\r\n     */\r\n    purchaseOrder_checkToPass(row) {\r\n      this.$confirm(\"审核通过后，库房将接收订单发货通知！\", \"订单审核\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      })\r\n      .then(() => {\r\n        this.request(this.api.scb.purchaseOrder_checkToPass, {\r\n          orderId: row.id\r\n        }).then(data => {\r\n          this.getTableData();\r\n          this.warn(\"审核通过！\");\r\n        });\r\n      })\r\n      .catch(() => {\r\n        this.$message({\r\n          type: \"info\",\r\n          message: \"已取消删除\"\r\n        });\r\n      });\r\n    },\r\n    async info() {\r\n      // 获取userId\r\n      let info = await this.request(this.api.user.get_userinfo, {}, true);\r\n      // 保存用户名称\r\n      this.addFormData.allotMan = info.name;\r\n      // 获取直属机构\r\n      let organization = await this.request(\r\n        this.api.user.userCompany_getUserOrgByUserId,\r\n        { userId: info.userId },\r\n        true\r\n      );\r\n      this.addFormData.organizationId = organization.id;\r\n      this.addFormData.organizationName = organization.name;\r\n    },\r\n    /**\r\n     * 获取客户列表\r\n     * @param { String } id 调出方id\r\n     */\r\n    tuneIn_fn() {\r\n      this.request(this.api.store.storeBasic_listStoreBasic,this.formDataIn).then(res => {\r\n        this.tuneIn_data = res;\r\n        res.data.forEach((item, index) => {\r\n          item._createTime = this.$options.filters.timestampToTime(\r\n            item.createTime\r\n          );\r\n        });\r\n      });\r\n    },\r\n    /**\r\n     * 调入下一步\r\n     */\r\n    drNext() {\r\n      if (JSON.stringify(this.checkTuneInUser) == \"{}\") return;\r\n\r\n      Object.assign(this.addFormData, {\r\n        outStoreId: this.checkTuneInUser.id,\r\n        outStoreName: this.checkTuneInUser.name,\r\n        // 收货门店\r\n        inStoreId: this.checkTuneInUser.id,\r\n        inStoreName: this.checkTuneInUser.name,\r\n        // 收货人\r\n        receiveMan: this.checkTuneInUser.linkman,\r\n        // 电话\r\n        phone: this.checkTuneInUser.phone,\r\n        // 省市区信息\r\n        provinceName: this.checkTuneInUser.provinceName,\r\n        provinceCode: this.checkTuneInUser.provinceCode,\r\n        cityName: this.checkTuneInUser.cityName,\r\n        cityCode: this.checkTuneInUser.cityCode,\r\n        areaName: this.checkTuneInUser.areaName,\r\n        areaCode: this.checkTuneInUser.areaCode,\r\n        divisionId: this.checkTuneInUser.divisionId,\r\n        // 地址\r\n        addressInfo: this.checkTuneInUser.addressInfo\r\n      });\r\n      console.log(this.addFormData);\r\n      sessionStorage.setItem(\r\n        \"TRANSFER_SLIP_APP_INFO\",\r\n        JSON.stringify(this.addFormData)\r\n      );\r\n      // return;\r\n      let module = \"/\" + this.$route.path.split(\"/\")[1];\r\n      this.$router.push({\r\n        path: module + \"/order/sell_order_edit\"\r\n      });\r\n    },\r\n    /**\r\n     * 提示\r\n     * @param { String } message 提示文案\r\n     * @param { String } type 提示类型\r\n     */\r\n    warn(message, type) {\r\n      this.$message({\r\n        message: message,\r\n        type: type || \"success\"\r\n      });\r\n    },\r\n    // keepAlive 返回初始化\r\n    activatedInit() {\r\n      this.getTableData();\r\n    },\r\n    // 导出\r\n    exportExcel() {\r\n      if (this.checkedTableData.length === 0) {\r\n        this.$notify.error({ title: \"错误\", message: \"请选择数据\" });\r\n        return;\r\n      }\r\n      require.ensure([], () => {\r\n        let { export_json_to_excel } = require(\"@/vendor/Export2Excel\");\r\n        let tHeader = [\r\n          \"结算客户名称\",\r\n          \"结算类型\",\r\n          \"期初货量\",\r\n          \"期初货值\",\r\n\r\n          \"配货总件数\",\r\n          \"退返总件数\",\r\n          \"核销件数\",\r\n          \"核销货值\",\r\n\r\n          \"期末货量\",\r\n          \"期末货值\",\r\n          \"上次结算时间\"\r\n        ];\r\n        // 上面设置Excel的表格第一行的标题\r\n        let filterVal = [\r\n          \"channelCustomerName\",\r\n          \"settleTypeName\",\r\n          \"initialVolume\",\r\n          \"initialValueCopy\",\r\n\r\n          \"allotTotal\",\r\n          \"returnTotal\",\r\n          \"writeOffTotal\",\r\n          \"writeOffValueCopy\",\r\n\r\n          \"finalPeriodVolume\",\r\n          \"finalPeriodValueCopy\",\r\n          \"updateTime\"\r\n        ];\r\n        // 上面的index、nickName、name是tableData里对象的属性\r\n        let list = this.checkedTableData; //把data里的tableData存到list\r\n        let data = this.formatJson(filterVal, list);\r\n        export_json_to_excel(tHeader, data, \"渠道结算订单列表\");\r\n      });\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => v[j]));\r\n    },\r\n    // 行商品详情导出\r\n    downloadItem(row) {\r\n      this.request(this.api.order.storeAllotOrderProductInfo_list, {\r\n        orderSn: row.orderSn\r\n      }).then(data => {\r\n        this.downloadDataInit(data.data);\r\n        let downloadData = data.data;\r\n        require.ensure([], () => {\r\n          let { export_json_to_excel } = require(\"@/vendor/Export2Excel\");\r\n          let tHeader = [\r\n            \"商品款号\",\r\n            \"商品货号\",\r\n            \"名称\",\r\n            \"品牌\",\r\n            \"吊牌价\",\r\n            \"调拨单价\",\r\n            \"调拨数量\",\r\n            \"调拨金额\",\r\n            \"门店实发数量\",\r\n            \"门店实收数量\"\r\n          ];\r\n          // 上面设置Excel的表格第一行的标题\r\n          let filterVal = [\r\n            \"productCode\",\r\n            \"goodsCode\",\r\n            \"goodsName\",\r\n            \"brandName\",\r\n            \"_retailPrice\",\r\n            \"_allotPrice\",\r\n            \"quantity\",\r\n            \"_amount\",\r\n            \"shipmentsQty\",\r\n            \"receiveQty\"\r\n          ];\r\n          // 上面的index、nickName、name是tableData里对象的属性\r\n          let list = downloadData; //把data里的tableData存到list\r\n          let data = this.formatJson(filterVal, list);\r\n          export_json_to_excel(tHeader, data, \"调拨商品信息\");\r\n        });\r\n      });\r\n    },\r\n    downloadDataInit(data) {\r\n      if (data && data.length) {\r\n        data.forEach(item => {\r\n          item._retailPrice = \"￥\" + item.retailPrice.toFixed(2);\r\n          item._allotPrice = \"￥\" + item.allotPrice.toFixed(2);\r\n          item._amount = \"￥\" + (item.quantity * item.allotPrice).toFixed(2);\r\n        });\r\n      }\r\n    },\r\n    // 点击搜索\r\n    searchTableData() {\r\n      this.formData.pageIndex = 1;\r\n      this.getTableData();\r\n    },\r\n    searchTableDataIn() {\r\n      this.tuneIn_fn();\r\n    },\r\n    initFormDataIn() {},\r\n    // 获取列表数据\r\n    getTableData() {\r\n      this.request(this.api.scb.channelWriteOffSettle_list, this.formData).then(\r\n        data => {\r\n          this.initTableData(data.data);\r\n          this.tableData = data;\r\n          data.data.forEach((item, idnex) => {\r\n            Object.assign(item, item.purchaseOrderDTO);\r\n            item._purchaseOrderStatus = this.orderStarusType[\r\n              item.purchaseOrderStatus\r\n            ];\r\n            item.updateTime = this.$options.filters.timestampToTime(item.updateTime);\r\n          });\r\n        }\r\n      );\r\n    },\r\n    // 初始化数据 导出使用\r\n    initTableData(data) {\r\n      if (data && data.length) {\r\n        data.forEach(item => {\r\n          item._createTime = this.$options.filters.timestampToTime(\r\n            item.createTime\r\n          );\r\n          item._amount = \"￥\" + item.amount;\r\n          item._difference =\r\n            item.difference === null ? \"--\" : item.difference ? \"是\" : \"否\";\r\n          item._differenceQty =\r\n            item.differenceQty === null ? \"--\" : item.differenceQty;\r\n          item._orderStatus = this.statusToName(item.orderStatus);\r\n        });\r\n      }\r\n    },\r\n    // 获取表格选中的\r\n    tableCheckChange(val) {\r\n      this.checkedTableData = val;\r\n    },\r\n    // 初始查询条件\r\n    initFormData() {\r\n      Object.assign(this.formData, {\r\n        // 结算客户名称\r\n        channelCustomerName: null,\r\n        // 结算类型\r\n        settleTypeName: null,\r\n        // 开始时间\r\n        startTime: null,\r\n        // 结束时间\r\n        endTime: null,\r\n        pageIndex: 1,\r\n        pageSize: 10\r\n      });\r\n    },\r\n    // 新增\r\n    addItem() {\r\n      let module = \"/\" + this.$route.path.split(\"/\")[1];\r\n      this.$router.push({\r\n        path: module + \"/order/allotGoods_order_edit\"\r\n      });\r\n    },\r\n    // 查看\r\n    seeItem(row) {\r\n      let module = \"/\" + this.$route.path.split(\"/\")[1];\r\n      this.$router.push({\r\n        path: module + \"/order/sell_order_detail\",\r\n        query: {\r\n          id: row.id\r\n        }\r\n      });\r\n    },\r\n    // 编辑\r\n    editItem(row) {\r\n      if(parseInt(row.writeOffValueCopy) == 0) {\r\n        this.warn('核销货值必须大于零时，可进行核销!','warning');\r\n        return;\r\n      }\r\n      let module = \"/\" + this.$route.path.split(\"/\")[1];\r\n      this.$router.push({\r\n        path: module + \"/channel/channel_edit\",\r\n        query: {\r\n          id: row.id,\r\n          outStoreId: row.channelCustomerId,\r\n          orderNum: row.purchaseOrderNum\r\n        }\r\n      });\r\n    },\r\n    // 作废\r\n    delItem(row) {\r\n      this.dialogTableVisible = true;\r\n    },\r\n    // 强制完成\r\n    finishItem(row) {\r\n      this.$confirm(\"执行撤销后，本期全部已核销商品将回退到未核销商品中，确认撤销吗？\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      })\r\n      .then(() => {\r\n        this.request(this.api.scb.purchaseOrder_cancle, {\r\n          orderId: row.id\r\n        }).then(data => {\r\n          this.getTableData();\r\n          this.warn(\"作废成功！\");\r\n        });\r\n      })\r\n      .catch(() => {\r\n        this.$message({\r\n          type: \"info\",\r\n          message: \"已取消删除\"\r\n        });\r\n      });\r\n    },\r\n    // 备注显示\r\n    remarksItem(row) {\r\n      this.remarksFormData.id = row.id;\r\n      this.remarksFormData.operationRemarks = row.operationRemarks;\r\n      this.remarksDialog = true;\r\n    },\r\n    // 备注提交\r\n    remarksSub() {\r\n      this.$refs.remarksForm.validate(valid => {\r\n        if (valid) {\r\n          this.request(\r\n            this.api.order.storeAllotGoodsOrder_insertRemarks,\r\n            this.remarksFormData\r\n          ).then(data => {\r\n            this.$notify.success({ title: \"成功\", message: \"备注成功\" });\r\n            this.remarksDialog = false;\r\n            this.getTableData();\r\n          });\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    // 状态转name\r\n    statusToName(val) {\r\n      if (!val && val !== 0) return;\r\n      let item = this.billType.find(item => {\r\n        return item.id === val;\r\n      });\r\n      if (item) {\r\n        return item.name;\r\n      } else {\r\n        return val;\r\n      }\r\n    },\r\n    // 获取发货门店数据\r\n    async getOutStoreList() {\r\n      // 获取userId\r\n      let info = await this.request(this.api.user.get_userinfo, {}, true);\r\n      // 获取直属机构\r\n      let organization = await this.request(\r\n        this.api.user.userCompany_getUserOrgByUserId,\r\n        { userId: info.userId },\r\n        true\r\n      );\r\n      // enableAllocation: 1  (启用门店调拨 后端需要)\r\n      this.request(this.api.retailStore.storeBasic_listBase, {\r\n        organizationId: organization.id,\r\n        enableAllocation: 1\r\n      }).then(data => {\r\n        this.outStoreList = data.data;\r\n      });\r\n    },\r\n    // 获取收货门店数据\r\n    getInStoreList() {\r\n      this.request(this.api.store.storeBasic_listStoreBasic, {}).then(data => {\r\n        this.inStoreList = data.data;\r\n      });\r\n    }\r\n  },\r\n  filters: {},\r\n  // 计算属性\r\n  computed: {},\r\n  // 监听数据变化\r\n  watch: {}\r\n};\r\n",{"version":3,"sources":["channel_list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"channel_list.vue","sourceRoot":"src/views/scb/channel","sourcesContent":["<style lang=\"less\" scoped>\r\n  .statistics{\r\n    position: absolute;\r\n    bottom: 45px;\r\n  }\r\n  .statistics2{\r\n    position: absolute;\r\n    bottom: 18px;\r\n    left: 20px;\r\n  }\r\n  .item-margin{\r\n    position: relative;\r\n  }\r\n  .dialogJs-div{\r\n    font-size: 16px;\r\n    margin: 10px 0 0 30px;\r\n  }\r\n</style>\r\n<template>\r\n  <div class=\"transfer_slip_list\">\r\n    <el-dialog width=\"550px\" title=\"结算\" :visible.sync=\"dialogJs\">\r\n      <!-- <div class=\"dialogJs-div\">上次结算时间：2019年10月20日 09:00:00</div>\r\n      <div class=\"dialogJs-div\">累计核销货值：￥1000.00</div> -->\r\n      <div class=\"dialogJs-div\">本期结算款：￥{{ check_item.writeOffValueCopy }}</div>\r\n      <div class=\"dialogJs-div\">确定结算后，财务将收到收款确认单！（收款）</div>\r\n      <span slot=\"footer\">\r\n        <el-button @click=\"dialogJs = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"qrJs\">确定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n    <!-- 选择调出入方信息 -->\r\n    <el-dialog width=\"1200px\" title=\"查看供货商品\" :visible.sync=\"dialogTableVisible\">\r\n      <el-form\r\n        :model=\"formDataStore\"\r\n        label-width=\"90px\"\r\n        size=\"small\"\r\n        ref=\"formDataStore\"\r\n        inline\r\n      >\r\n        <el-form-item label=\"模糊搜索\" prop=\"inStoreId\">\r\n         <el-input placeholder=\"款号/货号/商品名称\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"品牌：\" prop=\"outStoreId\">\r\n          <el-select\r\n            v-model=\"formData.tradeWayCode\"\r\n            placeholder=\"请选择\"\r\n            class=\"input-w\"\r\n            filterable\r\n            clearable\r\n          >\r\n            <el-option\r\n              v-for=\"(item, index) in tradeWayCodeType\"\r\n              :key=\"index\"\r\n              :label=\"item\"\r\n              :value=\"index\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button @click=\"searchTableDataIn\" type=\"primary\" plain>搜索</el-button>\r\n          <el-button @click=\"initFormDataIn\" plain>重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n      <el-button class=\"ml-20\" size=\"small\" type=\"primary\" @click=\"\">导出</el-button>\r\n      <div class=\"item-margin\">\r\n        <page-table :form-data=\"formDataIn\" :get-data=\"tuneIn_fn\" :table-data=\"tuneIn_data\">\r\n          <el-table :data=\"tuneIn_data.data\" max-height=\"350\" class=\"mt-10\">\r\n            <el-table-column :show-overflow-tooltip=\"true\" label=\"款号\" align=\"center\" min-width=\"90\">\r\n              <template slot-scope=\"scope\">{{ scope.row.name }}</template>\r\n            </el-table-column>\r\n            <el-table-column :show-overflow-tooltip=\"true\" label=\"货号\" align=\"center\" min-width=\"90\">\r\n              <template slot-scope=\"scope\">零售商</template>\r\n            </el-table-column>\r\n            <el-table-column :show-overflow-tooltip=\"true\" label=\"商品名称\" align=\"center\" min-width=\"90\">\r\n              <template slot-scope=\"scope\">{{ scope.row.cityName }}</template>\r\n            </el-table-column>\r\n            <el-table-column :show-overflow-tooltip=\"true\" label=\"颜色\" align=\"center\" min-width=\"90\">\r\n              <template slot-scope=\"scope\">{{ scope.row.addressInfo }}</template>\r\n            </el-table-column>\r\n            <el-table-column :show-overflow-tooltip=\"true\" label=\"尺码\" align=\"center\" min-width=\"90\">\r\n              <template slot-scope=\"scope\">{{ scope.row.linkman }}</template>\r\n            </el-table-column>\r\n            <el-table-column :show-overflow-tooltip=\"true\" label=\"品牌\" align=\"center\" min-width=\"90\">\r\n              <template slot-scope=\"scope\">{{ scope.row.phone }}</template>\r\n            </el-table-column>\r\n             <el-table-column :show-overflow-tooltip=\"true\" label=\"吊牌价\" align=\"center\" min-width=\"90\">\r\n              <template slot-scope=\"scope\">{{ scope.row.phone }}</template>\r\n            </el-table-column>\r\n             <el-table-column :show-overflow-tooltip=\"true\" label=\"未核销数量\" align=\"center\" min-width=\"90\">\r\n              <template slot-scope=\"scope\">{{ scope.row.phone }}</template>\r\n            </el-table-column>\r\n             <el-table-column :show-overflow-tooltip=\"true\" label=\"本期核销数量\" align=\"center\" min-width=\"90\">\r\n              <template slot-scope=\"scope\">{{ scope.row.phone }}</template>\r\n            </el-table-column>\r\n          </el-table>\r\n          <div class=\"statistics2\">\r\n            未核销数 <span class=\"mr-20\">200</span>\r\n            本期核销数 <span>25</span>\r\n            </div>\r\n        </page-table>\r\n      </div>\r\n    </el-dialog>\r\n    <div class=\"item-margin\">\r\n      <el-form\r\n        class=\"item-form\"\r\n        :model=\"formData\"\r\n        label-width=\"120px\"\r\n        size=\"small\"\r\n        ref=\"formData\"\r\n        inline>\r\n        <el-form-item label=\"结算客户名称：\" prop=\"inStoreId\">\r\n          <el-select\r\n            v-model=\"formData.channelCustomerName\"\r\n            placeholder=\"请选择\"\r\n            class=\"input-w\"\r\n            filterable\r\n            clearable>\r\n            <el-option\r\n              v-for=\"item in inStoreList\"\r\n              :key=\"item.id\"\r\n              :label=\"item.name\"\r\n              :value=\"item.name\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"结算类型：\" prop=\"outStoreId\">\r\n          <el-select\r\n            v-model=\"formData.settleTypeName\"\r\n            placeholder=\"请选择\"\r\n            class=\"input-w\"\r\n            filterable\r\n            clearable\r\n          >\r\n            <el-option\r\n              v-for=\"(item, index) in tradeWayCodeType\"\r\n              :key=\"index\"\r\n              :label=\"item\"\r\n              :value=\"item\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <!-- <el-form-item label=\"自定义筛选：\">\r\n            <el-select\r\n            placeholder=\"请选择\"\r\n            class=\"input-w\"\r\n            v-model=\"formData.purchaseOrderStatuss\"\r\n            filterable\r\n            clearable>\r\n          <el-option\r\n              v-for=\"(item, index) in valueType\"\r\n              :key=\"index\"\r\n              :label=\"item\"\r\n              :value=\"index\"\r\n            ></el-option>\r\n          </el-select>\r\n          <el-select\r\n            placeholder=\"请选择\"\r\n            class=\"input-w\"\r\n            v-model=\"formData.purchaseOrderStatus\"\r\n            filterable\r\n            clearable\r\n          >\r\n            <el-option\r\n              v-for=\"(item, index) in symbolType\"\r\n              :key=\"index\"\r\n              :label=\"item\"\r\n              :value=\"index\"\r\n            ></el-option>\r\n          </el-select>\r\n          <el-input\r\n            v-model=\"formData.searchWords\"\r\n            @keyup.enter.native=\"handleSearch\"\r\n            style=\"width:310px;\"\r\n            placeholder=\"请输入金额\"\r\n            clearable\r\n          ></el-input>\r\n        </el-form-item> -->\r\n        <el-form-item label=\"上次结算时间：\" prop=\"startDate\">\r\n          <el-date-picker value-format=\"yyyy-MM-dd\" v-model=\"formData.startTime\" type=\"date\" placeholder=\"开始日期\"></el-date-picker>\r\n        </el-form-item>\r\n        <el-form-item prop=\"endDate\">\r\n          <el-date-picker value-format=\"yyyy-MM-dd\" v-model=\"formData.endTime\" type=\"date\" placeholder=\"结束日期\"></el-date-picker>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button @click=\"searchTableData\" type=\"primary\" plain>搜索</el-button>\r\n          <el-button @click=\"initFormData\" plain>重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n    <div class=\"item-margin item-cont\">\r\n      <div v-if=\"!enterTypeFlag\">\r\n        <el-button size=\"small\" type=\"primary\" @click=\"exportExcel\">导出</el-button>\r\n      </div>\r\n      <page-table :form-data=\"formData\" :get-data=\"getTableData\" :table-data=\"tableData\">\r\n        <el-table\r\n          :data=\"tableData.data\"\r\n          style=\"width: 100%\"\r\n          row-key=\"id\"\r\n          @selection-change=\"tableCheckChange\"\r\n          id=\"table-data\">\r\n          <el-table-column type=\"selection\" width=\"45\"></el-table-column>\r\n          <el-table-column prop=\"channelCustomerName\" label=\"结算客户名称\" width=\"200\"></el-table-column>\r\n          <el-table-column prop=\"settleTypeName\" label=\"结算类型\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n          <el-table-column prop=\"initialVolume\" label=\"期初货量\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n          <el-table-column prop=\"initialValueCopy\" label=\"期初货值\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n          <el-table-column prop=\"allotTotal\" label=\"配货总件数\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n          <el-table-column prop=\"returnTotal\" label=\"退返总件数\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n          <el-table-column prop=\"writeOffTotal\" label=\"核销件数\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n          <el-table-column prop=\"writeOffValueCopy\" label=\"核销货值\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n          <el-table-column prop=\"finalPeriodVolume\" label=\"期末货量\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n          <el-table-column prop=\"finalPeriodValueCopy\" label=\"期末货值\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n          <el-table-column prop=\"updateTime\" label=\"上次结算时间\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n          <el-table-column label=\"操作\" width=\"260\">\r\n            <template slot-scope=\"scope\">\r\n              <el-button\r\n                type=\"text\"\r\n                size=\"small\"\r\n                @click=\"editItem(scope.row)\"\r\n                v-if=\"1\"\r\n              >核销</el-button>\r\n              <el-button\r\n                type=\"text\"\r\n                size=\"small\"\r\n                @click=\"channelWriteOffSettle_settlement(scope.row)\"\r\n                v-if=\"1\"\r\n              >结算</el-button>\r\n              <!-- <el-button\r\n                type=\"text\"\r\n                size=\"small\"\r\n                @click=\"delItem(scope.row)\"\r\n                v-if=\"1\"\r\n              >查看供货明细</el-button>\r\n              <el-button\r\n                type=\"text\"\r\n                size=\"small\"\r\n                @click=\"finishItem(scope.row)\"\r\n                v-if=\"1\"\r\n              >撤销审核</el-button> -->\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n        <!-- <div class=\"statistics\">累计未结算款：￥4200.00累计销货数：￥4200.00</div> -->\r\n      </page-table>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport PageTable from \"@/views/collocation/components/PageTable\";\r\nimport TimeIntervalCheck from \"@/components/TimeIntervalCheck\";\r\nimport keepAliveMixin from \"@/mixins/keepAliveMixin\";\r\nexport default {\r\n  name: \"transfer_slip_list\",\r\n  mixins: [keepAliveMixin],\r\n  // 数据\r\n  data() {\r\n    return {\r\n      check_item:{},\r\n      // 调出方列表\r\n      tuneOut_data: [],\r\n      // 调入方列表\r\n      tuneIn_data: [],\r\n      // 选中调出方信息\r\n      checkTuneOutUser: {},\r\n      // 选中调入方信息\r\n      checkTuneInUser: {},\r\n      orderStarusType: {\r\n        100: \"主单待编辑\",\r\n        101: \"主单待审核\",\r\n        102: \"主单待发货\",\r\n        103: \"主单部分已发货\",\r\n        104: \"主单异常完成\",\r\n        105: \"主单已完成\",\r\n        106: \"主单已作废\"\r\n      },\r\n      tradeWayCodeType: {\r\n        1: \"现金\",\r\n        2: \"代销\"\r\n      },\r\n      valueType: {\r\n        0: \"期初货量\",\r\n        1: \"期初货值\",\r\n        2: \"配货总件数\",\r\n        3: \"退返总件数\",\r\n        4: \"核销件数\",\r\n        5: \"核销货值\",\r\n        6: \"核销货值\",\r\n        7: \"期末货量\",\r\n        8: \"期末货值\",\r\n      },\r\n      symbolType: {\r\n        0: \"小于\",\r\n        1: \"小于等于\",\r\n        2: \"等于\",\r\n        3: \"大于\",\r\n        4: \"大于等于\"\r\n      },\r\n      // 参数\r\n      addFormData: {\r\n        // 发货人\r\n        allotMan: \"\",\r\n        // 发货人直属机构\r\n        organizationId: \"\",\r\n        organizationName: \"\",\r\n        // 订单类型\r\n        // orderType: '0203',\r\n        // 发货门店\r\n        outStoreId: \"\",\r\n        outStoreName: \"\",\r\n        // 收货门店\r\n        inStoreId: \"\",\r\n        inStoreName: \"\",\r\n        // 收货人\r\n        receiveMan: \"\",\r\n        // 电话\r\n        phone: \"\",\r\n        // 省市区信息\r\n        provinceName: \"\",\r\n        provinceCode: \"\",\r\n        cityName: \"\",\r\n        cityCode: \"\",\r\n        areaName: \"\",\r\n        areaCode: \"\",\r\n        divisionId: \"\",\r\n        // 地址\r\n        addressInfo: \"\"\r\n      },\r\n      // 选择调出弹框\r\n      dialogTableVisible:false,\r\n      // 结算弹框\r\n      dialogJs:false,\r\n      // 选择调出类型\r\n      allocatingType: true,\r\n      // 标识是否是零售门店进入\r\n      enterTypeFlag: false,\r\n      // 查询参数\r\n      formData: {\r\n        // 结算客户名称\r\n        channelCustomerName: null,\r\n        // 结算类型\r\n        settleTypeName: null,\r\n        // 开始时间\r\n        startTime: null,\r\n        // 结束时间\r\n        endTime: null,\r\n        pageIndex: 1,\r\n        pageSize: 10\r\n      },\r\n      // 查询参数\r\n      formDataIn: {\r\n        // 模糊搜索\r\n        searchWords: null,\r\n        // 订单状态\r\n        purchaseOrderStatus: null,\r\n        pageIndex: 1,\r\n        pageSize: 10\r\n      },\r\n      // 查询参数\r\n      formDataStore: {\r\n        // 模糊搜索\r\n        searchWords: null,\r\n        // 订单状态\r\n        purchaseOrderStatus: null,\r\n        // 结算类型\r\n        tradeWayCode: null,\r\n        // 门店名称（采购商名称）\r\n        purchaseAgentName: null,\r\n        // 开始时间\r\n        startDate: null,\r\n        // 结束时间\r\n        endDate: null,\r\n        pageIndex: 1,\r\n        pageSize: 10\r\n      },\r\n      // 收货差异\r\n      differenceList: [{ name: \"是\", id: 1 }, { name: \"否\", id: 0 }],\r\n      // 发货门店列表\r\n      outStoreList: [],\r\n      // 收货门店列表\r\n      inStoreList: [],\r\n      // 单据状态\r\n      billType: this.$common.getBillType(\"transferSlip\"),\r\n      // 表格数据\r\n      tableData: {},\r\n      // 选中的表格数据\r\n      checkedTableData: [],\r\n\r\n      // 备注弹窗\r\n      remarksDialog: false,\r\n      remarksFormData: {\r\n        id: \"\",\r\n        operationRemarks: \"\"\r\n      },\r\n      rules: {\r\n        operationRemarks: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"请输入内容\",\r\n            trigger: \"blur\"\r\n          }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  // 组件\r\n  components: {\r\n    PageTable,\r\n    TimeIntervalCheck\r\n  },\r\n  created() {\r\n    // 删除子页面的门店缓存\r\n    sessionStorage.removeItem(\"TRANSFER_SLIP_APP_INFO\");\r\n    this.info();\r\n  },\r\n  // 初始化数据\r\n  mounted() {\r\n    this.$nextTick(() => {\r\n      this.getInStoreList();\r\n      this.getOutStoreList();\r\n      this.getTableData();\r\n      // 调入、调出门店接口列表，调出传入调入ID（SCB)\r\n      this.tuneIn_fn();\r\n    });\r\n  },\r\n  // 方法\r\n  methods: {\r\n    /**\r\n     * 结算\r\n     */\r\n    channelWriteOffSettle_settlement(row) {\r\n      if(parseInt(row.writeOffValueCopy) == 0) {\r\n        this.warn('核销货值必须大于零时，可进行结算!','warning');\r\n        return;\r\n      }\r\n      this.dialogJs = true;\r\n      this.check_item = row;\r\n    },\r\n    qrJs() {\r\n      this.request(this.api.scb.channelWriteOffSettle_settlement, \r\n      {\r\n        writeOffTotal:this.check_item.writeOffTotal,\r\n        writeOffValue:this.check_item.writeOffValue,\r\n        channelCustomerId:this.check_item.channelCustomerId,\r\n        operator:this.addFormData.allotMan\r\n      }).then(data => {\r\n        this.dialogJs = false;\r\n        this.getTableData();\r\n        this.warn(\"审核通过！\");\r\n      });\r\n    },\r\n    /**\r\n     * 审核通过\r\n     */\r\n    purchaseOrder_checkToPass(row) {\r\n      this.$confirm(\"审核通过后，库房将接收订单发货通知！\", \"订单审核\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      })\r\n      .then(() => {\r\n        this.request(this.api.scb.purchaseOrder_checkToPass, {\r\n          orderId: row.id\r\n        }).then(data => {\r\n          this.getTableData();\r\n          this.warn(\"审核通过！\");\r\n        });\r\n      })\r\n      .catch(() => {\r\n        this.$message({\r\n          type: \"info\",\r\n          message: \"已取消删除\"\r\n        });\r\n      });\r\n    },\r\n    async info() {\r\n      // 获取userId\r\n      let info = await this.request(this.api.user.get_userinfo, {}, true);\r\n      // 保存用户名称\r\n      this.addFormData.allotMan = info.name;\r\n      // 获取直属机构\r\n      let organization = await this.request(\r\n        this.api.user.userCompany_getUserOrgByUserId,\r\n        { userId: info.userId },\r\n        true\r\n      );\r\n      this.addFormData.organizationId = organization.id;\r\n      this.addFormData.organizationName = organization.name;\r\n    },\r\n    /**\r\n     * 获取客户列表\r\n     * @param { String } id 调出方id\r\n     */\r\n    tuneIn_fn() {\r\n      this.request(this.api.store.storeBasic_listStoreBasic,this.formDataIn).then(res => {\r\n        this.tuneIn_data = res;\r\n        res.data.forEach((item, index) => {\r\n          item._createTime = this.$options.filters.timestampToTime(\r\n            item.createTime\r\n          );\r\n        });\r\n      });\r\n    },\r\n    /**\r\n     * 调入下一步\r\n     */\r\n    drNext() {\r\n      if (JSON.stringify(this.checkTuneInUser) == \"{}\") return;\r\n\r\n      Object.assign(this.addFormData, {\r\n        outStoreId: this.checkTuneInUser.id,\r\n        outStoreName: this.checkTuneInUser.name,\r\n        // 收货门店\r\n        inStoreId: this.checkTuneInUser.id,\r\n        inStoreName: this.checkTuneInUser.name,\r\n        // 收货人\r\n        receiveMan: this.checkTuneInUser.linkman,\r\n        // 电话\r\n        phone: this.checkTuneInUser.phone,\r\n        // 省市区信息\r\n        provinceName: this.checkTuneInUser.provinceName,\r\n        provinceCode: this.checkTuneInUser.provinceCode,\r\n        cityName: this.checkTuneInUser.cityName,\r\n        cityCode: this.checkTuneInUser.cityCode,\r\n        areaName: this.checkTuneInUser.areaName,\r\n        areaCode: this.checkTuneInUser.areaCode,\r\n        divisionId: this.checkTuneInUser.divisionId,\r\n        // 地址\r\n        addressInfo: this.checkTuneInUser.addressInfo\r\n      });\r\n      console.log(this.addFormData);\r\n      sessionStorage.setItem(\r\n        \"TRANSFER_SLIP_APP_INFO\",\r\n        JSON.stringify(this.addFormData)\r\n      );\r\n      // return;\r\n      let module = \"/\" + this.$route.path.split(\"/\")[1];\r\n      this.$router.push({\r\n        path: module + \"/order/sell_order_edit\"\r\n      });\r\n    },\r\n    /**\r\n     * 提示\r\n     * @param { String } message 提示文案\r\n     * @param { String } type 提示类型\r\n     */\r\n    warn(message, type) {\r\n      this.$message({\r\n        message: message,\r\n        type: type || \"success\"\r\n      });\r\n    },\r\n    // keepAlive 返回初始化\r\n    activatedInit() {\r\n      this.getTableData();\r\n    },\r\n    // 导出\r\n    exportExcel() {\r\n      if (this.checkedTableData.length === 0) {\r\n        this.$notify.error({ title: \"错误\", message: \"请选择数据\" });\r\n        return;\r\n      }\r\n      require.ensure([], () => {\r\n        let { export_json_to_excel } = require(\"@/vendor/Export2Excel\");\r\n        let tHeader = [\r\n          \"结算客户名称\",\r\n          \"结算类型\",\r\n          \"期初货量\",\r\n          \"期初货值\",\r\n\r\n          \"配货总件数\",\r\n          \"退返总件数\",\r\n          \"核销件数\",\r\n          \"核销货值\",\r\n\r\n          \"期末货量\",\r\n          \"期末货值\",\r\n          \"上次结算时间\"\r\n        ];\r\n        // 上面设置Excel的表格第一行的标题\r\n        let filterVal = [\r\n          \"channelCustomerName\",\r\n          \"settleTypeName\",\r\n          \"initialVolume\",\r\n          \"initialValueCopy\",\r\n\r\n          \"allotTotal\",\r\n          \"returnTotal\",\r\n          \"writeOffTotal\",\r\n          \"writeOffValueCopy\",\r\n\r\n          \"finalPeriodVolume\",\r\n          \"finalPeriodValueCopy\",\r\n          \"updateTime\"\r\n        ];\r\n        // 上面的index、nickName、name是tableData里对象的属性\r\n        let list = this.checkedTableData; //把data里的tableData存到list\r\n        let data = this.formatJson(filterVal, list);\r\n        export_json_to_excel(tHeader, data, \"渠道结算订单列表\");\r\n      });\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => v[j]));\r\n    },\r\n    // 行商品详情导出\r\n    downloadItem(row) {\r\n      this.request(this.api.order.storeAllotOrderProductInfo_list, {\r\n        orderSn: row.orderSn\r\n      }).then(data => {\r\n        this.downloadDataInit(data.data);\r\n        let downloadData = data.data;\r\n        require.ensure([], () => {\r\n          let { export_json_to_excel } = require(\"@/vendor/Export2Excel\");\r\n          let tHeader = [\r\n            \"商品款号\",\r\n            \"商品货号\",\r\n            \"名称\",\r\n            \"品牌\",\r\n            \"吊牌价\",\r\n            \"调拨单价\",\r\n            \"调拨数量\",\r\n            \"调拨金额\",\r\n            \"门店实发数量\",\r\n            \"门店实收数量\"\r\n          ];\r\n          // 上面设置Excel的表格第一行的标题\r\n          let filterVal = [\r\n            \"productCode\",\r\n            \"goodsCode\",\r\n            \"goodsName\",\r\n            \"brandName\",\r\n            \"_retailPrice\",\r\n            \"_allotPrice\",\r\n            \"quantity\",\r\n            \"_amount\",\r\n            \"shipmentsQty\",\r\n            \"receiveQty\"\r\n          ];\r\n          // 上面的index、nickName、name是tableData里对象的属性\r\n          let list = downloadData; //把data里的tableData存到list\r\n          let data = this.formatJson(filterVal, list);\r\n          export_json_to_excel(tHeader, data, \"调拨商品信息\");\r\n        });\r\n      });\r\n    },\r\n    downloadDataInit(data) {\r\n      if (data && data.length) {\r\n        data.forEach(item => {\r\n          item._retailPrice = \"￥\" + item.retailPrice.toFixed(2);\r\n          item._allotPrice = \"￥\" + item.allotPrice.toFixed(2);\r\n          item._amount = \"￥\" + (item.quantity * item.allotPrice).toFixed(2);\r\n        });\r\n      }\r\n    },\r\n    // 点击搜索\r\n    searchTableData() {\r\n      this.formData.pageIndex = 1;\r\n      this.getTableData();\r\n    },\r\n    searchTableDataIn() {\r\n      this.tuneIn_fn();\r\n    },\r\n    initFormDataIn() {},\r\n    // 获取列表数据\r\n    getTableData() {\r\n      this.request(this.api.scb.channelWriteOffSettle_list, this.formData).then(\r\n        data => {\r\n          this.initTableData(data.data);\r\n          this.tableData = data;\r\n          data.data.forEach((item, idnex) => {\r\n            Object.assign(item, item.purchaseOrderDTO);\r\n            item._purchaseOrderStatus = this.orderStarusType[\r\n              item.purchaseOrderStatus\r\n            ];\r\n            item.updateTime = this.$options.filters.timestampToTime(item.updateTime);\r\n          });\r\n        }\r\n      );\r\n    },\r\n    // 初始化数据 导出使用\r\n    initTableData(data) {\r\n      if (data && data.length) {\r\n        data.forEach(item => {\r\n          item._createTime = this.$options.filters.timestampToTime(\r\n            item.createTime\r\n          );\r\n          item._amount = \"￥\" + item.amount;\r\n          item._difference =\r\n            item.difference === null ? \"--\" : item.difference ? \"是\" : \"否\";\r\n          item._differenceQty =\r\n            item.differenceQty === null ? \"--\" : item.differenceQty;\r\n          item._orderStatus = this.statusToName(item.orderStatus);\r\n        });\r\n      }\r\n    },\r\n    // 获取表格选中的\r\n    tableCheckChange(val) {\r\n      this.checkedTableData = val;\r\n    },\r\n    // 初始查询条件\r\n    initFormData() {\r\n      Object.assign(this.formData, {\r\n        // 结算客户名称\r\n        channelCustomerName: null,\r\n        // 结算类型\r\n        settleTypeName: null,\r\n        // 开始时间\r\n        startTime: null,\r\n        // 结束时间\r\n        endTime: null,\r\n        pageIndex: 1,\r\n        pageSize: 10\r\n      });\r\n    },\r\n    // 新增\r\n    addItem() {\r\n      let module = \"/\" + this.$route.path.split(\"/\")[1];\r\n      this.$router.push({\r\n        path: module + \"/order/allotGoods_order_edit\"\r\n      });\r\n    },\r\n    // 查看\r\n    seeItem(row) {\r\n      let module = \"/\" + this.$route.path.split(\"/\")[1];\r\n      this.$router.push({\r\n        path: module + \"/order/sell_order_detail\",\r\n        query: {\r\n          id: row.id\r\n        }\r\n      });\r\n    },\r\n    // 编辑\r\n    editItem(row) {\r\n      if(parseInt(row.writeOffValueCopy) == 0) {\r\n        this.warn('核销货值必须大于零时，可进行核销!','warning');\r\n        return;\r\n      }\r\n      let module = \"/\" + this.$route.path.split(\"/\")[1];\r\n      this.$router.push({\r\n        path: module + \"/channel/channel_edit\",\r\n        query: {\r\n          id: row.id,\r\n          outStoreId: row.channelCustomerId,\r\n          orderNum: row.purchaseOrderNum\r\n        }\r\n      });\r\n    },\r\n    // 作废\r\n    delItem(row) {\r\n      this.dialogTableVisible = true;\r\n    },\r\n    // 强制完成\r\n    finishItem(row) {\r\n      this.$confirm(\"执行撤销后，本期全部已核销商品将回退到未核销商品中，确认撤销吗？\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      })\r\n      .then(() => {\r\n        this.request(this.api.scb.purchaseOrder_cancle, {\r\n          orderId: row.id\r\n        }).then(data => {\r\n          this.getTableData();\r\n          this.warn(\"作废成功！\");\r\n        });\r\n      })\r\n      .catch(() => {\r\n        this.$message({\r\n          type: \"info\",\r\n          message: \"已取消删除\"\r\n        });\r\n      });\r\n    },\r\n    // 备注显示\r\n    remarksItem(row) {\r\n      this.remarksFormData.id = row.id;\r\n      this.remarksFormData.operationRemarks = row.operationRemarks;\r\n      this.remarksDialog = true;\r\n    },\r\n    // 备注提交\r\n    remarksSub() {\r\n      this.$refs.remarksForm.validate(valid => {\r\n        if (valid) {\r\n          this.request(\r\n            this.api.order.storeAllotGoodsOrder_insertRemarks,\r\n            this.remarksFormData\r\n          ).then(data => {\r\n            this.$notify.success({ title: \"成功\", message: \"备注成功\" });\r\n            this.remarksDialog = false;\r\n            this.getTableData();\r\n          });\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    // 状态转name\r\n    statusToName(val) {\r\n      if (!val && val !== 0) return;\r\n      let item = this.billType.find(item => {\r\n        return item.id === val;\r\n      });\r\n      if (item) {\r\n        return item.name;\r\n      } else {\r\n        return val;\r\n      }\r\n    },\r\n    // 获取发货门店数据\r\n    async getOutStoreList() {\r\n      // 获取userId\r\n      let info = await this.request(this.api.user.get_userinfo, {}, true);\r\n      // 获取直属机构\r\n      let organization = await this.request(\r\n        this.api.user.userCompany_getUserOrgByUserId,\r\n        { userId: info.userId },\r\n        true\r\n      );\r\n      // enableAllocation: 1  (启用门店调拨 后端需要)\r\n      this.request(this.api.retailStore.storeBasic_listBase, {\r\n        organizationId: organization.id,\r\n        enableAllocation: 1\r\n      }).then(data => {\r\n        this.outStoreList = data.data;\r\n      });\r\n    },\r\n    // 获取收货门店数据\r\n    getInStoreList() {\r\n      this.request(this.api.store.storeBasic_listStoreBasic, {}).then(data => {\r\n        this.inStoreList = data.data;\r\n      });\r\n    }\r\n  },\r\n  filters: {},\r\n  // 计算属性\r\n  computed: {},\r\n  // 监听数据变化\r\n  watch: {}\r\n};\r\n</script>\r\n"]}]}