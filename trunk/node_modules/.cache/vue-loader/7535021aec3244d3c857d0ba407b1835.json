{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\orders\\business\\purchase\\arrivalNotice_list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\orders\\business\\purchase\\arrivalNotice_list.vue","mtime":1576511796651},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { formatTimestamp } from \"@/utils/date\";\r\n\r\n/**\r\n * 基本管理\r\n */\r\nexport default {\r\n  data() {\r\n    return {\r\n      //货主\r\n      goodsOwner:'',\r\n      //得到权限Code\r\n      codeData: [],\r\n      filtersData: {\r\n        orderType:\"\",\r\n        searchKey: \"\", //搜索关键字\r\n        arrivalStatusList: [], //到货状态\r\n        warehousingStatusList: [], //入库状态\r\n        warehouseCodes: [], //收货仓库\r\n        supplierCodes: [], //供应商\r\n        startTime: \"\",\r\n        endTime: \"\",\r\n        pageIndex: 1, //当前页码\r\n        pageSize: 10 //每页数量\r\n      },\r\n      options1: [\r\n        {\r\n          value: \"03010101\",\r\n          label: \"未完成\"\r\n        },\r\n        {\r\n          value: \"03010102\",\r\n          label: \"同步失败\"\r\n        },\r\n        {\r\n          value: \"03010103\",\r\n          label: \"部分到货\"\r\n        },\r\n        {\r\n          value: \"08\",\r\n          label: \"已完成\"\r\n        },\r\n        {\r\n          value: \"15\",\r\n          label: \"已作废\"\r\n        },\r\n      ],\r\n      // NOT_WAREHOUSE(0,\"未入库\"),\r\n      //     PARTIAL_WAREHOUSE(1,\"部分入库\"),\r\n      // WAREHOUSED(2,\"全部入库\"),\r\n      //     OVERDUE_WAREHOUSE(3,\"入库超收\");\r\n      options2: [\r\n        {\r\n          value: \"1001\",\r\n          label: \"未入库\"\r\n        },\r\n        {\r\n          value: \"1002\",\r\n          label: \"部分入库\"\r\n        },\r\n        {\r\n          value: \"1003\",\r\n          label: \"全部入库\"\r\n        },\r\n        {\r\n          value: \"1004\",\r\n          label: \"入库超收\"\r\n        }\r\n      ],\r\n      tableListData: [],\r\n      totalAllCount: null,\r\n      datefilter: [],\r\n      //table中checkBox的状态\r\n      multipleSelection: [],\r\n      WarehouseCodeData: [], //收货仓库集合\r\n      suppliers: [] //供应商集合\r\n    };\r\n  },\r\n  // 过滤器\r\n  filters: {\r\n    //过滤入库状态\r\n    filterWarehousingStatus(val) {\r\n      switch (val) {\r\n        case \"1001\":\r\n          return \"未入库\";\r\n          break;\r\n        case \"1002\":\r\n          return \"部分入库\";\r\n          break;\r\n        case \"1003\":\r\n          return \"全部入库\";\r\n          break;\r\n        case \"1004\":\r\n          return \"超收入库\";\r\n          break;\r\n        default:\r\n          return \"--\"\r\n          break;   \r\n      }\r\n    },\r\n    //过滤作废状态\r\n    filterArrivalStatus(val) {\r\n      switch (val) {\r\n        case \"03010101\":\r\n          return \"未完成\";\r\n          break;\r\n        case \"03010102\":\r\n          return \"同步失败\";\r\n          break;\r\n        case \"03010103\":\r\n          return \"部分到货\";\r\n          break;\r\n        case \"08\":\r\n          return \"已完成\";\r\n          break;\r\n        case \"15\":\r\n          return \"已作废\";\r\n          break;\r\n        default:\r\n          return \"--\"\r\n          break; \r\n      }\r\n    },\r\n    filterOrderType(val){\r\n        switch (val) {\r\n        case \"030101\":\r\n          return \"仓库收货\";\r\n          break;\r\n        case \"030102\":\r\n          return \"门店收货\";\r\n          break;\r\n        default:\r\n          return \"--\"\r\n          break; \r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    //得到组织机构数据\r\n    this.getWarehouseListData();\r\n    this.getTableList();\r\n    // this.findReceivingLibraries();\r\n    this.getCodeLimitToBtnStatus(this.$route.meta.currentid);\r\n  },\r\n  methods: {\r\n    //得到组织机构数据\r\n    async getWarehouseListData() {\r\n      let info = await this.request(this.api.user.get_userinfo, {}, true);\r\n      console.log(info);\r\n      //得到部门Id\r\n      // this.signData.relationDepId = info.departId;\r\n\r\n      this.request(this.api.user.userCompany_getUserOrgByUserId, {\r\n        userId: info.userId,\r\n        type: 0\r\n      }).then(data => {\r\n        console.log(data);\r\n        //得到仓库数据\r\n        this.getWarehouseList(data.id);\r\n        //得到供货商数据\r\n        this.findSuppliers(data.id); \r\n        //获取货主列表\r\n        this.getGoodsOwnerListData(data.id);\r\n      });\r\n    },\r\n    // 得到code码，用来限制是否显示按钮\r\n    getCodeLimitToBtnStatus(codeId) {\r\n      this.request(this.api.user.crm_userCompany_authList, {\r\n        menuId: codeId\r\n      }).then(res => {\r\n        console.log(res);\r\n        this.codeData = res;\r\n      });\r\n    },\r\n    //获取列表\r\n    getTableList() {\r\n      this.request(\r\n        this.api.order.channelPurchaseArrivalOrder_list,\r\n        this.filtersData\r\n      ).then(data => {\r\n        console.log(data);\r\n        data.data.forEach(item => {\r\n          item.arrivalStatusName=this.$options.filters.filterArrivalStatus(item.arrivalStatus)\r\n          item.warehousingStatusName=this.$options.filters.filterWarehousingStatus(item.warehousingStatus)\r\n          item.orderTypeName=this.$options.filters.filterOrderType(item.orderType)\r\n          item.createTimeName=this.$options.filters.timestampToTime(item.createTime)\r\n        })\r\n        this.totalAllCount = data.totalCount;\r\n        this.tableListData = data.data;\r\n      });\r\n    },\r\n    //得到仓库列表\r\n    getWarehouseList(orgId) {\r\n      console.log(orgId);\r\n      this.request(this.api.warehouse.warehouseBase_warehouse_list, {\r\n        isValid: true,\r\n      }).then(res => {\r\n        console.log(res);\r\n        this.WarehouseCodeData = res.data;\r\n      });\r\n    },\r\n    //查询供应商列表\r\n    findSuppliers(organizationId) {\r\n      console.log(246);\r\n      this.request(this.api.product.supplier_list, {organizationId: organizationId,cooperation:true}).then(data => {\r\n        console.log(data);\r\n        this.suppliers = data.data;\r\n      });\r\n    },\r\n    //判断是否可以选择\r\n    isSelectCheck(row, index) {\r\n      if (row.orderStatus == 2) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n    //选中checkBox的状态\r\n    handleSelectionChange(val) {\r\n      this.multipleSelection = val;\r\n    },\r\n    //新增\r\n    openAddClass() {\r\n      this.$router.push({\r\n        path: \"/OS/business/purchase/arrivalNotice_add\",\r\n        query: {\r\n          type: \"add\"\r\n        }\r\n      });\r\n    },\r\n    //查看\r\n    openShowDetails(arrivalSn) {\r\n      console.log(arrivalSn);\r\n      this.$router.push({\r\n        path: \"/OS/business/purchase/arrivalNotice_check\",\r\n        name: \"arrivalNotice_check\",\r\n        query: {\r\n          arrivalSn: arrivalSn,\r\n          type: \"show\"\r\n        }\r\n      });\r\n    },\r\n    //导出\r\n    exportExcel() {\r\n      console.log(\"导出Excel表格...+++++++++++++++++++\");\r\n      require.ensure([], () => {\r\n        let { export_json_to_excel } = require(\"@/vendor/Export2Excel\");\r\n        let tHeader = [\r\n          \"发货单号\",\r\n          \"状态\",\r\n          \"关联采购订单号\",\r\n          \"入库状态\",\r\n          \"应收总数\",\r\n          \"实收总数\",\r\n          \"收货类型\",\r\n          \"收货仓库/门店\",\r\n          \"供应商\",\r\n          \"创建人\",\r\n          \"备注\",\r\n          \"创建时间\"\r\n        ];\r\n        // 上面设置Excel的表格第一行的标题\r\n        let filterVal = [\r\n          \"arrivalSn\",\r\n          \"arrivalStatusName\",\r\n          \"orderSn\",\r\n          \"warehousingStatusName\",\r\n          \"quantity\",\r\n          \"actualQuantity\",\r\n          \"orderTypeName\",\r\n          \"warehouse\",\r\n          \"supplier\",\r\n          \"createBy\",\r\n          \"remarks\",\r\n          \"createTimeName\"\r\n        ];\r\n        // 上面的index、nickName、name是tableData里对象的属性\r\n        let list = this.tableListData; //把data里的tableData存到list\r\n        let data = this.formatJson(filterVal, list);\r\n        export_json_to_excel(tHeader, data, \"到货表单\");\r\n      });\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => v[j]));\r\n    },\r\n    //查看质检报告\r\n    findQuality(id) {\r\n      console.log(id)\r\n      this.$router.push({\r\n        path:'/OS/business/purchase/arrivalNotice_report',\r\n        query:{\r\n          qualityId:id\r\n        }\r\n      })\r\n    },\r\n    //获取货主列表\r\n    getGoodsOwnerListData(organizationId) {\r\n      this.request(this.api.system.goodsOwner_list, {\r\n        orgId: organizationId\r\n      }).then(data => {\r\n        console.log(data.data);\r\n        this.goodsOwner = data.data[0].code;\r\n      });\r\n    },\r\n    //作废\r\n    deleteItem(val) {\r\n      console.log(val);\r\n      this.request(\r\n        this.api.order.channelPurchaseArrivalOrder_obsoleteByArrivalSn,\r\n        {arrivalSn: val.arrivalSn , goodsOwner:this.goodsOwner,orderType:val.orderType}\r\n      ).then(res => {\r\n        console.log(res);\r\n        this.getTableList();\r\n      });\r\n    },\r\n    //下拉框事件\r\n    handleCommand(row) {\r\n      console.log(row);\r\n      if (row.synchronization == \"synchronization\") {\r\n        //点击了同步\r\n        this.syncClickEvent(row.row);\r\n      }\r\n    },\r\n    //下拉框事件参数\r\n    dropdownItemValueChange(synchronization, row) {\r\n      return {\r\n        synchronization: synchronization,\r\n        row: row\r\n      };\r\n    },\r\n    //同步\r\n    syncClickEvent(row) {\r\n      this.request(\r\n        this.api.order.channelPurchaseArrivalOrder_syncChannelArrivalOrder,row\r\n      ).then(data => {\r\n        console.log(data);\r\n        this.getTableList();\r\n      });\r\n    },\r\n    //搜索\r\n    handleSearch() {\r\n      console.log(\"getTableList.........\");\r\n      this.filtersData.pageIndex = 1;\r\n      this.getTableList();\r\n    },\r\n\r\n    //清空重置\r\n    handleResetFilters(formName) {\r\n      this.$refs[formName].resetFields();\r\n      this.getTableList();\r\n    },\r\n    //当前页数修改时发生改变\r\n    handleCurrentChange(val) {\r\n      this.filtersData.pageIndex = val;\r\n      this.getTableList();\r\n    },\r\n    // 每页显示多少条时发生改变\r\n    handleSizeChange(val) {\r\n      this.filtersData.pageSize = val;\r\n      this.getTableList();\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["arrivalNotice_list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+LA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"arrivalNotice_list.vue","sourceRoot":"src/views/orders/business/purchase","sourcesContent":["<template>\r\n  <!--到货单-->\r\n  <div>\r\n    <div class=\"item-margin\">\r\n      <el-form\r\n        class=\"item-form\"\r\n        :model=\"filtersData\"\r\n        label-width=\"90px\"\r\n        size=\"small\"\r\n        ref=\"filtersForm\"\r\n        inline\r\n      >\r\n        <el-row>\r\n          <el-col>\r\n            <el-form-item prop=\"searchKey\" label=\"模糊查询：\">\r\n              <el-input class=\"input-w\" placeholder=\"到货单号/采购订单号\" v-model=\"filtersData.searchKey\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item prop=\"arrivalStatusList\" label=\"状态：\">\r\n              <el-select class=\"input-w\" placeholder=\"请选择\" v-model=\"filtersData.arrivalStatusList\" multiple>\r\n                <el-option\r\n                  v-for=\"item in options1\"\r\n                  :key=\"item.value\"\r\n                  :label=\"item.label\"\r\n                  :value=\"item.value\"\r\n                ></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item prop=\"warehousingStatusList\" label=\"入库状态：\">\r\n              <el-select class=\"input-w\" placeholder=\"请选择\" v-model=\"filtersData.warehousingStatusList\" multiple>\r\n                <el-option\r\n                  v-for=\"item in options2\"\r\n                  :key=\"item.value\"\r\n                  :label=\"item.label\"\r\n                  :value=\"item.value\"\r\n                ></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item prop=\"warehouseCodes\" label=\"入库仓：\">\r\n              <el-select class=\"input-w\" placeholder=\"请选择\" v-model=\"filtersData.warehouseCodes\" multiple>\r\n                <el-option\r\n                  v-for=\"item in WarehouseCodeData\"\r\n                  :key=\"item.id\"\r\n                  :label=\"item.warehouseName\"\r\n                  :value=\"item.id\"\r\n                ></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col>\r\n            <el-form-item prop=\"supplierCodes\" label=\"供应商：\">\r\n              <el-select class=\"input-w\" placeholder=\"请选择\" v-model=\"filtersData.supplierCodes\" multiple>\r\n                <el-option\r\n                  v-for=\"item in suppliers\"\r\n                  :key=\"item.id\"\r\n                  :label=\"item.name\"\r\n                  :value=\"item.code\"\r\n                ></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item prop=\"orderType\" label=\"收货类型：\">\r\n              <el-select class=\"input-w\" placeholder=\"请选择\" v-model=\"filtersData.orderType\">\r\n                <el-option label=\"门店收货\" value=\"030102\"></el-option>\r\n                <el-option label=\"仓库收货\" value=\"030101\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item prop=\"startTime\" label=\"创建时间：\">\r\n              <el-date-picker v-model=\"filtersData.startTime\" type=\"date\" placeholder=\"开始时间\"></el-date-picker>\r\n            </el-form-item>\r\n            <el-form-item prop=\"endTime\">\r\n              <el-date-picker v-model=\"filtersData.endTime\" type=\"date\" placeholder=\"结束时间\"></el-date-picker>\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button @click=\"handleSearch\" type=\"primary\" plain size=\"small\">搜索</el-button>\r\n              <el-button @click=\"handleResetFilters('filtersForm')\" size=\"small\">重置</el-button>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n      </el-form>\r\n    </div>\r\n    <!--table  -->\r\n    <div class=\"item-margin\">\r\n      <div class=\"item-cont\">\r\n        <el-button\r\n          size=\"small\"\r\n          type=\"primary\"\r\n          @click=\"openAddClass()\"\r\n          v-auth=\"codeData\"\r\n          data-code=\"DAM_CREATE\"\r\n        >新增</el-button>\r\n        <el-button size=\"small\" @click=\"exportExcel()\" v-auth=\"codeData\" data-code=\"DAM_EXPORT\">导出</el-button>\r\n      </div>\r\n      <div class=\"item-table\">\r\n        <el-table\r\n          :data=\"tableListData\"\r\n          stripe\r\n          empty-text=\"暂无数据\"\r\n          header-align=\"center\"\r\n          header-row-class-name=\"item-table-header\"\r\n          :highlight-current-row=\"true\"\r\n          @selection-change=\"handleSelectionChange\"\r\n        >\r\n          <el-table-column prop=\"arrivalSn\" align=\"center\" label=\"发货单号\" width=\"150\"></el-table-column>\r\n          <el-table-column align=\"center\" label=\"状态\" min-width=\"100\">\r\n            <template slot-scope=\"scope\">{{ scope.row.arrivalStatus | filterArrivalStatus}}</template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"orderSn\" align=\"center\" label=\"关联采购订单号\" width=\"210\"></el-table-column>\r\n          <el-table-column prop=\"warehousingStatus\" align=\"center\" label=\"入库状态\" min-width=\"100\">\r\n            <template slot-scope=\"scope\">{{ scope.row.warehousingStatus | filterWarehousingStatus}}</template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"quantity\" align=\"center\" label=\"应收总数\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"actualQuantity\" align=\"center\" label=\"实收总数\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"orderType\" align=\"center\" label=\"收货类型\" min-width=\"100\">\r\n            <template slot-scope=\"scope\">{{ scope.row.orderType | filterOrderType}}</template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"warehouse\" align=\"center\" label=\"收货仓库/门店\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"supplier\" align=\"center\" label=\"供应商\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"createBy\" align=\"center\" label=\"创建人\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"remarks\" align=\"center\" label=\"备注\" min-width=\"100\">\r\n            <template slot-scope=\"scope\">{{ scope.row.remarks?scope.row.remarks:'--'}}</template>\r\n          </el-table-column>\r\n          <el-table-column align=\"center\" label=\"创建时间\" min-width=\"150\">\r\n            <template slot-scope=\"scope\">{{ scope.row.createTime | timestampToTime}}</template>\r\n          </el-table-column>\r\n          <el-table-column\r\n            fixed=\"right\"\r\n            label-class-name=\"text-center\"\r\n            class-name=\"text-center\"\r\n            align=\"center\"\r\n            label=\"操作\"\r\n            width=\"200\"\r\n          >\r\n            <template slot-scope=\"scope\">\r\n              <el-button\r\n                @click=\"openShowDetails(scope.row.arrivalSn)\"\r\n                type=\"text\"\r\n                size=\"small\"\r\n                v-auth=\"codeData\"\r\n                data-code=\"DAM_VIEW\"\r\n              >查看</el-button>\r\n              <el-button\r\n                @click=\"deleteItem(scope.row)\"\r\n                type=\"text\"\r\n                size=\"small\"\r\n                v-auth=\"codeData\"\r\n                data-code=\"DAM_INVALID\"\r\n                :disabled=\"scope.row.arrivalStatus!='03010101' && scope.row.arrivalStatus!='03010102'\"\r\n              >作废</el-button>\r\n\r\n              <el-button\r\n                v-auth=\"codeData\"\r\n                data-code=\"DAM_VIEWREPORT\"\r\n                @click=\"findQuality(scope.row.id)\"\r\n                type=\"text\"\r\n                size=\"small\"\r\n              >查看质检报告</el-button>\r\n              <el-dropdown @command=\"handleCommand\">\r\n                <span class=\"el-dropdown-link\">\r\n                  <i class=\"el-icon-arrow-down el-icon--right\"></i>\r\n                </span>\r\n                <el-dropdown-menu slot=\"dropdown\">\r\n                  <el-dropdown-item\r\n                    :disabled=\"scope.row.arrivalStatus!='03010102'\"\r\n                    :command=\"dropdownItemValueChange('synchronization',scope.row)\"\r\n                  >同步</el-dropdown-item>\r\n                </el-dropdown-menu>\r\n              </el-dropdown>\r\n              <!-- <el-button @click=\"syncClickEvent(scope.row)\" type=\"text\" size=\"small\">同步</el-button> -->\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n        <div class=\"pagination mt-10 mb-20\">\r\n          <el-pagination\r\n            class=\"mr-20\"\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"filtersData.pageIndex\"\r\n            :page-sizes=\"[10,20,30,40,50]\"\r\n            :page-size=\"filtersData.pageSize\"\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=\"totalAllCount\"\r\n          ></el-pagination>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!--table END  -->\r\n    <!--<tp-class-details :itemParam=\"itemStautsParam\"  @refreshItem=\"refreshList\" ref=\"positionDetailsCpt\"></tp-class-details>-->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { formatTimestamp } from \"@/utils/date\";\r\n\r\n/**\r\n * 基本管理\r\n */\r\nexport default {\r\n  data() {\r\n    return {\r\n      //货主\r\n      goodsOwner:'',\r\n      //得到权限Code\r\n      codeData: [],\r\n      filtersData: {\r\n        orderType:\"\",\r\n        searchKey: \"\", //搜索关键字\r\n        arrivalStatusList: [], //到货状态\r\n        warehousingStatusList: [], //入库状态\r\n        warehouseCodes: [], //收货仓库\r\n        supplierCodes: [], //供应商\r\n        startTime: \"\",\r\n        endTime: \"\",\r\n        pageIndex: 1, //当前页码\r\n        pageSize: 10 //每页数量\r\n      },\r\n      options1: [\r\n        {\r\n          value: \"03010101\",\r\n          label: \"未完成\"\r\n        },\r\n        {\r\n          value: \"03010102\",\r\n          label: \"同步失败\"\r\n        },\r\n        {\r\n          value: \"03010103\",\r\n          label: \"部分到货\"\r\n        },\r\n        {\r\n          value: \"08\",\r\n          label: \"已完成\"\r\n        },\r\n        {\r\n          value: \"15\",\r\n          label: \"已作废\"\r\n        },\r\n      ],\r\n      // NOT_WAREHOUSE(0,\"未入库\"),\r\n      //     PARTIAL_WAREHOUSE(1,\"部分入库\"),\r\n      // WAREHOUSED(2,\"全部入库\"),\r\n      //     OVERDUE_WAREHOUSE(3,\"入库超收\");\r\n      options2: [\r\n        {\r\n          value: \"1001\",\r\n          label: \"未入库\"\r\n        },\r\n        {\r\n          value: \"1002\",\r\n          label: \"部分入库\"\r\n        },\r\n        {\r\n          value: \"1003\",\r\n          label: \"全部入库\"\r\n        },\r\n        {\r\n          value: \"1004\",\r\n          label: \"入库超收\"\r\n        }\r\n      ],\r\n      tableListData: [],\r\n      totalAllCount: null,\r\n      datefilter: [],\r\n      //table中checkBox的状态\r\n      multipleSelection: [],\r\n      WarehouseCodeData: [], //收货仓库集合\r\n      suppliers: [] //供应商集合\r\n    };\r\n  },\r\n  // 过滤器\r\n  filters: {\r\n    //过滤入库状态\r\n    filterWarehousingStatus(val) {\r\n      switch (val) {\r\n        case \"1001\":\r\n          return \"未入库\";\r\n          break;\r\n        case \"1002\":\r\n          return \"部分入库\";\r\n          break;\r\n        case \"1003\":\r\n          return \"全部入库\";\r\n          break;\r\n        case \"1004\":\r\n          return \"超收入库\";\r\n          break;\r\n        default:\r\n          return \"--\"\r\n          break;   \r\n      }\r\n    },\r\n    //过滤作废状态\r\n    filterArrivalStatus(val) {\r\n      switch (val) {\r\n        case \"03010101\":\r\n          return \"未完成\";\r\n          break;\r\n        case \"03010102\":\r\n          return \"同步失败\";\r\n          break;\r\n        case \"03010103\":\r\n          return \"部分到货\";\r\n          break;\r\n        case \"08\":\r\n          return \"已完成\";\r\n          break;\r\n        case \"15\":\r\n          return \"已作废\";\r\n          break;\r\n        default:\r\n          return \"--\"\r\n          break; \r\n      }\r\n    },\r\n    filterOrderType(val){\r\n        switch (val) {\r\n        case \"030101\":\r\n          return \"仓库收货\";\r\n          break;\r\n        case \"030102\":\r\n          return \"门店收货\";\r\n          break;\r\n        default:\r\n          return \"--\"\r\n          break; \r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    //得到组织机构数据\r\n    this.getWarehouseListData();\r\n    this.getTableList();\r\n    // this.findReceivingLibraries();\r\n    this.getCodeLimitToBtnStatus(this.$route.meta.currentid);\r\n  },\r\n  methods: {\r\n    //得到组织机构数据\r\n    async getWarehouseListData() {\r\n      let info = await this.request(this.api.user.get_userinfo, {}, true);\r\n      console.log(info);\r\n      //得到部门Id\r\n      // this.signData.relationDepId = info.departId;\r\n\r\n      this.request(this.api.user.userCompany_getUserOrgByUserId, {\r\n        userId: info.userId,\r\n        type: 0\r\n      }).then(data => {\r\n        console.log(data);\r\n        //得到仓库数据\r\n        this.getWarehouseList(data.id);\r\n        //得到供货商数据\r\n        this.findSuppliers(data.id); \r\n        //获取货主列表\r\n        this.getGoodsOwnerListData(data.id);\r\n      });\r\n    },\r\n    // 得到code码，用来限制是否显示按钮\r\n    getCodeLimitToBtnStatus(codeId) {\r\n      this.request(this.api.user.crm_userCompany_authList, {\r\n        menuId: codeId\r\n      }).then(res => {\r\n        console.log(res);\r\n        this.codeData = res;\r\n      });\r\n    },\r\n    //获取列表\r\n    getTableList() {\r\n      this.request(\r\n        this.api.order.channelPurchaseArrivalOrder_list,\r\n        this.filtersData\r\n      ).then(data => {\r\n        console.log(data);\r\n        data.data.forEach(item => {\r\n          item.arrivalStatusName=this.$options.filters.filterArrivalStatus(item.arrivalStatus)\r\n          item.warehousingStatusName=this.$options.filters.filterWarehousingStatus(item.warehousingStatus)\r\n          item.orderTypeName=this.$options.filters.filterOrderType(item.orderType)\r\n          item.createTimeName=this.$options.filters.timestampToTime(item.createTime)\r\n        })\r\n        this.totalAllCount = data.totalCount;\r\n        this.tableListData = data.data;\r\n      });\r\n    },\r\n    //得到仓库列表\r\n    getWarehouseList(orgId) {\r\n      console.log(orgId);\r\n      this.request(this.api.warehouse.warehouseBase_warehouse_list, {\r\n        isValid: true,\r\n      }).then(res => {\r\n        console.log(res);\r\n        this.WarehouseCodeData = res.data;\r\n      });\r\n    },\r\n    //查询供应商列表\r\n    findSuppliers(organizationId) {\r\n      console.log(246);\r\n      this.request(this.api.product.supplier_list, {organizationId: organizationId,cooperation:true}).then(data => {\r\n        console.log(data);\r\n        this.suppliers = data.data;\r\n      });\r\n    },\r\n    //判断是否可以选择\r\n    isSelectCheck(row, index) {\r\n      if (row.orderStatus == 2) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n    //选中checkBox的状态\r\n    handleSelectionChange(val) {\r\n      this.multipleSelection = val;\r\n    },\r\n    //新增\r\n    openAddClass() {\r\n      this.$router.push({\r\n        path: \"/OS/business/purchase/arrivalNotice_add\",\r\n        query: {\r\n          type: \"add\"\r\n        }\r\n      });\r\n    },\r\n    //查看\r\n    openShowDetails(arrivalSn) {\r\n      console.log(arrivalSn);\r\n      this.$router.push({\r\n        path: \"/OS/business/purchase/arrivalNotice_check\",\r\n        name: \"arrivalNotice_check\",\r\n        query: {\r\n          arrivalSn: arrivalSn,\r\n          type: \"show\"\r\n        }\r\n      });\r\n    },\r\n    //导出\r\n    exportExcel() {\r\n      console.log(\"导出Excel表格...+++++++++++++++++++\");\r\n      require.ensure([], () => {\r\n        let { export_json_to_excel } = require(\"@/vendor/Export2Excel\");\r\n        let tHeader = [\r\n          \"发货单号\",\r\n          \"状态\",\r\n          \"关联采购订单号\",\r\n          \"入库状态\",\r\n          \"应收总数\",\r\n          \"实收总数\",\r\n          \"收货类型\",\r\n          \"收货仓库/门店\",\r\n          \"供应商\",\r\n          \"创建人\",\r\n          \"备注\",\r\n          \"创建时间\"\r\n        ];\r\n        // 上面设置Excel的表格第一行的标题\r\n        let filterVal = [\r\n          \"arrivalSn\",\r\n          \"arrivalStatusName\",\r\n          \"orderSn\",\r\n          \"warehousingStatusName\",\r\n          \"quantity\",\r\n          \"actualQuantity\",\r\n          \"orderTypeName\",\r\n          \"warehouse\",\r\n          \"supplier\",\r\n          \"createBy\",\r\n          \"remarks\",\r\n          \"createTimeName\"\r\n        ];\r\n        // 上面的index、nickName、name是tableData里对象的属性\r\n        let list = this.tableListData; //把data里的tableData存到list\r\n        let data = this.formatJson(filterVal, list);\r\n        export_json_to_excel(tHeader, data, \"到货表单\");\r\n      });\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => v[j]));\r\n    },\r\n    //查看质检报告\r\n    findQuality(id) {\r\n      console.log(id)\r\n      this.$router.push({\r\n        path:'/OS/business/purchase/arrivalNotice_report',\r\n        query:{\r\n          qualityId:id\r\n        }\r\n      })\r\n    },\r\n    //获取货主列表\r\n    getGoodsOwnerListData(organizationId) {\r\n      this.request(this.api.system.goodsOwner_list, {\r\n        orgId: organizationId\r\n      }).then(data => {\r\n        console.log(data.data);\r\n        this.goodsOwner = data.data[0].code;\r\n      });\r\n    },\r\n    //作废\r\n    deleteItem(val) {\r\n      console.log(val);\r\n      this.request(\r\n        this.api.order.channelPurchaseArrivalOrder_obsoleteByArrivalSn,\r\n        {arrivalSn: val.arrivalSn , goodsOwner:this.goodsOwner,orderType:val.orderType}\r\n      ).then(res => {\r\n        console.log(res);\r\n        this.getTableList();\r\n      });\r\n    },\r\n    //下拉框事件\r\n    handleCommand(row) {\r\n      console.log(row);\r\n      if (row.synchronization == \"synchronization\") {\r\n        //点击了同步\r\n        this.syncClickEvent(row.row);\r\n      }\r\n    },\r\n    //下拉框事件参数\r\n    dropdownItemValueChange(synchronization, row) {\r\n      return {\r\n        synchronization: synchronization,\r\n        row: row\r\n      };\r\n    },\r\n    //同步\r\n    syncClickEvent(row) {\r\n      this.request(\r\n        this.api.order.channelPurchaseArrivalOrder_syncChannelArrivalOrder,row\r\n      ).then(data => {\r\n        console.log(data);\r\n        this.getTableList();\r\n      });\r\n    },\r\n    //搜索\r\n    handleSearch() {\r\n      console.log(\"getTableList.........\");\r\n      this.filtersData.pageIndex = 1;\r\n      this.getTableList();\r\n    },\r\n\r\n    //清空重置\r\n    handleResetFilters(formName) {\r\n      this.$refs[formName].resetFields();\r\n      this.getTableList();\r\n    },\r\n    //当前页数修改时发生改变\r\n    handleCurrentChange(val) {\r\n      this.filtersData.pageIndex = val;\r\n      this.getTableList();\r\n    },\r\n    // 每页显示多少条时发生改变\r\n    handleSizeChange(val) {\r\n      this.filtersData.pageSize = val;\r\n      this.getTableList();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n</style>"]}]}