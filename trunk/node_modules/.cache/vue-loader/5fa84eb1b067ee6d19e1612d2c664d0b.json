{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\store\\data\\store_member_list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\store\\data\\store_member_list.vue","mtime":1572415124725},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport {getToken} from '@/utils/auth'\r\nimport codeSet from '@/components/codeSet'\r\nimport treeDept from '@/components/treeDept'\r\n// echarts/lib/chart/line\r\nimport echarts from 'echarts';\r\nlet token=getToken()\r\n\r\nexport default {\r\n\r\n   data() {\r\n      return{\r\n         value:'',\r\n         // 维度列表\r\n         dimensionality_list:[{\r\n            name:'销售收入',\r\n            id:0\r\n         },{\r\n            name:'退货率',\r\n            id:1\r\n         },{\r\n            name:'客单价',\r\n            id:2\r\n         },{\r\n            name:'件单价',\r\n            id:3\r\n         },{\r\n            name:'连带率',\r\n            id:4\r\n         }],\r\n         // 筛选日期列表\r\n         filtersDate_list:[{\r\n            name:'今日',\r\n            id:0\r\n         },{\r\n            name:'近7日',\r\n            id:1\r\n         },{\r\n            name:'近30日',\r\n            id:2\r\n         },{\r\n            name:'本月',\r\n            id:3\r\n         }],\r\n         // 筛选图表列表\r\n         filtersChart_list:[{\r\n            name:'趋势图',\r\n            id:0\r\n         },{\r\n            name:'汇总图',\r\n            id:1\r\n         }],\r\n         // 选中筛选日期下标\r\n         checkDate_index:2,\r\n         // 选中筛选图表下标\r\n         checkChart_index:1,\r\n         // data数据\r\n         getList_data:{},\r\n         // 选中的表格数据\r\n         checkedTableData: [],\r\n         // 获取门店信列表\r\n         getStoreList_data:[],\r\n         filtersData: {\r\n            \"id\": \"\",\r\n            \"organizationId\":\"\",\r\n            \"queryBegin\":\"\",\r\n            \"queryEnd\":\"\",\r\n            \"orderBy\": \"\",\r\n            \"pageIndex\": 1,\r\n            \"pageSize\": 10\r\n         },\r\n         // 门店列表请求参数\r\n         filtersDataStore:{\r\n            pageIndex: '',// 当前页码\r\n            pageSize: '',// 每页数量\r\n            name:'',// 门店名称\r\n            organizationId:'',// 隶属机构\r\n            businessStatus:'',// 营业状态\r\n            type:'',// 门店类型\r\n            createBegin:'',// 创建时间开始\r\n            createEnd:''// 创建时间结束\r\n         }\r\n      }\r\n   },\r\n   mounted() {\r\n      // 基于准备好的dom，初始化echarts实例\r\n        var myChart = echarts.init(document.getElementById('chart_example'));\r\n\r\n        // 指定图表的配置项和数据\r\n        var option = {\r\n            title: {\r\n                text: 'ECharts 入门示例'\r\n            },\r\n            tooltip: {},\r\n            legend: {\r\n                data:['销量']\r\n            },\r\n            xAxis: {\r\n                data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\r\n            },\r\n            yAxis: {},\r\n            series: [{\r\n                name: '销量',\r\n                type: 'bar',\r\n                data: [5, 20, 36, 10, 10, 20]\r\n            }]\r\n        };\r\n\r\n        // 使用刚指定的配置项和数据显示图表。\r\n        myChart.setOption(option);\r\n   },\r\n   created() {\r\n      const that = this;\r\n\r\n      this.getList(); // 获取数据列表 \r\n      this.getStoreList(); // 获取门店列表\r\n   },\r\n   methods: {\r\n      /**\r\n       * 选择筛选日期\r\n       */\r\n      handleFiltersDate(index) {\r\n         this.checkDate_index = index;\r\n         console.log(index)\r\n      },\r\n      /**\r\n       * 选择筛选图表\r\n       */\r\n      handleFiltersChart(index) {\r\n         this.checkChart_index = index;\r\n      },\r\n      // 点击页数\r\n      handleCurrentChange(pageIndex){\r\n         this.filtersData.pageIndex = pageIndex;\r\n         this.getList();\r\n      },\r\n      // 点击每页多少条数\r\n      handleSizeChange(pageSize){\r\n         this.filtersData.pageSize = pageSize;\r\n         this.getList();\r\n      },\r\n      /**\r\n       * 查询订单列表\r\n       */\r\n      getList() {\r\n         const that = this;\r\n\r\n         this.request(\r\n         that.api.store.storePerformance_list,\r\n         this.filtersData\r\n         ).then(res => {\r\n            that.getList_data = res;\r\n            // 处理数据，导出数据用\r\n            res.data.forEach((item, index) => {\r\n               // 成交比\r\n               item.reservationScale = item.reservationOrderTotalNum && item.reservationOrderCompleteTotalNum ? (item.reservationOrderCompleteTotalNum/item.reservationOrderTotalNum).toFixed(2) + '%' : 0 ;\r\n               // 查询时间\r\n               item.queryTime = this.$options.filters.timestampToTime(item.queryBegin).match(/\\d+-\\d+-\\d+/) + ' ' +this.$options.filters.timestampToTime(item.queryEnd).match(/\\d+-\\d+-\\d+/);\r\n            });\r\n         });\r\n      },\r\n      //导出\r\n      exportExcel() {\r\n         if(this.checkedTableData.length === 0){\r\n            this.$notify.error({ title: '错误',message: '请选择数据'});\r\n            return\r\n         }\r\n         require.ensure([], () => {\r\n            let { export_json_to_excel, export_table_to_excel } = require(\"@/vendor/Export2Excel\");\r\n            let tHeader = [\r\n            \"所在门店\",\r\n            \"隶属机构\",\r\n            \"员工数量\",\r\n            \"销售订单总单量\",\r\n            \"销售订单总金额\",\r\n            \"预约单总单量\",\r\n            \"预约单成交总单量\",\r\n            \"预约单成交比\",\r\n            \"销售退货总单量\",\r\n            \"销售退货单总金额\",\r\n            \"查询时间\",\r\n            ];\r\n            // 上面设置Excel的表格第一行的标题\r\n            let filterVal = [\r\n            \"storeName\",\r\n            \"organizationName\",\r\n            \"personNum\",\r\n            \"salesOrderTotalNum\",\r\n            \"salesOrderSumMoney\",\r\n            \"reservationOrderTotalNum\",\r\n            \"reservationOrderCompleteTotalNum\",\r\n            \"reservationScale\",\r\n            \"salesReturnTotalNum\",\r\n            \"salesReturnSumMoney\",\r\n            \"queryTime\"\r\n            ];\r\n            // 上面的index、nickName、name是tableData里对象的属性\r\n            let list = this.checkedTableData; //把data里的tableData存到list\r\n            let data = this.formatJson(filterVal, list);\r\n            export_json_to_excel(tHeader, data, \"门店业绩综合查询\");\r\n         });\r\n      },\r\n      formatJson(filterVal, jsonData) {\r\n         return jsonData.map(v => filterVal.map(j => v[j]));\r\n      },\r\n      tableCheckChange(val){\r\n         this.checkedTableData = val;\r\n      },\r\n      /**\r\n       * 查询门店列表\r\n       */\r\n      getStoreList() {\r\n         const that = this;\r\n\r\n         this.request(\r\n         that.api.store.storeBasic_list,\r\n         this.filtersDataStore\r\n         ).then(res => {\r\n            that.getStoreList_data = res;\r\n         });\r\n      },\r\n      /**\r\n       * 跳转工单详情\r\n       */\r\n      href(routeName, param) {\r\n         this.$router.push({\r\n            path: '/' + routeName,\r\n            name: routeName,\r\n            query: param\r\n         })\r\n      },\r\n      /**\r\n       * 模糊搜索\r\n       */\r\n      handleSearch() {\r\n         this.filtersData.pageIndex = 1;\r\n         this.getList();\r\n      },\r\n      /**\r\n       * 搜索重置\r\n       */\r\n      handleResetFilters() {\r\n         Object.assign(this.filtersData, {\r\n            \"id\": \"\",\r\n            \"organizationId\":\"\",\r\n            \"queryBegin\":\"\",\r\n            \"queryEnd\":\"\",\r\n            \"orderBy\": \"\",\r\n            \"pageIndex\": 1,\r\n            \"pageSize\": 10\r\n         });\r\n      },\r\n   },\r\n   components:{\r\n      codeSet,\r\n      treeDept\r\n   }\r\n}\r\n",{"version":3,"sources":["store_member_list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"store_member_list.vue","sourceRoot":"src/views/store/data","sourcesContent":["<template>\r\n   <div>\r\n      <!-- 模糊搜索 -->\r\n      <div class=\"item-margin\">\r\n         <el-form\r\n            class=\"item-form\"\r\n            size=\"small\"\r\n            :inline=\"true\"\r\n            :model=\"filtersData\">\r\n            <el-form-item label=\"指标：\">\r\n              <el-select v-model=\"filtersData.name\" clearable filterable>\r\n                 <el-option v-for=\"(item, index) in dimensionality_list\" :label=\"item.name\" :key=\"index\" :value=\"item.id\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"筛选门店：\">\r\n              <el-select \r\n                  v-model=\"filtersData.age\" \r\n                  clearable \r\n                  filterable \r\n                  :multiple-limit=\"3\"\r\n                  style=\"width:370px;\"\r\n                  placeholder=\"请选择门店，最多可选择3个门店\"\r\n                  multiple>\r\n                 <el-option v-for=\"(item, index) in getStoreList_data.data\" :label=\"item.name\" :key=\"index\" :value=\"item.id\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <!-- <el-form-item label=\"查询时间：\" prop=\"createTimeBegin\">\r\n            <el-date-picker v-model=\"filtersData.queryBegin\"  type=\"date\" placeholder=\"开始日期\"></el-date-picker>\r\n            </el-form-item>\r\n            <el-form-item prop=\"createTimeEnd\">\r\n               <el-date-picker v-model=\"filtersData.queryEnd\"  type=\"date\" placeholder=\"结束日期\"></el-date-picker> -->\r\n            <!-- </el-form-item> -->\r\n            <!-- 搜索，重置 -->\r\n            <el-form-item>\r\n               <el-button @click=\"handleSearch\" type=\"primary\" plain size=\"small\">搜索</el-button>\r\n               <el-button @click=\"handleResetFilters\" size=\"small\">重置</el-button>\r\n            </el-form-item>\r\n         </el-form>\r\n      </div>\r\n      <!-- 模糊搜索 -->\r\n      <!-- 门店会员 -->\r\n      <div class=\"box\">\r\n         <!-- 图表筛选条件 -->\r\n         <div class=\"chart-filters\">\r\n            <!-- 时间筛选 -->\r\n            <div>\r\n               <span \r\n                  :class=\"{'filters-check':checkDate_index==index}\" \r\n                  :key=\"index\" \r\n                  v-for=\"(item, index) in filtersDate_list\"\r\n                  @click=\"handleFiltersDate(index)\"\r\n                  >{{ item.name }}\r\n               </span>\r\n               <span>时间筛选：----/--/--:----/--/--<i :class=\"['ml-5',1 ? 'el-icon-arrow-down' : 'el-icon-arrow-up']\"></i></span>\r\n               <template>\r\n               <div class=\"block\">\r\n                  <p>组件值：{{ value }}</p>\r\n                  <el-date-picker\r\n                     v-model=\"value\"\r\n                     type=\"daterange\"\r\n                     start-placeholder=\"开始日期\"\r\n                     end-placeholder=\"结束日期\"\r\n                     :default-time=\"['00:00:00', '23:59:59']\">\r\n                  </el-date-picker>\r\n               </div>\r\n               </template>\r\n            </div>\r\n            <!-- 图表筛选 -->\r\n            <div class=\"chart-classify\">\r\n               <span \r\n                  :class=\"{'chart-classify-check':checkChart_index == index}\" \r\n                  :key=\"index\" \r\n                  v-for=\"(item, index) in filtersChart_list\"\r\n                  @click=\"handleFiltersChart(index)\"\r\n               >{{ item.name }}</span>\r\n            </div>\r\n         </div>\r\n         <!-- echarts图表 -->\r\n         <div id=\"chart_example\" class=\"mt-30\"></div>\r\n         <el-button size=\"small\" type=\"primary\" @click=\"exportExcel\">导出</el-button>\r\n         <el-table\r\n            :data=\"getList_data.data\"\r\n            stripe\r\n            empty-text=\"暂无数据\"\r\n            header-align=\"center\" \r\n            @selection-change=\"tableCheckChange\"\r\n            header-row-class-name=\"item-table-header\"\r\n            :highlight-current-row=\"true\">\r\n            <el-table-column\r\n               type=\"selection\"\r\n               width=\"55\">\r\n            </el-table-column>\r\n            <el-table-column align=\"left\" :show-overflow-tooltip=\"true\" label=\"1\" min-width=\"70\" :key=\"index\" v-for=\"(item, index) in 10\">\r\n               <template  slot-scope=\"scope\">{{ scope.row.storeName || '--' }}</template>\r\n            </el-table-column>\r\n         </el-table>\r\n         <div class=\"pagination mt-10 mb-20\">\r\n            <!-- 分页 -->\r\n            <el-pagination\r\n               class=\"mr-20\"\r\n               @size-change=\"handleSizeChange\"\r\n               @current-change=\"handleCurrentChange\"\r\n               :current-page=\"filtersData.pageIndex\"\r\n               :page-sizes=\"[10,20,30,40,50]\"\r\n               :page-size=\"filtersData.pageSize\"\r\n               layout=\"total, sizes, prev, pager, next, jumper\"\r\n               :total=\"getList_data.totalCount\"\r\n            ></el-pagination>\r\n         </div>\r\n      </div>\r\n      <!-- 工单列表 -->\r\n   </div>\r\n</template>\r\n<!-- 工单池 -->\r\n<script>\r\nimport {getToken} from '@/utils/auth'\r\nimport codeSet from '@/components/codeSet'\r\nimport treeDept from '@/components/treeDept'\r\n// echarts/lib/chart/line\r\nimport echarts from 'echarts';\r\nlet token=getToken()\r\n\r\nexport default {\r\n\r\n   data() {\r\n      return{\r\n         value:'',\r\n         // 维度列表\r\n         dimensionality_list:[{\r\n            name:'销售收入',\r\n            id:0\r\n         },{\r\n            name:'退货率',\r\n            id:1\r\n         },{\r\n            name:'客单价',\r\n            id:2\r\n         },{\r\n            name:'件单价',\r\n            id:3\r\n         },{\r\n            name:'连带率',\r\n            id:4\r\n         }],\r\n         // 筛选日期列表\r\n         filtersDate_list:[{\r\n            name:'今日',\r\n            id:0\r\n         },{\r\n            name:'近7日',\r\n            id:1\r\n         },{\r\n            name:'近30日',\r\n            id:2\r\n         },{\r\n            name:'本月',\r\n            id:3\r\n         }],\r\n         // 筛选图表列表\r\n         filtersChart_list:[{\r\n            name:'趋势图',\r\n            id:0\r\n         },{\r\n            name:'汇总图',\r\n            id:1\r\n         }],\r\n         // 选中筛选日期下标\r\n         checkDate_index:2,\r\n         // 选中筛选图表下标\r\n         checkChart_index:1,\r\n         // data数据\r\n         getList_data:{},\r\n         // 选中的表格数据\r\n         checkedTableData: [],\r\n         // 获取门店信列表\r\n         getStoreList_data:[],\r\n         filtersData: {\r\n            \"id\": \"\",\r\n            \"organizationId\":\"\",\r\n            \"queryBegin\":\"\",\r\n            \"queryEnd\":\"\",\r\n            \"orderBy\": \"\",\r\n            \"pageIndex\": 1,\r\n            \"pageSize\": 10\r\n         },\r\n         // 门店列表请求参数\r\n         filtersDataStore:{\r\n            pageIndex: '',// 当前页码\r\n            pageSize: '',// 每页数量\r\n            name:'',// 门店名称\r\n            organizationId:'',// 隶属机构\r\n            businessStatus:'',// 营业状态\r\n            type:'',// 门店类型\r\n            createBegin:'',// 创建时间开始\r\n            createEnd:''// 创建时间结束\r\n         }\r\n      }\r\n   },\r\n   mounted() {\r\n      // 基于准备好的dom，初始化echarts实例\r\n        var myChart = echarts.init(document.getElementById('chart_example'));\r\n\r\n        // 指定图表的配置项和数据\r\n        var option = {\r\n            title: {\r\n                text: 'ECharts 入门示例'\r\n            },\r\n            tooltip: {},\r\n            legend: {\r\n                data:['销量']\r\n            },\r\n            xAxis: {\r\n                data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\r\n            },\r\n            yAxis: {},\r\n            series: [{\r\n                name: '销量',\r\n                type: 'bar',\r\n                data: [5, 20, 36, 10, 10, 20]\r\n            }]\r\n        };\r\n\r\n        // 使用刚指定的配置项和数据显示图表。\r\n        myChart.setOption(option);\r\n   },\r\n   created() {\r\n      const that = this;\r\n\r\n      this.getList(); // 获取数据列表 \r\n      this.getStoreList(); // 获取门店列表\r\n   },\r\n   methods: {\r\n      /**\r\n       * 选择筛选日期\r\n       */\r\n      handleFiltersDate(index) {\r\n         this.checkDate_index = index;\r\n         console.log(index)\r\n      },\r\n      /**\r\n       * 选择筛选图表\r\n       */\r\n      handleFiltersChart(index) {\r\n         this.checkChart_index = index;\r\n      },\r\n      // 点击页数\r\n      handleCurrentChange(pageIndex){\r\n         this.filtersData.pageIndex = pageIndex;\r\n         this.getList();\r\n      },\r\n      // 点击每页多少条数\r\n      handleSizeChange(pageSize){\r\n         this.filtersData.pageSize = pageSize;\r\n         this.getList();\r\n      },\r\n      /**\r\n       * 查询订单列表\r\n       */\r\n      getList() {\r\n         const that = this;\r\n\r\n         this.request(\r\n         that.api.store.storePerformance_list,\r\n         this.filtersData\r\n         ).then(res => {\r\n            that.getList_data = res;\r\n            // 处理数据，导出数据用\r\n            res.data.forEach((item, index) => {\r\n               // 成交比\r\n               item.reservationScale = item.reservationOrderTotalNum && item.reservationOrderCompleteTotalNum ? (item.reservationOrderCompleteTotalNum/item.reservationOrderTotalNum).toFixed(2) + '%' : 0 ;\r\n               // 查询时间\r\n               item.queryTime = this.$options.filters.timestampToTime(item.queryBegin).match(/\\d+-\\d+-\\d+/) + ' ' +this.$options.filters.timestampToTime(item.queryEnd).match(/\\d+-\\d+-\\d+/);\r\n            });\r\n         });\r\n      },\r\n      //导出\r\n      exportExcel() {\r\n         if(this.checkedTableData.length === 0){\r\n            this.$notify.error({ title: '错误',message: '请选择数据'});\r\n            return\r\n         }\r\n         require.ensure([], () => {\r\n            let { export_json_to_excel, export_table_to_excel } = require(\"@/vendor/Export2Excel\");\r\n            let tHeader = [\r\n            \"所在门店\",\r\n            \"隶属机构\",\r\n            \"员工数量\",\r\n            \"销售订单总单量\",\r\n            \"销售订单总金额\",\r\n            \"预约单总单量\",\r\n            \"预约单成交总单量\",\r\n            \"预约单成交比\",\r\n            \"销售退货总单量\",\r\n            \"销售退货单总金额\",\r\n            \"查询时间\",\r\n            ];\r\n            // 上面设置Excel的表格第一行的标题\r\n            let filterVal = [\r\n            \"storeName\",\r\n            \"organizationName\",\r\n            \"personNum\",\r\n            \"salesOrderTotalNum\",\r\n            \"salesOrderSumMoney\",\r\n            \"reservationOrderTotalNum\",\r\n            \"reservationOrderCompleteTotalNum\",\r\n            \"reservationScale\",\r\n            \"salesReturnTotalNum\",\r\n            \"salesReturnSumMoney\",\r\n            \"queryTime\"\r\n            ];\r\n            // 上面的index、nickName、name是tableData里对象的属性\r\n            let list = this.checkedTableData; //把data里的tableData存到list\r\n            let data = this.formatJson(filterVal, list);\r\n            export_json_to_excel(tHeader, data, \"门店业绩综合查询\");\r\n         });\r\n      },\r\n      formatJson(filterVal, jsonData) {\r\n         return jsonData.map(v => filterVal.map(j => v[j]));\r\n      },\r\n      tableCheckChange(val){\r\n         this.checkedTableData = val;\r\n      },\r\n      /**\r\n       * 查询门店列表\r\n       */\r\n      getStoreList() {\r\n         const that = this;\r\n\r\n         this.request(\r\n         that.api.store.storeBasic_list,\r\n         this.filtersDataStore\r\n         ).then(res => {\r\n            that.getStoreList_data = res;\r\n         });\r\n      },\r\n      /**\r\n       * 跳转工单详情\r\n       */\r\n      href(routeName, param) {\r\n         this.$router.push({\r\n            path: '/' + routeName,\r\n            name: routeName,\r\n            query: param\r\n         })\r\n      },\r\n      /**\r\n       * 模糊搜索\r\n       */\r\n      handleSearch() {\r\n         this.filtersData.pageIndex = 1;\r\n         this.getList();\r\n      },\r\n      /**\r\n       * 搜索重置\r\n       */\r\n      handleResetFilters() {\r\n         Object.assign(this.filtersData, {\r\n            \"id\": \"\",\r\n            \"organizationId\":\"\",\r\n            \"queryBegin\":\"\",\r\n            \"queryEnd\":\"\",\r\n            \"orderBy\": \"\",\r\n            \"pageIndex\": 1,\r\n            \"pageSize\": 10\r\n         });\r\n      },\r\n   },\r\n   components:{\r\n      codeSet,\r\n      treeDept\r\n   }\r\n}\r\n</script>\r\n<style  lang=\"less\" scoped>\r\n   // 图表筛选条件\r\n   .chart-filters{\r\n      display: flex;\r\n      justify-content: space-between;\r\n      cursor: pointer;\r\n   }\r\n   .chart-filters span{\r\n      padding: 5px 10px;\r\n      margin:0 10px;\r\n      display: inline-block;\r\n      text-align: center;\r\n   }\r\n   .chart-classify span{\r\n      font-weight: bold;\r\n      font-size: 15px;\r\n   }\r\n   .chart-classify .chart-classify-check{\r\n      color: #409EFF;\r\n   }\r\n   .filters-check{\r\n      background: #f1f1f1;\r\n      color: #409EFF;\r\n      border-radius: 5px;\r\n      font-weight: 400;\r\n   }\r\n   #chart_example{\r\n      width: 50%;\r\n      height: 500px;\r\n      border: 1px solid red;\r\n      margin: 30px auto;\r\n   }\r\n   .box{\r\n      padding: 20px;\r\n      margin: 8px;\r\n      background: #fff;\r\n   }\r\n   .blueness{\r\n      color: #1E90FF;\r\n   }\r\n   .warningType{\r\n    width: 20px;\r\n    height: 20px;\r\n    line-height: 20px;\r\n    display: inline-block;\r\n    background: red;\r\n    color: #fff;\r\n    font-size: 12px;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    text-align: center;\r\n   }\r\n   .color{\r\n      background: #FF6347;\r\n   }\r\n   h5 {\r\n     color: #222;\r\n     margin-left: -15px;\r\n   }\r\n   .test {\r\n     color: #9d9d9d;\r\n   }\r\n   // 选择时间插件   \r\n    .item-form /deep/ .el-input__inner{\r\n      font-size: 30px;\r\n   }\r\n   .block /deep/ .el-date-table{\r\n      display: none;\r\n      font-size:30px;\r\n   }\r\n   #block /deep/ .el-picker-panel__body-wrapper .el-picker-panel__body .el-picker-panel__content {\r\n   display: none;\r\n   cursor: none;\r\n   }\r\n</style>\r\n"]}]}