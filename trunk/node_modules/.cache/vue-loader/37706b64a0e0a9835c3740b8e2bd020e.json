{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\scb\\order\\allotGoods_order_edit.vue?vue&type=style&index=0&id=9c350abc&lang=less&scoped=true&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\scb\\order\\allotGoods_order_edit.vue","mtime":1585106131841},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\css-loader\\index.js","mtime":1558492728478},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1558492728890},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\postcss-loader\\src\\index.js","mtime":1558492728823},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\less-loader\\dist\\cjs.js","mtime":1566193719488},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["\n.transfer-slip-add-goods{display: flex;\n  .upload-goods-btn{display: inline-block;margin-left: 15px;}\n  .side{width: 320px;background: #fff;margin-left: 8px;line-height: 24px;\n    .tabs{margin-top: 10px;}\n\n  }\n  .table-list{flex: 1;background: #fff;margin-top: 0;\n    .goods-list{\n      .type-list{padding-top: 0;padding-bottom: 0;}\n    }\n    .check-goods-list{\n\n    }\n  }\n  .page-more{border-top: 1px solid #e6e8ed;margin-top: 10px;\n    div.btn{\n      width: 120px;border: 1px solid #e6e8ed;border-top: 1px solid #fff;margin: -1px auto 0;text-align: center;font-size: 12px;cursor: pointer;line-height: 30px;\n    }\n  }\n  .index-goods-table{padding-top: 0;}\n}\n.transfer-slip-add-goods /deep/ .el-table__expanded-cell[class*=cell]{padding: 0;}\n.transfer-slip-add-goods .txt-red /deep/ .el-input__inner{color: red;}\n",{"version":3,"sources":["allotGoods_order_edit.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"allotGoods_order_edit.vue","sourceRoot":"src/views/scb/order","sourcesContent":["<style lang=\"less\" scoped>\r\n  .transfer-slip-add-goods{display: flex;\r\n    .upload-goods-btn{display: inline-block;margin-left: 15px;}\r\n    .side{width: 320px;background: #fff;margin-left: 8px;line-height: 24px;\r\n      .tabs{margin-top: 10px;}\r\n\r\n    }\r\n    .table-list{flex: 1;background: #fff;margin-top: 0;\r\n      .goods-list{\r\n        .type-list{padding-top: 0;padding-bottom: 0;}\r\n      }\r\n      .check-goods-list{\r\n\r\n      }\r\n    }\r\n    .page-more{border-top: 1px solid #e6e8ed;margin-top: 10px;\r\n      div.btn{\r\n        width: 120px;border: 1px solid #e6e8ed;border-top: 1px solid #fff;margin: -1px auto 0;text-align: center;font-size: 12px;cursor: pointer;line-height: 30px;\r\n      }\r\n    }\r\n    .index-goods-table{padding-top: 0;}\r\n  }\r\n  .transfer-slip-add-goods /deep/ .el-table__expanded-cell[class*=cell]{padding: 0;}\r\n  .transfer-slip-add-goods .txt-red /deep/ .el-input__inner{color: red;}\r\n</style>\r\n<template>\r\n  <div class=\"transfer-slip-add-goods\">\r\n    <el-dialog width=\"835px\" title=\"修改收货信息\" :visible.sync=\"dialogTableVisible\">\r\n      <el-form ref=\"addFormData\" :model=\"transferSlipAddInfo\" label-width=\"120px\" :rules=\"rules\" class=\"item-form\" size=\"small\">\r\n        <el-form-item label=\"收货人：\" prop=\"receiveMan\">\r\n          <el-input v-model=\"transferSlipAddInfo.receiveMan\" placeholder=\"请输入内容\" class=\"input-w-2\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"联系电话：\" prop=\"phone\">\r\n          <el-input v-model=\"transferSlipAddInfo.phone\" placeholder=\"请输入内容\" class=\"input-w-2\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"所在地区：\" prop=\"divisionId\">\r\n          <division v-model=\"transferSlipAddInfo.divisionId\" @set-division=\"setDivision\" width-class=\"input-w\" ref=\"division\"></division>\r\n        </el-form-item>\r\n        <el-form-item label=\"\" prop=\"addressInfo\">\r\n          <el-input v-model=\"transferSlipAddInfo.addressInfo\" placeholder=\"请输入详细地址\" class=\"input-w-2\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"\">\r\n          <el-button @click=\"dialogTableVisible = false\"  size=\"small\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"changeAddress\" size=\"small\">确认</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-dialog>\r\n    <!--左侧-->\r\n    <div class=\"side\">\r\n      <div class=\"item-cont\">\r\n        <el-button size=\"small\" type=\"primary\" @click=\"settleQuery_findSettle\">已选商品</el-button>\r\n        <el-upload class=\"upload-goods-btn\" :action=\"uploadGoodsUrl\" :show-file-list=\"false\" :auto-upload=\"false\" :on-change=\"uploadGoodsChange\">\r\n          <el-button size=\"small\" type=\"primary\" plain>导入商品</el-button>\r\n        </el-upload>\r\n        <el-tabs v-model=\"activeName\" class=\"tabs\" :before-leave=\"handleBeforeClick\" type=\"card\">\r\n          <el-tab-pane label=\"调出方\" name=\"outStoreInfo\">\r\n            <store-info :storeType=\"false\" :store-info=\"outStoreInfo\"></store-info>\r\n          </el-tab-pane>\r\n          <el-tab-pane label=\"调入方\" name=\"inStoreInfo\">\r\n            <store-info :storeType=\"true\" :store-info=\"inStoreInfo\"></store-info>\r\n            <el-button type=\"primary\" @click=\"dialogTableVisible = true\">修改收货信息</el-button>\r\n          </el-tab-pane>\r\n        </el-tabs>\r\n      </div>\r\n    </div>\r\n    <!--右侧-->\r\n    <div class=\"table-list item-margin\">\r\n      <!--商品主列表-->\r\n      <div class=\"goods-list\" v-if=\"!checkedGoodsShow\">\r\n        <!--商品主列表查询条件-->\r\n        <div>\r\n          <el-form class=\"item-form\" :model=\"formData\" label-width=\"90px\" size=\"small\" ref=\"searchForm\" inline :rules=\"rules\">\r\n            <el-form-item label=\"商品分类：\">\r\n              <el-cascader class=\"input-w\" :options=\"classData\" v-model=\"cateArr\" @change=\"classChange\" :show-all-levels=\"false\" :props=\"props\" change-on-select clearable></el-cascader>\r\n            </el-form-item>\r\n            <el-form-item label=\"价格筛选：\" prop=\"money\">\r\n              <el-input class=\"input-w\" placeholder=\"请输入区间下限\" v-model.number=\"formData.retailPriceLowerLimit\"></el-input>\r\n              &nbsp;\r\n              <el-input class=\"input-w\" placeholder=\"请输入区间上限\" v-model.number=\"formData.retailPriceUpperLimit\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"库存量：\" prop=\"count\">\r\n              <el-input class=\"input-w\" placeholder=\"请输入区间下限\" v-model.number=\"formData.quantityLowerLimit\"></el-input>\r\n              &nbsp;\r\n              <el-input class=\"input-w\" placeholder=\"请输入区间上限\" v-model.number=\"formData.quantityUpperLimit\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"设计商：\" prop=\"designCompanyId\">\r\n              <el-select class=\"input-w\" placeholder=\"请选择\" v-model=\"formData.designCompanyId\" clearable filterable>\r\n                <el-option v-for=\"item in designCompanyOptions\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"品牌：\" prop=\"brandId\">\r\n              <el-select class=\"input-w\" placeholder=\"请选择\" v-model=\"formData.brandId\" clearable filterable>\r\n                <el-option v-for=\"item in brandOptions\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"综合搜索：\" prop=\"searchWords\">\r\n              <el-input class=\"input-w\" placeholder=\"款号、货号、名称\" v-model=\"formData.searchWords\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button @click=\"searchTableData\" type=\"primary\" plain>搜索</el-button>\r\n              <el-button @click=\"initFormData('searchForm')\" plain>重置</el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n          <div class=\"type-list item-cont\">\r\n            <check-tags :checked-data=\"formData.collocationTagIdList\"></check-tags>\r\n          </div>\r\n        </div>\r\n        <div class=\"item-cont index-goods-table\">\r\n          <page-table :form-data=\"formData\" :get-data=\"getTableData\" :table-data=\"tableData\">\r\n            <el-table :data=\"tableData.data\" style=\"width: 100%\" @expand-change=\"tableDataExpandChange\">\r\n              <el-table-column type=\"expand\" width=\"50\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-table :data=\"scope.row._skuList\" style=\"width: 100%\" :show-header=\"false\">\r\n                    <el-table-column label=\"占位\" width=\"50\"></el-table-column>\r\n                    <el-table-column prop=\"goodsCode\" label=\"商品款号\" width=\"200\"></el-table-column>\r\n                    <el-table-column prop=\"goodsName\" label=\"名称\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n                    <el-table-column label=\"商品图片\">\r\n                      <template slot-scope=\"scope\">\r\n                        <image-popover :img-src=\"scope.row.image\"></image-popover>\r\n                      </template>\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"color\" label=\"颜色\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n                    <el-table-column prop=\"size\" label=\"规格\"></el-table-column>\r\n                    <el-table-column prop=\"brandName\" label=\"品牌\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n                    <el-table-column prop=\"fullCateName\" label=\"品类\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n                    <el-table-column prop=\"priceTag\" label=\"吊牌价\"></el-table-column>\r\n                    <el-table-column prop=\"quantity\" label=\"库存量\"></el-table-column>\r\n                    <el-table-column label=\"操作\" width=\"150\">\r\n                      <template slot-scope=\"scope\">\r\n                        <el-input-number v-model=\"scope.row.inputQuantity\"  @input.native=\"goodsQuantityInput($event, scope.row)\" @change=\"goodsQuantityChange(scope.row)\" :min=\"0\" label=\"选择的数量\" size=\"mini\" :class=\"{'txt-red' : scope.row.quantity < scope.row.inputQuantity}\"></el-input-number>\r\n                      </template>\r\n                    </el-table-column>\r\n                  </el-table>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"productCode\" label=\"商品款号\"  width=\"200\"></el-table-column>\r\n              <el-table-column prop=\"goodsName\" label=\"名称\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n              <el-table-column label=\"商品图片\">\r\n                <template slot-scope=\"scope\">\r\n                  <image-popover :img-src=\"scope.row.image\"></image-popover>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column label=\"颜色\"></el-table-column>\r\n              <el-table-column label=\"规格\"></el-table-column>\r\n              <el-table-column prop=\"brandName\" label=\"品牌\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n              <el-table-column prop=\"fullCateName\" label=\"品类\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n              <el-table-column prop=\"priceTag\" label=\"吊牌价\"></el-table-column>\r\n              <el-table-column prop=\"quantity\" label=\"库存量\"></el-table-column>\r\n              <el-table-column label=\"操作\" width=\"150\">\r\n\r\n              </el-table-column>\r\n            </el-table>\r\n          </page-table>\r\n        </div>\r\n      </div>\r\n      <!--选中的商品-->\r\n      <div class=\"check-goods-list\" v-if=\"checkedGoodsShow\">\r\n        <transfer-slip-goods-table :checked-goods-show.sync=\"checkedGoodsShow\" :table-data=\"checkedSKUTableData\" :transfer-slip-add-info=\"transferSlipAddInfo\" ref=\"transferSlipGoodsTable\"></transfer-slip-goods-table>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n<script>\r\n  // TODO 临时解决上传文件\r\n  import axios from 'axios'\r\n  import { getToken } from \"@/utils/auth\";\r\n\r\n\r\n  import PageTable from \"@/views/collocation/components/PageTable\";\r\n  import CheckTags from \"@/views/collocation/components/CheckTags\";\r\n  import StoreInfo from \"../components/allotStoreInfo\";\r\n  import TransferSlipGoodsTable from \"../components/allotTransferSlipGoodsTable\";\r\n  import division from \"@/components/division\";\r\n  import ImagePopover from \"@/views/collocation/components/ImagePopover\";\r\n  export default {\r\n    // 组件\r\n    components: {\r\n      PageTable,\r\n      TransferSlipGoodsTable,\r\n      CheckTags,\r\n      StoreInfo,\r\n      ImagePopover,\r\n      division\r\n    },\r\n    // 数据\r\n    data() {\r\n      return {\r\n        dialogTableVisible:false,\r\n        addFormData: {\r\n          // 发货人\r\n          allotMan: '',\r\n          // 发货人直属机构\r\n          organizationId: '',\r\n          organizationName: '',\r\n          // 订单类型\r\n          // orderType: '0203',\r\n          // 发货门店\r\n          outStoreId: '',\r\n          outStoreName: '',\r\n          // 收货门店\r\n          inStoreId: '',\r\n          inStoreName: '',\r\n          // 收货人\r\n          receiveMan: '',\r\n          // 电话\r\n          phone: '',\r\n          // 省市区信息\r\n          provinceName: '',\r\n          provinceCode: '',\r\n          cityName: '',\r\n          cityCode: '',\r\n          areaName: '',\r\n          areaCode: '',\r\n          divisionId: '',\r\n          // 地址\r\n          addressInfo: ''\r\n        },\r\n        // 路由参数\r\n        _orderSn: null,\r\n        _outStoreId: null,\r\n\r\n        // 默认显示门店信息 outStoreInfo: 发货门店     inStoreInfo: 收货门店\r\n        activeName: 'outStoreInfo',\r\n        // 发货门店详情\r\n        outStoreInfo: null,\r\n        // 收货门店详情\r\n        inStoreInfo: null,\r\n        // 导入商品地址\r\n        uploadGoodsUrl: this.api.FN_ALLPATH(this.api.retailStore.storeProduct_importOrderItem),\r\n        // 导入是否可点\r\n        uploadGoodsDisabled: false,\r\n        // 导入附带参数\r\n        uploadGoodsParams: {\r\n          storeId: ''\r\n        },\r\n        // 最终保存提交信息\r\n        transferSlipAddInfo: {},\r\n        // 选择的商品列表\r\n        checkedSKUTableData: [],\r\n\r\n        // 是否显示选中的\r\n        checkedGoodsShow: false,\r\n        // 查询商品参数\r\n        formData: {\r\n          // 所属门店\r\n          storeId: '',\r\n          // 商品分类\r\n          cateIdentifier: '',\r\n          // 价格筛选\r\n          retailPriceLowerLimit: '',\r\n          retailPriceUpperLimit: '',\r\n          // 库存量\r\n          quantityLowerLimit: '',\r\n          quantityUpperLimit: '',\r\n          // 设计商\r\n          designCompanyId: '',\r\n          // 品牌\r\n          brandId: '',\r\n          // 综合搜索\r\n          searchWords: '',\r\n          // 标签\r\n          collocationTagIdList: [],\r\n          // 当前页码\r\n          pageIndex: 1,\r\n          // 每页数量\r\n          pageSize: 10\r\n        },\r\n        // 商品主表格数据\r\n        tableData: {},\r\n\r\n        /**\r\n         * 商品查询辅助数据\r\n         */\r\n        // 验证\r\n        rules: {\r\n          money: [\r\n            { required: false, validator: this.moneyRule, trigger: 'blur'}\r\n          ],\r\n          count: [\r\n            { required: false, validator: this.countRule, trigger: 'blur'}\r\n          ]\r\n        },\r\n        // 分类映射\r\n        props:{\r\n          value: 'id',\r\n          label: 'name',\r\n          children: 'children'\r\n        },\r\n        // 分类数据\r\n        classData:[],\r\n        classList:[],\r\n        // 选中的分类\r\n        cateArr:[],\r\n        // 品牌\r\n        brandOptions:[],\r\n        // 设计商\r\n        designCompanyOptions:[]\r\n        /**\r\n         * 商品查询辅助数据--end\r\n         */\r\n      }\r\n    },\r\n    created(){\r\n      // 获取上页面缓存的门店信息\r\n      let transferSlipAddInfo = sessionStorage.getItem('TRANSFER_SLIP_APP_INFO');\r\n      if(transferSlipAddInfo){\r\n        this.transferSlipAddInfo = JSON.parse(transferSlipAddInfo);\r\n        this.formData.storeId = this.transferSlipAddInfo.outStoreId;\r\n        this.uploadGoodsParams.storeId = this.transferSlipAddInfo.outStoreId;\r\n      }\r\n    },\r\n    // 初始化数据\r\n    mounted() {\r\n      this.$nextTick(()=> {\r\n        this.init();\r\n        this.$route.meta.title = this.$route.query.id ? '编辑调货订单' : '新增调货订单';\r\n      })\r\n    },\r\n    // 方法\r\n    methods: {\r\n      /**\r\n       * 获取返货单已选商品列表（为了获取调入结算单价）\r\n       */\r\n      settleQuery_findSettle(){\r\n        const that = this;\r\n        const data = {\r\n          \"infoVOList\": this.checkedSKUTableData,\r\n          \"sourceMerchantId\": this.transferSlipAddInfo.inStoreId,\r\n          \"targetMerchantId\": this.transferSlipAddInfo.outStoreId\r\n        };\r\n        this.checkedGoodsShow = true;\r\n\r\n        if(this.checkedSKUTableData.length == 0) return;\r\n        this.request(\r\n          this.api.scb.settleQuery_findSettle,\r\n          data\r\n        ).then(res => {\r\n          // that.checkedSKUTableData.length =  0;\r\n          that.checkedSKUTableData.forEach((item, index) => {\r\n            let subCheckItem = res.find((items, indexs) => {\r\n              return item.goodsCode == items.goodsCode;\r\n            });\r\n            if(subCheckItem) {\r\n              this.$set(item,'inputQuantity',subCheckItem.inputQuantity);\r\n              this.$set(item,'settlePrice',subCheckItem.settlePrice);\r\n            };\r\n          });\r\n          console.log(that.checkedSKUTableData)\r\n          // res.forEach(item => {\r\n          //   item.allotPrice = item.settlePrice;\r\n          //   item.stock = item.quantity;\r\n          //   that.checkedSKUTableData.push(item);\r\n          // });\r\n          this.$refs.transferSlipGoodsTable.getCheckedAllSKUInfo();\r\n        });\r\n      },\r\n      /**\r\n       * 修改收货地址\r\n       */\r\n      changeAddress() {\r\n        Object.assign(this.inStoreInfo, this.transferSlipAddInfo);\r\n        this.inStoreInfo.linkman = this.transferSlipAddInfo.receiveMan;\r\n        this.dialogTableVisible = false;\r\n      },\r\n      // 获取省市信息\r\n      setDivision(division){\r\n        this.transferSlipAddInfo.provinceName =  division.province;\r\n        this.transferSlipAddInfo.provinceCode =  division.provinceCode;\r\n        this.transferSlipAddInfo.cityName =  division.municipality;\r\n        this.transferSlipAddInfo.cityCode =  division.municipalityCode;\r\n        this.transferSlipAddInfo.areaName =  division.area;\r\n        this.transferSlipAddInfo.areaCode =  division.areaCode;\r\n        this.transferSlipAddInfo.divisionId =  division.divisionId;\r\n      },\r\n      // 初始化\r\n      init(){\r\n        // 获取上页面参数\r\n        this.getQueryParams();\r\n        // 获取发货门店详情\r\n        this.getStoreInfo(this.transferSlipAddInfo.outStoreId, 'outStoreInfo');\r\n        // 获取设计商列表\r\n        this.getDesignCompanyOptions();\r\n        // 获取品牌列表\r\n        this.getBrandOptions();\r\n        // 获取商品分类列表\r\n        this.getClassData();\r\n        // 获取表格数据\r\n        this.getTableData();\r\n      },\r\n      // 获取上页面参数\r\n      getQueryParams() {\r\n        this._orderSn = this.$route.query.orderSn;\r\n        this._outStoreId = this.$route.query.outStoreId;\r\n        if(this._orderSn && this._outStoreId){\r\n          this.getStoreAllotOrderProductInfoList(this._orderSn, this._outStoreId)\r\n        }\r\n      },\r\n      // 获取商品详情\r\n      getStoreAllotOrderProductInfoList(orderSn, outStoreId){\r\n        this.request(this.api.order.storeAllotOrderProductInfo_list, {orderSn ,outStoreId}).then(data => {\r\n          this.checkedGoodsShow = true;\r\n          this.checkedSKUTableData = data.data;\r\n          this.checkedSKUTableData.forEach((item, index) => {\r\n            this.$set(item, 'inputQuantity', item.quantity);\r\n            this.$set(item, 'priceTag', item.retailPrice);\r\n            this.$set(item, 'allotPrice', item.price);\r\n          })\r\n          this.settleQuery_findSettle();\r\n        });\r\n      },\r\n      /**\r\n       * 获取门店详情\r\n       * @param id {String} 门店id\r\n       * @param type {String} outStoreInfo: 发货门店 inStoreInfo: 收货门店\r\n       */\r\n      getStoreInfo(id, type){\r\n        if(!this[type]){\r\n          this.request(this.api.retailStore.storeBasic_get, {id: id}).then(data => {\r\n            this[type] = data;\r\n          });\r\n        }\r\n      },\r\n      /**\r\n       * 导入商品\r\n       * @param file 上传的文件\r\n       */\r\n      uploadGoodsChange(file){\r\n        // 判断类型\r\n        if (!(/((.xlsx)|(.xls))$/.test(file.name))) {\r\n          this.$message.error('文件格式只能是 xlsx | xls格式!');\r\n          return false\r\n        }\r\n        let formData = new FormData();\r\n        let token = getToken();\r\n        formData.set('file', file.raw );\r\n        formData.set('sourceMerchantId', this.transferSlipAddInfo.outStoreId );\r\n        formData.set('targetMerchantId', this.transferSlipAddInfo.inStoreId );\r\n        axios({\r\n          method: \"POST\",\r\n          url: this.api.FN_ALLPATH(this.api.scb.settleQuery_importOrderItem),\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n            accessToken: token\r\n          },\r\n          data: formData\r\n        }).then(res => {\r\n          let data = res.data;\r\n          // 合并导入的数据和已选择的数据\r\n          if(data.code && data.code == 200){\r\n            let goodsData = data.data;\r\n            if(goodsData && goodsData.length > 0){\r\n              for(let n = 0; n < goodsData.length; n++){\r\n                let goodsIndex = this.checkedSKUTableData.findIndex(item => {\r\n                  return item.goodsCode === goodsData[n].goodsCode\r\n                });\r\n                if(goodsIndex !== -1){\r\n                  this.checkedSKUTableData[goodsIndex].quantity = goodsData[n].quantity + this.checkedSKUTableData[goodsIndex].quantity;\r\n                  this.checkedSKUTableData[goodsIndex].inputQuantity = goodsData[n].inputQuantity;\r\n                }else {\r\n                  goodsData[n].allotPrice = goodsData[n].retailPrice;\r\n                  this.checkedSKUTableData.push(goodsData[n])\r\n                }\r\n              }\r\n            }\r\n            this.checkedGoodsShow = true;\r\n            this.$nextTick(() => {\r\n              this.$refs.transferSlipGoodsTable.init();\r\n            })\r\n          }else {\r\n            this.$notify.error({ title: '错误',message: data.message});\r\n          }\r\n        })\r\n\r\n      },\r\n      /**\r\n       * 左侧门店类型切换\r\n       * @param activeName {String} 选择的门店类型名称\r\n       */\r\n      handleBeforeClick(activeName) {\r\n        this.getStoreInfo(this.transferSlipAddInfo.inStoreId, activeName);\r\n      },\r\n      // 点击搜索\r\n      searchTableData(){\r\n        this.formData.pageIndex = 1;\r\n        this.getTableData();\r\n      },\r\n      /**\r\n       * 重置查询条件\r\n       * @param formName {String} 表单的节点ref的值\r\n       */\r\n      initFormData(formName){\r\n        this.$refs[formName].resetFields();\r\n        this.cateArr = [];\r\n        this.formData.cateIdentifier = '';\r\n        this.formData.retailPriceLowerLimit = '';\r\n        this.formData.retailPriceUpperLimit = '';\r\n        this.formData.quantityLowerLimit = '';\r\n        this.formData.quantityUpperLimit = '';\r\n      },\r\n      // 获取spu商品数据\r\n      getTableData() {\r\n        this.$nextTick(() => {\r\n          setTimeout(()=> {\r\n            this.$refs.searchForm.validate((valid) => {\r\n              if (valid) {\r\n                let params = JSON.parse(JSON.stringify(this.formData));\r\n                if(params.collocationTagIdList.length === 0){\r\n                  params.collocationTagIdList = null\r\n                }\r\n                this.request(this.api.scb.movingAveragePrice_selectAllocateProduct, params).then(data => {\r\n                  if(data.data && data.data.length){\r\n                    data.data.forEach(item => {\r\n                      item._skuList = [];\r\n                    });\r\n                    this.tableData = data;\r\n                  }else {\r\n                    this.tableData = {};\r\n                  }\r\n                });\r\n              } else {\r\n                return false;\r\n              }\r\n            });\r\n          },0)\r\n        })\r\n      },\r\n      /**\r\n       * 点击左侧三角 获取sku商品\r\n       * @param row {Object} 表格行数据\r\n       * @param expandedRows {Array} 表格行数据\r\n       */\r\n      tableDataExpandChange(row, expandedRows){\r\n        if(row._skuList.length) return;\r\n        let params = {\r\n          productCode: row.productCode,\r\n          storeId: this.transferSlipAddInfo.outStoreId\r\n        };\r\n        this.request(this.api.scb.movingAveragePrice_datalist, params).then(data => {\r\n          if(data.dataList.data && data.dataList.data.length){\r\n            data.dataList.data.forEach(item => {\r\n              // 新增提交需要的字段\r\n              item.inputQuantity = item.quantity;\r\n              item.inputQuantity = 0;\r\n              if(this.checkedSKUTableData.length > 0){\r\n                for(let i = 0; i < this.checkedSKUTableData.length; i++){\r\n                  if(this.checkedSKUTableData[i].goodsCode === item.goodsCode){\r\n                    item.inputQuantity = this.checkedSKUTableData[i].inputQuantity;\r\n                  }\r\n                }\r\n              }\r\n            });\r\n            row._skuList = data.dataList.data;\r\n          }\r\n        });\r\n      },\r\n      /**\r\n       * 输入修改商品数量\r\n       * @param $event {Object} event\r\n       * @param row {Object} 表格行数据\r\n       */\r\n      goodsQuantityInput($event, row){\r\n        this.$nextTick(()=>{\r\n          let val = $event.target.value;\r\n          row.planBackQuantity = $event.target.value = val.replace(/[^\\d.]/g,'');\r\n          this.goodsQuantityChange(row);\r\n        })\r\n      },\r\n      /**\r\n       * + -修改商品数量\r\n       * @param row {Object} 表格行数据\r\n       */\r\n      goodsQuantityChange(row){\r\n        let index = this.checkedSKUTableData.findIndex(item => {\r\n          return item.goodsCode === row.goodsCode;\r\n        });\r\n        if(index !== -1){\r\n          if(row.quantity == 0){\r\n            this.checkedSKUTableData.splice(index, 1);\r\n          }else{\r\n            this.checkedSKUTableData[index].inputQuantity = row.inputQuantity;\r\n          }\r\n        }else {\r\n          this.checkedSKUTableData.push(row);\r\n        }\r\n      },\r\n\r\n\r\n      /**\r\n       * 搜索商品参数下拉数据及验证\r\n       */\r\n      // 验证价格区间\r\n      moneyRule(rule, value,callback) {\r\n        const reg = /^[0-9]*$/;\r\n        if(!reg.test(this.formData.retailPriceLowerLimit) || !reg.test(this.formData.retailPriceUpperLimit)){\r\n          callback(new Error('价格区间必须是数字'));\r\n          return\r\n        }\r\n        if(this.formData.retailPriceLowerLimit && this.formData.retailPriceUpperLimit && this.formData.retailPriceLowerLimit >= this.formData.retailPriceUpperLimit){\r\n          callback(new Error('价格区间下限应小于上限'));\r\n        }else {\r\n          callback();\r\n        }\r\n      },\r\n      // 验证数量区间\r\n      countRule(rule, value,callback) {\r\n        const reg = /^[0-9]*$/;\r\n        if(!reg.test(this.formData.quantityLowerLimit) || !reg.test(this.formData.quantityUpperLimit)){\r\n          callback(new Error('库存量区间必须是数字'));\r\n          return\r\n        }\r\n        if(this.formData.quantityLowerLimit && this.formData.quantityUpperLimit && this.formData.quantityLowerLimit >= this.formData.quantityUpperLimit){\r\n          callback(new Error('库存量区间下限应小于上限'));\r\n        }else {\r\n          callback();\r\n        }\r\n      },\r\n      // 获取商品分类数据\r\n      getClassData(){\r\n        //分类类型（1：标准分类，2：定制分类，3：原料分类或者称为属性分类）\r\n        this.$common.getClassSelect(this,1).then(res =>{\r\n          this.classData=res.ztree;\r\n          this.classList=res.list;\r\n        })\r\n      },\r\n      // 商品分类Change\r\n      classChange(e){\r\n        if(e.length === 0){\r\n          this.formData.cateIdentifier = '';\r\n          return;\r\n        }\r\n        let cateId  = JSON.parse(JSON.stringify(e)).pop();\r\n        let obj = this.classList.find((item)=>(item.id == cateId));\r\n        this.formData.cateIdentifier = obj.identifier;\r\n      },\r\n      // 获取设计商\r\n      getDesignCompanyOptions(){\r\n        this.request(this.api.product.designCompany_list, {}).then(data => {\r\n          this.designCompanyOptions=data.data;\r\n        });\r\n      },\r\n      // 获取品牌\r\n      getBrandOptions(){\r\n        this.request(this.api.product.productBrand_list,{}).then(data => {\r\n          this.brandOptions= data.data;\r\n        });\r\n      }\r\n      /**\r\n       * 搜索商品参数下拉数据--end\r\n       */\r\n    },\r\n    // 计算属性\r\n    computed: {},\r\n    // 监听数据变化\r\n    watch: {}\r\n  }\r\n</script>\r\n"]}]}