{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\orders\\business\\purchase\\arrivalNotice_add.vue?vue&type=template&id=1255e7b8&scoped=true&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\orders\\business\\purchase\\arrivalNotice_add.vue","mtime":1585053690279},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1558492728890},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"middle\" }, [\n      _c(\"span\", [_vm._v(\"基本信息\")]),\n      _c(\n        \"div\",\n        { staticClass: \"input-div\" },\n        [\n          _c(\n            \"el-form\",\n            {\n              ref: \"ruleForm\",\n              staticClass: \"demo-ruleForm\",\n              attrs: {\n                inline: true,\n                model: _vm.signData,\n                \"label-width\": \"120px\",\n                rules: _vm.rules\n              }\n            },\n            [\n              _c(\"div\", { staticClass: \"data-div\" }, [\n                _c(\n                  \"div\",\n                  [\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"组织机构：\", prop: \"organization\" } },\n                      [\n                        _c(\"el-input\", {\n                          attrs: { disabled: \"\" },\n                          model: {\n                            value: _vm.signData.organization,\n                            callback: function($$v) {\n                              _vm.$set(_vm.signData, \"organization\", $$v)\n                            },\n                            expression: \"signData.organization\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\"br\"),\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"采购单号：\", prop: \"orderSn\" } },\n                      [\n                        _c(\n                          \"el-select\",\n                          {\n                            attrs: {\n                              disabled: _vm.supplierStatus,\n                              placeholder: \"请选择单号\"\n                            },\n                            on: { change: _vm.selectOrderSnListDataChange },\n                            model: {\n                              value: _vm.signData.orderSn,\n                              callback: function($$v) {\n                                _vm.$set(_vm.signData, \"orderSn\", $$v)\n                              },\n                              expression: \"signData.orderSn\"\n                            }\n                          },\n                          _vm._l(_vm.OrderSnListData, function(item, index) {\n                            return _c(\"el-option\", {\n                              key: index,\n                              attrs: { label: item, value: item }\n                            })\n                          }),\n                          1\n                        )\n                      ],\n                      1\n                    ),\n                    _c(\"br\"),\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"收货类型：\", prop: \"deliveryType\" } },\n                      [\n                        _c(\n                          \"el-select\",\n                          {\n                            attrs: { placeholder: \"请选择供应商\" },\n                            model: {\n                              value: _vm.signData.deliveryType,\n                              callback: function($$v) {\n                                _vm.$set(_vm.signData, \"deliveryType\", $$v)\n                              },\n                              expression: \"signData.deliveryType\"\n                            }\n                          },\n                          [_c(\"el-option\", { attrs: { value: \"仓库收货\" } })],\n                          1\n                        )\n                      ],\n                      1\n                    ),\n                    _c(\"br\"),\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"物流公司：\" } },\n                      [\n                        _c(\n                          \"el-select\",\n                          {\n                            attrs: { placeholder: \"请选择物流公司\" },\n                            on: { change: _vm.selectLogisticsData },\n                            model: {\n                              value: _vm.signData.logisticsCompany,\n                              callback: function($$v) {\n                                _vm.$set(_vm.signData, \"logisticsCompany\", $$v)\n                              },\n                              expression: \"signData.logisticsCompany\"\n                            }\n                          },\n                          _vm._l(_vm.logisticsListData, function(item) {\n                            return _c(\"el-option\", {\n                              key: item.id,\n                              attrs: { label: item.name, value: item.name }\n                            })\n                          }),\n                          1\n                        )\n                      ],\n                      1\n                    ),\n                    _c(\"br\"),\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"物流单号：\" } },\n                      [\n                        _c(\"el-input\", {\n                          attrs: { placeholder: \"请输入内容\" },\n                          model: {\n                            value: _vm.signData.logisticsOrderSn,\n                            callback: function($$v) {\n                              _vm.$set(_vm.signData, \"logisticsOrderSn\", $$v)\n                            },\n                            expression: \"signData.logisticsOrderSn\"\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                ),\n                _c(\n                  \"div\",\n                  [\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"供应商：\", prop: \"supplier\" } },\n                      [\n                        _c(\n                          \"el-select\",\n                          {\n                            attrs: {\n                              disabled: _vm.supplierNameStatus,\n                              placeholder: \"请选择供应商\"\n                            },\n                            on: { change: _vm.selectSupplierChange },\n                            model: {\n                              value: _vm.signData.supplier,\n                              callback: function($$v) {\n                                _vm.$set(_vm.signData, \"supplier\", $$v)\n                              },\n                              expression: \"signData.supplier\"\n                            }\n                          },\n                          _vm._l(_vm.optionData, function(item) {\n                            return _c(\"el-option\", {\n                              key: item.id,\n                              attrs: { label: item.name, value: item.name }\n                            })\n                          }),\n                          1\n                        )\n                      ],\n                      1\n                    ),\n                    _c(\"br\"),\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"到货单号：\", prop: \"arrivalSn\" } },\n                      [\n                        _c(\"el-input\", {\n                          attrs: { placeholder: \"请输入内容\" },\n                          model: {\n                            value: _vm.signData.arrivalSn,\n                            callback: function($$v) {\n                              _vm.$set(_vm.signData, \"arrivalSn\", $$v)\n                            },\n                            expression: \"signData.arrivalSn\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\"br\"),\n                    _vm.selectStore\n                      ? _c(\n                          \"el-form-item\",\n                          { attrs: { label: \"收货仓库：\", prop: \"warehouse\" } },\n                          [\n                            _c(\n                              \"el-select\",\n                              {\n                                attrs: { placeholder: \"请选择仓库\" },\n                                on: { change: _vm.selectwarehouseCodeChange },\n                                model: {\n                                  value: _vm.signData.warehouse,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.signData, \"warehouse\", $$v)\n                                  },\n                                  expression: \"signData.warehouse\"\n                                }\n                              },\n                              _vm._l(_vm.WarehouseCodeData, function(item) {\n                                return _c(\"el-option\", {\n                                  key: item.id,\n                                  attrs: {\n                                    label: item.warehouseName,\n                                    value: item.warehouseName\n                                  }\n                                })\n                              }),\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      : _c(\n                          \"el-form-item\",\n                          { attrs: { label: \"收货门店：\", prop: \"storeName\" } },\n                          [\n                            _c(\n                              \"el-select\",\n                              {\n                                attrs: { placeholder: \"请选择门店\" },\n                                on: { change: _vm.selectStoreNameChange },\n                                model: {\n                                  value: _vm.signData.storeName,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.signData, \"storeName\", $$v)\n                                  },\n                                  expression: \"signData.storeName\"\n                                }\n                              },\n                              _vm._l(_vm.storeListData, function(item) {\n                                return _c(\"el-option\", {\n                                  key: item.id,\n                                  attrs: { label: item.name, value: item.name }\n                                })\n                              }),\n                              1\n                            )\n                          ],\n                          1\n                        ),\n                    _c(\"br\"),\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"预计到货日期：\", prop: \"\" } },\n                      [\n                        _c(\"el-date-picker\", {\n                          attrs: { type: \"date\", placeholder: \"选择日期\" },\n                          model: {\n                            value: _vm.signData.expectTime,\n                            callback: function($$v) {\n                              _vm.$set(_vm.signData, \"expectTime\", $$v)\n                            },\n                            expression: \"signData.expectTime\"\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              ])\n            ]\n          )\n        ],\n        1\n      ),\n      _c(\"div\", { staticClass: \"table-view\" }, [\n        _vm._m(0),\n        _c(\n          \"div\",\n          { staticClass: \"table-div\" },\n          [\n            _c(\n              \"el-table\",\n              {\n                staticStyle: { width: \"100%\" },\n                attrs: {\n                  data: _vm.signData.channelPurchaseArrivalOrderGoodsVOList,\n                  \"header-row-class-name\": \"item-table-header\",\n                  \"max-height\": \"400\"\n                }\n              },\n              [\n                _c(\"el-table-column\", {\n                  attrs: {\n                    prop: \"productCode\",\n                    label: \"商品款号\",\n                    align: \"center\"\n                  }\n                }),\n                _c(\"el-table-column\", {\n                  attrs: { prop: \"code\", label: \"商品货号\", align: \"center\" }\n                }),\n                _c(\"el-table-column\", {\n                  attrs: { prop: \"image\", label: \"商品图片\", align: \"center\" },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"default\",\n                      fn: function(scope) {\n                        return [\n                          _c(\"img\", {\n                            staticStyle: { width: \"32px\", height: \"32px\" },\n                            attrs: { src: scope.row.image }\n                          })\n                        ]\n                      }\n                    }\n                  ])\n                }),\n                _c(\"el-table-column\", {\n                  attrs: { prop: \"name\", label: \"商品名称\", align: \"center\" }\n                }),\n                _c(\"el-table-column\", {\n                  attrs: { prop: \"brandName\", label: \"品牌\", align: \"center\" }\n                }),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    prop: \"category\",\n                    label: \"商品品类\",\n                    align: \"center\"\n                  },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"default\",\n                      fn: function(scope) {\n                        return [\n                          _c(\"span\", [\n                            _vm._v(\n                              _vm._s(\n                                scope.row.category ? scope.row.category : \"--\"\n                              )\n                            )\n                          ])\n                        ]\n                      }\n                    }\n                  ])\n                }),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    prop: \"specifications\",\n                    label: \"规格属性\",\n                    align: \"center\"\n                  },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"default\",\n                      fn: function(scope) {\n                        return [\n                          _c(\"div\", { staticClass: \"span-btn\" }, [\n                            _c(\"span\", [\n                              _vm._v(\"颜色：\" + _vm._s(scope.row.color))\n                            ]),\n                            _c(\"span\", [\n                              _vm._v(\"尺码：\" + _vm._s(scope.row.size))\n                            ])\n                          ])\n                        ]\n                      }\n                    }\n                  ])\n                }),\n                _c(\"el-table-column\", {\n                  attrs: { prop: \"num\", label: \"采购总量\", align: \"center\" }\n                }),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    prop: \"actualQuantity\",\n                    label: \"实收数量\",\n                    align: \"center\"\n                  },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"default\",\n                      fn: function(scope) {\n                        return [\n                          _c(\"span\", [\n                            _vm._v(\n                              _vm._s(\n                                scope.row.actualQuantity\n                                  ? scope.row.actualQuantity\n                                  : \"0\"\n                              )\n                            )\n                          ])\n                        ]\n                      }\n                    }\n                  ])\n                }),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    prop: \"currentQuantity\",\n                    label: \"本次到货数量\",\n                    align: \"center\"\n                  },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"default\",\n                      fn: function(scope) {\n                        return [\n                          _c(\"el-input\", {\n                            directives: [\n                              {\n                                name: \"enter-number\",\n                                rawName: \"v-enter-number\"\n                              }\n                            ],\n                            attrs: {\n                              min: \"0\",\n                              max: \"9\",\n                              type: \"number\",\n                              placeholder: \"填写数量\"\n                            },\n                            on: {\n                              change: function($event) {\n                                return _vm.shopNumberChange($event, scope.row)\n                              }\n                            },\n                            model: {\n                              value: scope.row.currentQuantity,\n                              callback: function($$v) {\n                                _vm.$set(scope.row, \"currentQuantity\", $$v)\n                              },\n                              expression: \"scope.row.currentQuantity\"\n                            }\n                          })\n                        ]\n                      }\n                    }\n                  ])\n                })\n              ],\n              1\n            )\n          ],\n          1\n        ),\n        _c(\"span\", { staticClass: \"quantity-span\" }, [\n          _vm._v(\"累计到货总数：\" + _vm._s(_vm.shopAllQuantity))\n        ])\n      ]),\n      _c(\"div\", { staticClass: \"price-msg\" }, [\n        _c(\"span\", { staticClass: \"other-msg\" }, [_vm._v(\"其他信息\")]),\n        _c(\n          \"div\",\n          { staticClass: \"remarks-textarea\" },\n          [\n            _c(\"span\", [_vm._v(\"采购备注：\")]),\n            _c(\"el-input\", {\n              staticClass: \"textarea\",\n              attrs: {\n                type: \"textarea\",\n                rows: 2,\n                placeholder: \"请输入内容\",\n                resize: \"none\"\n              },\n              model: {\n                value: _vm.signData.remarks,\n                callback: function($$v) {\n                  _vm.$set(_vm.signData, \"remarks\", $$v)\n                },\n                expression: \"signData.remarks\"\n              }\n            })\n          ],\n          1\n        ),\n        _c(\n          \"div\",\n          { staticClass: \"btn-div\" },\n          [\n            _c(\n              \"el-button\",\n              {\n                attrs: { type: \"primary\", size: \"small\" },\n                on: { click: _vm.primaryBtnClick }\n              },\n              [_vm._v(\"确认\")]\n            ),\n            _c(\n              \"el-button\",\n              {\n                attrs: { plain: \"\", size: \"small\" },\n                on: { click: _vm.plainBtnClick }\n              },\n              [_vm._v(\"取消\")]\n            )\n          ],\n          1\n        )\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"title-div\" }, [\n      _c(\"span\", [_vm._v(\"选择到货商品\")])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}