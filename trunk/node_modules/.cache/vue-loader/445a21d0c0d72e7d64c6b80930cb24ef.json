{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\warehouse\\warehouse_center\\router_set\\warehouse_manager\\warehouse_manager_list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\warehouse\\warehouse_center\\router_set\\warehouse_manager\\warehouse_manager_list.vue","mtime":1576762826241},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport division from \"@/components/division\";\r\nimport { isvalidPhone } from \"@/utils/phonevalide\";\r\nvar validPhone = (rule, value, callback) => {\r\n  if (!value) {\r\n    callback(new Error(\"请输入电话号码\"));\r\n  } else if (!isvalidPhone(value)) {\r\n    callback(new Error(\"请输入正确的11位手机号码\"));\r\n  } else {\r\n    callback();\r\n  }\r\n};\r\n\r\nexport default {\r\n  components: {\r\n    division\r\n  },\r\n  data() {\r\n    return {\r\n      routerTypeTitle: \"保存\",\r\n      //标识新增仓库还是编辑仓库\r\n      isEditor:false,\r\n      //标识当前是新增还是保存\r\n      editorType:false,\r\n      //标记当前仓库的索引值\r\n      idx: -1,\r\n      //仓库列表数据源\r\n      warehouseData: [],\r\n      //外部管控路由接口\r\n      warehouseRouterData: [],\r\n      //隶属机构数据\r\n      organizationListData: [],\r\n      //表单数据\r\n      signData: {\r\n        id: \"\",\r\n        //仓库编码\r\n        warehouseCode: \"\",\r\n        //仓库名称\r\n        warehouseName: \"\",\r\n        //仓库类型\r\n        warehouseType: \"\",\r\n        //联系人\r\n        contact: \"\",\r\n        //联系电话\r\n        telephone: \"\",\r\n        //外部拓展应用ID\r\n        externalPropertiesId: \"\",\r\n        //外部拓展应用名称\r\n        externalApplication: \"\",\r\n        //启停状态\r\n        isValid: false,\r\n        //地址相关\r\n        divisionId: \"\",\r\n        provinceName: \"\",\r\n        provinceCode: \"\",\r\n        cityName: \"\",\r\n        cityCode: \"\",\r\n        areaName: \"\",\r\n        areaCode: \"\",\r\n        address: \"\"\r\n      },\r\n      //仓库类型数据\r\n      warehouseTypeData: [],\r\n      rules: {\r\n        warehouseCode: [\r\n          { required: true, message: \"仓库编码不能为空\", trigger: \"blur\" }\r\n        ],\r\n        warehouseName: [\r\n          { required: true, message: \"仓库名称不能为空\", trigger: \"change\" }\r\n        ],\r\n        warehouseType: [\r\n          { required: true, message: \"仓库类型不能为空\", trigger: \"change\" }\r\n        ],\r\n        contact: [\r\n          { required: true, message: \"联系人不能为空\", trigger: \"change\" }\r\n        ],\r\n        telephone: [{ required: true, trigger: \"blur\", validator: validPhone }],\r\n        divisionId: [\r\n          { required: true, message: \"联系地址不能为空\", trigger: \"change\" }\r\n        ],\r\n        address: [\r\n          { required: true, message: \"详细地址不能为空\", trigger: \"change\" }\r\n        ],\r\n        externalApplication: [\r\n          { required: true, message: \"管控路由不能为空\", trigger: \"change\" }\r\n        ]\r\n      },\r\n      //左侧仓库名称\r\n      warehouseLeft: false,\r\n      //右侧内容\r\n      contentTable: false\r\n    };\r\n  },\r\n  watch: {\r\n    routerTypeTitle(val){\r\n      if(val=='编辑'){\r\n        this.isEditor=true;\r\n        this.editorType=true;\r\n      }else{\r\n        // this.isEditor=false;\r\n        this.idx=-1\r\n        this.editorType=false;\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getOrganizationListData();\r\n    //得到仓库列表数据\r\n    this.getWarehouseListData();\r\n  },\r\n  methods: {\r\n    // routerSymbol(rule, value, callback) {\r\n    //   if (\r\n    //     this.signData.routerSymbol == \"1\" &&\r\n    //     !this.signData.externalApplication\r\n    //   ) {\r\n    //     callback(new Error(\"请选择WMS\"));\r\n    //   } else {\r\n    //     callback();\r\n    //   }\r\n    // },\r\n    //得到组织机构数据\r\n    async getOrganizationListData() {\r\n      let info = await this.request(this.api.user.get_userinfo, {}, true);\r\n      console.log(info);\r\n      //得到直属机构与关联机构（type-0 机构 type-1 部门）\r\n      this.request(this.api.user.userCompany_getUserAllDepartByUserId, {\r\n        userId: info.userId,\r\n        type: 0\r\n      }).then(data => {\r\n        //得到组织机构数据\r\n        this.organizationListData = data;\r\n        console.log(data);\r\n      });\r\n    },\r\n    //得到仓库列表数据\r\n    getWarehouseListData() {\r\n      this.request(this.api.warehouse.warehouseBase_warehouse_list, {}).then(\r\n        res => {\r\n          console.log(res);\r\n          this.warehouseData = res.data;\r\n          if(res.data.length==0)return;\r\n          this.routerTypeTitle='编辑'\r\n          this.$nextTick(() => {\r\n            this.signData = JSON.parse(JSON.stringify(res.data[0]));\r\n          });\r\n\r\n        }\r\n      );\r\n      //得到仓库类型数据 code==07 仓库类型\r\n      this.request(\r\n        this.api.warehouse.warehouseBase_configurationDictionaryByCode,\r\n        { code: \"CONFIGURABLE07\" }\r\n      ).then(res => {\r\n        this.warehouseTypeData = res;\r\n      });\r\n      //得到仓库管控路由数据\r\n      this.request(\r\n        this.api.warehouse.warehouseBase_extApplication_list,\r\n        {}\r\n      ).then(res => {\r\n        console.log(res);\r\n        this.warehouseRouterData = res;\r\n      });\r\n    },\r\n    //选中了仓库路由数据\r\n    selectWarehouseRouterData(val) {\r\n      var externalPropertiesId = this.warehouseRouterData.find(\r\n        item => item.appName == val\r\n      ).id;\r\n      this.signData.externalPropertiesId = externalPropertiesId;\r\n    },\r\n    //新增Btn的点击事件\r\n    addBtnCliclEvent() {\r\n      console.log(\"新增btn的点击事件---\");\r\n      this.$nextTick(() => {\r\n        this.isEditor=false;\r\n        this.contentTable = true;\r\n        this.idx = -1;\r\n        //重置数据\r\n        this.routerTypeTitle = \"保存\";\r\n        this.$nextTick(() => {\r\n          this.$refs.ruleForm.resetFields();\r\n          this.signData.id = \"\";\r\n        })\r\n        this.$refs.division.init(); \r\n        this.signData.externalApplication = \"\";\r\n      });\r\n    },\r\n    //新增仓库的点击事件\r\n    warehouseLiClickEvent(index) {\r\n      if (this.idx != index) {\r\n        this.isEditor=true;\r\n        this.routerTypeTitle = \"编辑\";\r\n        this.request(this.api.warehouse.warehouseBase_warehouse_getByPrimary, {\r\n          id: this.warehouseData[index].id\r\n        }).then(res => {\r\n          console.log(res);\r\n          this.$nextTick(() => {\r\n            this.signData = res;\r\n          });\r\n        });\r\n        this.idx = index;\r\n      }\r\n    },\r\n    //保存Btn的点击事件\r\n    saveBtnCliclEvent(formName) {\r\n      if(this.routerTypeTitle=='编辑'){\r\n        this.isEditor=true;\r\n        this.routerTypeTitle ='保存'\r\n        return\r\n      };\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          this.request(\r\n            this.api.warehouse.warehouseBase_warehouse_save,\r\n            this.signData\r\n          ).then(res => {\r\n            console.log(res);\r\n            this.$nextTick(() => {\r\n              //保存成功,刷新数据\r\n              this.getWarehouseListData();\r\n              this.routerTypeTitle = \"编辑\";\r\n            });\r\n          });\r\n        } else {\r\n          console.log(\"error submit!!\");\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    setDivision(var1) {\r\n      this.signData.provinceName = var1.province;\r\n      this.signData.provinceCode = var1.provinceCode;\r\n      this.signData.cityName = var1.municipality;\r\n      this.signData.cityCode = var1.municipalityCode;\r\n      this.signData.areaName = var1.area;\r\n      this.signData.areaCode = var1.areaCode;\r\n      this.signData.divisionId = var1.divisionId;\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["warehouse_manager_list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"warehouse_manager_list.vue","sourceRoot":"src/views/warehouse/warehouse_center/router_set/warehouse_manager","sourcesContent":["<template>\r\n  <div class=\"content\">\r\n    <div class=\"left-content\">\r\n      <div class=\"left\">\r\n        <span>仓库列表</span>\r\n        <el-button type=\"primary\" class=\"add-btn\" size=\"small\" @click=\"addBtnCliclEvent\">新增</el-button>\r\n      </div>\r\n      <div class=\"warehouse-name\" v-if=\"warehouseData.length>0\">\r\n        <span>仓库名称</span>\r\n        <ul>\r\n          <li\r\n            v-for=\"(item,index) in warehouseData\"\r\n            :key=\"item.id\"\r\n            @click=\"warehouseLiClickEvent(index)\"\r\n          >{{item.warehouseName}}</li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"blank\" v-else>\r\n        <span>暂无仓库</span>\r\n      </div>\r\n    </div>\r\n    <div class=\"right-content\">\r\n      <div v-if=\"contentTable || warehouseData.length>0\">\r\n        <div class=\"right\">\r\n          <span>仓库信息</span>\r\n          <el-button\r\n            type=\"primary\"\r\n            class=\"add-btn\"\r\n            size=\"small\"\r\n            @click=\"saveBtnCliclEvent('ruleForm')\"\r\n          >{{routerTypeTitle}}</el-button>\r\n        </div>\r\n        <div class=\"right-form\">\r\n          <el-form\r\n            :model=\"signData\"\r\n            :rules=\"rules\"\r\n            ref=\"ruleForm\"\r\n            label-width=\"130px\"\r\n            class=\"demo-ruleForm\"\r\n          >\r\n            <el-form-item label=\"仓库编码：\" prop=\"warehouseCode\">\r\n              <el-input\r\n                v-model=\"signData.warehouseCode\"\r\n                style=\"width:300px\"\r\n                placeholder=\"请输入仓库编码\"\r\n                maxlength=\"10\"\r\n                :disabled='isEditor'\r\n              ></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"仓库名称：\" prop=\"warehouseName\">\r\n              <el-input v-model=\"signData.warehouseName\" style=\"width:300px\" placeholder=\"请输入仓库名称\" :disabled=\"editorType\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"仓库类型：\" prop=\"warehouseType\">\r\n              <el-select v-model=\"signData.warehouseType\" placeholder=\"请选择\" style=\"width:300px\" :disabled=\"editorType\">\r\n                <el-option\r\n                  v-for=\"item in warehouseTypeData\"\r\n                  :key=\"item.id\"\r\n                  :label=\"item.description\"\r\n                  :value=\"item.code\"\r\n                ></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item prop=\"divisionId\" label=\"仓库地址：\">\r\n              <div style=\"width:750px;\">\r\n                <division @set-division=\"setDivision\" ref=\"division\" v-model=\"signData.divisionId\" :isDisabled=\"editorType\"></division>\r\n              </div>\r\n            </el-form-item>\r\n            <el-form-item prop=\"address\" label=\"详细地址：\">\r\n              <el-input v-model=\"signData.address\" style=\"width:300px\" placeholder=\"请输入详细地址\" :disabled=\"editorType\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"联系人：\" prop=\"contact\">\r\n              <el-input v-model=\"signData.contact\" style=\"width:300px\" placeholder=\"请输入联系人\" :disabled=\"editorType\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"联系方式：\" prop=\"telephone\">\r\n              <el-input\r\n                v-model=\"signData.telephone\"\r\n                style=\"width:300px\"\r\n                maxlength=\"11\"\r\n                placeholder=\"请输入联系方式\"\r\n                :disabled=\"editorType\"\r\n              ></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"仓库管控路由：\" prop=\"externalApplication\" class=\"right-router\">\r\n              <el-select\r\n                v-model=\"signData.externalApplication\"\r\n                :disabled=\"editorType\"\r\n                placeholder=\"请选择\"\r\n                style=\"width:300px\"\r\n                @change=\"selectWarehouseRouterData\"\r\n              >\r\n                <el-option\r\n                  v-for=\"item in warehouseRouterData\"\r\n                  :key=\"item.id\"\r\n                  :label=\"item.appName\"\r\n                  :value=\"item.appName\"\r\n                ></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"启停状态：\" prop=\"isValid\">\r\n              <el-switch v-model=\"signData.isValid\" active-color=\"#13ce66\" inactive-color=\"#ff4949\" :disabled=\"editorType\"></el-switch>\r\n            </el-form-item>\r\n          </el-form>\r\n        </div>\r\n      </div>\r\n      <div class=\"blank\" v-else>\r\n        <span>暂无数据</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport division from \"@/components/division\";\r\nimport { isvalidPhone } from \"@/utils/phonevalide\";\r\nvar validPhone = (rule, value, callback) => {\r\n  if (!value) {\r\n    callback(new Error(\"请输入电话号码\"));\r\n  } else if (!isvalidPhone(value)) {\r\n    callback(new Error(\"请输入正确的11位手机号码\"));\r\n  } else {\r\n    callback();\r\n  }\r\n};\r\n\r\nexport default {\r\n  components: {\r\n    division\r\n  },\r\n  data() {\r\n    return {\r\n      routerTypeTitle: \"保存\",\r\n      //标识新增仓库还是编辑仓库\r\n      isEditor:false,\r\n      //标识当前是新增还是保存\r\n      editorType:false,\r\n      //标记当前仓库的索引值\r\n      idx: -1,\r\n      //仓库列表数据源\r\n      warehouseData: [],\r\n      //外部管控路由接口\r\n      warehouseRouterData: [],\r\n      //隶属机构数据\r\n      organizationListData: [],\r\n      //表单数据\r\n      signData: {\r\n        id: \"\",\r\n        //仓库编码\r\n        warehouseCode: \"\",\r\n        //仓库名称\r\n        warehouseName: \"\",\r\n        //仓库类型\r\n        warehouseType: \"\",\r\n        //联系人\r\n        contact: \"\",\r\n        //联系电话\r\n        telephone: \"\",\r\n        //外部拓展应用ID\r\n        externalPropertiesId: \"\",\r\n        //外部拓展应用名称\r\n        externalApplication: \"\",\r\n        //启停状态\r\n        isValid: false,\r\n        //地址相关\r\n        divisionId: \"\",\r\n        provinceName: \"\",\r\n        provinceCode: \"\",\r\n        cityName: \"\",\r\n        cityCode: \"\",\r\n        areaName: \"\",\r\n        areaCode: \"\",\r\n        address: \"\"\r\n      },\r\n      //仓库类型数据\r\n      warehouseTypeData: [],\r\n      rules: {\r\n        warehouseCode: [\r\n          { required: true, message: \"仓库编码不能为空\", trigger: \"blur\" }\r\n        ],\r\n        warehouseName: [\r\n          { required: true, message: \"仓库名称不能为空\", trigger: \"change\" }\r\n        ],\r\n        warehouseType: [\r\n          { required: true, message: \"仓库类型不能为空\", trigger: \"change\" }\r\n        ],\r\n        contact: [\r\n          { required: true, message: \"联系人不能为空\", trigger: \"change\" }\r\n        ],\r\n        telephone: [{ required: true, trigger: \"blur\", validator: validPhone }],\r\n        divisionId: [\r\n          { required: true, message: \"联系地址不能为空\", trigger: \"change\" }\r\n        ],\r\n        address: [\r\n          { required: true, message: \"详细地址不能为空\", trigger: \"change\" }\r\n        ],\r\n        externalApplication: [\r\n          { required: true, message: \"管控路由不能为空\", trigger: \"change\" }\r\n        ]\r\n      },\r\n      //左侧仓库名称\r\n      warehouseLeft: false,\r\n      //右侧内容\r\n      contentTable: false\r\n    };\r\n  },\r\n  watch: {\r\n    routerTypeTitle(val){\r\n      if(val=='编辑'){\r\n        this.isEditor=true;\r\n        this.editorType=true;\r\n      }else{\r\n        // this.isEditor=false;\r\n        this.idx=-1\r\n        this.editorType=false;\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getOrganizationListData();\r\n    //得到仓库列表数据\r\n    this.getWarehouseListData();\r\n  },\r\n  methods: {\r\n    // routerSymbol(rule, value, callback) {\r\n    //   if (\r\n    //     this.signData.routerSymbol == \"1\" &&\r\n    //     !this.signData.externalApplication\r\n    //   ) {\r\n    //     callback(new Error(\"请选择WMS\"));\r\n    //   } else {\r\n    //     callback();\r\n    //   }\r\n    // },\r\n    //得到组织机构数据\r\n    async getOrganizationListData() {\r\n      let info = await this.request(this.api.user.get_userinfo, {}, true);\r\n      console.log(info);\r\n      //得到直属机构与关联机构（type-0 机构 type-1 部门）\r\n      this.request(this.api.user.userCompany_getUserAllDepartByUserId, {\r\n        userId: info.userId,\r\n        type: 0\r\n      }).then(data => {\r\n        //得到组织机构数据\r\n        this.organizationListData = data;\r\n        console.log(data);\r\n      });\r\n    },\r\n    //得到仓库列表数据\r\n    getWarehouseListData() {\r\n      this.request(this.api.warehouse.warehouseBase_warehouse_list, {}).then(\r\n        res => {\r\n          console.log(res);\r\n          this.warehouseData = res.data;\r\n          if(res.data.length==0)return;\r\n          this.routerTypeTitle='编辑'\r\n          this.$nextTick(() => {\r\n            this.signData = JSON.parse(JSON.stringify(res.data[0]));\r\n          });\r\n\r\n        }\r\n      );\r\n      //得到仓库类型数据 code==07 仓库类型\r\n      this.request(\r\n        this.api.warehouse.warehouseBase_configurationDictionaryByCode,\r\n        { code: \"CONFIGURABLE07\" }\r\n      ).then(res => {\r\n        this.warehouseTypeData = res;\r\n      });\r\n      //得到仓库管控路由数据\r\n      this.request(\r\n        this.api.warehouse.warehouseBase_extApplication_list,\r\n        {}\r\n      ).then(res => {\r\n        console.log(res);\r\n        this.warehouseRouterData = res;\r\n      });\r\n    },\r\n    //选中了仓库路由数据\r\n    selectWarehouseRouterData(val) {\r\n      var externalPropertiesId = this.warehouseRouterData.find(\r\n        item => item.appName == val\r\n      ).id;\r\n      this.signData.externalPropertiesId = externalPropertiesId;\r\n    },\r\n    //新增Btn的点击事件\r\n    addBtnCliclEvent() {\r\n      console.log(\"新增btn的点击事件---\");\r\n      this.$nextTick(() => {\r\n        this.isEditor=false;\r\n        this.contentTable = true;\r\n        this.idx = -1;\r\n        //重置数据\r\n        this.routerTypeTitle = \"保存\";\r\n        this.$nextTick(() => {\r\n          this.$refs.ruleForm.resetFields();\r\n          this.signData.id = \"\";\r\n        })\r\n        this.$refs.division.init(); \r\n        this.signData.externalApplication = \"\";\r\n      });\r\n    },\r\n    //新增仓库的点击事件\r\n    warehouseLiClickEvent(index) {\r\n      if (this.idx != index) {\r\n        this.isEditor=true;\r\n        this.routerTypeTitle = \"编辑\";\r\n        this.request(this.api.warehouse.warehouseBase_warehouse_getByPrimary, {\r\n          id: this.warehouseData[index].id\r\n        }).then(res => {\r\n          console.log(res);\r\n          this.$nextTick(() => {\r\n            this.signData = res;\r\n          });\r\n        });\r\n        this.idx = index;\r\n      }\r\n    },\r\n    //保存Btn的点击事件\r\n    saveBtnCliclEvent(formName) {\r\n      if(this.routerTypeTitle=='编辑'){\r\n        this.isEditor=true;\r\n        this.routerTypeTitle ='保存'\r\n        return\r\n      };\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          this.request(\r\n            this.api.warehouse.warehouseBase_warehouse_save,\r\n            this.signData\r\n          ).then(res => {\r\n            console.log(res);\r\n            this.$nextTick(() => {\r\n              //保存成功,刷新数据\r\n              this.getWarehouseListData();\r\n              this.routerTypeTitle = \"编辑\";\r\n            });\r\n          });\r\n        } else {\r\n          console.log(\"error submit!!\");\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    setDivision(var1) {\r\n      this.signData.provinceName = var1.province;\r\n      this.signData.provinceCode = var1.provinceCode;\r\n      this.signData.cityName = var1.municipality;\r\n      this.signData.cityCode = var1.municipalityCode;\r\n      this.signData.areaName = var1.area;\r\n      this.signData.areaCode = var1.areaCode;\r\n      this.signData.divisionId = var1.divisionId;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n <style lang=\"less\" scoped>\r\n.content {\r\n  .left-content {\r\n    position: absolute;\r\n    background-color: white;\r\n    width: 20%;\r\n    top: 70px;\r\n    bottom: 10px;\r\n    .left {\r\n      margin: 10px;\r\n      display: flex;\r\n      flex-direction: column;\r\n      span {\r\n        border-bottom: 1px solid #ddd;\r\n        padding: 10px;\r\n        // padding-bottom:15px;\r\n        // padding-left:10px;\r\n      }\r\n      .add-btn {\r\n        width: 60px;\r\n        position: absolute;\r\n        top: 12px;\r\n        right: 18px;\r\n      }\r\n    }\r\n    .warehouse-name {\r\n      margin: 10px;\r\n      margin-top: 20px;\r\n      display: flex;\r\n      flex-direction: column;\r\n      span {\r\n        color: #222;\r\n        font-weight: 700;\r\n        border-bottom: 1px solid #ddd;\r\n        padding: 10px;\r\n      }\r\n      li {\r\n        padding: 10px;\r\n        border-bottom: 1px solid #ddd;\r\n      }\r\n      li:hover {\r\n        background-color: #fafafa;\r\n      }\r\n    }\r\n  }\r\n  .right-content {\r\n    position: absolute;\r\n    background-color: white;\r\n    width: 79%;\r\n    left: 20.5%;\r\n    top: 70px;\r\n    bottom: 10px;\r\n    .right {\r\n      margin: 10px;\r\n      padding: 5px;\r\n      border-bottom: 1px solid #ddd;\r\n      display: flex;\r\n      align-items: center;\r\n      span {\r\n        flex: auto;\r\n      }\r\n    }\r\n    .right-form {\r\n      margin-top: 20px;\r\n    }\r\n  }\r\n  .blank {\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    color: #ddd;\r\n    font-size: 35px;\r\n  }\r\n  .right-router /deep/ .el-form-item__error{\r\n    left: 260px;\r\n  }\r\n}\r\n</style>"]}]}