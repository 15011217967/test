{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\product\\commodity\\index_list.vue?vue&type=style&index=0&id=050d6bc7&scoped=true&lang=less&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\product\\commodity\\index_list.vue","mtime":1587347931178},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\css-loader\\index.js","mtime":1558492728478},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1558492728890},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\postcss-loader\\src\\index.js","mtime":1558492728823},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\less-loader\\dist\\cjs.js","mtime":1566193719488},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.poporer-img {\r\n  width: auto;\r\n  height: 320px;\r\n}\r\n.parent-checked{\r\n  display: inline-block;\r\n}\r\n.children-checked{\r\n  text-align: right;\r\n}\r\n",{"version":3,"sources":["index_list.vue"],"names":[],"mappingsvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index_list.vue","sourceRoot":"src/views/product/commodity","sourcesContent":["<!--\r\n * @Description: 商品中心 =>商品列表\r\n * @Author:elephant\r\n * @Date: 2019-07-01 15:20:22\r\n * @LastEditTime: 2020-04-14 17:28:08\r\n * @LastEditors: Please set LastEditors\r\n -->\r\n<template>\r\n  <div>\r\n    <div class=\"item-margin\">\r\n      <el-form\r\n        class=\"item-form\"\r\n        :model=\"filtersData\"\r\n        label-width=\"90px\"\r\n        size=\"small\"\r\n        ref=\"filtersForm\"\r\n        inline\r\n      >\r\n        <el-form-item prop=\"cateIdentifier\" label=\"品类：\">\r\n          <el-cascader\r\n            class=\"input-w\"\r\n            filterable\r\n            :options=\"classData\"\r\n            @visible-change=\"serchVisibleChange($event,searchStatus.cateActive,'cate')\"\r\n            v-model=\"cateArr\"\r\n            :value=\"cateArr\"\r\n            @change=\"cascaderGet\"\r\n            :show-all-levels=\"false\"\r\n            :props=\"props\"\r\n            change-on-select\r\n          ></el-cascader>\r\n        </el-form-item>\r\n        <el-form-item prop=\"valid\" label=\"商品状态：\">\r\n          <el-select class=\"input-w\" placeholder=\"请选择\" filterable v-model=\"filtersData.valid\">\r\n            <el-option\r\n              v-for=\"item in productOptions\"\r\n              :key=\"item.status\"\r\n              :label=\"item.name\"\r\n              :value=\"item.status\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item prop=\"brandId\" label=\"品牌：\">\r\n          <el-select\r\n            class=\"input-w\"\r\n            placeholder=\"请选择\"\r\n            :loading=\"searchStatus.brandLoading\"\r\n            @visible-change=\"serchVisibleChange($event,searchStatus.brandActive,'brand')\"\r\n            filterable\r\n            v-model=\"filtersData.brandId\"\r\n          >\r\n            <el-option\r\n              v-for=\"item in brandOptions\"\r\n              :key=\"item.id\"\r\n              :label=\"item.name\"\r\n              :value=\"item.id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <!-- <el-form-item prop=\"quantityGE\" label=\"库存数量：\">\r\n          <el-col :span=\"11\">\r\n            <el-input class=\"input-w\" placeholder=\"请输入最小值\" v-model=\"filtersData.quantityGE\"></el-input>\r\n          </el-col>\r\n          <el-col :span=\"2\">&nbsp;</el-col>\r\n          <el-col :span=\"11\">\r\n            <el-input class=\"input-w\" placeholder=\"请输入最大值\" v-model=\"filtersData.quantityLE\"></el-input>\r\n          </el-col>\r\n        </el-form-item>-->\r\n        <el-form-item prop=\"brandOwnerId\" label=\"品牌商：\">\r\n          <el-select\r\n            class=\"input-w\"\r\n            placeholder=\"请选择\"\r\n            :loading=\"searchStatus.brandOwnerLoading\"\r\n            filterable\r\n            @visible-change=\"serchVisibleChange($event,searchStatus.brandOwnerActive,'brandOwner')\"\r\n            v-model=\"filtersData.brandOwnerId\"\r\n          >\r\n            <el-option\r\n              v-for=\"(item,index) in brandOwnerOptions\"\r\n              :key=\"index.id\"\r\n              :label=\"item.name\"\r\n              :value=\"item.id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <!-- <el-form-item prop=\"designCompanyId\" label=\"设计商：\">\r\n          <el-select\r\n            class=\"input-w\"\r\n            placeholder=\"请选择\"\r\n            filterable\r\n            :loading=\"searchStatus.designCompanyLoading\"\r\n            @visible-change=\"serchVisibleChange($event,searchStatus.designCompanyActive,'designCompany')\"\r\n            v-model=\"filtersData.designCompanyId\"\r\n          >\r\n            <el-option\r\n              v-for=\"item in designCompanyOptions\"\r\n              :key=\"item.id\"\r\n              :label=\"item.name\"\r\n              :value=\"item.id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>-->\r\n        <el-form-item prop=\"ownerId\" label=\"货主：\">\r\n          <el-select class=\"input-w\" placeholder=\"请选择\" v-model=\"filtersData.ownerId\">\r\n            <el-option\r\n              v-for=\"(item,index) in ownerOptions\"\r\n              :key=\"index.id\"\r\n              :label=\"item.name\"\r\n              :value=\"item.code\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item prop=\"colorCode\" label=\"颜色：\">\r\n          <el-cascader\r\n            class=\"input-w\"\r\n            v-model=\"colorArr\"\r\n            :value=\"colorArr\"\r\n            :options=\"colorOptions\"\r\n            @change=\"colorCodeGet\"\r\n            :show-all-levels=\"false\"\r\n            :props=\"colorProps\"\r\n            :emitPath=\"false\"\r\n            change-on-select\r\n          ></el-cascader>\r\n        </el-form-item>\r\n        <el-form-item prop=\"seasonalStyleCode\" label=\"季节：\">\r\n          <el-select\r\n            filterable\r\n            class=\"input-w\"\r\n            placeholder=\"请选择\"\r\n            v-model=\"filtersData.seasonalStyleCode\"\r\n          >\r\n            <el-option\r\n              v-for=\"(item,index) in seasonalStyleOptions\"\r\n              :key=\"index.code\"\r\n              :label=\"item.name\"\r\n              :value=\"item.code\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item prop=\"searchWords\" label=\"综合搜索：\">\r\n          <el-input class=\"input-w\" placeholder=\"商品款号/货号/原始款号\" v-model=\"filtersData.searchWords\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button size=\"small\" @click=\"handleSearch\" type=\"primary\" plain>搜索</el-button>\r\n          <el-button size=\"small\" @click=\"handleResetFilters('filtersForm')\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n    <!--table  -->\r\n    <div class=\"item-margin\">\r\n      <div class=\"item-cont\">\r\n        <el-button size=\"small\" type=\"primary\" @click=\"openAddCommodity\">新增商品</el-button>\r\n        <el-button size=\"small\" type=\"primary\" plain @click=\"openPrintsModal\">打印吊牌</el-button>\r\n        <el-button size=\"small\" type=\"primary\" plain @click=\"exportShare\">导出分享</el-button>\r\n        <el-button size=\"small\" type=\"primary\" plain @click=\"exportDataPacket\">导出数据包</el-button>\r\n      </div>\r\n      <div class=\"item-table\">\r\n        <el-table\r\n          :data=\"tableListData\"\r\n          stripe\r\n          empty-text=\"暂无数据\"\r\n          header-align=\"center\"\r\n          header-row-class-name=\"item-table-header\"\r\n          :highlight-current-row=\"true\"\r\n          row-key=\"id\"\r\n          lazy\r\n          :load=\"load\"\r\n          :tree-props=\"{children: 'children', hasChildren: 'hasChildren'}\"\r\n        >\r\n          <el-table-column prop=\"code\" align=\"center\"   width=\"80\">\r\n            <template slot-scope=\"scope\">\r\n               <!-- <i\r\n                @click=\"childrenIsShow(scope.row)\"\r\n                :data-id=\"scope.row.id\"\r\n                v-if=\"scope.row.isShow\"\r\n                :class=\"scope.row.isType == 1 ?'el-icon-circle-plus-outline i-cursor' : 'el-icon-remove-outline i-cursor'\"\r\n              ></i> -->\r\n              <div :class=\"[!scope.row.children ? 'children-checked':'parent-checked']\" >\r\n              <el-checkbox\r\n                v-model=\"scope.row.checked\"\r\n                :key=\"scope.row.id\"\r\n                @change=\"handleCheckAllChange(scope.row)\"\r\n              ></el-checkbox>\r\n              </div>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"code\" align=\"center\" label=\"商品款号\" min-width=\"125\"></el-table-column>\r\n          <el-table-column prop=\"subCode\" align=\"center\" label=\"商品货号\" min-width=\"150\"></el-table-column>\r\n          <el-table-column prop=\"color\" align=\"center\" label=\"颜色\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"brandName\" align=\"center\" label=\"品牌\" min-width=\"80\"></el-table-column>\r\n          <el-table-column prop=\"ownerName\" align=\"center\" label=\"货主\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"fullCateName\" align=\"center\" label=\"品类\" min-width=\"120\"></el-table-column>\r\n          <el-table-column prop=\"name\" align=\"center\" label=\"商品名称\" min-width=\"120\"></el-table-column>\r\n          <el-table-column prop=\"originalCode\" align=\"center\" label=\"原始款号\" min-width=\"120\"></el-table-column>\r\n          <el-table-column prop=\"image\" align=\"center\" label=\"商品图片\" min-width=\"120\">\r\n            <template slot-scope=\"scope\">\r\n              <el-popover placement=\"left\" trigger=\"hover\">\r\n                <img class=\"poporer-img\" :src=\"scope.row.image\" />\r\n                <img slot=\"reference\" :src=\"scope.row.image\" class=\"table-img-wh\" />\r\n              </el-popover>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"retailPrice\" align=\"center\" label=\"吊牌价\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"valid\" align=\"center\" label=\"商品状态\" min-width=\"110\">\r\n            <template slot-scope=\"scope\">\r\n              <el-switch\r\n                v-model=\"scope.row.valid\"\r\n                v-if=\"scope.row.isShow\"\r\n                active-color=\"#13ce66\"\r\n                @change=\"switchValid(scope.row)\"\r\n                inactive-color=\"#9d9d9d\"\r\n              ></el-switch>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column\r\n            fixed=\"right\"\r\n            label-class-name=\"text-center\"\r\n            class-name=\"text-center\"\r\n            align=\"center\"\r\n            label=\"操作\"\r\n            width=\"100\"\r\n          >\r\n            <template slot-scope=\"scope\">\r\n              <el-button\r\n                @click=\"openShowDetails(scope.row)\"\r\n                v-if=\"scope.row.isShow\"\r\n                type=\"text\"\r\n                size=\"small\"\r\n              >查看</el-button>\r\n              <el-button\r\n                @click=\"openEditDetails(scope.row)\"\r\n                v-if=\"scope.row.isShow\"\r\n                type=\"text\"\r\n                size=\"small\"\r\n              >修改</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n        <div class=\"pagination mt-10 mb-20\">\r\n          <el-pagination\r\n            class=\"mr-20\"\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"filtersData.pageIndex\"\r\n            :page-sizes=\"[10,20,30,40,50]\"\r\n            :page-size=\"filtersData.pageSize\"\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=\"total\"\r\n          ></el-pagination>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!--table END  -->\r\n    <!-- 打印 -->\r\n    <prints-dialog ref=\"printsRef\"></prints-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\nconst PrintsDialog = resolve =>\r\n  require([\"@/components/Prints/PrintsDialog.vue\"], resolve);\r\nlet csvExportData = {};\r\nexport default {\r\n  name: \"index_list\",\r\n  data() {\r\n    let that = this;\r\n    return {\r\n      filtersData: {\r\n        colorCode: \"\",\r\n        colorSeriesCode: \"\",\r\n        ownerId: \"\", //货主\r\n        brandId: \"\", //品牌ID\r\n        brandOwnerId: \"\",\r\n        cateIdentifier: \"\", // 分类标识码\r\n        pageIndex: 1, //当前页码\r\n        pageSize: 10, //每页数量\r\n        //季节字段\r\n        seasonalStyleCode: \"\",\r\n        searchWords: \"\", //检索关键字\r\n        designCompanyId: \"\", //设计商Id\r\n        // tenantId: \"\", //平台租户（所属机构）ID ,\r\n        valid: true //有效状态\r\n      },\r\n      colorProps: {\r\n        lazy: true,\r\n        lazyLoad(node, resolve) {\r\n          that.getColorList(node, resolve);\r\n        }\r\n      },\r\n      classData: [],\r\n      classList: [],\r\n      cateArr: [],\r\n      colorArr: [],\r\n      props: {\r\n        value: \"id\",\r\n        label: \"name\",\r\n        children: \"children\"\r\n      },\r\n      //商品有效状态\r\n      productOptions: [\r\n        {\r\n          status: true,\r\n          name: \"上架\"\r\n        },\r\n        {\r\n          status: false,\r\n          name: \"下架\"\r\n        }\r\n      ],\r\n      total: 0,\r\n      searchStatus: {\r\n        cateActive: false,\r\n        brandActive: false,\r\n        brandLoading: true,\r\n        brandOwnerActive: false,\r\n        brandOwnerLoading: true,\r\n        DesignCompanyActive: false,\r\n        DesignCompanyLoading: true\r\n      },\r\n      //品类Data 以后可能使用VUx 读取看具体需求，当多处调用时存入VUX；\r\n      CategoryOptions: [],\r\n      //品牌\r\n      brandOptions: [],\r\n      //设计商\r\n      designCompanyOptions: [],\r\n      colorOptions: [],\r\n      colorList: [],\r\n      //品牌商\r\n      brandOwnerOptions: [], //品牌商\r\n      //table列表数据\r\n      tableListData: [],\r\n      //货主\r\n      ownerOptions: [],\r\n    };\r\n  },\r\n  components: {\r\n    PrintsDialog\r\n  },\r\n  created() {\r\n    //获取列表\r\n    this.getTableList();\r\n    //颜色\r\n    this.getColorOptions();\r\n    //获取货主\r\n    this.getOwnerOptions();\r\n  },\r\n  activated() {\r\n    this.getTableList();\r\n  },\r\n  mounted() {\r\n    // var ssu = new window.SpeechSynthesisUtterance('你好我爱你亲爱的');\r\n    // window.speechSynthesis.speak(ssu);\r\n  },\r\n  methods: {\r\n    //处理搜索下拉显示\r\n    serchVisibleChange(type, active, str) {\r\n      if (!!type) {\r\n        if (!active) {\r\n          switch (str) {\r\n            //品类\r\n            case \"cate\":\r\n              this.searchStatus.cateActive = true;\r\n              this.getClassData();\r\n              break;\r\n            //品牌\r\n            case \"brand\":\r\n              this.searchStatus.brandActive = true;\r\n              this.searchStatus.brandLoading = false;\r\n              this.getBrandOptions();\r\n              break;\r\n            //品牌商\r\n            case \"brandOwner\":\r\n              this.searchStatus.brandOwnerActive = true;\r\n              this.searchStatus.brandOwnerLoading = false;\r\n              this.getBrandOwnerOption();\r\n              break;\r\n            //设计商\r\n            case \"designCompany\":\r\n              this.searchStatus.designCompanyActive = true;\r\n              this.searchStatus.designCompanyLoading = false;\r\n              this.getDesignCompanyOptions();\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    //批量打印\r\n    openPrintsModal() {\r\n      //需要打印逻辑\r\n      let arr = [];\r\n      for (let i = 0; i < this.tableListData.length; i++) {\r\n        if (this.tableListData[i].valid == true) {\r\n          arr.push(this.tableListData[i].code);\r\n        }\r\n      }\r\n      if (arr.length <= 0) {\r\n        this.$message.error(\"无可打印吊牌数据\");\r\n        return false;\r\n      }\r\n      // 新需求 用当前页面的搜索条件 传入搜索项目\r\n      let params = this.$common.deepCopy(this.filtersData);\r\n      params.pageIndex = null;\r\n      params.pageSize = null;\r\n      this.$refs.printsRef.popupInit(params);\r\n    },\r\n    //导出分享\r\n    exportShare() {\r\n      this.filtersData.pageIndex = 0;\r\n      this.filtersData.pageSize = 0;\r\n      let _self = this.filtersData;\r\n      console.log(_self);\r\n      let hasProp = false;\r\n      Object.keys(_self).forEach(function(key) {\r\n        // console.log(key + \"==\" + _self[key].length);\r\n        if (_self[key].length > 0) {\r\n          hasProp = true;\r\n        }\r\n      });\r\n      if (hasProp) {\r\n        console.log(\"istrue\");\r\n        this.request(\r\n          this.api.product.productShare_share,\r\n          this.filtersData\r\n        ).then(res => {\r\n          console.log(res);\r\n          const { href } = this.$router.resolve({\r\n            path: \"/share/product_list\",\r\n            query: {\r\n              identifier: res\r\n            }\r\n          });\r\n          window.open(href, \"_blank\");\r\n        });\r\n      } else {\r\n        this.$notify({\r\n          title: \"提示\",\r\n          message: \"请至少选择一项商品筛选条件（商品状态条件除外）！\",\r\n          type: \"warning\",\r\n          duration: 2000\r\n        });\r\n      }\r\n    },\r\n    //颜色\r\n    getColorOptions() {\r\n      this.request(this.api.product.colorSeries_list, {}, true).then(res => {\r\n        let _data = res.data;\r\n        let colorList = _data.map((item, i) => ({\r\n          value: item.id,\r\n          label: item.name,\r\n          leaf: false\r\n        }));\r\n        this.colorOptions = colorList;\r\n      });\r\n    },\r\n    //获取货主\r\n    getOwnerOptions() {\r\n      this.request(\r\n        this.api.warehouse.warehouseBase_goodsOwner_list,\r\n        { valid: true, orderBy: \"create_time\" },\r\n        true\r\n      ).then(res => {\r\n        this.ownerOptions = res.data;\r\n      });\r\n    },\r\n    getColorList(node, resolve) {\r\n      if (!node.value) return;\r\n      this.request(\r\n        this.api.product.color_list,\r\n        { seriesId: node.value },\r\n        true\r\n      ).then(res => {\r\n        let _data = res.data;\r\n        let colorList = _data.map((item, i) => ({\r\n          value: item.code,\r\n          label: item.name,\r\n          leaf: true\r\n        }));\r\n        resolve(colorList);\r\n      });\r\n    },\r\n    colorCodeGet(e) {\r\n      let color = this.$common.deepCopy(e).pop();\r\n      if (e.length >= 2) {\r\n        this.filtersData.colorCode = color;\r\n        this.filtersData.colorSeriesId = \"\";\r\n      } else {\r\n        this.filtersData.colorCode = \"\";\r\n        this.filtersData.colorSeriesId = color;\r\n      }\r\n    },\r\n    //获取分类\r\n    getClassData() {\r\n      //分类类型（1：标准分类，2：定制分类，3：原料分类或者称为属性分类）\r\n      this.$common.getClassSelect(this, 1).then(res => {\r\n        this.classData = res.ztree;\r\n        this.classList = res.list;\r\n      });\r\n    },\r\n    cascaderGet(e) {\r\n      let cateId = JSON.parse(JSON.stringify(e)).pop();\r\n      let obj = this.classList.find(item => item.id == cateId);\r\n      this.filtersData.cateIdentifier = obj.identifier;\r\n    },\r\n    //获取品牌商\r\n    getBrandOwnerOption() {\r\n      this.request(this.api.product.productBrandOwner_list, {}, true).then(\r\n        data => {\r\n          let _data = data.data;\r\n          this.brandOwnerOptions = _data;\r\n        }\r\n      );\r\n    },\r\n    /**\r\n     * 用于点击table列表中某行 获取当前行下级子分类\r\n     * 1，在获取列表数据时给每个列表中添加字段 stratus ==1  表示当前行可展开；\r\n     * 2，点击某一行时，获取当前行的下标， 当数据返回后 把对象抽出，插入在已知下标后。\r\n     * 3，当点击关闭时，根据下标和唯一标识 删除已知 数据中的字段；\r\n     * */\r\n    //获取列表\r\n    getTableList() {\r\n      this.request(this.api.product.product_listProduct, this.filtersData).then(\r\n        data => {\r\n          let _data = data.data,\r\n            _dataLen = _data.length;\r\n          for (let i = 0; i < _dataLen; i++) {\r\n            _data[i].isShow = true;\r\n            _data[i].isType = 1;\r\n            _data[i]._cid = \"\";\r\n            _data[i].children = [];\r\n            _data[i].hasChildren = true;\r\n            _data[i].checked = false;\r\n          }\r\n          this.tableListData = _data;\r\n          this.total = data.totalCount;\r\n        }\r\n      );\r\n    },\r\n    //设计商\r\n    getDesignCompanyOptions() {\r\n      this.request(this.api.product.designCompany_list, {}, true).then(data => {\r\n        //  console.log(data);\r\n        this.designCompanyOptions = data.data;\r\n      });\r\n    }, //品牌\r\n    getBrandOptions() {\r\n      this.request(this.api.product.productBrand_list, {}, true).then(data => {\r\n        //console.log(data.data);\r\n        let _data = data.data;\r\n        this.brandOptions = _data;\r\n      });\r\n    },\r\n    //搜索\r\n    handleSearch() {\r\n      this.filtersData.pageIndex = 1;\r\n      this.filtersData.pageSize = 10;\r\n      this.getTableList();\r\n    },\r\n    //清空重置\r\n    handleResetFilters(formName) {\r\n      this.$refs[formName].resetFields();\r\n      this.cateArr = [];\r\n      this.colorArr = [];\r\n      this.filtersData.stockLE = \"\";\r\n      this.filtersData.colorSeriesId = \"\";\r\n    },\r\n    //滑块开关\r\n    switchValid(params) {\r\n      this.request(this.api.product.product_save, params);\r\n    },\r\n    //新增商品按钮\r\n    openAddCommodity() {\r\n      this.$router.push({\r\n        path: \"/product/commodity/addCommodity\",\r\n        name: \"addCommodity\"\r\n      });\r\n    },\r\n    //查看商品\r\n    openShowDetails(params) {\r\n      this.$router.push({\r\n        path: \"/product/commodity/show_commodity\",\r\n        name: \"show_commodity\",\r\n        query: {\r\n          productId: params.id,\r\n          cateId: params.cateId,\r\n          _type: \"show\"\r\n        }\r\n      });\r\n    },\r\n    //修改商品\r\n    openEditDetails(params) {\r\n      this.$router.push({\r\n        path: \"/product/commodity/edit_commodity\",\r\n        name: \"edit_commodity\",\r\n        query: {\r\n          productId: params.id,\r\n          cateId: params.cateId,\r\n          _type: \"edit\"\r\n        }\r\n      });\r\n    },\r\n    //当前页数修改时发生改变\r\n    handleCurrentChange(val) {\r\n      this.filtersData.pageIndex = val;\r\n      this.getTableList();\r\n    },\r\n    // 每页显示多少条时发生改变\r\n    handleSizeChange(val) {\r\n      this.filtersData.pageSize = val;\r\n      this.getTableList();\r\n    },\r\n    // table树懒加载数据\r\n    load(tree, treeNode, resolve) {\r\n      this.request(this.api.product.productGoods_listProductGoods, {\r\n        productId: tree.id,\r\n        colorCode: this.filtersData.colorCode,\r\n        colorSeriesCode: this.filtersData.colorSeriesCode\r\n      }).then(res => {\r\n        let _data = res.data;\r\n        let _dataLen = _data.length;\r\n        for (let i = 0; i < _dataLen; i++) {\r\n          _data[i].subCode = _data[i].code;\r\n          _data[i].code = null;\r\n          if(!!tree.checked){\r\n            _data[i].checked = true;\r\n          }\r\n        }\r\n        tree.children=res.data;\r\n        resolve(res.data);\r\n      });\r\n    },\r\n    // 导出模板\r\n    exportDataPacket(){\r\n      let csvData=csvExportData;\r\n      if(!csvData.spuList && !csvData.skuList){\r\n        this.$message.error('请勾选导出的数据！');\r\n        return false;\r\n      }\r\n      this.util.exportExcelZip(\r\n        this.api.FN_ALLPATH(this.api.product.productDataPackage_export_csv),\r\n        csvData,  \r\n        '商品数据包.zip'\r\n      );\r\n    },\r\n    // 处理table 选中\r\n    handleCheckAllChange(row) {\r\n      //父级\r\n      if (!row.productCode) {\r\n        for (let j = 0; j < row.children.length; j++) {\r\n          if(!!row.checked){\r\n            row.children[j].checked=true;\r\n          }else{\r\n            row.children[j].checked=false;\r\n          }\r\n        }\r\n      }else{\r\n        // 子集\r\n        let tableObj = this.tableListData.find((item) => (item.code == row.productCode));\r\n        let tableObjChildren = tableObj.children;\r\n        let flag = true;\r\n        for (let n = 0; n < tableObjChildren.length; n++) {\r\n          if(!tableObjChildren[n].checked){\r\n            flag = false;\r\n          }\r\n        }\r\n        if(!!flag){\r\n          tableObj.checked = true;\r\n        }else{\r\n          tableObj.checked = false;\r\n        }\r\n      }\r\n      //简化 \r\n      let tableList = this.$common.deepCopy(this.tableListData);\r\n      let spu = [],sku = [];\r\n      for (let i = 0; i < tableList.length; i++) {\r\n        //当父级等于true时放入进去\r\n        if(!!tableList[i].checked){\r\n          spu.push(tableList[i].code);\r\n        }else{\r\n          let children = tableList[i].children;\r\n          for (let k = 0; k < children.length; k++) {\r\n            if(!!children[k].checked){\r\n              sku.push(children[k].subCode);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      let obj = {\r\n        spuList :spu,\r\n        skuList :sku\r\n      }\r\n      csvExportData=obj;\r\n    }\r\n    //点击获取子元素插入数组\r\n    // childrenIsShow(row) {\r\n    //   let _id = row.id; //当前数据ID\r\n    //   let _type = row.isType; //状态 1 关闭 0 打开\r\n    //   if (_type == \"1\") {\r\n    //     //当前为关闭状态 需请求接口获取子元素\r\n    //     row.isType = 0;\r\n    //     this.getChildData(row, _id);\r\n    //   } else {\r\n    //     //当前为打开状态 需删除子元素\r\n    //     row.isType = 1;\r\n    //     this.removeChildData(row);\r\n    //   }\r\n    // },\r\n    // //获取子集\r\n    // getChildData(row, _id) {\r\n    //   let _index = this.tableListData.findIndex(item => item.id == _id);\r\n    //   if (!row._chilren) {\r\n    //     this.request(this.api.product.productGoods_listProductGoods, {\r\n    //       productId: _id,\r\n    //       colorCode: this.filtersData.colorCode,\r\n    //       colorSeriesCode: this.filtersData.colorSeriesCode\r\n    //     }).then(res => {\r\n    //       let _data = res.data;\r\n    //       let _dataLen = _data.length;\r\n    //       for (let i = 0; i < _dataLen; i++) {\r\n    //         _data[i].subCode = _data[i].code;\r\n    //         _data[i].code = null;\r\n    //       }\r\n    //       row._chilren = _data;\r\n    //       //根据下标插入进去 获取ID 在数组中的下标\r\n    //       this.tableListData.splice(_index + 1, 0, ..._data);\r\n    //       //获取子集id存入 元素属性\r\n    //       let arr = [];\r\n    //       for (let { id } of _data) {\r\n    //         arr.push(id);\r\n    //       }\r\n    //       row._cid = arr.join();\r\n    //     });\r\n    //   } else {\r\n    //     this.tableListData.splice(_index + 1, 0, ...row._chilren);\r\n    //   }\r\n    // },\r\n    // //删除子集\r\n    // removeChildData(row) {\r\n    //   let cid = row._cid;\r\n    //   let cidArr = cid.split(\",\");\r\n    //   let _table = this.tableListData,\r\n    //     tableLen = _table.length;\r\n    //   for (let i = 0; i < cidArr.length; i++) {\r\n    //     for (let j = 0; j < this.tableListData.length; j++) {\r\n    //       if (cidArr[i] == this.tableListData[j].id) {\r\n    //         this.tableListData.splice(j, 1);\r\n    //       }\r\n    //     }\r\n    //   }\r\n    // }\r\n  },\r\n\r\n  computed: {\r\n    //季节波段\r\n    seasonalStyleOptions() {\r\n      let codeSet = this.$store.getters.codeData;\r\n      if (codeSet.PRO001) {\r\n        return codeSet.PRO001.codeItemList;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n.poporer-img {\r\n  width: auto;\r\n  height: 320px;\r\n}\r\n.parent-checked{\r\n  display: inline-block;\r\n}\r\n.children-checked{\r\n  text-align: right;\r\n}\r\n</style>\r\n"]}]}