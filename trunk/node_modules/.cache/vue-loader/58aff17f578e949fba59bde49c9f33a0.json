{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\warehouse\\warehouse_center\\warehouse_manager\\send_order\\send_order_add.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\warehouse\\warehouse_center\\warehouse_manager\\send_order\\send_order_add.vue","mtime":1578302457329},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport division from \"@/components/division\";\r\nimport { isvalidPhone } from \"@/utils/phonevalide\";\r\nimport { validatePositiveValNumber } from '@/utils/validate';\r\nvar validPhone = (rule, value, callback) => {\r\n  if (!value) {\r\n    callback(new Error(\"请输入电话号码\"));\r\n  } else if (!isvalidPhone(value)) {\r\n    callback(new Error(\"请输入正确的11位手机号码\"));\r\n  } else {\r\n    callback();\r\n  }\r\n};\r\nexport default {\r\n  components: {\r\n    division\r\n  },\r\n  data() {\r\n    return {\r\n      addShopLoading:false,\r\n      // 正整数验证\r\n      validatePositiveValNumber,\r\n      //标识是否显示新增商品\r\n      dialogTableVisible: false,\r\n      dialogTableData: {\r\n        pageIndex: 1,\r\n        pageSize: 1\r\n      },\r\n      dialogtotalCount: 1,\r\n      //添加商品里的嵌套表格数据\r\n      gridData: [],\r\n      signData: {\r\n        //商品编码\r\n        productGoodsCode:'',\r\n        //品牌\r\n        brandName:'',\r\n        //货主Id\r\n        ownerId: \"\",\r\n        //标识校验库存\r\n        effectiveStock:true,\r\n        //仓库编码\r\n        warehouseCode: '',\r\n        pageIndex: 1,\r\n        pageSize: 10\r\n      },\r\n      shop_user: {\r\n        //发货单号\r\n        orderSn: \"\",\r\n        //关联单号\r\n        associationSn: \"\",\r\n        //出库类型\r\n        type: \"\",\r\n        //收货人\r\n        consignee: \"\",\r\n        //联系电话\r\n        consigneeTelephone: \"\",\r\n        //发货数量\r\n        deliveryQuantity: \"\",\r\n        //仓库编码\r\n        warehouseCode: \"\",\r\n        //仓库名称\r\n        warehouse: \"\",\r\n        //货主Id\r\n        ownerId: \"\",\r\n        //货主编码\r\n        ownerCode: \"\",\r\n        //货主\r\n        goodsOwner: \"\",\r\n        //承运商编码\r\n        logisticsCode: \"\",\r\n        //承运商\r\n        logistics: \"\",\r\n        //承运单号\r\n        logisticsSn: \"\",\r\n        //地址相关\r\n        divisionId: \"\",\r\n        consigneeProvince: \"\",\r\n        provinceCode: \"\",\r\n        consigneeCity: \"\",\r\n        cityCode: \"\",\r\n        consigneeArea: \"\",\r\n        areaCode: \"\",\r\n        consigneeAddress: \"\",\r\n        businessOrderItemVO:{\r\n          //表格数据\r\n          list: []\r\n        }\r\n      },\r\n      //规则\r\n      rules: {\r\n        warehouse: [\r\n          { required: true, message: \"发货仓库不能为空\", trigger: \"change\" }\r\n        ],\r\n        consignee: [\r\n          { required: true, message: \"收货人不能为空\", trigger: \"blur\" }\r\n        ],\r\n        divisionId:[\r\n          { required: true, message: \"收件地址不能为空\", trigger: \"change\" }\r\n        ],\r\n        consigneeAddress:[\r\n          { required: true, message: \"详细地址不能为空\", trigger: \"blur\" }\r\n        ],\r\n        type: [\r\n          { required: true, message: \"出库类型不能为空\", trigger: \"change\" }\r\n        ],\r\n        consigneeTelephone: [{ required: true, trigger: \"blur\", validator: validPhone }],\r\n        ownerCode: [\r\n          { required: true, message: \"货主不能为空\", trigger: \"change\" }\r\n        ]\r\n      },\r\n      //承运商数据\r\n      logisticsData: [],\r\n      //出库类型数据\r\n      warehouseTypeData: [],\r\n      //出库仓库数据\r\n      warehouseData: [],\r\n      //保存仓库临时\r\n      tmpWarehouse:'',\r\n      tmpGoodsOwner:'',\r\n      //货主数据\r\n      goodsOwnerData: [],\r\n      //记录总的商品数\r\n      totalPage: 0,\r\n      //记录选中得数据\r\n      multipleSelectionData:[],\r\n    };\r\n  },\r\n  watch: {\r\n    \"shop_user.warehouse\": function(newValue, oldValue) {\r\n      this.tmpWarehouse = oldValue;\r\n    },\r\n    \"shop_user.goodsOwner\": function(newValue, oldValue) {\r\n      this.tmpGoodsOwner = oldValue;\r\n    }\r\n  },\r\n  //过滤器\r\n  filters: {\r\n    //过滤订单状态\r\n    filterBusinessStatus(val) {\r\n      switch (val) {\r\n        case \"13\":\r\n          return \"待处理\";\r\n          break;\r\n        case \"14\":\r\n          return \"已处理\";\r\n          break;\r\n        case \"15\":\r\n          return \"已作废\";\r\n          break;\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    //得到出库类型数据\r\n    this.getWarehouseData();\r\n    //得到承运商数据\r\n    this.getLogisticData();\r\n    //得到出库仓库数据\r\n    this.geSendWarehouseData();\r\n    //得到货主数据\r\n    this.getGoodsOwnerData();\r\n  },\r\n  methods: {\r\n    //得到承运商数据\r\n    getLogisticData() {\r\n      this.request(this.api.warehouse.warehouseBase_logistics_list, {\r\n        isValid: true\r\n      }).then(res => {\r\n        console.log(res);\r\n        this.logisticsData = res.data;\r\n      });\r\n    },\r\n    //承运商change事件\r\n    logisticsChangeEvent(val) {\r\n      console.log(val);\r\n      var logistics = this.logisticsData.find(\r\n        item => item.code == val\r\n      );\r\n      this.shop_user.logistics = logistics.name;\r\n    },\r\n    //得到出库类型数据\r\n    getWarehouseData() {\r\n      //得到出库类型数据 code==04\r\n      this.request(\r\n        this.api.warehouse.warehouseBase_configurationDictionaryByCode,\r\n        { code: \"CONFIGURABLE04\" }\r\n      ).then(res => {\r\n        console.log(res);\r\n        this.warehouseTypeData = res;\r\n        this.shop_user.type=\"04003\"\r\n      });\r\n    },\r\n    //得到发货仓库数据\r\n    geSendWarehouseData() {\r\n      this.request(this.api.warehouse.warehouseBase_warehouse_list, {\r\n        isValid: true\r\n      }).then(res => {\r\n        console.log(res);\r\n        this.warehouseData = res.data;\r\n      });\r\n    },\r\n    //发货仓库change事件\r\n    warehouseChangeEvent(val) {\r\n      var list=this.shop_user.businessOrderItemVO.list\r\n      if (list.length > 0) {\r\n        this.$confirm(\"切换仓库后，已选商品会清除，确认切换仓库吗？\", \"提示\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n           this.shop_user.businessOrderItemVO.list=[]\r\n           this.getWarehouseIdAndCode(val);\r\n          })\r\n          .catch(action => {\r\n            this.shop_user.warehouse = this.tmpWarehouse;\r\n            this.getWarehouseIdAndCode(this.shop_user.warehouse);\r\n          });\r\n      } else {\r\n        this.getWarehouseIdAndCode(val);\r\n      }\r\n    },\r\n    //得到仓库编码\r\n    getWarehouseIdAndCode(val) {\r\n      this.shop_user.warehouseCode = this.warehouseData.find(\r\n        item => item.warehouseName == val\r\n      ).warehouseCode;\r\n    },\r\n    //得到货主数据\r\n    getGoodsOwnerData() {\r\n      this.request(this.api.warehouse.warehouseBase_goodsOwner_list, {\r\n        valid: true\r\n      }).then(res => {\r\n        console.log(res);\r\n        this.goodsOwnerData = res.data;\r\n      });\r\n    },\r\n    //货主change事件\r\n    goodsOwnerChangeEvent(val) {\r\n      var list=this.shop_user.businessOrderItemVO.list\r\n      if (list.length > 0) {\r\n        this.$confirm(\"切换货主后，已选商品会清除，确认切换货主吗？\", \"提示\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n           this.shop_user.businessOrderItemVO.list=[]\r\n           this.getOwnerIdAndCode(val);\r\n          })\r\n          .catch(action => {\r\n            this.shop_user.goodsOwner = this.tmpGoodsOwner;\r\n            this.getOwnerIdAndCode(this.shop_user.goodsOwner);\r\n          });\r\n      } else {\r\n        this.getOwnerIdAndCode(val);\r\n      }\r\n    },\r\n    //得到货主的Id和Code\r\n    getOwnerIdAndCode(val){\r\n      var goodsOwner = this.goodsOwnerData.find(\r\n        item => item.name == val\r\n      )\r\n      this.shop_user.ownerCode=goodsOwner.code;\r\n      this.shop_user.ownerId = goodsOwner.id;\r\n    },\r\n    setDivision(var1) {\r\n      this.shop_user.consigneeProvince = var1.province;\r\n      this.shop_user.provinceCode = var1.provinceCode;\r\n      this.shop_user.consigneeCity = var1.municipality;\r\n      this.shop_user.cityCode = var1.municipalityCode;\r\n      this.shop_user.consigneeArea = var1.area;\r\n      this.shop_user.areaCode = var1.areaCode;\r\n      this.shop_user.divisionId = var1.divisionId;\r\n    },\r\n    //添加商品按钮得点击事件\r\n    addShopBtnClickEvent() {\r\n      if (!this.shop_user.warehouseCode) {\r\n        this.$message.error(\"请选择发货仓库\");\r\n        return;\r\n      }\r\n      if (!this.shop_user.ownerCode) {\r\n        this.$message.error(\"请选择货主\");\r\n        return;\r\n      }\r\n      this.gridData=[]\r\n      //得到商品数据\r\n      this.getProductGoodsData();\r\n    },\r\n    //得到商品列表数据\r\n    getProductGoodsData(){\r\n      this.addShopLoading=true;\r\n      this.signData.ownerId=this.shop_user.ownerCode\r\n      this.signData.inventoryStatusSet=[1];\r\n        this.signData.warehouseCode=this.shop_user.warehouseCode\r\n      this.dialogTableVisible = true;\r\n      this.request(this.api.product.productGoods_listProductGoods4Wms,this.signData,true).then(res => {\r\n        this.addShopLoading=false;\r\n        console.log(res);\r\n        this.gridData=res.data;\r\n        this.dialogtotalCount=res.totalCount;\r\n      });\r\n    },\r\n    //导入商品按钮的点击事件\r\n    exportExcelShopData() {\r\n      console.log(\"exportExcelShopData-----\");\r\n    },\r\n    //删除Btn点击事件\r\n    deleteBtnClick(id) {\r\n      var index=this.shop_user.businessOrderItemVO.list.findIndex(item=>item.id==id)\r\n      this.shop_user.businessOrderItemVO.list.splice(index,1);\r\n    },\r\n    //提交订单Btn得点击事件\r\n    submitOrderBtnClickEvent(){ \r\n      if(this.shop_user.businessOrderItemVO.list.length==0){\r\n        this.$message.error(\"提交商品不能为空,请添加商品\");\r\n        return;\r\n      }else{\r\n        var flag=this.shop_user.businessOrderItemVO.list.every(item =>item.orderQuantity==0)\r\n        if(flag){\r\n          this.$message.error(\"提交商品订货数量不能全部为0\");  \r\n          return;\r\n        }\r\n      }\r\n      this.shop_user.businessOrderItemVO.list.forEach(item =>{\r\n        item.type=item.cateName\r\n      })\r\n      this.$refs.ruleForm.validate(valid => {\r\n        if (valid) {\r\n          this.shop_user.businessOrderItemVO.list=this.shop_user.businessOrderItemVO.list.filter(item =>item.orderQuantity>0)\r\n          this.shop_user.businessOrderItemVO.list.forEach(item =>{\r\n            item.goodsCode=item.code,\r\n            item.color=item.colorName,\r\n            item.size=item.sizeName,\r\n            item.brand=item.brandName\r\n          })\r\n          this.request(this.api.warehouse.warehouseBase_deliveryOrder_insert,this.shop_user).then(res=>{\r\n            console.log(res);\r\n            this.$message({\r\n              message: '保存成功',\r\n              type: 'success',\r\n              duration:1500\r\n            });\r\n            setTimeout(() => {\r\n              this.$router.go(-1);\r\n            }, 1500);\r\n          })\r\n        } else {\r\n          console.log(\"error submit!!\");\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    //表单搜索-dialog\r\n    searchFormData() {\r\n      this.signData.pageIndex=1;\r\n      this.getProductGoodsData();\r\n    },\r\n    //确认Btn的按钮点击事件-dialog\r\n    sureBtnClickEvent() {\r\n      if(this.multipleSelectionData){\r\n        this.multipleSelectionData.forEach(item=>{\r\n          this.$set(item,'orderQuantity',0)\r\n        })\r\n        let arr= this.$common.deepCopy(this.multipleSelectionData);\r\n        this.shop_user.businessOrderItemVO.list=[...this.shop_user.businessOrderItemVO.list,...arr];\r\n      }\r\n      this.hideAddShopDialog();\r\n      //去除重复对象\r\n      this.shop_user.businessOrderItemVO.list=this.deteleItemListObject(this.shop_user.businessOrderItemVO.list)\r\n    },\r\n    //去除数组中的重复对象\r\n    deteleItemListObject(arr) {\r\n      var hash = {};\r\n      const newArr = arr.reduce((item, next) => {\r\n        hash[next.id] ? \"\" : (hash[next.id] = true && item.push(next));\r\n        return item;\r\n      }, []);\r\n      return newArr;\r\n    },\r\n    //表格选择项改变时触发-dialog\r\n    selectionChange(val) {\r\n      this.multipleSelectionData = val;\r\n    },\r\n    //添加商品的dialog的隐藏事件\r\n    hideAddShopDialog() {\r\n      this.$refs.formData.resetFields();\r\n      this.dialogTableVisible = false;\r\n      this.multipleSelectionData =[]\r\n    },\r\n    //每页条数改变时-dialogTable\r\n    dialogTableHandleSizeChange(page) {\r\n      this.signData.pageSize = page;\r\n      this.getProductGoodsData();\r\n    },\r\n    //当前页改变时-dialogTable\r\n    dialogTableHandleCurrentChange(page) {\r\n      this.signData.pageIndex = page;\r\n      this.getProductGoodsData();\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["send_order_add.vue"],"names":[],"mappingsfile":"send_order_add.vue","sourceRoot":"src/views/warehouse/warehouse_center/warehouse_manager/send_order","sourcesContent":["listProductGoods4Wms<template>\r\n  <div class=\"detail_div\">\r\n    <div class=\"middle-msg\">\r\n      <div class=\"middle-title-div\">\r\n        <label>基础信息</label>\r\n        <el-button type=\"primary\" @click=\"submitOrderBtnClickEvent\" size=\"small\">提交订单</el-button>\r\n      </div>\r\n      <el-form\r\n        :inline=\"true\"\r\n        :model=\"shop_user\"\r\n        ref=\"ruleForm\"\r\n        label-width=\"100px\"\r\n        class=\"demo-ruleForm\"\r\n        :rules=\"rules\"\r\n      >\r\n        <el-row :gutter=\"24\">\r\n          <el-col :span=\"5\">\r\n            <el-form-item label=\"出库类型：\" prop=\"type\">\r\n              <el-select :disabled = \"true\" v-model=\"shop_user.type\"  style=\"width:185px;\">\r\n                <el-option\r\n                  v-for=\"item in warehouseTypeData\"\r\n                  :key=\"item.id\"\r\n                  :label=\"item.description\"\r\n                  :value=\"item.code\"\r\n                ></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"收件人：\" prop=\"consignee\">\r\n              <el-input v-model=\"shop_user.consignee\" placeholder=\"请输入\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"承运商名称：\" prop=\"logisticsCode\">\r\n              <el-select\r\n                v-model=\"shop_user.logisticsCode\"\r\n                style=\"width:185px;\"\r\n                @change=\"logisticsChangeEvent\"\r\n              >\r\n                <el-option\r\n                  v-for=\"item in logisticsData\"\r\n                  :key=\"item.id\"\r\n                  :label=\"item.name\"\r\n                  :value=\"item.code\"\r\n                ></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"5\">\r\n            <el-form-item label=\"原始订单号：\" prop=\"associationSn\">\r\n              <el-input v-model=\"shop_user.associationSn\" placeholder=\"请输入\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"联系电话：\" prop=\"consigneeTelephone\">\r\n              <el-input v-model=\"shop_user.consigneeTelephone\" placeholder=\"请输入\" maxlength=\"11\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"物流单号：\" prop=\"logisticsSn\">\r\n              <el-input v-model=\"shop_user.logisticsSn\" placeholder=\"请输入\"></el-input>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"14\">\r\n            <el-form-item label=\"发货仓库：\" prop=\"warehouse\">\r\n              <el-select\r\n                v-model=\"shop_user.warehouse\"\r\n                style=\"width:185px;\"\r\n                @change=\"warehouseChangeEvent\"\r\n              >\r\n                <el-option\r\n                  v-for=\"item in warehouseData\"\r\n                  :key=\"item.id\"\r\n                  :label=\"item.warehouseName\"\r\n                  :value=\"item.warehouseName\"\r\n                ></el-option>\r\n              </el-select>\r\n              <el-form-item label=\"货主：\" prop=\"ownerCode\">\r\n                <el-select\r\n                  v-model=\"shop_user.goodsOwner\"\r\n                  style=\"width:185px;\"\r\n                  @change=\"goodsOwnerChangeEvent\"\r\n                >\r\n                  <el-option\r\n                    v-for=\"item in goodsOwnerData\"\r\n                    :key=\"item.id\"\r\n                    :label=\"item.name\"\r\n                    :value=\"item.name\"\r\n                  ></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            </el-form-item>\r\n            <el-form-item prop='divisionId' label=\"收件地址：\" inline>\r\n              <division @set-division=\"setDivision\" v-model=\"shop_user.divisionId\"></division>\r\n            </el-form-item>\r\n            <el-form-item label=\"详细地址：\" prop='consigneeAddress'>\r\n              <el-input v-model=\"shop_user.consigneeAddress\" placeholder=\"请输入\"></el-input>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n      </el-form>\r\n    </div>\r\n    <div class=\"table_div\">\r\n      <div class=\"title-div\">\r\n        <label>商品明细</label>\r\n        <el-button type=\"primary\" @click=\"addShopBtnClickEvent\" size=\"small\">添加商品</el-button>\r\n        <!-- <el-button plain @click=\"exportExcelShopData\" size=\"small\">导入商品</el-button> -->\r\n      </div>\r\n      <el-table\r\n        :data=\"shop_user.businessOrderItemVO.list\"\r\n        stripe\r\n        style=\"width: 100%;padding-left:15px;\"\r\n        header-row-class-name=\"item-table-header\"\r\n        max-height=\"400\"\r\n      >\r\n        <el-table-column prop=\"code\" label=\"商品编码\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"name\" label=\"商品名称\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"colorName\" label=\"颜色\"></el-table-column>\r\n        <el-table-column prop=\"sizeName\" label=\"尺码\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"brandName\" label=\"品牌\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"cateName\" label=\"品类\"></el-table-column>\r\n        <el-table-column prop=\"availableQuantity\" label=\"可用数量\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"orderQuantity\" label=\"订货数量\">\r\n          <template slot-scope=\"scope\">\r\n            <el-input-number v-model.number=\"scope.row.orderQuantity\" size=\"mini\" :min=\"0\" :max=\"scope.row.availableQuantity\" />\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column fixed=\"right\" label=\"操作\" width=\"160\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button @click=\"deleteBtnClick(scope.row.id)\" type=\"text\" size=\"small\">删除明细</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </div>\r\n    <el-dialog title=\"添加商品\" :visible.sync=\"dialogTableVisible\" @close=\"hideAddShopDialog\" width=\"700px\">\r\n      <div class=\"dialog-div\">\r\n        <el-form ref=\"formData\" :model=\"signData\" :inline=\"true\">\r\n          <el-form-item label=\"商品编码：\" prop=\"productGoodsCode\">\r\n            <el-input v-model=\"signData.productGoodsCode\" placeholder=\"可模糊查询\" style=\"width:130px;\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"品牌：\" prop=\"brandName\">\r\n            <el-input v-model=\"signData.brandName\" placeholder=\"可模糊查询\" style=\"width:130px;\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button @click=\"searchFormData\" type=\"primary\" plain size=\"small\">搜索</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n      <div>\r\n        <el-button type=\"primary\" @click=\"sureBtnClickEvent\" size=\"small\" :disabled='multipleSelectionData.length==0'>确认</el-button>\r\n        <el-table\r\n          v-loading=\"addShopLoading\"\r\n          element-loading-text=\"拼命加载中...\"\r\n          :data=\"gridData\"\r\n          style=\"margin-bottom:15px;\"\r\n          header-row-class-name=\"item-table-header\"\r\n          max-height=\"400\"\r\n          @selection-change=\"selectionChange\"\r\n        >\r\n          <el-table-column type=\"selection\" width=\"55\"></el-table-column>\r\n          <el-table-column property=\"code\" label=\"商品编码\" width=\"150\"></el-table-column>\r\n          <el-table-column property=\"name\" label=\"商品名称\" width=\"200\"></el-table-column>\r\n          <el-table-column property=\"colorName\" label=\"颜色\"></el-table-column>\r\n          <el-table-column property=\"sizeName\" label=\"尺寸\"></el-table-column>\r\n          <el-table-column property=\"brandName\" label=\"品牌\"></el-table-column>\r\n        </el-table>\r\n        <el-pagination\r\n          @size-change=\"dialogTableHandleSizeChange\"\r\n          @current-change=\"dialogTableHandleCurrentChange\"\r\n          :current-page.sync=\"dialogTableData.pageIndex\"\r\n          :page-sizes=\"[10, 20, 30, 40]\"\r\n          :page-size=\"dialogTableData.pageSize\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"dialogtotalCount\"\r\n        ></el-pagination>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport division from \"@/components/division\";\r\nimport { isvalidPhone } from \"@/utils/phonevalide\";\r\nimport { validatePositiveValNumber } from '@/utils/validate';\r\nvar validPhone = (rule, value, callback) => {\r\n  if (!value) {\r\n    callback(new Error(\"请输入电话号码\"));\r\n  } else if (!isvalidPhone(value)) {\r\n    callback(new Error(\"请输入正确的11位手机号码\"));\r\n  } else {\r\n    callback();\r\n  }\r\n};\r\nexport default {\r\n  components: {\r\n    division\r\n  },\r\n  data() {\r\n    return {\r\n      addShopLoading:false,\r\n      // 正整数验证\r\n      validatePositiveValNumber,\r\n      //标识是否显示新增商品\r\n      dialogTableVisible: false,\r\n      dialogTableData: {\r\n        pageIndex: 1,\r\n        pageSize: 1\r\n      },\r\n      dialogtotalCount: 1,\r\n      //添加商品里的嵌套表格数据\r\n      gridData: [],\r\n      signData: {\r\n        //商品编码\r\n        productGoodsCode:'',\r\n        //品牌\r\n        brandName:'',\r\n        //货主Id\r\n        ownerId: \"\",\r\n        //标识校验库存\r\n        effectiveStock:true,\r\n        //仓库编码\r\n        warehouseCode: '',\r\n        pageIndex: 1,\r\n        pageSize: 10\r\n      },\r\n      shop_user: {\r\n        //发货单号\r\n        orderSn: \"\",\r\n        //关联单号\r\n        associationSn: \"\",\r\n        //出库类型\r\n        type: \"\",\r\n        //收货人\r\n        consignee: \"\",\r\n        //联系电话\r\n        consigneeTelephone: \"\",\r\n        //发货数量\r\n        deliveryQuantity: \"\",\r\n        //仓库编码\r\n        warehouseCode: \"\",\r\n        //仓库名称\r\n        warehouse: \"\",\r\n        //货主Id\r\n        ownerId: \"\",\r\n        //货主编码\r\n        ownerCode: \"\",\r\n        //货主\r\n        goodsOwner: \"\",\r\n        //承运商编码\r\n        logisticsCode: \"\",\r\n        //承运商\r\n        logistics: \"\",\r\n        //承运单号\r\n        logisticsSn: \"\",\r\n        //地址相关\r\n        divisionId: \"\",\r\n        consigneeProvince: \"\",\r\n        provinceCode: \"\",\r\n        consigneeCity: \"\",\r\n        cityCode: \"\",\r\n        consigneeArea: \"\",\r\n        areaCode: \"\",\r\n        consigneeAddress: \"\",\r\n        businessOrderItemVO:{\r\n          //表格数据\r\n          list: []\r\n        }\r\n      },\r\n      //规则\r\n      rules: {\r\n        warehouse: [\r\n          { required: true, message: \"发货仓库不能为空\", trigger: \"change\" }\r\n        ],\r\n        consignee: [\r\n          { required: true, message: \"收货人不能为空\", trigger: \"blur\" }\r\n        ],\r\n        divisionId:[\r\n          { required: true, message: \"收件地址不能为空\", trigger: \"change\" }\r\n        ],\r\n        consigneeAddress:[\r\n          { required: true, message: \"详细地址不能为空\", trigger: \"blur\" }\r\n        ],\r\n        type: [\r\n          { required: true, message: \"出库类型不能为空\", trigger: \"change\" }\r\n        ],\r\n        consigneeTelephone: [{ required: true, trigger: \"blur\", validator: validPhone }],\r\n        ownerCode: [\r\n          { required: true, message: \"货主不能为空\", trigger: \"change\" }\r\n        ]\r\n      },\r\n      //承运商数据\r\n      logisticsData: [],\r\n      //出库类型数据\r\n      warehouseTypeData: [],\r\n      //出库仓库数据\r\n      warehouseData: [],\r\n      //保存仓库临时\r\n      tmpWarehouse:'',\r\n      tmpGoodsOwner:'',\r\n      //货主数据\r\n      goodsOwnerData: [],\r\n      //记录总的商品数\r\n      totalPage: 0,\r\n      //记录选中得数据\r\n      multipleSelectionData:[],\r\n    };\r\n  },\r\n  watch: {\r\n    \"shop_user.warehouse\": function(newValue, oldValue) {\r\n      this.tmpWarehouse = oldValue;\r\n    },\r\n    \"shop_user.goodsOwner\": function(newValue, oldValue) {\r\n      this.tmpGoodsOwner = oldValue;\r\n    }\r\n  },\r\n  //过滤器\r\n  filters: {\r\n    //过滤订单状态\r\n    filterBusinessStatus(val) {\r\n      switch (val) {\r\n        case \"13\":\r\n          return \"待处理\";\r\n          break;\r\n        case \"14\":\r\n          return \"已处理\";\r\n          break;\r\n        case \"15\":\r\n          return \"已作废\";\r\n          break;\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    //得到出库类型数据\r\n    this.getWarehouseData();\r\n    //得到承运商数据\r\n    this.getLogisticData();\r\n    //得到出库仓库数据\r\n    this.geSendWarehouseData();\r\n    //得到货主数据\r\n    this.getGoodsOwnerData();\r\n  },\r\n  methods: {\r\n    //得到承运商数据\r\n    getLogisticData() {\r\n      this.request(this.api.warehouse.warehouseBase_logistics_list, {\r\n        isValid: true\r\n      }).then(res => {\r\n        console.log(res);\r\n        this.logisticsData = res.data;\r\n      });\r\n    },\r\n    //承运商change事件\r\n    logisticsChangeEvent(val) {\r\n      console.log(val);\r\n      var logistics = this.logisticsData.find(\r\n        item => item.code == val\r\n      );\r\n      this.shop_user.logistics = logistics.name;\r\n    },\r\n    //得到出库类型数据\r\n    getWarehouseData() {\r\n      //得到出库类型数据 code==04\r\n      this.request(\r\n        this.api.warehouse.warehouseBase_configurationDictionaryByCode,\r\n        { code: \"CONFIGURABLE04\" }\r\n      ).then(res => {\r\n        console.log(res);\r\n        this.warehouseTypeData = res;\r\n        this.shop_user.type=\"04003\"\r\n      });\r\n    },\r\n    //得到发货仓库数据\r\n    geSendWarehouseData() {\r\n      this.request(this.api.warehouse.warehouseBase_warehouse_list, {\r\n        isValid: true\r\n      }).then(res => {\r\n        console.log(res);\r\n        this.warehouseData = res.data;\r\n      });\r\n    },\r\n    //发货仓库change事件\r\n    warehouseChangeEvent(val) {\r\n      var list=this.shop_user.businessOrderItemVO.list\r\n      if (list.length > 0) {\r\n        this.$confirm(\"切换仓库后，已选商品会清除，确认切换仓库吗？\", \"提示\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n           this.shop_user.businessOrderItemVO.list=[]\r\n           this.getWarehouseIdAndCode(val);\r\n          })\r\n          .catch(action => {\r\n            this.shop_user.warehouse = this.tmpWarehouse;\r\n            this.getWarehouseIdAndCode(this.shop_user.warehouse);\r\n          });\r\n      } else {\r\n        this.getWarehouseIdAndCode(val);\r\n      }\r\n    },\r\n    //得到仓库编码\r\n    getWarehouseIdAndCode(val) {\r\n      this.shop_user.warehouseCode = this.warehouseData.find(\r\n        item => item.warehouseName == val\r\n      ).warehouseCode;\r\n    },\r\n    //得到货主数据\r\n    getGoodsOwnerData() {\r\n      this.request(this.api.warehouse.warehouseBase_goodsOwner_list, {\r\n        valid: true\r\n      }).then(res => {\r\n        console.log(res);\r\n        this.goodsOwnerData = res.data;\r\n      });\r\n    },\r\n    //货主change事件\r\n    goodsOwnerChangeEvent(val) {\r\n      var list=this.shop_user.businessOrderItemVO.list\r\n      if (list.length > 0) {\r\n        this.$confirm(\"切换货主后，已选商品会清除，确认切换货主吗？\", \"提示\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n           this.shop_user.businessOrderItemVO.list=[]\r\n           this.getOwnerIdAndCode(val);\r\n          })\r\n          .catch(action => {\r\n            this.shop_user.goodsOwner = this.tmpGoodsOwner;\r\n            this.getOwnerIdAndCode(this.shop_user.goodsOwner);\r\n          });\r\n      } else {\r\n        this.getOwnerIdAndCode(val);\r\n      }\r\n    },\r\n    //得到货主的Id和Code\r\n    getOwnerIdAndCode(val){\r\n      var goodsOwner = this.goodsOwnerData.find(\r\n        item => item.name == val\r\n      )\r\n      this.shop_user.ownerCode=goodsOwner.code;\r\n      this.shop_user.ownerId = goodsOwner.id;\r\n    },\r\n    setDivision(var1) {\r\n      this.shop_user.consigneeProvince = var1.province;\r\n      this.shop_user.provinceCode = var1.provinceCode;\r\n      this.shop_user.consigneeCity = var1.municipality;\r\n      this.shop_user.cityCode = var1.municipalityCode;\r\n      this.shop_user.consigneeArea = var1.area;\r\n      this.shop_user.areaCode = var1.areaCode;\r\n      this.shop_user.divisionId = var1.divisionId;\r\n    },\r\n    //添加商品按钮得点击事件\r\n    addShopBtnClickEvent() {\r\n      if (!this.shop_user.warehouseCode) {\r\n        this.$message.error(\"请选择发货仓库\");\r\n        return;\r\n      }\r\n      if (!this.shop_user.ownerCode) {\r\n        this.$message.error(\"请选择货主\");\r\n        return;\r\n      }\r\n      this.gridData=[]\r\n      //得到商品数据\r\n      this.getProductGoodsData();\r\n    },\r\n    //得到商品列表数据\r\n    getProductGoodsData(){\r\n      this.addShopLoading=true;\r\n      this.signData.ownerId=this.shop_user.ownerCode\r\n      this.signData.inventoryStatusSet=[1];\r\n        this.signData.warehouseCode=this.shop_user.warehouseCode\r\n      this.dialogTableVisible = true;\r\n      this.request(this.api.product.productGoods_listProductGoods4Wms,this.signData,true).then(res => {\r\n        this.addShopLoading=false;\r\n        console.log(res);\r\n        this.gridData=res.data;\r\n        this.dialogtotalCount=res.totalCount;\r\n      });\r\n    },\r\n    //导入商品按钮的点击事件\r\n    exportExcelShopData() {\r\n      console.log(\"exportExcelShopData-----\");\r\n    },\r\n    //删除Btn点击事件\r\n    deleteBtnClick(id) {\r\n      var index=this.shop_user.businessOrderItemVO.list.findIndex(item=>item.id==id)\r\n      this.shop_user.businessOrderItemVO.list.splice(index,1);\r\n    },\r\n    //提交订单Btn得点击事件\r\n    submitOrderBtnClickEvent(){ \r\n      if(this.shop_user.businessOrderItemVO.list.length==0){\r\n        this.$message.error(\"提交商品不能为空,请添加商品\");\r\n        return;\r\n      }else{\r\n        var flag=this.shop_user.businessOrderItemVO.list.every(item =>item.orderQuantity==0)\r\n        if(flag){\r\n          this.$message.error(\"提交商品订货数量不能全部为0\");  \r\n          return;\r\n        }\r\n      }\r\n      this.shop_user.businessOrderItemVO.list.forEach(item =>{\r\n        item.type=item.cateName\r\n      })\r\n      this.$refs.ruleForm.validate(valid => {\r\n        if (valid) {\r\n          this.shop_user.businessOrderItemVO.list=this.shop_user.businessOrderItemVO.list.filter(item =>item.orderQuantity>0)\r\n          this.shop_user.businessOrderItemVO.list.forEach(item =>{\r\n            item.goodsCode=item.code,\r\n            item.color=item.colorName,\r\n            item.size=item.sizeName,\r\n            item.brand=item.brandName\r\n          })\r\n          this.request(this.api.warehouse.warehouseBase_deliveryOrder_insert,this.shop_user).then(res=>{\r\n            console.log(res);\r\n            this.$message({\r\n              message: '保存成功',\r\n              type: 'success',\r\n              duration:1500\r\n            });\r\n            setTimeout(() => {\r\n              this.$router.go(-1);\r\n            }, 1500);\r\n          })\r\n        } else {\r\n          console.log(\"error submit!!\");\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    //表单搜索-dialog\r\n    searchFormData() {\r\n      this.signData.pageIndex=1;\r\n      this.getProductGoodsData();\r\n    },\r\n    //确认Btn的按钮点击事件-dialog\r\n    sureBtnClickEvent() {\r\n      if(this.multipleSelectionData){\r\n        this.multipleSelectionData.forEach(item=>{\r\n          this.$set(item,'orderQuantity',0)\r\n        })\r\n        let arr= this.$common.deepCopy(this.multipleSelectionData);\r\n        this.shop_user.businessOrderItemVO.list=[...this.shop_user.businessOrderItemVO.list,...arr];\r\n      }\r\n      this.hideAddShopDialog();\r\n      //去除重复对象\r\n      this.shop_user.businessOrderItemVO.list=this.deteleItemListObject(this.shop_user.businessOrderItemVO.list)\r\n    },\r\n    //去除数组中的重复对象\r\n    deteleItemListObject(arr) {\r\n      var hash = {};\r\n      const newArr = arr.reduce((item, next) => {\r\n        hash[next.id] ? \"\" : (hash[next.id] = true && item.push(next));\r\n        return item;\r\n      }, []);\r\n      return newArr;\r\n    },\r\n    //表格选择项改变时触发-dialog\r\n    selectionChange(val) {\r\n      this.multipleSelectionData = val;\r\n    },\r\n    //添加商品的dialog的隐藏事件\r\n    hideAddShopDialog() {\r\n      this.$refs.formData.resetFields();\r\n      this.dialogTableVisible = false;\r\n      this.multipleSelectionData =[]\r\n    },\r\n    //每页条数改变时-dialogTable\r\n    dialogTableHandleSizeChange(page) {\r\n      this.signData.pageSize = page;\r\n      this.getProductGoodsData();\r\n    },\r\n    //当前页改变时-dialogTable\r\n    dialogTableHandleCurrentChange(page) {\r\n      this.signData.pageIndex = page;\r\n      this.getProductGoodsData();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.detail_div {\r\n  margin: 10px;\r\n  .middle-msg {\r\n    background-color: #fff;\r\n    margin: 10px 0;\r\n    padding: 10px 20px;\r\n    font-size: 13px;\r\n    .middle-title-div {\r\n      border-bottom: 1px solid #dcdfe6;\r\n      padding-bottom: 10px;\r\n      margin-bottom: 20px;\r\n      label {\r\n        color: #222;\r\n        margin-right: 10px;\r\n      }\r\n    }\r\n    span {\r\n      display: inline-block;\r\n      margin-bottom: 15px;\r\n      color: #2c3e50;\r\n      padding-left: 20px;\r\n    }\r\n  }\r\n  .table_div {\r\n    padding: 0 15px;\r\n    margin: 10px 0;\r\n    background-color: #fff;\r\n    .title-div {\r\n      padding-top: 20px;\r\n      padding-bottom: 10px;\r\n      border-bottom: 1px solid #ccc;\r\n      label {\r\n        color: #222;\r\n        font-size: 13px;\r\n        margin-right: 10px;\r\n      }\r\n    }\r\n  }\r\n}\r\n.dialog-div {\r\n  border-bottom: 1px solid #dcdfe6;\r\n  margin-bottom: 10px;\r\n  padding-left: 20px;\r\n  height: 53px;\r\n}\r\n.pagination {\r\n  text-align: right;\r\n  background-color: #fff;\r\n}\r\n</style>\r\n\r\n"]}]}