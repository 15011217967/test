{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\warehouse\\order_center\\order_manager\\tob_order\\tob_order_list.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\warehouse\\order_center\\order_manager\\tob_order\\tob_order_list.vue","mtime":1585053690395},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\css-loader\\index.js","mtime":1558492728478},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1558492728890},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\postcss-loader\\src\\index.js","mtime":1558492728823},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.search_div {\r\n  background-color: #fff;\r\n  padding-top: 20px;\r\n  margin: 0 10px;\r\n}\r\n.table_div {\r\n  background-color: #fff;\r\n  padding: 10px;\r\n  margin: 10px;\r\n}\r\n.pagination {\r\n  margin-top: 20px;\r\n  padding-bottom: 10px;\r\n  margin-right: 20px;\r\n  text-align: right;\r\n}\r\n",{"version":3,"sources":["tob_order_list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"tob_order_list.vue","sourceRoot":"src/views/warehouse/order_center/order_manager/tob_order","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"search_div\">\r\n      <el-form ref=\"formData\" :model=\"signData\" label-width=\"110px\" :inline=\"true\">\r\n        <el-form-item label=\"模糊查询：\" prop=\"searchKey\">\r\n          <el-input\r\n            v-model=\"signData.searchKey\"\r\n            placeholder=\"订单编号/收货人/收货地址/配货人\"\r\n            style=\"width:330px;\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"订单状态：\" prop=\"businessStatus\">\r\n          <el-select v-model=\"signData.businessStatus\" placeholder=\"请选择\">\r\n            <el-option\r\n              v-for=\"item in orderStateData\"\r\n              :key=\"item.id\"\r\n              :label=\"item.description\"\r\n              :value=\"item.code\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <!-- <el-form-item label=\"发货仓库：\" prop=\"warehouseCode\" label-width=\"100px\">\r\n          <el-select\r\n            v-model=\"signData.warehouseCode\"\r\n            placeholder=\"请选择\"\r\n            >\r\n              <el-option\r\n                v-for=\"item in warehouseData\"\r\n                :key=\"item.id\"\r\n                :label=\"item.warehouseName\"\r\n                :value=\"item.warehouseCode\"\r\n              ></el-option>\r\n            </el-select>\r\n        </el-form-item>-->\r\n        <el-form-item label=\"单据来源：\" prop=\"sourceCode\">\r\n          <el-select v-model=\"signData.sourceCode\" placeholder=\"请选择\">\r\n            <el-option\r\n              v-for=\"item in sourceData\"\r\n              :key=\"item.id\"\r\n              :label=\"item.description\"\r\n              :value=\"item.code\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <time-interval-check\r\n          :form-data=\"signData\"\r\n          :props-options=\"{timeBegin:'startTime',timeEnd:'endTime'}\"\r\n        ></time-interval-check>\r\n        <el-form-item style=\"margin-left:25px;\">\r\n          <el-button type=\"primary\" @click=\"searchFormData\" size=\"small\">搜索</el-button>\r\n          <el-button @click=\"resetFormData('formData')\" size=\"small\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n    <div class=\"table_div\">\r\n      <!-- <el-button plain @click=\"exportExcel\" size=\"small\">导出</el-button> -->\r\n      <el-table\r\n        ref=\"multipleTable\"\r\n        :data=\"tableListData\"\r\n        tooltip-effect=\"dark\"\r\n        style=\"width: 100%\"\r\n        header-row-class-name=\"item-table-header\"\r\n        empty-text=\"暂无数据\"\r\n      >\r\n        <el-table-column width=\"55\">\r\n          <template slot-scope=\"scope\">\r\n            <i\r\n              @click=\"childrenIsShow(scope.row)\"\r\n              :data-id=\"scope.row.id\"\r\n              v-if=\"scope.row.isShow\"\r\n              :class=\"scope.row.isType == 1 ?'el-icon-circle-plus-outline i-cursor' : 'el-icon-remove-outline i-cursor'\"\r\n            ></i>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"订单编号\" width=\"180\">\r\n          <template slot-scope=\"scope\">{{ scope.row.orderSn ? scope.row.orderSn : '--'}}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"businessStatus\" label=\"状态\">\r\n          <template slot-scope=\"scope\">{{ scope.row.businessStatus | filterBusinessStatus }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"consignee\" label=\"收货人\">\r\n          <template slot-scope=\"scope\">{{scope.row.consignee}}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"consigneeAddress\" label=\"收货地址\" show-overflow-tooltip>\r\n          <template slot-scope=\"scope\">{{scope.row.consigneeAddress}}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"deliveryQuantity\" label=\"发货件数\">\r\n          <template slot-scope=\"scope\">{{ scope.row.deliveryQuantity }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"skuQuantity\" label=\"sku种类\">\r\n          <template slot-scope=\"scope\">{{ scope.row.skuQuantity }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"warehouse\" label=\"发货仓库\">\r\n          <template slot-scope=\"scope\">{{ scope.row.warehouse ?scope.row.warehouse:'--' }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"createTime\" label=\"创建时间\">\r\n          <template slot-scope=\"scope\">{{ scope.row.createTime | timestampToTime }}</template>\r\n        </el-table-column>\r\n        <el-table-column label=\"单据来源\">\r\n          <template slot-scope=\"scope\">{{ scope.row.orderSource | filtersSourceCode }}</template>\r\n        </el-table-column>\r\n        <el-table-column fixed=\"right\" label=\"操作\" width=\"160\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button @click=\"checkBtnClick(scope.row)\" type=\"text\" size=\"small\">查看</el-button>\r\n            <el-button\r\n              @click=\"obsoleteBtnClick(scope.row)\"\r\n              type=\"text\"\r\n              size=\"small\"\r\n              :disabled=\"scope.row.businessStatus!='01002'\"\r\n            >强制终止</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <div class=\"pagination\">\r\n        <el-pagination\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page.sync=\"signData.pageIndex\"\r\n          :page-sizes=\"[10, 20, 30, 40]\"\r\n          :page-size=\"signData.pageSize\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"totalCount\"\r\n        ></el-pagination>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport TimeIntervalCheck from \"@/components/TimeIntervalCheck\";\r\nexport default {\r\n  components: {\r\n    TimeIntervalCheck\r\n  },\r\n  data() {\r\n    return {\r\n      signData: {\r\n        //模糊搜索\r\n        searchKey: \"\",\r\n        //订单状态\r\n        businessStatus: \"\",\r\n        //发货仓库编码\r\n        warehouseCode: \"\",\r\n        //单据来源编码\r\n        sourceCode: \"\",\r\n        //搜索起始时间\r\n        startTime: \"\",\r\n        //搜索终止时间\r\n        endTime: \"\",\r\n        //当前页数\r\n        pageIndex: 1,\r\n        //每页要显示的数据条数,默认10条\r\n        pageSize: 10\r\n      },\r\n      //订单状态\r\n      orderStateData: [],\r\n      //仓库状态\r\n      warehouseData: [],\r\n      //单据来源\r\n      sourceData: [],\r\n      //表格数据源\r\n      tableListData: [],\r\n      //总条数\r\n      totalCount: 1\r\n    };\r\n  },\r\n  filters: {\r\n    //过滤订单状态\r\n    filterBusinessStatus(val) {\r\n      switch (val) {\r\n        case \"01001\":\r\n          return \"待发货\";\r\n          break;\r\n        case \"01002\":\r\n          return \"部分已发货\";\r\n          break;\r\n        case \"01003\":\r\n          return \"异常完成\";\r\n          break;\r\n        case \"01004\":\r\n          return \"已完成\";\r\n          break;\r\n        case \"01005\":\r\n          return \"已作废\";\r\n          break;\r\n      }\r\n    },\r\n    //过滤单据来源\r\n    filtersSourceCode(val) {\r\n      switch (val) {\r\n        case \"02001\":\r\n          return \"SCB平台\";\r\n          break;\r\n        case \"02002\":\r\n          return \"部分已发货\";\r\n          break;\r\n        case \"02003\":\r\n          return \"异常完成\";\r\n          break;\r\n        case \"02004\":\r\n          return \"已完成\";\r\n          break;\r\n        case \"02005\":\r\n          return \"已作废\";\r\n          break;\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    //得到订单状态和单据来源\r\n    this.getOrderStateByCode();\r\n    //得到仓库数据\r\n    this.geSendWarehouseData();\r\n    //得到列表数据\r\n    this.getOrderListTableData();\r\n  },\r\n  methods: {\r\n    //得到订单状态和单据来源\r\n    getOrderStateByCode() {\r\n      //得到订单状态数据 code==01 订单状态\r\n      this.request(\r\n        this.api.warehouse.warehouseBase_configurationDictionaryByCode,\r\n        { code: \"CONFIGURABLE01\" }\r\n      ).then(res => {\r\n        this.orderStateData = res;\r\n      });\r\n      //得到单据来源数据 code==02 订单状态\r\n      this.request(\r\n        this.api.warehouse.warehouseBase_configurationDictionaryByCode,\r\n        { code: \"CONFIGURABLE02\" }\r\n      ).then(res => {\r\n        this.sourceData = res;\r\n      });\r\n    },\r\n    //得到入货仓库数据\r\n    geSendWarehouseData() {\r\n      this.request(this.api.warehouse.warehouseBase_warehouse_list, {\r\n        isValid: true\r\n      }).then(res => {\r\n        console.log(res);\r\n        this.warehouseData = res.data;\r\n      });\r\n    },\r\n    //得到订单列表数据\r\n    getOrderListTableData() {\r\n      // let filter = this.$common.deepCopy(this.signData);\r\n      // if (filter.endTime != null) {\r\n      //   let date = new Date(filter.endTime);\r\n      //   let t = (date.getTime() / 1000 + 86399) * 1000;\r\n      //   filter.endTime = new Date(t);\r\n      // }\r\n      //标识TOB\r\n      this.signData.orderType = \"03002\";\r\n      this.request(this.api.warehouse.warehouseBase_list, this.signData).then(\r\n        res => {\r\n          res.data.forEach(item => {\r\n            item.isType = 1;\r\n            item.isShow = true;\r\n            item.businessStatusName = this.$options.filters.filterBusinessStatus(\r\n              item.businessStatus\r\n            );\r\n            item.createTimeName = this.$options.filters.timestampToTime(\r\n              item.createTime\r\n            );\r\n          });\r\n          this.tableListData = res.data;\r\n          this.totalCount = res.totalCount;\r\n        }\r\n      );\r\n    },\r\n    //查询\r\n    searchFormData() {\r\n      this.signData.pageIndex = 1;\r\n      this.getOrderListTableData();\r\n      console.log(\"searchFormData---\");\r\n    },\r\n    //重置\r\n    resetFormData(formData) {\r\n      this.$refs[formData].resetFields();\r\n    },\r\n    //导出\r\n    exportExcel() {\r\n      this.exportExcelSelectData();\r\n    },\r\n    //导出选中的数据\r\n    exportExcelSelectData() {\r\n      require.ensure([], () => {\r\n        let { export_json_to_excel } = require(\"@/vendor/Export2Excel\");\r\n        let tHeader = [\r\n          \"订单编号\",\r\n          \"状态\",\r\n          \"收货人\",\r\n          \"收货地址\",\r\n          \"发货件数\",\r\n          \"sku种类\",\r\n          \"发货仓库\",\r\n          \"创建时间\",\r\n          \"单据来源\"\r\n        ];\r\n        // 上面设置Excel的表格第一行的标题\r\n        let filterVal = [\r\n          \"orderSn\",\r\n          \"businessStatusName\",\r\n          \"consignee\",\r\n          \"address\",\r\n          \"deliveryQuantity\",\r\n          \"skuQuantity\",\r\n          \"warehouse\",\r\n          \"createTimeName\",\r\n          \"sourceCode\"\r\n        ];\r\n        // 上面的index、nickName、name是tableData里对象的属性\r\n        let list = this.tableListData; //需要导出的表格数据\r\n        let data = this.formatJson(filterVal, list);\r\n        export_json_to_excel(tHeader, data, \"TOB订单表单\");\r\n      });\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => v[j]));\r\n    },\r\n    //点击获取子元素插入数组\r\n    childrenIsShow(row) {\r\n      let _id = row.id; //当前数据ID\r\n      let _type = row.isType; //状态 1 关闭 0 打开\r\n      if (_type == \"1\") {\r\n        //当前为关闭状态 需请求接口获取子元素\r\n        row.isType = 0;\r\n        this.getChildData(row, _id);\r\n      } else {\r\n        //当前为打开状态 需删除子元素\r\n        row.isType = 1;\r\n        this.removeChildData(row);\r\n      }\r\n    },\r\n    //获取子集\r\n    getChildData(row, _id) {\r\n      let _index = this.tableListData.findIndex(item => item.id == _id);\r\n      if (!row._chilren) {\r\n        this.request(this.api.warehouse.warehouseBase_getByParentOrderSn, {\r\n          parentOrderSn: row.orderSn\r\n        }).then(res => {\r\n          let _data = res;\r\n          let _dataLen = _data.length;\r\n          for (let i = 0; i < _dataLen; i++) {\r\n            _data[i].subCode = _data[i].code;\r\n            _data[i].code = null;\r\n          }\r\n          row._chilren = _data;\r\n          //根据下标插入进去 获取ID 在数组中的下标\r\n          this.tableListData.splice(_index + 1, 0, ..._data);\r\n          //获取子集id存入 元素属性\r\n          let arr = [];\r\n          for (let { id } of _data) {\r\n            arr.push(id);\r\n          }\r\n          row._cid = arr.join();\r\n        });\r\n      } else {\r\n        this.tableListData.splice(_index + 1, 0, ...row._chilren);\r\n      }\r\n    },\r\n    //删除子集\r\n    removeChildData(row) {\r\n      let cid = row._cid;\r\n      let cidArr = cid.split(\",\");\r\n      let _table = this.tableListData,\r\n        tableLen = _table.length;\r\n      for (let i = 0; i < cidArr.length; i++) {\r\n        for (let j = 0; j < this.tableListData.length; j++) {\r\n          if (cidArr[i] == this.tableListData[j].id) {\r\n            this.tableListData.splice(j, 1);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    //查看Btn的点击事件\r\n    checkBtnClick(row) {\r\n      if (row.orderType == \"03002\") {\r\n        //跳转查看主单详情\r\n        this.$router.push({\r\n          path:\r\n            \"/warehouse/order_center/order_manager/tob_order/tob_order_main_check\",\r\n          query: {\r\n            orderSn: row.orderSn\r\n          }\r\n        });\r\n      } else {\r\n        //跳转查看子单详情\r\n        this.$router.push({\r\n          path:\r\n            \"/warehouse/order_center/order_manager/tob_order/tob_order_submenu_check\",\r\n          query: {\r\n            orderSn: row.orderSn\r\n          }\r\n        });\r\n      }\r\n    },\r\n    //作废Btn的点击事件\r\n    obsoleteBtnClick() {\r\n      console.log(\"obsoleteBtnClick---\");\r\n    },\r\n    //每页条数改变时\r\n    handleSizeChange(page) {\r\n      this.signData.pageSize = page;\r\n      this.getOrderListTableData();\r\n    },\r\n    //当前页改变时\r\n    handleCurrentChange(page) {\r\n      this.signData.pageIndex = page;\r\n      this.getOrderListTableData();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.search_div {\r\n  background-color: #fff;\r\n  padding-top: 20px;\r\n  margin: 0 10px;\r\n}\r\n.table_div {\r\n  background-color: #fff;\r\n  padding: 10px;\r\n  margin: 10px;\r\n}\r\n.pagination {\r\n  margin-top: 20px;\r\n  padding-bottom: 10px;\r\n  margin-right: 20px;\r\n  text-align: right;\r\n}\r\n</style>"]}]}