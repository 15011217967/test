{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\market\\discount\\discount_order_add.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\market\\discount\\discount_order_add.vue","mtime":1572415124560},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 季节列表\r\n      codeItem_list_get:[],\r\n      // 快速创建保留门店id\r\n      fastCreateStoreId:null,\r\n      // 快速创建剔除已有门店\r\n      fastCreateTF:true,\r\n      // 是否编辑\r\n      isEdit:this.$route.query.isEdit,\r\n      // 是否快速创建\r\n      isFastCreate:this.$route.query.isFastCreate,\r\n      // 单品商品信息是否存在\r\n      isGoods:false,\r\n      // 折扣id\r\n      discountId:this.$route.query.discountId,\r\n      // 弹框\r\n      dialogTableVisible:false,\r\n      // 全部商品\r\n      goodsList:{},\r\n      // 已添加\r\n      goodsCheckList:{},\r\n      // 新建折扣方案提交对象\r\n      discountData:{\r\n        // 折扣方案类型\r\n        type:null, \r\n        // 门店名称\r\n        storeName:null, \r\n        // 门店 id\r\n        storeId:null, \r\n        // 门店 id （备份），检验已有折扣时使用；\r\n        _storeId:null, \r\n        // 预约折扣类型\r\n        appointmentDiscountType:null,\r\n        // 预约折扣额度或折扣\r\n        appointmentDiscountEd:null,\r\n        // 阶梯折扣类型\r\n        ladderDiscountType:null, \r\n        // 阶梯折扣方式\r\n        ladderDiscountList:[],\r\n        // 单品折扣类型 \r\n        itemDiscountType:null, \r\n        // 单品折扣额度或折扣\r\n        itemDiscountEd:null \r\n      },\r\n      // 折扣校验\r\n      rules:{\r\n        // 门店校验\r\n        storeId: [{ required: true, validator: async (rule, value, callback) => {\r\n          var discountData = this.discountData;\r\n          if(!value) {\r\n            callback(new Error('请选择门店！'))\r\n          };\r\n          // 如果查询的门店id与当前选择的门店id一致，则折扣不再做检验；\r\n          if(discountData.storeId == discountData._storeId) {\r\n            var request = false;\r\n          }else{\r\n            var request = await this.request(\r\n              this.api.market.marketingMiddleground_confirmDiscountByStoreId,\r\n              {\r\n                \"storeId\": discountData.storeId,\r\n                \"type\": discountData.type,\r\n                discount:discountData.type == 2 ? discountData.itemDiscountEd : 0,\r\n                discountType:discountData.type == 2 ? discountData.itemDiscountType : 0\r\n              }\r\n            );\r\n          }\r\n          if(request.confirm) {\r\n            callback(new Error('已有折扣方案！'))\r\n          }else{\r\n            callback();\r\n          };\r\n        }, trigger: 'blur' }],\r\n        // 折扣类型校验\r\n        type: [{ required: true, message: '请选择折扣方案类型！', trigger: 'blur' }],\r\n        // 预约折扣类型校验\r\n        appointmentDiscountType: [{ required: true, message: '请选择预约折扣类型！', trigger: 'blur' }],\r\n        // 预约折扣或金额校验，首先不能为空，其次需要符合折扣金额的格式，如 3.2折；\r\n        appointmentDiscountEd: [{ required: true, validator: (rule, value, callback) => {\r\n          const appointmentDiscountType = this.discountData.appointmentDiscountType;\r\n          let re = /^\\d(\\.\\d?)?$/g;\r\n          let res = /^\\d+?$/g;\r\n          if(!value) {\r\n            var name = appointmentDiscountType ? '请输入折扣额度!' : '请输入减免金额!';\r\n            callback(new Error(name));\r\n          }\r\n          // 预约折扣类型为1，折扣额度数值检测\r\n          if(appointmentDiscountType) {\r\n            if(!re.test(value)) {\r\n              callback(new Error('请输入正确的折扣额度！'));\r\n            }else{\r\n              callback();\r\n            }\r\n          // 预约折扣类型为0，减免金额数值检测\r\n          }else{\r\n            if(!res.test(value)) {\r\n              callback(new Error('请输入正确的减免金额！'));\r\n            }else{\r\n              callback();\r\n            }\r\n          }\r\n        }, trigger: 'blur' }],\r\n        // 阶梯折扣类型校验\r\n        ladderDiscountType: [{ required: true, message: '请选择阶梯折扣类型！', trigger: 'blur' }],\r\n        // 阶梯折扣或金额校验\r\n        ladderDiscountList: [{ required: true, validator: (rule, arr, callback) => {\r\n          const discountType = this.discountData.ladderDiscountType;\r\n          let re = /^\\d(\\.\\d?)?$/g;\r\n          let res = /^\\d+?$/g;\r\n          if(!arr.length) {\r\n            callback(new Error('至少添加一条折扣方案！'));\r\n          };\r\n          var list = [];\r\n          // 将所有阶梯类型填写项添加到一个集合中，统一做判断\r\n          arr.forEach((item, index) => {\r\n            list.push(item.quantity);\r\n            list.push(item.value);\r\n          })\r\n          const someItem = list.every((item, index) => {\r\n            return item;\r\n          });\r\n          if(!someItem) {\r\n            callback(new Error('阶梯填写项不能为空！'));\r\n          }else{\r\n            // 判断满减打折，或满件打折，因为是两种规则，所有分别判断\r\n            if(discountType < 2) {\r\n              var quantityList = [];\r\n              var valueList = [];\r\n              // 将所有阶梯类型填写项添加到一个集合中，统一做判断\r\n              arr.forEach((item, index) => {\r\n                quantityList.push(item.quantity);\r\n                valueList.push(item.value);\r\n              })\r\n              var a = quantityList.every((item, index) => {\r\n                console.log(/^\\d+?$/g.test(item))\r\n                return /^\\d+?$/g.test(item);\r\n              })\r\n              if(!a) {\r\n                callback(new Error('请输入正确的折扣额度！'));\r\n              }\r\n              var b = valueList.every((item, index) => {\r\n                console.log(/^\\d(\\.\\d?)?$/g.test(item))\r\n                return /^\\d(\\.\\d?)?$/g.test(item);\r\n              })\r\n              if(!b) {\r\n                callback(new Error('请输入正确的折扣额度！'));\r\n              }\r\n            // 判断满数量减额，这里只有一种规则\r\n            }else{\r\n              let checkItem = list.every((item, index) => {\r\n                return /^\\d+?$/g.test(item);\r\n              })\r\n              if(!checkItem) {\r\n                callback(new Error('请输入正确的减免金额！'));\r\n              }\r\n            }\r\n          };\r\n          if(arr.length > 1) {\r\n            let deWeightItemArr = [];\r\n            let deWeightItemValueArr = [];\r\n            arr.forEach((item, index) => {\r\n              deWeightItemArr.push(item.quantity);\r\n              deWeightItemValueArr.push(item.value);\r\n            });\r\n            var nary = deWeightItemArr.sort();\r\n            var narys = deWeightItemValueArr.sort();\r\n            for(var i = 0; i < nary.length - 1; i++) {\r\n              if(nary[i] == nary[i + 1]) {\r\n                callback(new Error('同一门店、同一折扣类型，不能存在相同的折扣方案！'));\r\n              };\r\n            }\r\n            for(var i = 0; i < narys.length - 1; i++) {\r\n              if(narys[i] == narys[i + 1]) {\r\n                callback(new Error('同一门店、同一折扣类型，不能存在相同的折扣方案！'));\r\n              };\r\n            }\r\n          };\r\n          if(discountType == 3) {\r\n            var checkItemTF = arr.every((item, index) => {\r\n              return parseInt(item.quantity) >= parseInt(item.value)\r\n            });\r\n            if(!checkItemTF) {\r\n              callback(new Error('减免金额不能超过阶梯金额！'));\r\n            }else{\r\n              callback();\r\n            }\r\n          }else{\r\n            callback();\r\n          }\r\n        }, trigger: 'blur' }],\r\n        // 单品折扣类型校验\r\n        itemDiscountType: [{ required: true, message: '请选择单品折扣类型！', trigger: 'blur' }],\r\n        // 单品折扣或金额校验\r\n        itemDiscountEd: [{ required: true, validator: (rule, value, callback) => {\r\n          const itemDiscountType = this.discountData.itemDiscountType;\r\n          let re = /^\\d(\\.\\d?)?$/g;\r\n          let res = /^\\d+?$/g;\r\n          if(!value) {\r\n            var names = itemDiscountType ? '请输入折扣额度!' : '请输入减免金额!';\r\n            callback(new Error(names));\r\n          }\r\n          // 预约折扣类型为1，折扣额度数值检测\r\n          if(itemDiscountType) {\r\n            if(!re.test(value)) {\r\n              callback(new Error('请输入正确的折扣额度！'));\r\n            }else{\r\n              callback();\r\n            }\r\n          // 预约折扣类型为0，减免金额数值检测\r\n          }else{\r\n            if(!res.test(value)) {\r\n              callback(new Error('请输入正确的减免金额！'));\r\n            }else{\r\n              callback();\r\n            }\r\n          }\r\n        }, trigger: 'blur' }],\r\n      },\r\n      // 检索全部商品\r\n      goodsFiltersData:{\r\n        // 当前页码\r\n        pageIndex: 1,\r\n        // 每页数量\r\n        pageSize: 10,\r\n        // 门店id\r\n        storeId:null,\r\n        // 折扣类型\r\n        type:null,\r\n        // 折扣值\r\n        discount:null,\r\n        // 品类id\r\n        cateIdentifier:null,\r\n        // 品牌id\r\n        brandId:null,\r\n        // 售价最小值\r\n        retailPriceGE:null, \r\n        // 售价最大值\r\n        retailPriceLE:null, \r\n        // 库存最小值\r\n        quantityLowerLimit:null, \r\n        // 库存最大值\r\n        quantityUpperLimit:null, \r\n        // 季节\r\n        seasonalStyleCode:null,\r\n        // 关键词\r\n        searchWords:null \r\n      },\r\n      // 全部品牌\r\n      brandOptions:[],\r\n      // 检索已选商品\r\n      goodsFiltersDataCheck:{\r\n        // 当前页码\r\n        pageIndex: 1,\r\n        // 每页数量\r\n        pageSize: 10,\r\n        // 折扣id\r\n        discountId:null,\r\n        // 品类id\r\n        cateId:null,\r\n        // 品类id\r\n        cateIdentifier:null,\r\n        // 品牌id\r\n        brandId:null,\r\n        // 售价最小值\r\n        retailPriceGE:null, \r\n        // 售价最大值\r\n        retailPriceLE:null, \r\n        // 库存最小值\r\n        quantityLowerLimit:null, \r\n        // 库存最大值\r\n        quantityUpperLimit:null, \r\n        // 季节\r\n        seasonalStyleCode:null,\r\n        // 关键词 \r\n        searchWords:null \r\n      },\r\n      // 单品折扣列表\r\n      itemDiscountData:{\r\n        data:[]\r\n      },\r\n      // 门店列表\r\n      storeList:{},\r\n      // 折扣类型\r\n      discountType:[\r\n        '预约折扣',\r\n        '阶梯折扣',\r\n        '单品折扣'\r\n      ],\r\n      // 预约折扣类型\r\n      appointmentDiscountType:[\r\n        '预约减免指定金额',\r\n        '预约折上折'\r\n      ],\r\n       // 预约折扣类型\r\n      ladderDiscountType:[\r\n        '满数量打折',\r\n        '满金额打折',\r\n        '满数量减免指定金额',\r\n        '满金额减免指定金额'\r\n      ],\r\n      // 单品折扣类型\r\n      itemDiscountType:[\r\n        '定价促销',\r\n        '单品折扣'\r\n      ],\r\n      classData: [],\r\n      classList: [],\r\n      cateArr: [],\r\n      cateArrs: [],\r\n      props: {\r\n        value: \"id\",\r\n        label: \"name\",\r\n        children: \"children\"\r\n      }\r\n    };\r\n  },\r\n  created() {\r\n    var that = this;\r\n    this.getClassData(); // 获取商品\r\n    this.codeItem_list(); // 获取季节列表\r\n    this.getStoreList(); // 获取门店列表\r\n    this.getBrandOptions(); // 获取品牌\r\n    if(this.isEdit || this.isFastCreate) {\r\n      this.discountData.type = this.$route.query.type;\r\n      switch(this.$route.query.type) {\r\n        case 0:\r\n          this.marketingMiddleground_queryDiscountSetting();\r\n          break;\r\n        case 1:\r\n          this.marketingMiddleground_queryDiscountParameter();\r\n          break;\r\n        case 2:\r\n          this.marketingMiddleground_querySingleProductDiscount();\r\n          break;\r\n      }\r\n    };\r\n    document.onkeydown = function(e) {\r\n         var key = window.event.keyCode;\r\n         if (key == 13) {\r\n            if(that.dialogTableVisible) {\r\n              that.handleSearch();\r\n            }else{\r\n              that.handleSearchCheck();\r\n            }\r\n         }\r\n      };\r\n  },\r\n  mounted() {},\r\n  methods: {\r\n    /**\r\n     * （获取季节）\r\n     */\r\n    codeItem_list(item) {\r\n      const that = this;\r\n\r\n      this.request(\r\n        this.api.market.codeItem_list,\r\n        {\r\n          codeSetId:'06b11574-ef82-4ae4-a8a9-a25f903083df'\r\n        },\r\n        true\r\n      ).then(res => {\r\n        that.codeItem_list_get = res;\r\n      });\r\n    },\r\n    /**\r\n     * 获取品牌\r\n     */\r\n    getBrandOptions() {\r\n      this.request(\r\n        this.api.product.productBrand_list,\r\n        {},\r\n        true\r\n        ).then(data => {\r\n          let _data = data.data;\r\n          this.brandOptions = _data;\r\n      });\r\n    },\r\n    /**\r\n     * 获取分类\r\n     */\r\n    getClassData() {\r\n      //分类类型（1：标准分类，2：定制分类，3：原料分类或者称为属性分类）\r\n      this.$common.getClassSelect(this, 1).then(res => {\r\n        this.classData = res.ztree;\r\n        this.classList = res.list;\r\n      });\r\n    },\r\n    /**\r\n     * \r\n     */\r\n    cascaderGet(e) {\r\n      let cateId = JSON.parse(JSON.stringify(e)).pop();\r\n      let obj = this.classList.find(item => item.id == cateId);\r\n      this.goodsFiltersData.cateIdentifier = obj.identifier;\r\n    },\r\n    /**\r\n     * \r\n     */\r\n    cascaderGets(e) {\r\n      let cateId = JSON.parse(JSON.stringify(e)).pop();\r\n      let obj = this.classList.find(item => item.id == cateId);\r\n      this.goodsFiltersDataCheck.cateIdentifier = obj.identifier;\r\n    },\r\n    /**\r\n     * 删除某个阶梯\r\n     */\r\n    deleteLadderItem(index) {\r\n      this.discountData.ladderDiscountList.splice(index,1);\r\n    },\r\n    /**\r\n     * （单品全部添加）\r\n     */\r\n    marketingMiddleground_addPageSingleProduct() {\r\n      const that = this;\r\n      const discountData = this.discountData;\r\n      const data = {\r\n        \"discountId\": this.discountId,\r\n        \"goodsCodeList\": [],\r\n        \"storeId\": discountData.storeId\r\n      };\r\n      this.goodsList.data.forEach((item, index) => {\r\n        if(item.currentDiscount === null) {\r\n          data.goodsCodeList.push(item.code)\r\n        }\r\n      });\r\n      this.request(\r\n        this.api.market.marketingMiddleground_addPageSingleProduct,\r\n        data,\r\n        true\r\n      ).then(res => {\r\n        this.warn('本页全部商品添加成功！');\r\n        that.marketingMiddleground_listProduct();\r\n        that.marketingMiddleground_listSingleProduct();\r\n      });\r\n    },\r\n    /**\r\n     * （单品添加）\r\n     */\r\n    marketingMiddleground_addStatelessSingleProduct(item) {\r\n      const that = this;\r\n      const discountData = this.discountData;\r\n\r\n      this.request(\r\n        this.api.market.marketingMiddleground_addStatelessSingleProduct,\r\n        {\r\n          discountId:this.discountId,\r\n          goodsCode:item.code\r\n        },\r\n        true\r\n      ).then(res => {\r\n        this.warn('商品添加成功！');\r\n        that.marketingMiddleground_listProduct();\r\n        that.marketingMiddleground_listSingleProduct();\r\n      });\r\n    },\r\n    /**\r\n     * （单品从列表内剔除）\r\n     */\r\n    marketingMiddleground_removeInSingleProduct(item) {\r\n      const that = this;\r\n      const discountData = this.discountData;\r\n\r\n      this.request(\r\n        this.api.market.marketingMiddleground_removeInSingleProduct,\r\n        {\r\n          discountId:this.discountId,\r\n          goodsCode:item.code\r\n        },\r\n        true\r\n      ).then(res => {\r\n        this.warn('剔除成功！');\r\n        that.marketingMiddleground_listProduct();\r\n        that.marketingMiddleground_listSingleProduct();\r\n      });\r\n    },\r\n    /**\r\n     * （单品切换到当前折扣）\r\n     */\r\n    marketingMiddleground_addOtherInSingleProduct(item) {\r\n      const that = this;\r\n      const discountData = this.discountData;\r\n\r\n      this.request(\r\n        this.api.market.marketingMiddleground_addOtherInSingleProduct,\r\n        {\r\n          sourceDiscountId:item.sourceDisocuntId,\r\n          goodsCode:item.code,\r\n          targetDiscountId:this.discountId\r\n        },\r\n        true\r\n      ).then(res => {\r\n        this.warn('已切换到当前折扣！');\r\n        that.marketingMiddleground_listProduct();\r\n        that.marketingMiddleground_listSingleProduct();\r\n      });\r\n    },\r\n    /**\r\n     * （已选商品）\r\n     */\r\n    marketingMiddleground_listSingleProduct() {\r\n      const that = this;\r\n      const discountData = this.discountData;\r\n      \r\n      Object.assign(this.goodsFiltersDataCheck, {\r\n        storeId:discountData.storeId,\r\n        discountId:this.discountId\r\n      });\r\n      this.request(\r\n        this.api.market.marketingMiddleground_listSingleProduct,\r\n        this.goodsFiltersDataCheck,\r\n        true\r\n      ).then(res => {\r\n        that.goodsCheckList = res;\r\n      });\r\n    },\r\n    /**\r\n     * （全部商品）\r\n     */\r\n    marketingMiddleground_listProduct() {\r\n      const that = this;\r\n      const discountData = this.discountData;\r\n\r\n      Object.assign(this.goodsFiltersData, {\r\n        storeId:discountData.storeId,\r\n        type:discountData.itemDiscountType,\r\n        discount:discountData.itemDiscountEd\r\n      }); \r\n      this.request(\r\n        this.api.market.marketingMiddleground_listProduct,\r\n        this.goodsFiltersData,\r\n        true\r\n      ).then(res => {\r\n        that.goodsList = res;\r\n      });\r\n    },\r\n    /**\r\n     * （query）查询预约折扣方案\r\n     */\r\n    marketingMiddleground_queryDiscountSetting() {\r\n      const that = this;\r\n      const discountData = this.discountData;\r\n\r\n      this.request(\r\n        this.api.market.marketingMiddleground_queryDiscountSetting,\r\n        {\r\n          id:this.discountId\r\n        },\r\n        true\r\n      ).then(res => {\r\n        if(that.isFastCreate) {\r\n          this.fastCreateStoreId = res.storeId;\r\n          res.storeId = null;\r\n          res.storeName = null;\r\n        };\r\n        \r\n        Object.assign(that.discountData, {\r\n          storeName:res.storeName, // 门店名称\r\n          storeId:res.storeId, // 门店 id\r\n          _storeId:res.storeId, // 门店 id （备份），检验已有折扣时使用；\r\n          appointmentDiscountType:res.type,// 预约折扣类型\r\n          appointmentDiscountEd:res.value,// 预约折扣额度\r\n        })\r\n      });\r\n    },\r\n    /**\r\n     * （query）查询阶梯折扣方案\r\n     */\r\n    marketingMiddleground_queryDiscountParameter() {\r\n      const that = this;\r\n      const discountData = this.discountData;\r\n\r\n      this.request(\r\n        this.api.market.marketingMiddleground_queryDiscountParameter,\r\n        {\r\n          id:this.discountId\r\n        },\r\n        true\r\n      ).then(res => {\r\n        var ladderDiscountType = null;\r\n        var otherDiscount = res.otherDiscount && res.otherDiscount[0];\r\n\r\n        if(otherDiscount.discountType === 0 && otherDiscount.type === 0) {\r\n          ladderDiscountType = 3;\r\n        }else if(otherDiscount.discountType === 0 && otherDiscount.type === 1) {\r\n          ladderDiscountType = 1;\r\n        }else if(otherDiscount.discountType === 1 && otherDiscount.type === 0) {\r\n          ladderDiscountType = 2;\r\n        }else if(otherDiscount.discountType === 1 && otherDiscount.type === 1) {\r\n          ladderDiscountType = 0;\r\n        };\r\n\r\n        if(that.isFastCreate) {\r\n          this.fastCreateStoreId = res.storeId;\r\n          res.storeId = null;\r\n          res.storeName = null;\r\n        };\r\n\r\n        Object.assign(that.discountData, {\r\n          storeName:res.storeName, // 门店名称\r\n          storeId:res.storeId, // 门店 id\r\n          _storeId:res.storeId, // 门店 id （备份），检验已有折扣时使用；\r\n          ladderDiscountType, // 阶梯折扣类型\r\n          ladderDiscountList:res.otherDiscount,// 预约折扣方式\r\n        })\r\n      });\r\n    },\r\n    /**\r\n     * （query）查询单品折扣方案\r\n     */\r\n    marketingMiddleground_querySingleProductDiscount() {\r\n      const that = this;\r\n      const discountData = this.discountData;\r\n\r\n      this.request(\r\n        this.api.market.marketingMiddleground_querySingleProductDiscount,\r\n        {\r\n          id:this.discountId\r\n        },\r\n        true\r\n      ).then(res => {\r\n        if(that.isFastCreate) {\r\n          this.fastCreateStoreId = res.storeId;\r\n          res.storeId = null;\r\n          res.storeName = null;\r\n        };\r\n        Object.assign(that.discountData, {\r\n          storeName:res.storeName, // 门店名称\r\n          storeId:res.storeId, // 门店 id\r\n          _storeId:res.storeId, // 门店 id （备份），检验已有折扣时使用；\r\n          itemDiscountType:res.type,// 预约折扣类型\r\n          itemDiscountEd:res.discount,// 预约折扣额度\r\n        });\r\n        // 快速创建不展示商品\r\n        if(that.isFastCreate) return;\r\n        that.isGoods = true;\r\n        that.marketingMiddleground_listSingleProduct(); // 查询已添加商品\r\n        that.marketingMiddleground_listProduct(); // 查询全部商品\r\n      });\r\n    },\r\n    /**\r\n     * 新建或更新（预约）折扣方案\r\n     */\r\n    createAppointmentDiscount() {\r\n      const that = this;\r\n      const discountData = this.discountData;\r\n      const url =  this.isEdit \r\n        ? this.api.market.marketingMiddleground_updateDiscountSetting // 更新预约折扣\r\n        : this.api.market.marketingMiddleground_createDiscountSetting; // 新建预约折扣\r\n\r\n      this.request(\r\n        url,\r\n        {\r\n          \"storeId\": discountData.storeId, // 门店id\r\n          \"storeName\": discountData.storeName, // 门店名称\r\n          \"type\": discountData.appointmentDiscountType, // 0：满，1：打折。\r\n          \"value\": discountData.appointmentDiscountEd, // value\r\n          \"id\":this.discountId\r\n        },\r\n        true\r\n      ).then(res => {\r\n        if(this.discountId) {\r\n          this.warn('更新成功！')\r\n        }else{\r\n          this.warn('创建成功！')\r\n        };\r\n        this.href('market/discount/discount_manage_list');\r\n      });\r\n    },\r\n    /**\r\n     * 新建或更新（阶梯）折扣方案\r\n     */\r\n    createLadderDiscount() {\r\n      const that = this;\r\n      const discountData = this.discountData;\r\n      const url =  this.isEdit \r\n        ? this.api.market.marketingMiddleground_updateDiscountParameterS // 更新阶梯折扣\r\n        : this.api.market.marketingMiddleground_createDiscountParameter;// 新建阶梯折扣\r\n      const data =  {\r\n        \"storeDiscountParameterVOS\": discountData.ladderDiscountList,\r\n        \"storeId\": discountData.storeId,\r\n        \"storeName\": discountData.storeName,\r\n        \"id\":this.discountId\r\n      };\r\n      // 请求\r\n      this.request(\r\n        url,\r\n        data,\r\n        true\r\n      ).then(res => {\r\n        if(this.discountId) {\r\n          this.warn('更新成功！')\r\n        }else{\r\n          this.warn('创建成功！')\r\n        };\r\n        this.href('market/discount/discount_manage_list');\r\n      });\r\n    },\r\n    /**\r\n     * 新建或更新（单品）折扣方案\r\n     */\r\n    createItemDiscount() {\r\n      const that = this;\r\n      const discountData = this.discountData;\r\n      const url =  this.isEdit \r\n        ? this.api.market.marketingMiddleground_updateSingleProductDiscount // 更新单品折扣\r\n        : this.api.market.marketingMiddleground_createSingleProductDiscount;// 新建单品折扣\r\n      const data = {\r\n        \"createWayType\": this.isFastCreate ? 1 : 0, // 区分营销中台-正常创建：0，还是快速创建：1\r\n        \"discount\": discountData.itemDiscountEd, // 折扣 ?  \r\n        \"platformType\": 1, // 平台类型（0：APP，1：中台）\r\n        \"storeId\": discountData.storeId,\r\n        \"storeName\": discountData.storeName,\r\n        \"type\": discountData.itemDiscountType, // 减金额打折类型(0:满减，1:打折)\r\n        \"sourceId\": this.discountId, // 营销中台-快速创建-源门店单品折扣ID ?\r\n        \"id\":this.discountId\r\n      };\r\n      this.request(\r\n        url,\r\n        data,\r\n        true\r\n      ).then(res => {\r\n        if(that.isEdit) {\r\n          that.warn('更新成功！');\r\n          that.marketingMiddleground_listProduct();\r\n        }else{\r\n          that.warn('创建成功！');\r\n          this.discountId = res.id;\r\n          that.isGoods = true;\r\n          that.isEdit = true;\r\n          that.marketingMiddleground_listProduct();\r\n          that.marketingMiddleground_listSingleProduct();\r\n        };\r\n      });\r\n    },\r\n    /**\r\n     * 改变阶梯方案\r\n     */\r\n    changeLadderDiscountType() {\r\n      this.discountData.ladderDiscountList = [];\r\n    },\r\n    /**\r\n     * 新增阶梯方案\r\n     */\r\n    createLadder() {\r\n      let discountData = this.discountData;\r\n      let ladderDiscountType = discountData.ladderDiscountType;\r\n      // 设置完阶梯折扣方案，才能添加阶梯\r\n      if(ladderDiscountType === null) {\r\n        this.warn('请先选择阶梯折扣类型！','warning');\r\n        return;\r\n      };\r\n      // 添加\r\n      discountData.ladderDiscountList.push({\r\n        \"discountType\": ladderDiscountType == 0 ||  ladderDiscountType == 2 ? 1 : 0, // 折扣类型（0，满金额减免，1，满数量减免）\r\n        \"quantity\": null,\r\n        \"type\":  ladderDiscountType == 0 || ladderDiscountType == 1 ? 1 : 0, // 判断满减还是打折类型（0:满减，1:打折）\r\n        \"value\": null,\r\n        \"id\":this.discountId &&  this.discountId \r\n      });\r\n    },\r\n    /**\r\n     * 选择适用门店时\r\n     */\r\n    changeStore(id) {\r\n      var item = this.storeList.data.find((v, i) => {\r\n          return id == v.id;\r\n      })\r\n      this.discountData.storeName = item.name;\r\n    \r\n      console.log(item.name)\r\n    },\r\n    /**\r\n     * 门店下拉框下拉或隐藏时\r\n     */\r\n    visibleChange() {\r\n      if(this.fastCreateTF) {\r\n        if(this.isFastCreate) {\r\n          var index = this.storeList.data.findIndex((v, i) => {\r\n            return this.fastCreateStoreId == v.id;\r\n          })\r\n          this.storeList.data.splice(index, 1);\r\n          this.fastCreateTF = false;\r\n        }\r\n      }\r\n    },\r\n    /**\r\n     * 新建或更新折扣方案\r\n     */\r\n    saveDiscount() {\r\n      const that = this;\r\n      const discountData = this.discountData;\r\n      this.$refs.formName.validate((v) => {\r\n        if (v) {\r\n          // 把对象中所有的不规范折扣数值清除，如：3. 3.22，=> 处理成3 3.2；\r\n          // /(\\d\\.\\D)|(\\d\\.\\d{2})/g \r\n          this.discountData = JSON.parse(JSON.stringify(discountData).replace(/(\\d\\.\\D)|(\\d\\.\\d{2})/g,(value) => {\r\n            value = value.replace(/(\\.\\D)/,'\"');\r\n            value = value.replace(/(\\d$)/,'');\r\n            return value;\r\n          }));\r\n          console.log(this.discountData);\r\n          // return;\r\n          switch(discountData.type) {\r\n            // 新建或更新预约折扣\r\n            case 0:\r\n              this.createAppointmentDiscount();\r\n              break;\r\n            // 新建或更新阶梯折扣\r\n            case 1:\r\n              this.createLadderDiscount();\r\n              break;\r\n            // 新建或更新单品折扣\r\n            case 2:\r\n              this.createItemDiscount();\r\n              break;\r\n          }\r\n        } else {\r\n          let type = this.discountData.type;\r\n          let discountName = '';\r\n          switch(type) {\r\n            case 0:\r\n              discountName = '预约折扣';\r\n              break;\r\n            case 1:\r\n              discountName = '阶梯折扣';\r\n              break;\r\n            case 2:\r\n              discountName = '单品折扣';\r\n              break;\r\n          };\r\n          // this.warn(`新建${discountName}信息未填写完整，请填写完整后重试！`,'warning');\r\n          return;\r\n        }\r\n      }); \r\n    },\r\n    /**\r\n     * 查询门店列表\r\n     */\r\n    getStoreList() {\r\n        const that = this;\r\n\r\n        this.request(\r\n        that.api.store.storeBasic_list,\r\n        {\r\n          pricingPower:0\r\n        },\r\n        true\r\n        ).then(res => {\r\n          that.storeList = res;\r\n        });\r\n    },\r\n    /**\r\n     * 提示\r\n     * @param { String } message 提示文案\r\n     * @param { String } type 提示类型\r\n     */\r\n    warn(message, type) {\r\n      this.$message({\r\n        message: message,\r\n        type: type || 'success'\r\n      });\r\n    },\r\n    /**\r\n     * 跳转\r\n     * @param { String } routeName 路由跳转名字\r\n     */\r\n    href(routeName) {\r\n      this.$router.push({\r\n        path: `/${routeName}`\r\n      });\r\n    },\r\n   /**\r\n     * 模糊搜索\r\n     */\r\n    handleSearch() {\r\n        this.goodsFiltersData.pageIndex = 1;\r\n        this.goodsFiltersData.searchWords = this.goodsFiltersData.searchWords && this.goodsFiltersData.searchWords.replace(/(^\\s)|(\\s$)/g, '');\r\n        this.marketingMiddleground_listProduct();\r\n    },\r\n     /**\r\n     * 模糊搜索\r\n     */\r\n    handleSearchCheck() {\r\n        this.goodsFiltersDataCheck.pageIndex = 1;\r\n        this.goodsFiltersDataCheck.searchWords = this.goodsFiltersDataCheck.searchWords && this.goodsFiltersDataCheck.searchWords.replace(/(^\\s)|(\\s$)/g, '');\r\n        this.marketingMiddleground_listSingleProduct();\r\n    },\r\n    /**\r\n     * 搜索重置\r\n     */\r\n    handleResetFilters() {\r\n      Object.assign(this.goodsFiltersData,{\r\n        pageIndex: 1,// 当前页码\r\n        pageSize: 10,// 每页数量\r\n        storeId:null,\r\n        type:null,\r\n        discount:null,\r\n        cateIdentifier:null,// 品类id\r\n        brandId:null,// 品牌id\r\n        retailPriceGE:null, // 售价最小值\r\n         retailPriceLE:null, // 售价最大值\r\n        quantityLowerLimit:null, // 库存最小值\r\n        quantityUpperLimit:null, // 库存最大值\r\n        seasonalStyleCode:null, // 季节\r\n        searchWords:null // 关键词\r\n      });\r\n      this.cateArr = [];\r\n    },\r\n    /**\r\n     * 点击页数\r\n     * @param { Number } pageIndex 当前页\r\n     */\r\n    handleCurrentChange(pageIndex){\r\n        this.goodsFiltersData.pageIndex = pageIndex;\r\n        if(!this.discountData.itemDiscountEd) {\r\n          this.warn('请填写折扣额度或金额！','warning');\r\n          return;\r\n        };\r\n        this.marketingMiddleground_listProduct();\r\n    },\r\n    /**\r\n     *  选择每页多少条数\r\n     *  @param { Number } pageSize 每页条数\r\n     */\r\n    handleSizeChange(pageSize){\r\n        this.goodsFiltersData.pageSize = pageSize;  \r\n        if(!this.discountData.itemDiscountEd) {\r\n          this.warn('请填写折扣额度或金额！','warning');\r\n          return;\r\n        };\r\n        this.marketingMiddleground_listProduct();\r\n    },\r\n    /**\r\n     * 搜索重置\r\n     */\r\n    handleResetFiltersCheck() {\r\n        Object.assign(this.goodsFiltersDataCheck,{\r\n        // 当前页码\r\n        pageIndex: 1,\r\n        // 每页数量\r\n        pageSize: 10,\r\n        // 折扣id\r\n        discountId:null,\r\n        // 品类id\r\n        cateId:null,\r\n        // 品类id\r\n        cateIdentifier:null,\r\n        // 品牌id\r\n        brandId:null,\r\n        // 售价最小值\r\n        retailPriceGE:null, \r\n        // 售价最大值\r\n        retailPriceLE:null, \r\n        // 库存最小值\r\n        quantityLowerLimit:null, \r\n        // 库存最大值\r\n        quantityUpperLimit:null, \r\n        // 季节\r\n        seasonalStyleCode:null,\r\n        // 关键词 \r\n        searchWords:null \r\n      });\r\n        this.cateArrs = [];\r\n    },\r\n    /**\r\n     * 点击页数\r\n     * @param { Number } pageIndex 当前页\r\n     */\r\n    handleCurrentChangeCheck(pageIndex){\r\n      this.goodsFiltersDataCheck.pageIndex = pageIndex;\r\n      this.marketingMiddleground_listSingleProduct();\r\n    },\r\n    /**\r\n     *  选择每页多少条数\r\n     *  @param { Number } pageSize 每页条数\r\n     */\r\n    handleSizeChangeCheck(pageSize){\r\n      this.goodsFiltersDataCheck.pageSize = pageSize;  \r\n      this.marketingMiddleground_listSingleProduct();\r\n    },\r\n  },\r\n  components: {}\r\n};\r\n",{"version":3,"sources":["discount_order_add.vue"],"names":[],"mappingsfile":"discount_order_add.vue","sourceRoot":"src/views/market/discount","sourcesContent":["<template>\r\n   <div>\r\n      <el-dialog title=\"选择商品\" :visible.sync=\"dialogTableVisible\">\r\n        <div class=\"box\">\r\n          <el-form\r\n            class=\"item-form\"\r\n            size=\"small\"\r\n            :inline=\"true\"\r\n            :model=\"goodsFiltersData\">\r\n            <!-- 模糊查询 -->\r\n            <el-form-item prop=\"cateIdentifier\" clearable label=\"品类：\">\r\n              <el-cascader\r\n                class=\"input-w\"\r\n                :options=\"classData\"\r\n                v-model=\"cateArr\"\r\n                :value=\"cateArr\"\r\n                @change=\"cascaderGet\"\r\n                :show-all-levels=\"false\"\r\n                :props=\"props\"\r\n                change-on-select\r\n              ></el-cascader>\r\n            </el-form-item>\r\n            <el-form-item label=\"品牌：\">\r\n              <el-select class=\"input-w\" filterable clearable placeholder=\"请选择\" v-model=\"goodsFiltersData.brandId\">\r\n                <el-option\r\n                  v-for=\"item in brandOptions\"\r\n                  :key=\"item.id\"\r\n                  :label=\"item.name\"\r\n                  :value=\"item.id\"\r\n                ></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"售价：\">\r\n              <el-input placeholder=\"请输入售价最小值\" clearable  v-model.number=\"goodsFiltersData.retailPriceGE\" class=\"el-input-width155\"></el-input>\r\n              <el-input placeholder=\"请输入售价最大值\" clearable  v-model.number=\"goodsFiltersData.retailPriceLE\" class=\"el-input-width155 ml-10\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"季节：\">\r\n              <el-select v-model=\"goodsFiltersData.seasonalStyleCode\" clearable placeholder=\"请选择\">\r\n                <el-option v-for=\"(item, index) in codeItem_list_get.data\" :key=\"index\" :label=\"item.name\" :value=\"item.code\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <br/>\r\n            <el-form-item label=\"店内库存：\">\r\n              <el-input placeholder=\"请输入库存最小值\" clearable  v-model=\"goodsFiltersData.quantityLowerLimit\" class=\"el-input-width155\"></el-input>\r\n              <el-input placeholder=\"请输入库存最大值\" clearable  v-model=\"goodsFiltersData.quantityUpperLimit\" class=\"el-input-width155 ml-10\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"关键词：\">\r\n              <el-input placeholder=\"请输入关键词，如：货号、款号、商品名称\" clearable  v-model=\"goodsFiltersData.searchWords\" class=\"el-input-width355\"></el-input>\r\n            </el-form-item>\r\n            <!-- 搜索，重置 -->\r\n            <el-form-item>\r\n              <el-button size=\"small\" @click=\"handleSearch\" type=\"primary\" plain>搜索</el-button>\r\n              <el-button size=\"small\" @click=\"handleResetFilters\">重置</el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n        </div>\r\n        <div class=\"box\">\r\n          <!-- 全部商品 -->\r\n          <div class=\"item-table\">\r\n            <el-button size=\"small\" type=\"primary\" class=\"ml-20 mt-24\" @click=\"marketingMiddleground_addPageSingleProduct\">本页全部添加</el-button>\r\n            <el-table\r\n                class=\"mt-20\"\r\n              :data=\"goodsList.data\"  \r\n              stripe\r\n              empty-text=\"暂无数据\"\r\n              header-align=\"center\"\r\n              header-row-class-name=\"item-table-header\"\r\n              :highlight-current-row=\"true\">\r\n              <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"商品款号\" min-width=\"100\">\r\n                <template  slot-scope=\"scope\">{{ scope.row.productCode|| '--' }}</template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"商品货号\" min-width=\"150\">\r\n                <template  slot-scope=\"scope\">{{ scope.row.code || '--' }}</template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"品牌\" min-width=\"100\">\r\n                <template  slot-scope=\"scope\">{{ scope.row.productBrandName || '--' }}</template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"品类\" min-width=\"100\">\r\n                <template  slot-scope=\"scope\">{{ scope.row.fullCateName || '--' }}</template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"商品名称\" min-width=\"100\">\r\n                <template  slot-scope=\"scope\">{{ scope.row.name || '--' }}</template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"商品图片\" min-width=\"100\">\r\n                <template  slot-scope=\"scope\"><img class=\"discountImg\" :src=\"scope.row.image\" alt=\"\"></template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"店内库存\" min-width=\"100\">\r\n                <template  slot-scope=\"scope\">{{ scope.row.stock === null ? '门店没有该商品' : scope.row.stock }}</template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"售价\" min-width=\"100\">\r\n                <template  slot-scope=\"scope\">{{ scope.row.retailPrice || '--'  }}</template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"当前折扣\" min-width=\"100\">\r\n                <template  slot-scope=\"scope\">{{ scope.row.discountStr || '--' }}</template>\r\n              </el-table-column>\r\n              <!-- 操作 -->\r\n              <el-table-column\r\n                  fixed=\"right\"\r\n                  label-class-name=\"text-center\"\r\n                  class-name=\"text-center\"\r\n                  align=\"center\"\r\n                  label=\"操作\"\r\n                  width=\"180\">\r\n                  <template slot-scope=\"scope\">\r\n                    <el-button type=\"text\" v-if=\"scope.row.currentDiscount === null\" size=\"small\" @click=\"marketingMiddleground_addStatelessSingleProduct(scope.row)\">添加</el-button>\r\n                    <el-button type=\"text\" v-if=\"scope.row.currentDiscount === 0\" size=\"small\" @click=\"marketingMiddleground_addOtherInSingleProduct(scope.row)\">切换到当前折扣</el-button>\r\n                    <el-button type=\"text\" v-if=\"scope.row.currentDiscount === 1\" size=\"small\" @click=\"marketingMiddleground_removeInSingleProduct(scope.row)\">从列表内剔除</el-button>\r\n                  </template>\r\n              </el-table-column>\r\n            </el-table>\r\n            <div class=\"pagination mt-10 mb-20\">\r\n              <!-- 分页 -->\r\n              <el-pagination\r\n                  class=\"mr-20\"\r\n                  @size-change=\"handleSizeChange\"\r\n                  @current-change=\"handleCurrentChange\"\r\n                  :current-page=\"goodsFiltersData.pageIndex\"\r\n                  :page-sizes=\"[10,20,30,40,50]\"\r\n                  :page-size=\"goodsFiltersData.pageSize\"\r\n                  layout=\"total, sizes, prev, pager, next, jumper\"\r\n                  :total=\"goodsList.totalCount\"\r\n              ></el-pagination>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </el-dialog>\r\n      <el-form\r\n        :model=\"discountData\"\r\n        label-width=\"150px\"\r\n        class=\"form-label\"\r\n        :rules=\"rules\"\r\n        ref=\"formName\">\r\n        <!-- 1.折扣类型选择 -->\r\n        <div class=\"box\">\r\n          <el-form-item label=\"适用门店：\" prop=\"storeId\">\r\n            <el-select \r\n              clearable \r\n              filterable \r\n              v-model=\"discountData.storeId\" \r\n              @focus=\"visibleChange\"\r\n              :disabled=\"isEdit ? isEdit : false\" \r\n              @change=\"changeStore\" \r\n              class=\"el-input-short\">\r\n              <el-option v-for=\"(item, index) in storeList.data\" :key=\"index\" :label=\"item.name\" :value=\"item.id\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"折扣方案类型：\" prop=\"type\">\r\n            <el-select v-model=\"discountData.type\" :disabled=\"isEdit ? isEdit : false\" class=\"el-input-short\">\r\n              <el-option v-for=\"(item, index) in discountType\" :key=\"index\" :label=\"item\" :value=\"index\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n        </div>\r\n        <!-- 2.折扣内容配置 -->\r\n        <template>\r\n          <!-- （预约）折扣 -->\r\n          <div class=\"box\" v-if=\"discountData.type === 0\">\r\n            <el-form-item label=\"预约折扣类型：\" prop=\"appointmentDiscountType\">\r\n              <el-select \r\n                v-model=\"discountData.appointmentDiscountType\" \r\n                class=\"el-input-short\" \r\n                @change=\"discountData.appointmentDiscountEd = null\"\r\n                placeholder=\"请选择预约折扣类型\">\r\n                <el-option v-for=\"(item, index) in appointmentDiscountType\" :key=\"index\" :label=\"item\" :value=\"index\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"减免金额：\" v-show=\"discountData.appointmentDiscountType !== null && discountData.appointmentDiscountType === 0\" prop=\"appointmentDiscountEd\">\r\n              <el-input v-enter-number v-model=\"discountData.appointmentDiscountEd\"  placeholder=\"请输入金额，如50\" class=\"el-input-width155\"></el-input>&nbsp;元\r\n            </el-form-item>\r\n            <el-form-item label=\"折扣额度：\" v-show=\"discountData.appointmentDiscountType !== null && discountData.appointmentDiscountType === 1\" prop=\"appointmentDiscountEd\">\r\n              <el-input  v-model=\"discountData.appointmentDiscountEd\" v-discount  placeholder=\"请输入折扣，如3.5\" class=\"el-input-width155\"></el-input>&nbsp;折\r\n            </el-form-item>\r\n            <el-form-item label=\"\" prop=\"\" class=\"mt-74\">\r\n              <el-button type=\"primary\" @click=\"saveDiscount\">保存</el-button>\r\n              <el-button @click=\"href('market/discount/discount_manage_list')\">取消</el-button>\r\n            </el-form-item>\r\n          </div>\r\n          <!-- （阶梯）折扣 -->\r\n          <div class=\"box\" v-if=\"discountData.type === 1\">\r\n            <el-form-item label=\"阶梯折扣类型：\" prop=\"ladderDiscountType\">\r\n              <el-select @change=\"changeLadderDiscountType\" v-model=\"discountData.ladderDiscountType\" class=\"el-input-short\" placeholder=\"请选择阶梯折扣类型\">\r\n                <el-option v-for=\"(item, index) in ladderDiscountType\" :key=\"index\" :label=\"item\" :value=\"index\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <!-- 设置阶梯 -->\r\n            <el-form-item label=\"设置阶梯：\" prop=\"ladderDiscountList\">\r\n              <div class=\"addRadder\">\r\n                <div \r\n                  v-for=\"(item, index) in discountData.ladderDiscountList\"\r\n                  :key=\"index\"\r\n                  >\r\n                  <!-- 满数量打折 -->\r\n                  <div v-show=\"discountData.ladderDiscountType  === 0\">满\r\n                    <el-input class=\"el-input-mini mlr10px mb-10\" v-enter-number v-model=\"item.quantity\"></el-input>件，打\r\n                    <el-input v-discount class=\"el-input-mini mlr10px\" v-model=\"item.value\"></el-input>折\r\n                    <i class=\"el-icon-remove  mlr10px\" @click=\"deleteLadderItem(index)\"></i></div>\r\n                  <!-- 满金额打折 -->\r\n                  <div v-show=\"discountData.ladderDiscountType  === 1\">满\r\n                    <el-input class=\"el-input-mini mlr10px mb-10\" v-enter-number v-model=\"item.quantity\"></el-input>元，打\r\n                    <el-input v-discount class=\"el-input-mini mlr10px\" v-model=\"item.value\"></el-input>折\r\n                    <i class=\"el-icon-remove  mlr10px\" @click=\"deleteLadderItem(index)\"></i></div>\r\n                  <!-- 满数量减免指定金额 -->\r\n                  <div v-show=\"discountData.ladderDiscountType  === 2\">满\r\n                    <el-input class=\"el-input-mini mlr10px mb-10\" v-enter-number v-model=\"item.quantity\"></el-input>件，减\r\n                    <el-input class=\"el-input-mini mlr10px\" v-enter-number v-model=\"item.value\"></el-input>元\r\n                    <i class=\"el-icon-remove  mlr10px\" @click=\"deleteLadderItem(index)\"></i></div> \r\n                  <!-- 满金额减免指定金额 -->\r\n                  <div v-show=\"discountData.ladderDiscountType  === 3\">满\r\n                    <el-input class=\"el-input-mini mlr10px mb-10\" v-enter-number v-model=\"item.quantity\"></el-input>元，减\r\n                    <el-input class=\"el-input-mini mlr10px\" v-enter-number v-model=\"item.value\"></el-input>元\r\n                    <i class=\"el-icon-remove  mlr10px\" @click=\"deleteLadderItem(index)\"></i></div>\r\n                </div>\r\n                <el-button @click=\"createLadder\">新增阶梯</el-button>\r\n              </div>\r\n            </el-form-item>\r\n            <el-form-item label=\"\" prop=\"\" class=\"mt-74\">\r\n              <el-button type=\"primary\" @click=\"saveDiscount\">保存</el-button>\r\n              <el-button @click=\"href('market/discount/discount_manage_list')\">取消</el-button>\r\n            </el-form-item>\r\n          </div>\r\n          <!-- 单品折扣 -->\r\n          <div v-if=\"discountData.type === 2\">\r\n            <div class=\"box\">\r\n              <el-form-item label=\"单品折扣类型：\" prop=\"itemDiscountType\">\r\n                <el-select \r\n                  v-model=\"discountData.itemDiscountType\" \r\n                  class=\"el-input-short\" \r\n                  @change=\"discountData.itemDiscountEd = null\"\r\n                  placeholder=\"请选择单品折扣类型\">\r\n                  <el-option v-for=\"(item, index) in itemDiscountType\" :key=\"index\" :label=\"item\" :value=\"index\"></el-option>\r\n                </el-select>\r\n              </el-form-item>\r\n              <el-form-item label=\"折扣额度：\" v-show=\"discountData.itemDiscountType !== null && discountData.itemDiscountType ===1\"  prop=\"itemDiscountEd\">\r\n                <el-input placeholder=\"请输入折扣，如3.5\" v-discount v-model=\"discountData.itemDiscountEd\" class=\"el-input-width155\"></el-input>&nbsp;折\r\n              </el-form-item>\r\n              <el-form-item label=\"定价：\" v-show=\"discountData.itemDiscountType !== null && discountData.itemDiscountType === 0\"  prop=\"itemDiscountEd\">\r\n                <el-input placeholder=\"请输入定价，如：299\" v-enter-number v-model=\"discountData.itemDiscountEd\" class=\"el-input-width155\"></el-input>&nbsp;元\r\n              </el-form-item> \r\n              <el-form-item label=\"\" prop=\"\" class=\"mt-74\">\r\n                <el-button type=\"primary\" @click=\"saveDiscount\">{{ isGoods ? '刷新折扣' :  '下一步，选商品' }}</el-button>\r\n                <el-button @click=\"href('market/discount/discount_manage_list')\">取消</el-button>\r\n              </el-form-item>\r\n            </div>\r\n            <div class=\"box\" v-if=\"isGoods\">\r\n              <el-form\r\n                class=\"item-form\"\r\n                size=\"small\"\r\n                :inline=\"true\"\r\n                :model=\"goodsFiltersDataCheck\">\r\n                <!-- 模糊查询 -->\r\n                <el-form-item prop=\"cateIdentifier\" clearable label=\"品类：\">\r\n                  <el-cascader\r\n                    class=\"input-w\"\r\n                    :options=\"classData\"\r\n                    v-model=\"cateArrs\"\r\n                    :value=\"cateArrs\"\r\n                    @change=\"cascaderGets\"\r\n                    :show-all-levels=\"false\"\r\n                    :props=\"props\"\r\n                    change-on-select\r\n                  ></el-cascader>\r\n                </el-form-item>\r\n                <el-form-item label=\"品牌：\">\r\n                  <el-select class=\"input-w\" filterable clearable placeholder=\"请选择\" v-model=\"goodsFiltersDataCheck.brandId\">\r\n                    <el-option\r\n                      v-for=\"item in brandOptions\"\r\n                      :key=\"item.id\"\r\n                      :label=\"item.name\"\r\n                      :value=\"item.id\"\r\n                    ></el-option>\r\n                  </el-select>\r\n                </el-form-item>\r\n                <el-form-item label=\"售价：\">\r\n                  <el-input placeholder=\"请输入售价最小值\" clearable  v-model=\"goodsFiltersDataCheck.retailPriceGE\" class=\"el-input-width155\"></el-input>\r\n                  <el-input placeholder=\"请输入售价最大值\" clearable  v-model=\"goodsFiltersDataCheck.retailPriceLE\" class=\"el-input-width155 ml-10\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"季节：\">\r\n                  <el-select v-model=\"goodsFiltersDataCheck.seasonalStyleCode\" clearable placeholder=\"请选择\">\r\n                    <el-option v-for=\"(item, index) in codeItem_list_get.data\" :key=\"index\" :label=\"item.name\" :value=\"item.code\"></el-option>\r\n                  </el-select>\r\n                </el-form-item>\r\n                <br/>\r\n                <el-form-item label=\"店内库存：\">\r\n                  <el-input placeholder=\"请输入库存最小值\" clearable  v-model=\"goodsFiltersDataCheck.quantityLowerLimit\" class=\"el-input-width155\"></el-input>\r\n                  <el-input placeholder=\"请输入库存最大值\" clearable  v-model=\"goodsFiltersDataCheck.quantityUpperLimit\" class=\"el-input-width155 ml-10\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"关键词：\">\r\n                  <el-input placeholder=\"请输入关键词，如：货号、款号、商品名称\" clearable  v-model=\"goodsFiltersDataCheck.searchWords\" class=\"el-input-width355\"></el-input>\r\n                </el-form-item>\r\n                <!-- 搜索，重置 -->\r\n                <el-form-item>\r\n                  <el-button size=\"small\" @click=\"handleSearchCheck\" type=\"primary\" plain>搜索</el-button>\r\n                  <el-button size=\"small\" @click=\"handleResetFiltersCheck\">重置</el-button>\r\n                </el-form-item>\r\n              </el-form>\r\n            </div>\r\n            <div class=\"box\" v-if=\"isGoods\">\r\n              <div class=\"item-table\">\r\n                <el-button size=\"small\" type=\"primary\" class=\"ml-20 mt-24\" @click=\"dialogTableVisible = true\">添加商品</el-button>\r\n                <el-table\r\n                    class=\"mt-20\"\r\n                  :data=\"goodsCheckList.data\"\r\n                  stripe\r\n                  empty-text=\"暂无数据\"\r\n                  header-align=\"center\"\r\n                  header-row-class-name=\"item-table-header\"\r\n                  :highlight-current-row=\"true\">\r\n                  <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"商品款号\" min-width=\"100\">\r\n                    <template  slot-scope=\"scope\">{{ scope.row.productCode|| '--' }}</template>\r\n                  </el-table-column>\r\n                  <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"商品货号\" min-width=\"100\">\r\n                    <template  slot-scope=\"scope\">{{ scope.row.code || '--' }}</template>\r\n                  </el-table-column>\r\n                  <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"品牌\" min-width=\"100\">\r\n                    <template  slot-scope=\"scope\">{{ scope.row.productBrandName || '--' }}</template>\r\n                  </el-table-column>\r\n                  <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"品类\" min-width=\"100\">\r\n                    <template  slot-scope=\"scope\">{{ scope.row.fullCateName || '--' }}</template>\r\n                  </el-table-column>\r\n                  <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"商品名称\" min-width=\"100\">\r\n                    <template  slot-scope=\"scope\">{{ scope.row.name || '--' }}</template>\r\n                  </el-table-column>\r\n                  <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"商品图片\" min-width=\"100\">\r\n                    <template  slot-scope=\"scope\"><img class=\"discountImg\" :src=\"scope.row.image\" alt=\"\"></template>\r\n                  </el-table-column>\r\n                  <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"店内库存\" min-width=\"100\">\r\n                    <template  slot-scope=\"scope\">{{ scope.row.stock === null ? '门店没有该商品' : scope.row.stock }}</template>\r\n                  </el-table-column>\r\n                  <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"售价\" min-width=\"100\">\r\n                    <template  slot-scope=\"scope\">{{ scope.row.retailPrice || '--'  }}</template>\r\n                  </el-table-column>\r\n                  <!-- 操作 -->\r\n                  <el-table-column\r\n                      fixed=\"right\"\r\n                      label-class-name=\"text-center\"\r\n                      class-name=\"text-center\"\r\n                      align=\"center\"\r\n                      label=\"操作\"\r\n                      width=\"180\">\r\n                      <template slot-scope=\"scope\">\r\n                        <el-button type=\"text\" size=\"small\" @click=\"marketingMiddleground_removeInSingleProduct(scope.row)\">剔除</el-button>\r\n                      </template>\r\n                  </el-table-column>\r\n                </el-table>\r\n                <div class=\"pagination mt-10 mb-20\">\r\n                  <!-- 分页 -->\r\n                  <el-pagination\r\n                      class=\"mr-20\"\r\n                      @size-change=\"handleSizeChangeCheck\"\r\n                      @current-change=\"handleCurrentChangeCheck\"\r\n                      :current-page=\"goodsFiltersDataCheck.pageIndex\"\r\n                      :page-sizes=\"[10,20,30,40,50]\"\r\n                      :page-size=\"goodsFiltersDataCheck.pageSize\"\r\n                      layout=\"total, sizes, prev, pager, next, jumper\"\r\n                      :total=\"goodsCheckList.totalCount\"\r\n                  ></el-pagination>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </template>\r\n      </el-form>\r\n   </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 季节列表\r\n      codeItem_list_get:[],\r\n      // 快速创建保留门店id\r\n      fastCreateStoreId:null,\r\n      // 快速创建剔除已有门店\r\n      fastCreateTF:true,\r\n      // 是否编辑\r\n      isEdit:this.$route.query.isEdit,\r\n      // 是否快速创建\r\n      isFastCreate:this.$route.query.isFastCreate,\r\n      // 单品商品信息是否存在\r\n      isGoods:false,\r\n      // 折扣id\r\n      discountId:this.$route.query.discountId,\r\n      // 弹框\r\n      dialogTableVisible:false,\r\n      // 全部商品\r\n      goodsList:{},\r\n      // 已添加\r\n      goodsCheckList:{},\r\n      // 新建折扣方案提交对象\r\n      discountData:{\r\n        // 折扣方案类型\r\n        type:null, \r\n        // 门店名称\r\n        storeName:null, \r\n        // 门店 id\r\n        storeId:null, \r\n        // 门店 id （备份），检验已有折扣时使用；\r\n        _storeId:null, \r\n        // 预约折扣类型\r\n        appointmentDiscountType:null,\r\n        // 预约折扣额度或折扣\r\n        appointmentDiscountEd:null,\r\n        // 阶梯折扣类型\r\n        ladderDiscountType:null, \r\n        // 阶梯折扣方式\r\n        ladderDiscountList:[],\r\n        // 单品折扣类型 \r\n        itemDiscountType:null, \r\n        // 单品折扣额度或折扣\r\n        itemDiscountEd:null \r\n      },\r\n      // 折扣校验\r\n      rules:{\r\n        // 门店校验\r\n        storeId: [{ required: true, validator: async (rule, value, callback) => {\r\n          var discountData = this.discountData;\r\n          if(!value) {\r\n            callback(new Error('请选择门店！'))\r\n          };\r\n          // 如果查询的门店id与当前选择的门店id一致，则折扣不再做检验；\r\n          if(discountData.storeId == discountData._storeId) {\r\n            var request = false;\r\n          }else{\r\n            var request = await this.request(\r\n              this.api.market.marketingMiddleground_confirmDiscountByStoreId,\r\n              {\r\n                \"storeId\": discountData.storeId,\r\n                \"type\": discountData.type,\r\n                discount:discountData.type == 2 ? discountData.itemDiscountEd : 0,\r\n                discountType:discountData.type == 2 ? discountData.itemDiscountType : 0\r\n              }\r\n            );\r\n          }\r\n          if(request.confirm) {\r\n            callback(new Error('已有折扣方案！'))\r\n          }else{\r\n            callback();\r\n          };\r\n        }, trigger: 'blur' }],\r\n        // 折扣类型校验\r\n        type: [{ required: true, message: '请选择折扣方案类型！', trigger: 'blur' }],\r\n        // 预约折扣类型校验\r\n        appointmentDiscountType: [{ required: true, message: '请选择预约折扣类型！', trigger: 'blur' }],\r\n        // 预约折扣或金额校验，首先不能为空，其次需要符合折扣金额的格式，如 3.2折；\r\n        appointmentDiscountEd: [{ required: true, validator: (rule, value, callback) => {\r\n          const appointmentDiscountType = this.discountData.appointmentDiscountType;\r\n          let re = /^\\d(\\.\\d?)?$/g;\r\n          let res = /^\\d+?$/g;\r\n          if(!value) {\r\n            var name = appointmentDiscountType ? '请输入折扣额度!' : '请输入减免金额!';\r\n            callback(new Error(name));\r\n          }\r\n          // 预约折扣类型为1，折扣额度数值检测\r\n          if(appointmentDiscountType) {\r\n            if(!re.test(value)) {\r\n              callback(new Error('请输入正确的折扣额度！'));\r\n            }else{\r\n              callback();\r\n            }\r\n          // 预约折扣类型为0，减免金额数值检测\r\n          }else{\r\n            if(!res.test(value)) {\r\n              callback(new Error('请输入正确的减免金额！'));\r\n            }else{\r\n              callback();\r\n            }\r\n          }\r\n        }, trigger: 'blur' }],\r\n        // 阶梯折扣类型校验\r\n        ladderDiscountType: [{ required: true, message: '请选择阶梯折扣类型！', trigger: 'blur' }],\r\n        // 阶梯折扣或金额校验\r\n        ladderDiscountList: [{ required: true, validator: (rule, arr, callback) => {\r\n          const discountType = this.discountData.ladderDiscountType;\r\n          let re = /^\\d(\\.\\d?)?$/g;\r\n          let res = /^\\d+?$/g;\r\n          if(!arr.length) {\r\n            callback(new Error('至少添加一条折扣方案！'));\r\n          };\r\n          var list = [];\r\n          // 将所有阶梯类型填写项添加到一个集合中，统一做判断\r\n          arr.forEach((item, index) => {\r\n            list.push(item.quantity);\r\n            list.push(item.value);\r\n          })\r\n          const someItem = list.every((item, index) => {\r\n            return item;\r\n          });\r\n          if(!someItem) {\r\n            callback(new Error('阶梯填写项不能为空！'));\r\n          }else{\r\n            // 判断满减打折，或满件打折，因为是两种规则，所有分别判断\r\n            if(discountType < 2) {\r\n              var quantityList = [];\r\n              var valueList = [];\r\n              // 将所有阶梯类型填写项添加到一个集合中，统一做判断\r\n              arr.forEach((item, index) => {\r\n                quantityList.push(item.quantity);\r\n                valueList.push(item.value);\r\n              })\r\n              var a = quantityList.every((item, index) => {\r\n                console.log(/^\\d+?$/g.test(item))\r\n                return /^\\d+?$/g.test(item);\r\n              })\r\n              if(!a) {\r\n                callback(new Error('请输入正确的折扣额度！'));\r\n              }\r\n              var b = valueList.every((item, index) => {\r\n                console.log(/^\\d(\\.\\d?)?$/g.test(item))\r\n                return /^\\d(\\.\\d?)?$/g.test(item);\r\n              })\r\n              if(!b) {\r\n                callback(new Error('请输入正确的折扣额度！'));\r\n              }\r\n            // 判断满数量减额，这里只有一种规则\r\n            }else{\r\n              let checkItem = list.every((item, index) => {\r\n                return /^\\d+?$/g.test(item);\r\n              })\r\n              if(!checkItem) {\r\n                callback(new Error('请输入正确的减免金额！'));\r\n              }\r\n            }\r\n          };\r\n          if(arr.length > 1) {\r\n            let deWeightItemArr = [];\r\n            let deWeightItemValueArr = [];\r\n            arr.forEach((item, index) => {\r\n              deWeightItemArr.push(item.quantity);\r\n              deWeightItemValueArr.push(item.value);\r\n            });\r\n            var nary = deWeightItemArr.sort();\r\n            var narys = deWeightItemValueArr.sort();\r\n            for(var i = 0; i < nary.length - 1; i++) {\r\n              if(nary[i] == nary[i + 1]) {\r\n                callback(new Error('同一门店、同一折扣类型，不能存在相同的折扣方案！'));\r\n              };\r\n            }\r\n            for(var i = 0; i < narys.length - 1; i++) {\r\n              if(narys[i] == narys[i + 1]) {\r\n                callback(new Error('同一门店、同一折扣类型，不能存在相同的折扣方案！'));\r\n              };\r\n            }\r\n          };\r\n          if(discountType == 3) {\r\n            var checkItemTF = arr.every((item, index) => {\r\n              return parseInt(item.quantity) >= parseInt(item.value)\r\n            });\r\n            if(!checkItemTF) {\r\n              callback(new Error('减免金额不能超过阶梯金额！'));\r\n            }else{\r\n              callback();\r\n            }\r\n          }else{\r\n            callback();\r\n          }\r\n        }, trigger: 'blur' }],\r\n        // 单品折扣类型校验\r\n        itemDiscountType: [{ required: true, message: '请选择单品折扣类型！', trigger: 'blur' }],\r\n        // 单品折扣或金额校验\r\n        itemDiscountEd: [{ required: true, validator: (rule, value, callback) => {\r\n          const itemDiscountType = this.discountData.itemDiscountType;\r\n          let re = /^\\d(\\.\\d?)?$/g;\r\n          let res = /^\\d+?$/g;\r\n          if(!value) {\r\n            var names = itemDiscountType ? '请输入折扣额度!' : '请输入减免金额!';\r\n            callback(new Error(names));\r\n          }\r\n          // 预约折扣类型为1，折扣额度数值检测\r\n          if(itemDiscountType) {\r\n            if(!re.test(value)) {\r\n              callback(new Error('请输入正确的折扣额度！'));\r\n            }else{\r\n              callback();\r\n            }\r\n          // 预约折扣类型为0，减免金额数值检测\r\n          }else{\r\n            if(!res.test(value)) {\r\n              callback(new Error('请输入正确的减免金额！'));\r\n            }else{\r\n              callback();\r\n            }\r\n          }\r\n        }, trigger: 'blur' }],\r\n      },\r\n      // 检索全部商品\r\n      goodsFiltersData:{\r\n        // 当前页码\r\n        pageIndex: 1,\r\n        // 每页数量\r\n        pageSize: 10,\r\n        // 门店id\r\n        storeId:null,\r\n        // 折扣类型\r\n        type:null,\r\n        // 折扣值\r\n        discount:null,\r\n        // 品类id\r\n        cateIdentifier:null,\r\n        // 品牌id\r\n        brandId:null,\r\n        // 售价最小值\r\n        retailPriceGE:null, \r\n        // 售价最大值\r\n        retailPriceLE:null, \r\n        // 库存最小值\r\n        quantityLowerLimit:null, \r\n        // 库存最大值\r\n        quantityUpperLimit:null, \r\n        // 季节\r\n        seasonalStyleCode:null,\r\n        // 关键词\r\n        searchWords:null \r\n      },\r\n      // 全部品牌\r\n      brandOptions:[],\r\n      // 检索已选商品\r\n      goodsFiltersDataCheck:{\r\n        // 当前页码\r\n        pageIndex: 1,\r\n        // 每页数量\r\n        pageSize: 10,\r\n        // 折扣id\r\n        discountId:null,\r\n        // 品类id\r\n        cateId:null,\r\n        // 品类id\r\n        cateIdentifier:null,\r\n        // 品牌id\r\n        brandId:null,\r\n        // 售价最小值\r\n        retailPriceGE:null, \r\n        // 售价最大值\r\n        retailPriceLE:null, \r\n        // 库存最小值\r\n        quantityLowerLimit:null, \r\n        // 库存最大值\r\n        quantityUpperLimit:null, \r\n        // 季节\r\n        seasonalStyleCode:null,\r\n        // 关键词 \r\n        searchWords:null \r\n      },\r\n      // 单品折扣列表\r\n      itemDiscountData:{\r\n        data:[]\r\n      },\r\n      // 门店列表\r\n      storeList:{},\r\n      // 折扣类型\r\n      discountType:[\r\n        '预约折扣',\r\n        '阶梯折扣',\r\n        '单品折扣'\r\n      ],\r\n      // 预约折扣类型\r\n      appointmentDiscountType:[\r\n        '预约减免指定金额',\r\n        '预约折上折'\r\n      ],\r\n       // 预约折扣类型\r\n      ladderDiscountType:[\r\n        '满数量打折',\r\n        '满金额打折',\r\n        '满数量减免指定金额',\r\n        '满金额减免指定金额'\r\n      ],\r\n      // 单品折扣类型\r\n      itemDiscountType:[\r\n        '定价促销',\r\n        '单品折扣'\r\n      ],\r\n      classData: [],\r\n      classList: [],\r\n      cateArr: [],\r\n      cateArrs: [],\r\n      props: {\r\n        value: \"id\",\r\n        label: \"name\",\r\n        children: \"children\"\r\n      }\r\n    };\r\n  },\r\n  created() {\r\n    var that = this;\r\n    this.getClassData(); // 获取商品\r\n    this.codeItem_list(); // 获取季节列表\r\n    this.getStoreList(); // 获取门店列表\r\n    this.getBrandOptions(); // 获取品牌\r\n    if(this.isEdit || this.isFastCreate) {\r\n      this.discountData.type = this.$route.query.type;\r\n      switch(this.$route.query.type) {\r\n        case 0:\r\n          this.marketingMiddleground_queryDiscountSetting();\r\n          break;\r\n        case 1:\r\n          this.marketingMiddleground_queryDiscountParameter();\r\n          break;\r\n        case 2:\r\n          this.marketingMiddleground_querySingleProductDiscount();\r\n          break;\r\n      }\r\n    };\r\n    document.onkeydown = function(e) {\r\n         var key = window.event.keyCode;\r\n         if (key == 13) {\r\n            if(that.dialogTableVisible) {\r\n              that.handleSearch();\r\n            }else{\r\n              that.handleSearchCheck();\r\n            }\r\n         }\r\n      };\r\n  },\r\n  mounted() {},\r\n  methods: {\r\n    /**\r\n     * （获取季节）\r\n     */\r\n    codeItem_list(item) {\r\n      const that = this;\r\n\r\n      this.request(\r\n        this.api.market.codeItem_list,\r\n        {\r\n          codeSetId:'06b11574-ef82-4ae4-a8a9-a25f903083df'\r\n        },\r\n        true\r\n      ).then(res => {\r\n        that.codeItem_list_get = res;\r\n      });\r\n    },\r\n    /**\r\n     * 获取品牌\r\n     */\r\n    getBrandOptions() {\r\n      this.request(\r\n        this.api.product.productBrand_list,\r\n        {},\r\n        true\r\n        ).then(data => {\r\n          let _data = data.data;\r\n          this.brandOptions = _data;\r\n      });\r\n    },\r\n    /**\r\n     * 获取分类\r\n     */\r\n    getClassData() {\r\n      //分类类型（1：标准分类，2：定制分类，3：原料分类或者称为属性分类）\r\n      this.$common.getClassSelect(this, 1).then(res => {\r\n        this.classData = res.ztree;\r\n        this.classList = res.list;\r\n      });\r\n    },\r\n    /**\r\n     * \r\n     */\r\n    cascaderGet(e) {\r\n      let cateId = JSON.parse(JSON.stringify(e)).pop();\r\n      let obj = this.classList.find(item => item.id == cateId);\r\n      this.goodsFiltersData.cateIdentifier = obj.identifier;\r\n    },\r\n    /**\r\n     * \r\n     */\r\n    cascaderGets(e) {\r\n      let cateId = JSON.parse(JSON.stringify(e)).pop();\r\n      let obj = this.classList.find(item => item.id == cateId);\r\n      this.goodsFiltersDataCheck.cateIdentifier = obj.identifier;\r\n    },\r\n    /**\r\n     * 删除某个阶梯\r\n     */\r\n    deleteLadderItem(index) {\r\n      this.discountData.ladderDiscountList.splice(index,1);\r\n    },\r\n    /**\r\n     * （单品全部添加）\r\n     */\r\n    marketingMiddleground_addPageSingleProduct() {\r\n      const that = this;\r\n      const discountData = this.discountData;\r\n      const data = {\r\n        \"discountId\": this.discountId,\r\n        \"goodsCodeList\": [],\r\n        \"storeId\": discountData.storeId\r\n      };\r\n      this.goodsList.data.forEach((item, index) => {\r\n        if(item.currentDiscount === null) {\r\n          data.goodsCodeList.push(item.code)\r\n        }\r\n      });\r\n      this.request(\r\n        this.api.market.marketingMiddleground_addPageSingleProduct,\r\n        data,\r\n        true\r\n      ).then(res => {\r\n        this.warn('本页全部商品添加成功！');\r\n        that.marketingMiddleground_listProduct();\r\n        that.marketingMiddleground_listSingleProduct();\r\n      });\r\n    },\r\n    /**\r\n     * （单品添加）\r\n     */\r\n    marketingMiddleground_addStatelessSingleProduct(item) {\r\n      const that = this;\r\n      const discountData = this.discountData;\r\n\r\n      this.request(\r\n        this.api.market.marketingMiddleground_addStatelessSingleProduct,\r\n        {\r\n          discountId:this.discountId,\r\n          goodsCode:item.code\r\n        },\r\n        true\r\n      ).then(res => {\r\n        this.warn('商品添加成功！');\r\n        that.marketingMiddleground_listProduct();\r\n        that.marketingMiddleground_listSingleProduct();\r\n      });\r\n    },\r\n    /**\r\n     * （单品从列表内剔除）\r\n     */\r\n    marketingMiddleground_removeInSingleProduct(item) {\r\n      const that = this;\r\n      const discountData = this.discountData;\r\n\r\n      this.request(\r\n        this.api.market.marketingMiddleground_removeInSingleProduct,\r\n        {\r\n          discountId:this.discountId,\r\n          goodsCode:item.code\r\n        },\r\n        true\r\n      ).then(res => {\r\n        this.warn('剔除成功！');\r\n        that.marketingMiddleground_listProduct();\r\n        that.marketingMiddleground_listSingleProduct();\r\n      });\r\n    },\r\n    /**\r\n     * （单品切换到当前折扣）\r\n     */\r\n    marketingMiddleground_addOtherInSingleProduct(item) {\r\n      const that = this;\r\n      const discountData = this.discountData;\r\n\r\n      this.request(\r\n        this.api.market.marketingMiddleground_addOtherInSingleProduct,\r\n        {\r\n          sourceDiscountId:item.sourceDisocuntId,\r\n          goodsCode:item.code,\r\n          targetDiscountId:this.discountId\r\n        },\r\n        true\r\n      ).then(res => {\r\n        this.warn('已切换到当前折扣！');\r\n        that.marketingMiddleground_listProduct();\r\n        that.marketingMiddleground_listSingleProduct();\r\n      });\r\n    },\r\n    /**\r\n     * （已选商品）\r\n     */\r\n    marketingMiddleground_listSingleProduct() {\r\n      const that = this;\r\n      const discountData = this.discountData;\r\n      \r\n      Object.assign(this.goodsFiltersDataCheck, {\r\n        storeId:discountData.storeId,\r\n        discountId:this.discountId\r\n      });\r\n      this.request(\r\n        this.api.market.marketingMiddleground_listSingleProduct,\r\n        this.goodsFiltersDataCheck,\r\n        true\r\n      ).then(res => {\r\n        that.goodsCheckList = res;\r\n      });\r\n    },\r\n    /**\r\n     * （全部商品）\r\n     */\r\n    marketingMiddleground_listProduct() {\r\n      const that = this;\r\n      const discountData = this.discountData;\r\n\r\n      Object.assign(this.goodsFiltersData, {\r\n        storeId:discountData.storeId,\r\n        type:discountData.itemDiscountType,\r\n        discount:discountData.itemDiscountEd\r\n      }); \r\n      this.request(\r\n        this.api.market.marketingMiddleground_listProduct,\r\n        this.goodsFiltersData,\r\n        true\r\n      ).then(res => {\r\n        that.goodsList = res;\r\n      });\r\n    },\r\n    /**\r\n     * （query）查询预约折扣方案\r\n     */\r\n    marketingMiddleground_queryDiscountSetting() {\r\n      const that = this;\r\n      const discountData = this.discountData;\r\n\r\n      this.request(\r\n        this.api.market.marketingMiddleground_queryDiscountSetting,\r\n        {\r\n          id:this.discountId\r\n        },\r\n        true\r\n      ).then(res => {\r\n        if(that.isFastCreate) {\r\n          this.fastCreateStoreId = res.storeId;\r\n          res.storeId = null;\r\n          res.storeName = null;\r\n        };\r\n        \r\n        Object.assign(that.discountData, {\r\n          storeName:res.storeName, // 门店名称\r\n          storeId:res.storeId, // 门店 id\r\n          _storeId:res.storeId, // 门店 id （备份），检验已有折扣时使用；\r\n          appointmentDiscountType:res.type,// 预约折扣类型\r\n          appointmentDiscountEd:res.value,// 预约折扣额度\r\n        })\r\n      });\r\n    },\r\n    /**\r\n     * （query）查询阶梯折扣方案\r\n     */\r\n    marketingMiddleground_queryDiscountParameter() {\r\n      const that = this;\r\n      const discountData = this.discountData;\r\n\r\n      this.request(\r\n        this.api.market.marketingMiddleground_queryDiscountParameter,\r\n        {\r\n          id:this.discountId\r\n        },\r\n        true\r\n      ).then(res => {\r\n        var ladderDiscountType = null;\r\n        var otherDiscount = res.otherDiscount && res.otherDiscount[0];\r\n\r\n        if(otherDiscount.discountType === 0 && otherDiscount.type === 0) {\r\n          ladderDiscountType = 3;\r\n        }else if(otherDiscount.discountType === 0 && otherDiscount.type === 1) {\r\n          ladderDiscountType = 1;\r\n        }else if(otherDiscount.discountType === 1 && otherDiscount.type === 0) {\r\n          ladderDiscountType = 2;\r\n        }else if(otherDiscount.discountType === 1 && otherDiscount.type === 1) {\r\n          ladderDiscountType = 0;\r\n        };\r\n\r\n        if(that.isFastCreate) {\r\n          this.fastCreateStoreId = res.storeId;\r\n          res.storeId = null;\r\n          res.storeName = null;\r\n        };\r\n\r\n        Object.assign(that.discountData, {\r\n          storeName:res.storeName, // 门店名称\r\n          storeId:res.storeId, // 门店 id\r\n          _storeId:res.storeId, // 门店 id （备份），检验已有折扣时使用；\r\n          ladderDiscountType, // 阶梯折扣类型\r\n          ladderDiscountList:res.otherDiscount,// 预约折扣方式\r\n        })\r\n      });\r\n    },\r\n    /**\r\n     * （query）查询单品折扣方案\r\n     */\r\n    marketingMiddleground_querySingleProductDiscount() {\r\n      const that = this;\r\n      const discountData = this.discountData;\r\n\r\n      this.request(\r\n        this.api.market.marketingMiddleground_querySingleProductDiscount,\r\n        {\r\n          id:this.discountId\r\n        },\r\n        true\r\n      ).then(res => {\r\n        if(that.isFastCreate) {\r\n          this.fastCreateStoreId = res.storeId;\r\n          res.storeId = null;\r\n          res.storeName = null;\r\n        };\r\n        Object.assign(that.discountData, {\r\n          storeName:res.storeName, // 门店名称\r\n          storeId:res.storeId, // 门店 id\r\n          _storeId:res.storeId, // 门店 id （备份），检验已有折扣时使用；\r\n          itemDiscountType:res.type,// 预约折扣类型\r\n          itemDiscountEd:res.discount,// 预约折扣额度\r\n        });\r\n        // 快速创建不展示商品\r\n        if(that.isFastCreate) return;\r\n        that.isGoods = true;\r\n        that.marketingMiddleground_listSingleProduct(); // 查询已添加商品\r\n        that.marketingMiddleground_listProduct(); // 查询全部商品\r\n      });\r\n    },\r\n    /**\r\n     * 新建或更新（预约）折扣方案\r\n     */\r\n    createAppointmentDiscount() {\r\n      const that = this;\r\n      const discountData = this.discountData;\r\n      const url =  this.isEdit \r\n        ? this.api.market.marketingMiddleground_updateDiscountSetting // 更新预约折扣\r\n        : this.api.market.marketingMiddleground_createDiscountSetting; // 新建预约折扣\r\n\r\n      this.request(\r\n        url,\r\n        {\r\n          \"storeId\": discountData.storeId, // 门店id\r\n          \"storeName\": discountData.storeName, // 门店名称\r\n          \"type\": discountData.appointmentDiscountType, // 0：满，1：打折。\r\n          \"value\": discountData.appointmentDiscountEd, // value\r\n          \"id\":this.discountId\r\n        },\r\n        true\r\n      ).then(res => {\r\n        if(this.discountId) {\r\n          this.warn('更新成功！')\r\n        }else{\r\n          this.warn('创建成功！')\r\n        };\r\n        this.href('market/discount/discount_manage_list');\r\n      });\r\n    },\r\n    /**\r\n     * 新建或更新（阶梯）折扣方案\r\n     */\r\n    createLadderDiscount() {\r\n      const that = this;\r\n      const discountData = this.discountData;\r\n      const url =  this.isEdit \r\n        ? this.api.market.marketingMiddleground_updateDiscountParameterS // 更新阶梯折扣\r\n        : this.api.market.marketingMiddleground_createDiscountParameter;// 新建阶梯折扣\r\n      const data =  {\r\n        \"storeDiscountParameterVOS\": discountData.ladderDiscountList,\r\n        \"storeId\": discountData.storeId,\r\n        \"storeName\": discountData.storeName,\r\n        \"id\":this.discountId\r\n      };\r\n      // 请求\r\n      this.request(\r\n        url,\r\n        data,\r\n        true\r\n      ).then(res => {\r\n        if(this.discountId) {\r\n          this.warn('更新成功！')\r\n        }else{\r\n          this.warn('创建成功！')\r\n        };\r\n        this.href('market/discount/discount_manage_list');\r\n      });\r\n    },\r\n    /**\r\n     * 新建或更新（单品）折扣方案\r\n     */\r\n    createItemDiscount() {\r\n      const that = this;\r\n      const discountData = this.discountData;\r\n      const url =  this.isEdit \r\n        ? this.api.market.marketingMiddleground_updateSingleProductDiscount // 更新单品折扣\r\n        : this.api.market.marketingMiddleground_createSingleProductDiscount;// 新建单品折扣\r\n      const data = {\r\n        \"createWayType\": this.isFastCreate ? 1 : 0, // 区分营销中台-正常创建：0，还是快速创建：1\r\n        \"discount\": discountData.itemDiscountEd, // 折扣 ?  \r\n        \"platformType\": 1, // 平台类型（0：APP，1：中台）\r\n        \"storeId\": discountData.storeId,\r\n        \"storeName\": discountData.storeName,\r\n        \"type\": discountData.itemDiscountType, // 减金额打折类型(0:满减，1:打折)\r\n        \"sourceId\": this.discountId, // 营销中台-快速创建-源门店单品折扣ID ?\r\n        \"id\":this.discountId\r\n      };\r\n      this.request(\r\n        url,\r\n        data,\r\n        true\r\n      ).then(res => {\r\n        if(that.isEdit) {\r\n          that.warn('更新成功！');\r\n          that.marketingMiddleground_listProduct();\r\n        }else{\r\n          that.warn('创建成功！');\r\n          this.discountId = res.id;\r\n          that.isGoods = true;\r\n          that.isEdit = true;\r\n          that.marketingMiddleground_listProduct();\r\n          that.marketingMiddleground_listSingleProduct();\r\n        };\r\n      });\r\n    },\r\n    /**\r\n     * 改变阶梯方案\r\n     */\r\n    changeLadderDiscountType() {\r\n      this.discountData.ladderDiscountList = [];\r\n    },\r\n    /**\r\n     * 新增阶梯方案\r\n     */\r\n    createLadder() {\r\n      let discountData = this.discountData;\r\n      let ladderDiscountType = discountData.ladderDiscountType;\r\n      // 设置完阶梯折扣方案，才能添加阶梯\r\n      if(ladderDiscountType === null) {\r\n        this.warn('请先选择阶梯折扣类型！','warning');\r\n        return;\r\n      };\r\n      // 添加\r\n      discountData.ladderDiscountList.push({\r\n        \"discountType\": ladderDiscountType == 0 ||  ladderDiscountType == 2 ? 1 : 0, // 折扣类型（0，满金额减免，1，满数量减免）\r\n        \"quantity\": null,\r\n        \"type\":  ladderDiscountType == 0 || ladderDiscountType == 1 ? 1 : 0, // 判断满减还是打折类型（0:满减，1:打折）\r\n        \"value\": null,\r\n        \"id\":this.discountId &&  this.discountId \r\n      });\r\n    },\r\n    /**\r\n     * 选择适用门店时\r\n     */\r\n    changeStore(id) {\r\n      var item = this.storeList.data.find((v, i) => {\r\n          return id == v.id;\r\n      })\r\n      this.discountData.storeName = item.name;\r\n    \r\n      console.log(item.name)\r\n    },\r\n    /**\r\n     * 门店下拉框下拉或隐藏时\r\n     */\r\n    visibleChange() {\r\n      if(this.fastCreateTF) {\r\n        if(this.isFastCreate) {\r\n          var index = this.storeList.data.findIndex((v, i) => {\r\n            return this.fastCreateStoreId == v.id;\r\n          })\r\n          this.storeList.data.splice(index, 1);\r\n          this.fastCreateTF = false;\r\n        }\r\n      }\r\n    },\r\n    /**\r\n     * 新建或更新折扣方案\r\n     */\r\n    saveDiscount() {\r\n      const that = this;\r\n      const discountData = this.discountData;\r\n      this.$refs.formName.validate((v) => {\r\n        if (v) {\r\n          // 把对象中所有的不规范折扣数值清除，如：3. 3.22，=> 处理成3 3.2；\r\n          // /(\\d\\.\\D)|(\\d\\.\\d{2})/g \r\n          this.discountData = JSON.parse(JSON.stringify(discountData).replace(/(\\d\\.\\D)|(\\d\\.\\d{2})/g,(value) => {\r\n            value = value.replace(/(\\.\\D)/,'\"');\r\n            value = value.replace(/(\\d$)/,'');\r\n            return value;\r\n          }));\r\n          console.log(this.discountData);\r\n          // return;\r\n          switch(discountData.type) {\r\n            // 新建或更新预约折扣\r\n            case 0:\r\n              this.createAppointmentDiscount();\r\n              break;\r\n            // 新建或更新阶梯折扣\r\n            case 1:\r\n              this.createLadderDiscount();\r\n              break;\r\n            // 新建或更新单品折扣\r\n            case 2:\r\n              this.createItemDiscount();\r\n              break;\r\n          }\r\n        } else {\r\n          let type = this.discountData.type;\r\n          let discountName = '';\r\n          switch(type) {\r\n            case 0:\r\n              discountName = '预约折扣';\r\n              break;\r\n            case 1:\r\n              discountName = '阶梯折扣';\r\n              break;\r\n            case 2:\r\n              discountName = '单品折扣';\r\n              break;\r\n          };\r\n          // this.warn(`新建${discountName}信息未填写完整，请填写完整后重试！`,'warning');\r\n          return;\r\n        }\r\n      }); \r\n    },\r\n    /**\r\n     * 查询门店列表\r\n     */\r\n    getStoreList() {\r\n        const that = this;\r\n\r\n        this.request(\r\n        that.api.store.storeBasic_list,\r\n        {\r\n          pricingPower:0\r\n        },\r\n        true\r\n        ).then(res => {\r\n          that.storeList = res;\r\n        });\r\n    },\r\n    /**\r\n     * 提示\r\n     * @param { String } message 提示文案\r\n     * @param { String } type 提示类型\r\n     */\r\n    warn(message, type) {\r\n      this.$message({\r\n        message: message,\r\n        type: type || 'success'\r\n      });\r\n    },\r\n    /**\r\n     * 跳转\r\n     * @param { String } routeName 路由跳转名字\r\n     */\r\n    href(routeName) {\r\n      this.$router.push({\r\n        path: `/${routeName}`\r\n      });\r\n    },\r\n   /**\r\n     * 模糊搜索\r\n     */\r\n    handleSearch() {\r\n        this.goodsFiltersData.pageIndex = 1;\r\n        this.goodsFiltersData.searchWords = this.goodsFiltersData.searchWords && this.goodsFiltersData.searchWords.replace(/(^\\s)|(\\s$)/g, '');\r\n        this.marketingMiddleground_listProduct();\r\n    },\r\n     /**\r\n     * 模糊搜索\r\n     */\r\n    handleSearchCheck() {\r\n        this.goodsFiltersDataCheck.pageIndex = 1;\r\n        this.goodsFiltersDataCheck.searchWords = this.goodsFiltersDataCheck.searchWords && this.goodsFiltersDataCheck.searchWords.replace(/(^\\s)|(\\s$)/g, '');\r\n        this.marketingMiddleground_listSingleProduct();\r\n    },\r\n    /**\r\n     * 搜索重置\r\n     */\r\n    handleResetFilters() {\r\n      Object.assign(this.goodsFiltersData,{\r\n        pageIndex: 1,// 当前页码\r\n        pageSize: 10,// 每页数量\r\n        storeId:null,\r\n        type:null,\r\n        discount:null,\r\n        cateIdentifier:null,// 品类id\r\n        brandId:null,// 品牌id\r\n        retailPriceGE:null, // 售价最小值\r\n         retailPriceLE:null, // 售价最大值\r\n        quantityLowerLimit:null, // 库存最小值\r\n        quantityUpperLimit:null, // 库存最大值\r\n        seasonalStyleCode:null, // 季节\r\n        searchWords:null // 关键词\r\n      });\r\n      this.cateArr = [];\r\n    },\r\n    /**\r\n     * 点击页数\r\n     * @param { Number } pageIndex 当前页\r\n     */\r\n    handleCurrentChange(pageIndex){\r\n        this.goodsFiltersData.pageIndex = pageIndex;\r\n        if(!this.discountData.itemDiscountEd) {\r\n          this.warn('请填写折扣额度或金额！','warning');\r\n          return;\r\n        };\r\n        this.marketingMiddleground_listProduct();\r\n    },\r\n    /**\r\n     *  选择每页多少条数\r\n     *  @param { Number } pageSize 每页条数\r\n     */\r\n    handleSizeChange(pageSize){\r\n        this.goodsFiltersData.pageSize = pageSize;  \r\n        if(!this.discountData.itemDiscountEd) {\r\n          this.warn('请填写折扣额度或金额！','warning');\r\n          return;\r\n        };\r\n        this.marketingMiddleground_listProduct();\r\n    },\r\n    /**\r\n     * 搜索重置\r\n     */\r\n    handleResetFiltersCheck() {\r\n        Object.assign(this.goodsFiltersDataCheck,{\r\n        // 当前页码\r\n        pageIndex: 1,\r\n        // 每页数量\r\n        pageSize: 10,\r\n        // 折扣id\r\n        discountId:null,\r\n        // 品类id\r\n        cateId:null,\r\n        // 品类id\r\n        cateIdentifier:null,\r\n        // 品牌id\r\n        brandId:null,\r\n        // 售价最小值\r\n        retailPriceGE:null, \r\n        // 售价最大值\r\n        retailPriceLE:null, \r\n        // 库存最小值\r\n        quantityLowerLimit:null, \r\n        // 库存最大值\r\n        quantityUpperLimit:null, \r\n        // 季节\r\n        seasonalStyleCode:null,\r\n        // 关键词 \r\n        searchWords:null \r\n      });\r\n        this.cateArrs = [];\r\n    },\r\n    /**\r\n     * 点击页数\r\n     * @param { Number } pageIndex 当前页\r\n     */\r\n    handleCurrentChangeCheck(pageIndex){\r\n      this.goodsFiltersDataCheck.pageIndex = pageIndex;\r\n      this.marketingMiddleground_listSingleProduct();\r\n    },\r\n    /**\r\n     *  选择每页多少条数\r\n     *  @param { Number } pageSize 每页条数\r\n     */\r\n    handleSizeChangeCheck(pageSize){\r\n      this.goodsFiltersDataCheck.pageSize = pageSize;  \r\n      this.marketingMiddleground_listSingleProduct();\r\n    },\r\n  },\r\n  components: {}\r\n};\r\n</script>\r\n<style  lang=\"less\" scoped>\r\n  .box{\r\n    padding: 20px 20px 20px 20px;\r\n    margin: 8px 8px 0 8px;\r\n    background: #fff;\r\n  }\r\n  .el-input-short{\r\n    width: 300px;\r\n  }\r\n  .el-input-mini{\r\n    width: 90px;\r\n  }\r\n  .mlr10px{\r\n    margin: 0 10px;\r\n  }\r\n  .addRadder{\r\n    border-radius: 4px;\r\n    border: 1px solid #DCDFE6;\r\n    width: 400px;\r\n    padding: 15px;\r\n  }\r\n  .mb-10{\r\n    margin-bottom: 10px;\r\n  }\r\n  .mb-100{\r\n    margin-bottom: 100px;\r\n  }\r\n  .ml-10{\r\n    margin-left: 10px;\r\n  }\r\n  .mt-74{\r\n    margin-top: 74px;\r\n  }\r\n  .el-input-width155{\r\n    width:300px;\r\n  }\r\n  .el-input-width355{\r\n    width: 355px;\r\n  }\r\n  .el-input__inners{\r\n    width: 300px;\r\n  }\r\n  .el-dialog__wrapper /deep/ .el-dialog{\r\n    width: 80%;\r\n  }\r\n  .discountImg{\r\n    width: 40px;\r\n    height: 40px;\r\n  }\r\n</style>\r\n\r\n\r\n"]}]}