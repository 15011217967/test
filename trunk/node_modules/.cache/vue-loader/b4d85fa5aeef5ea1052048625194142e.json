{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\collocation\\components\\CheckTags.vue?vue&type=style&index=0&id=b93fedc8&lang=less&scoped=true&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\collocation\\components\\CheckTags.vue","mtime":1572415125602},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\css-loader\\index.js","mtime":1558492728478},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1558492728890},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\postcss-loader\\src\\index.js","mtime":1558492728823},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\less-loader\\dist\\cjs.js","mtime":1566193719488},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["\n.check-tabs{\n  .check-tabs-item{display: flex;\n    .label{display: inline-block;width: 120px;line-height: 24px;text-align: right;}\n    ul{flex: 1;\n      li{float: left;height: 24px;line-height: 24px;padding: 0 5px;border-radius: 12px;margin-right: 15px;margin-bottom: 15px;cursor: pointer;font-size: 12px;box-shadow: 0 0 5px rgba(153, 153, 153, 0.3)}\n      li.active{background-color: rgba(25, 158, 216, 1); color: #fff;box-shadow: 0 0 5px rgba(34, 144, 232, 1);}\n    }\n  }\n  .page-more{border-top: 1px solid #e6e8ed;margin-top: 10px;\n    div.btn{\n      width: 120px;border: 1px solid #e6e8ed;border-top: 1px solid #fff;margin: -1px auto 0;text-align: center;font-size: 12px;cursor: pointer;line-height: 30px;\n    }\n  }\n}\n",{"version":3,"sources":["CheckTags.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CheckTags.vue","sourceRoot":"src/views/collocation/components","sourcesContent":["<style lang=\"less\" scoped>\r\n  .check-tabs{\r\n    .check-tabs-item{display: flex;\r\n      .label{display: inline-block;width: 120px;line-height: 24px;text-align: right;}\r\n      ul{flex: 1;\r\n        li{float: left;height: 24px;line-height: 24px;padding: 0 5px;border-radius: 12px;margin-right: 15px;margin-bottom: 15px;cursor: pointer;font-size: 12px;box-shadow: 0 0 5px rgba(153, 153, 153, 0.3)}\r\n        li.active{background-color: rgba(25, 158, 216, 1); color: #fff;box-shadow: 0 0 5px rgba(34, 144, 232, 1);}\r\n      }\r\n    }\r\n    .page-more{border-top: 1px solid #e6e8ed;margin-top: 10px;\r\n      div.btn{\r\n        width: 120px;border: 1px solid #e6e8ed;border-top: 1px solid #fff;margin: -1px auto 0;text-align: center;font-size: 12px;cursor: pointer;line-height: 30px;\r\n      }\r\n    }\r\n  }\r\n</style>\r\n<template>\r\n  <div class=\"check-tabs\">\r\n    <div class=\"check-tabs-item\" v-for=\"group in listDataFilter()\" v-if=\"group.collocationTagItems.length > 0\">\r\n      <div class=\"label\">{{ group.name }}：</div>\r\n      <ul class=\"clearfix\">\r\n        <li v-for=\"(item, index) in group.collocationTagItems\" :key=\"index\" @click=\"checkItem(item)\" :class=\"{active: item.checkFlag}\">{{ item.tagName }}</li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"page-more\" v-if=\"listData.length > 2\">\r\n      <div @click=\"getMoreTags\" class=\"btn\">\r\n        更多匹配标签 <i :class=\"{'el-icon-arrow-down' : !isShowMore, 'el-icon-arrow-up' : isShowMore }\"></i>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n  export default {\r\n    name: 'check-tabs',\r\n    props: {\r\n      // 选中的数据\r\n      checkedData: {\r\n        type: Array,\r\n        default() {\r\n          return []\r\n        }\r\n      }\r\n    },\r\n    // 数据\r\n    data() {\r\n      return {\r\n        listData: [],\r\n        isShowMore: false\r\n      }\r\n    },\r\n    // 组件\r\n    components: {},\r\n    // 初始化数据\r\n    mounted() {\r\n      this.$nextTick(() => {\r\n        this.getTagGroupList()\r\n      })\r\n    },\r\n    // 方法\r\n    methods: {\r\n      // 选择\r\n      checkItem(item){\r\n        if(item.checkFlag === undefined){\r\n          this.$set(item, 'checkFlag', '');\r\n        }\r\n        if(!item.checkFlag){\r\n          item.checkFlag = true;\r\n          this.checkedData.push(item.tagId);\r\n        }else {\r\n          item.checkFlag = false;\r\n          let i = this.checkedData.findIndex(tab => {\r\n            return item.tagId === tab\r\n          });\r\n          this.checkedData.splice(i, 1);\r\n        }\r\n      },\r\n      // 获取查询标签\r\n      getTagGroupList(){\r\n        this.request(this.api.collocation.collocationTagGroup_list, {subset: true, valid: true}).then(data => {\r\n          this.listData = data.data;\r\n        });\r\n      },\r\n      // 获取更多标签\r\n      getMoreTags() {\r\n        this.isShowMore = !this.isShowMore;\r\n      },\r\n      listDataFilter(){\r\n        if(!this.isShowMore){\r\n          return this.listData.filter((item, index) => {\r\n            return index < 2\r\n          })\r\n        }else {\r\n          return this.listData\r\n        }\r\n      },\r\n      /**\r\n       * Methods (组件方法)\r\n       */\r\n      // 清空选择\r\n      clearChecked(){\r\n        if(this.listData.length){\r\n          // 清除样式\r\n          this.listData.forEach(item => {\r\n            if(item.collocationTagItems.length){\r\n              item.collocationTagItems.forEach(tags => {\r\n                if(tags.checkFlag === undefined){\r\n                  this.$set(item, 'checkFlag', false);\r\n                }else{\r\n                  tags.checkFlag = false\r\n                }\r\n              })\r\n            }\r\n          })\r\n        }\r\n        // 清空数组\r\n        this.checkedData.length = 0\r\n      }\r\n    },\r\n    // 计算属性\r\n    computed: {},\r\n    // 监听数据变化\r\n    watch: {\r\n     /* checkedData: {\r\n        handler(newVal, oldVal) {\r\n\r\n        },\r\n        deep: true\r\n      }*/\r\n    }\r\n  }\r\n</script>\r\n"]}]}