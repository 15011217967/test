{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\fmis\\cycle\\cycle.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\fmis\\cycle\\cycle.vue","mtime":1572415124937},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { constants } from \"crypto\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      signData: {\r\n        //组织机构Id集合(包括直属机构还有关联机构)\r\n        organizationIds:[],\r\n        //当前页数\r\n        pageIndex: 1,\r\n        //每页要显示的数据条数,默认10条\r\n        pageSize: 10\r\n      },\r\n      //得到权限Code\r\n      codeData: [],\r\n      //存储表格选择项改变时的数据\r\n      multipleSelectionData: [],\r\n      //表格数据\r\n      tableData: [],\r\n      //总条数\r\n      totalCount: 1,\r\n      //标识是否显示新增对账周期表单\r\n      showCycleFrom: false,\r\n      //新增表单数据\r\n      cycleFromData: {\r\n        //对账周期名称\r\n        name:'',\r\n        //对账周期Code\r\n        taskCode:'',\r\n        //店铺类型Code\r\n        merchantType: \"\",\r\n        //上传给后台的自定义日期\r\n        nodeDays:'',\r\n        //标识选择的结算日期\r\n        tagDays: [],\r\n        //适用门店Id\r\n        merchantId: '',\r\n        //适用门店name\r\n        merchant:'',\r\n        //组织机构id\r\n        organizationId:'',\r\n      },\r\n      rules: {\r\n        name: [\r\n          { required: true, message: \"对账周期名称不能为空\", trigger: \"blur\" }\r\n        ],\r\n        taskCode: [\r\n          { required: true, message: \"对账周期不能为空\", trigger: \"change\" }\r\n        ],\r\n        merchantType: [\r\n          { required: true, message: \"店铺类型不能为空\", trigger: \"change\" }\r\n        ],\r\n        tagDays: [\r\n          { required: true, message: \"自定义结算日不能为空\", trigger: \"change\" }\r\n        ],\r\n        merchantId: [\r\n          { required: true, message: \"适用门店不能为空\", trigger: \"change\" }\r\n        ]\r\n      },\r\n      //标识店铺类型是否有数据\r\n      storeState:false,\r\n      //标识自定义日期是否显示\r\n      tagDaysState:false,\r\n      //结算日期数组\r\n      dayArr: [],\r\n      //得到对账周期数据\r\n      statementCycleTypeListData:[],\r\n      //店铺类型数据\r\n      storeData:[],\r\n      //得到适用门店数据\r\n      merchantStoreData:[],\r\n      // 选中的日期\r\n      dayArrChecked: '',\r\n      placeholderStr:'请选择',\r\n      //标识是新增还是编辑\r\n      tag:'',\r\n      title:\"新增对账周期配置\"\r\n    };\r\n  },\r\n  filters: {\r\n    //过滤常规结算周期\r\n    filterTaskCode(val){\r\n      switch (val) {\r\n        case '05001':\r\n          return '日结';\r\n          break;\r\n        case '05002':\r\n          return '周结';\r\n          break;\r\n        case '05004':\r\n          return '月结';\r\n          break;\r\n        case '05010':\r\n          return '自定义';\r\n          break;\r\n        default:\r\n          return '--';\r\n          break;\r\n      }\r\n    },\r\n    //过滤店铺类型\r\n    filterMerchantType(val){\r\n      switch (val) {\r\n        case '06002':\r\n          return '网销店铺';\r\n          break;\r\n        case '06001':\r\n          return '零售店铺';          \r\n          break;\r\n        default:\r\n          return '--';\r\n          break;\r\n      }\r\n    }, \r\n  },\r\n  mounted() {\r\n    //得到日期数据\r\n    this.getDataArr();\r\n    //得到组织机构数据\r\n    this.getOrganizationListData();\r\n    //得到对账周期数据\r\n    this.getStatementCycleTypeListData();\r\n    //得到店铺数据\r\n    this.getStoreTypeListData();\r\n  },\r\n  methods: {\r\n    //得到组织机构数据\r\n    async getOrganizationListData() {\r\n      let info = await this.request(this.api.user.get_userinfo, {}, true);\r\n      console.log(info);\r\n      //得到部门Id\r\n      // this.signData.relationDepId = info.departId;\r\n      //得到当前登录人的直属机构id\r\n      this.request(this.api.user.userCompany_getUserOrgByUserId, {\r\n        userId: info.userId,\r\n        type: 0\r\n      }).then(data => {\r\n        console.log(data);\r\n        //得到机构id\r\n        this.cycleFromData.organizationId=data.id;\r\n      });\r\n      //得到关联机构（type-0 机构 type-1 部门）\r\n      this.request(this.api.user.userCompany_getUserAllDepartByUserId, {\r\n        userId: info.userId,\r\n        type: 0\r\n      }).then(data => {\r\n        //得到组织机构数据\r\n        this.organizationListData=data;\r\n        console.log(data);\r\n        this.signData.organizationIds=[]\r\n        data.forEach(item => {\r\n          this.signData.organizationIds.push(item.id);\r\n        });\r\n        //得到列表数据\r\n        this.getCycleListData();\r\n      });\r\n    },\r\n    // 得到code码，用来限制是否显示按钮\r\n    getCodeLimitToBtnStatus(codeId) {\r\n      this.request(this.api.user.crm_userCompany_authList, {\r\n        menuId: codeId\r\n      }).then(res => {\r\n        console.log(res);\r\n        this.codeData = res;\r\n      });\r\n    },\r\n    //结算日期的item的点击事件\r\n    dayArrItemClickEvent(item){\r\n      item.flag = !item.flag\r\n      this.$nextTick(() => {\r\n        this.placeholderStr=''\r\n        this.cycleFromData.tagDays = this.dayArr.filter(item => {\r\n          return item.flag\r\n        })\r\n        this.cycleFromData.tagDays.forEach(item=>{\r\n          item.day=item.id+\"日\"\r\n        })\r\n      })\r\n    },\r\n    //得到自定义结算日数据\r\n    getDataArr(){\r\n      //添加日期数组\r\n      let ary = []\r\n      for (var i = 0; i < 28; i++) {\r\n        var str = null;\r\n        if (i < 9) {\r\n          str = \"0\" + (i + 1);\r\n        } else {\r\n          str = i + 1 + \"\";\r\n        }\r\n        ary[i] = {\r\n          id:str,\r\n          flag: false\r\n        };\r\n      }\r\n      this.dayArr = ary;\r\n    },\r\n    //得到列表数据\r\n    getCycleListData() {\r\n      this.request(this.api.financial.financialConfig_list, this.signData).then(\r\n        data => {\r\n          console.log(data);\r\n          this.totalCount = data.totalCount;\r\n          this.tableData = data.data;\r\n        }\r\n      );\r\n      //得到按钮操作权限数据\r\n      this.getCodeLimitToBtnStatus(this.$route.meta.currentid);\r\n    },\r\n    storeFocus(){\r\n      console.log(\"changStoreNamr........\")\r\n      if(!this.cycleFromData.merchantType){\r\n        this.storeState=true\r\n      }else{\r\n        console.log(\"fale===========\")\r\n        this.storeState=false\r\n      }\r\n    },\r\n    //得到对账周期数据\r\n    getStatementCycleTypeListData(){\r\n      this.request(this.api.financial.financialBase_statementCycleTypeList,{}).then(\r\n        data=>{\r\n          console.log(data)\r\n          this.statementCycleTypeListData=data\r\n        }\r\n      )\r\n    },\r\n    //得到店铺类型数据\r\n    getStoreTypeListData(){\r\n      this.request(this.api.financial.financialBase_merchantTypeList,{}).then(\r\n        data=>{\r\n          console.log(data)\r\n          this.storeData=data\r\n        }\r\n      )\r\n    },\r\n    //得到适用门店数据\r\n    getMerchantStoreListByType(organizationId,merchantType){\r\n      this.request(this.api.financial.financialBase_merchantListByType,{organizationId:organizationId,merchantType:merchantType}).then(\r\n        data=>{\r\n          console.log(data)\r\n          data.forEach(item=>{\r\n            if(item.storeName){\r\n              item.name=item.storeName\r\n            }\r\n          })\r\n          this.merchantStoreData=data\r\n        }\r\n      )\r\n    },\r\n    //switch改变时的事件\r\n    switchChangeState(row){\r\n     console.log(row)\r\n      if(row.valid){\r\n        var time=this.$options.filters.timestampToTimeOfSwitchToStart(new Date())\r\n        this.showMessageBox(\"启用后，账单生成开始时间为\"+time,row.id,row.valid)\r\n      }else{\r\n        var time=this.$options.filters.timestampToTimeOfSwitchToEnd(new Date())\r\n        this.showMessageBox(\"停用后，系统会把之前未对账的交易生成对账单,上次账单生成结束时间\"+time,row.id,row.valid)\r\n      }\r\n    },\r\n    //输入\r\n    nameInputChangeValue(val){\r\n      if (val.length > 20) {\r\n        this.cycleFromData.name = val.substr(0, 20);\r\n      }\r\n    },\r\n    //切换对账周期的事件\r\n    changeTaskCode(val){\r\n      this.placeholderStr='请选择'\r\n      if(val!='05010'){\r\n        this.cycleFromData.tagDays=[]\r\n        this.dayArr.forEach(item => {\r\n        item.flag=false\r\n      });\r\n        this.tagDaysState=false\r\n      }else{\r\n        this.tagDaysState=true\r\n      }\r\n    },\r\n    //切换店铺时的事件\r\n    changeStoreName(val){\r\n     console.log(val)\r\n     this.storeState=false\r\n     this.cycleFromData.merchantId=''\r\n    //  this.cycleFromData.merchant=''\r\n     //清空适用门店数据\r\n     this.getMerchantStoreListByType(this.cycleFromData.organizationId,val) \r\n    },\r\n    //适用门店的选择事件\r\n    changeMarchantName(val){\r\n     console.log(val)\r\n     this.storeState=false\r\n     this.cycleFromData.merchant=this.merchantStoreData.find(item=>item.id==val).name\r\n    },    \r\n    //新增\r\n    addBtnClickEvent() {\r\n      console.log(\"addBtnClickEvent\");\r\n      //标识是新增还是编辑\r\n      this.tag='add'\r\n      this.title='新增对账周期配置'\r\n      this.showCycleFrom = true;\r\n    },\r\n    //表格选择项改变时触发\r\n    selectionChange(val) {\r\n      this.multipleSelectionData = val;\r\n    },\r\n    //编辑Btn的事件\r\n    editorBtnClick(row) {\r\n      //标识是新增还是编辑\r\n      this.tag='editor'\r\n      this.title='编辑对账周期配置'\r\n      console.log(\"editorBtnClick....\");\r\n      this.request(this.api.financial.financialConfig_getByPrimary,{configId:row.id}).then(data=>{\r\n        console.log(data)\r\n        if(data.taskCode=='05010'){\r\n          this.tagDaysState=true\r\n        }\r\n        this.getMerchantStoreListByType(this.cycleFromData.organizationId,data.merchantType)\r\n        var tagDataArr=[]\r\n        if(data.nodeDays){\r\n          var tagDays=data.nodeDays.split(',')\r\n          console.log(tagDays)\r\n          tagDays.forEach((item,index) => {\r\n            tagDataArr.push({\r\n              id:item.substring(0,2),\r\n              day:item,\r\n              flag:false\r\n            })\r\n          });\r\n          this.placeholderStr=''\r\n          tagDataArr.forEach(item=>{\r\n            this.dayArr.forEach(dateItem => {\r\n              if(item.id==dateItem.id){\r\n                dateItem.flag=true\r\n              }\r\n            })\r\n          })\r\n        }\r\n\r\n        this.$set(data,'tagDays',tagDataArr)\r\n        this.cycleFromData=data\r\n        this.showCycleFrom = true;\r\n      })\r\n    },\r\n    //删除Btn的事件\r\n    deleteBtnClick(row) {\r\n      console.log(\"删除Btn的事件\");\r\n      this.$confirm('确认删除吗?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          this.request(this.api.financial.financialConfig_logicDelete,{configId:row.id}).then(data=>{\r\n            console.log(data)\r\n            //更新数据\r\n            this.getCycleListData()\r\n          })\r\n        }).catch(() => {\r\n          console.log(\"取消。。。。。。\")  \r\n        });\r\n    },\r\n    //每页条数改变时 \r\n    handleSizeChange(page) {\r\n      this.signData.pageSize = page;\r\n      this.getCycleListData();\r\n    },\r\n    //当前页改变时\r\n    handleCurrentChange(page) {\r\n      this.signData.pageIndex = page;\r\n      this.getCycleListData();\r\n    },\r\n    //取消\r\n    cancelClickEvent(cycleFromData){\r\n      this.hideDialog()\r\n    },\r\n    //确定新增对账表单\r\n    sureAddFromOfCycle() {\r\n      if(this.cycleFromData.tagDays){\r\n        var nodeDays=''\r\n        this.cycleFromData.tagDays.forEach((item,index)=>{\r\n          if(index!=this.cycleFromData.tagDays.length-1){\r\n            nodeDays+=item.day+','\r\n          }else{\r\n            nodeDays+=item.day\r\n          }\r\n        })\r\n        this.cycleFromData.nodeDays=nodeDays\r\n      }\r\n      this.$refs['cycleFromData'].validate((valid) => {\r\n        if (valid) {\r\n          switch(this.tag){\r\n            case 'add':\r\n              this.request(this.api.financial.financialConfig_insert,this.cycleFromData).then(data=>{\r\n                console.log('新增保存成功。。。')\r\n                this.showCycleFrom=false\r\n                //刷新列表\r\n                this.getCycleListData()\r\n              })\r\n              break;\r\n            case 'editor':\r\n                this.request(this.api.financial.financialConfig_updateByPrimary,this.cycleFromData).then(data=>{\r\n                  console.log('编辑保存成功。。。')\r\n                  this.showCycleFrom=false\r\n                  this.hideDialog()\r\n                  //刷新列表\r\n                  this.getCycleListData()\r\n                })\r\n              break;\r\n          }\r\n        \r\n        } else {\r\n          console.log('error submit!!');\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    //隐藏dialog\r\n    hideDialog(){\r\n      console.log(\"hidePopover\")\r\n      this.$refs.cycleFromData.resetFields();\r\n      this.placeholderStr='请选择'\r\n      this.storeState=false\r\n      this.tagDaysState=false\r\n      this.showCycleFrom=false\r\n      this.tag=\"\"\r\n      this.cycleFromData.nodeDays=''\r\n      this.merchantStoreData=[]\r\n      this.cycleFromData.merchant=''\r\n      //对账周期名称\r\n      this.cycleFromData.name='',\r\n      //对账周期Code\r\n      this.cycleFromData.taskCode='',\r\n      //店铺类型Code\r\n      this.cycleFromData.merchantType= \"\",\r\n      //标识选择的结算日期\r\n      this.cycleFromData.tagDays= [],\r\n      //适用门店Id\r\n      this.cycleFromData.merchantId= '',\r\n      this.dayArr.forEach(item => {\r\n        item.flag=false\r\n      });\r\n    },\r\n    //显示信息提示框\r\n    showMessageBox(msg,configId,valid){\r\n      this.$confirm(msg, '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          this.request(this.api.financial.financialConfig_updateValid,{configId:configId,symbol:valid}).then(data=>{\r\n            console.log(data)\r\n          })\r\n        }).catch(() => {\r\n          console.log(\"取消。。。。。。\")\r\n          this.tableData.forEach(item => {\r\n            if(item.id==configId){\r\n              item.valid=!item.valid\r\n            }\r\n          })      \r\n        });\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["cycle.vue"],"names":[],"mappingsfile":"cycle.vue","sourceRoot":"src/views/fmis/cycle","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"table_div\">\r\n      <el-button type=\"primary\" @click=\"addBtnClickEvent\" size=\"small\" v-auth=\"codeData\"\r\n      data-code=\"170101\">新增</el-button>\r\n      <el-table\r\n        ref=\"multipleTable\"\r\n        :data=\"tableData\"\r\n        tooltip-effect=\"dark\"\r\n        style=\"width: 100%\"\r\n        header-row-class-name=\"item-table-header\"\r\n        @selection-change=\"selectionChange\"\r\n      >\r\n        <!-- <el-table-column type=\"selection\"></el-table-column> -->\r\n        <el-table-column label=\"结算周期名称\">\r\n          <template slot-scope=\"scope\">{{ scope.row.name?scope.row.name:'--' }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop label=\"常规结算周期\">\r\n          <template slot-scope=\"scope\">{{ scope.row.taskCode | filterTaskCode}}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"nodeDays\" label=\"自定义结算周期\" show-overflow-tooltip>\r\n          <template slot-scope=\"scope\">{{ scope.row.nodeDays?scope.row.nodeDays:'--' }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"merchantType\" label=\"店铺类型\">\r\n          <template slot-scope=\"scope\">{{ scope.row.merchantType | filterMerchantType }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"merchant\" label=\"适用门店\">\r\n          <template slot-scope=\"scope\">{{ scope.row.merchant?scope.row.merchant:'--' }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"updateTime\" label=\"更新时间\">\r\n          <template slot-scope=\"scope\">{{ scope.row.updateTime | timestampToTime }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"valid\" label=\"启停状态\">\r\n          <template slot-scope=\"scope\">\r\n            <el-switch v-auth=\"codeData\"\r\n              data-code=\"170104\" v-model=\"scope.row.valid\" active-color=\"#13ce66\" inactive-color=\"#ff4949\" @change=\"switchChangeState(scope.row)\"></el-switch>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column fixed=\"right\" label=\"操作\" width=\"160\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button @click=\"editorBtnClick(scope.row)\" type=\"text\" size=\"small\" :disabled='scope.row.valid' v-auth=\"codeData\"\r\n              data-code=\"170102\">编辑</el-button>\r\n            <el-button @click=\"deleteBtnClick(scope.row)\" type=\"text\" size=\"small\" :disabled='scope.row.valid' v-auth=\"codeData\"\r\n              data-code=\"170103\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <div style=\"margin-top:20px;padding-bottom:10px;margin-right:20px;\">\r\n        <el-pagination\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page.sync=\"signData.pageIndex\"\r\n          :page-sizes=\"[10, 20, 30, 40]\"\r\n          :page-size=\"signData.pageSize\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"totalCount\"\r\n        ></el-pagination>\r\n      </div>\r\n    </div>\r\n    <el-dialog :title=\"title\" :visible.sync=\"showCycleFrom\" width=\"500px\" @close='hideDialog'>\r\n      <el-form :model=\"cycleFromData\" ref=\"cycleFromData\" :rules=\"rules\">\r\n        <el-form-item label=\"对账周期名称：\" label-width=\"120px\" prop=\"name\">\r\n          <el-input v-model=\"cycleFromData.name\" style=\"width:200px;\" placeholder=\"请输入内容\" @input=\"nameInputChangeValue\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"选择对账周期：\" label-width=\"120px\" prop='taskCode'>\r\n          <el-select v-model=\"cycleFromData.taskCode\" placeholder=\"请选择\" @change=\"changeTaskCode\">\r\n            <el-option v-for='item in statementCycleTypeListData' :key=\"item.id\" :label=\"item.description\" :value=\"item.code\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"自定义结算日：\" label-width=\"120px\" prop='tagDays' v-if=\"tagDaysState\">\r\n          <el-popover placement=\"bottom\" width=\"200\" trigger=\"click\">\r\n            <div class=\"day-arr-check input-w\" slot=\"reference\" style=\"height: 32px;border: 1px solid #DCDFE6;overflow-y: auto;border-radius:5px;\">\r\n              <el-tag\r\n                  v-for=\"tag in cycleFromData.tagDays\"\r\n                  :key=\"tag.id\"\r\n                  closable\r\n                  size=\"mini\"\r\n                  @close=\"dayArrItemClickEvent(tag)\"\r\n                  class='tag_date'\r\n              >\r\n                {{tag.day}}\r\n              </el-tag>\r\n              <i class=\"el-icon-arrow-down icon\"></i>\r\n              <span class='span_style'>{{placeholderStr}}</span>\r\n            </div>\r\n            <div class=\"list\">\r\n              <ul class=\"clearfix ul_style\">\r\n                <li v-for=\"item in dayArr\" :key=\"item.id\" class='li_style' @click=\"dayArrItemClickEvent(item)\" :class=\"{check : item.flag}\">{{ item.id }}</li>\r\n              </ul>\r\n            </div>\r\n          </el-popover>\r\n        </el-form-item>\r\n        <el-form-item label=\"适用店铺类型：\" label-width=\"120px\" prop='merchantType'>\r\n          <el-select v-model=\"cycleFromData.merchantType\" placeholder=\"请选择\" @change=\"changeStoreName\" :class=\"{store_type:storeState}\">\r\n            <el-option v-for='item in storeData' :key=\"item.id\" :label='item.description' :value='item.code'></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"适用门店：\" label-width=\"120px\" prop='merchantId'> \r\n          <el-select v-model=\"cycleFromData.merchantId\" placeholder=\"请选择\"  @focus=\"storeFocus\" @change=\"changeMarchantName\">\r\n            <el-option v-for='item in merchantStoreData' :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"cancelClickEvent('cycleFromData')\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"sureAddFromOfCycle\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { constants } from \"crypto\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      signData: {\r\n        //组织机构Id集合(包括直属机构还有关联机构)\r\n        organizationIds:[],\r\n        //当前页数\r\n        pageIndex: 1,\r\n        //每页要显示的数据条数,默认10条\r\n        pageSize: 10\r\n      },\r\n      //得到权限Code\r\n      codeData: [],\r\n      //存储表格选择项改变时的数据\r\n      multipleSelectionData: [],\r\n      //表格数据\r\n      tableData: [],\r\n      //总条数\r\n      totalCount: 1,\r\n      //标识是否显示新增对账周期表单\r\n      showCycleFrom: false,\r\n      //新增表单数据\r\n      cycleFromData: {\r\n        //对账周期名称\r\n        name:'',\r\n        //对账周期Code\r\n        taskCode:'',\r\n        //店铺类型Code\r\n        merchantType: \"\",\r\n        //上传给后台的自定义日期\r\n        nodeDays:'',\r\n        //标识选择的结算日期\r\n        tagDays: [],\r\n        //适用门店Id\r\n        merchantId: '',\r\n        //适用门店name\r\n        merchant:'',\r\n        //组织机构id\r\n        organizationId:'',\r\n      },\r\n      rules: {\r\n        name: [\r\n          { required: true, message: \"对账周期名称不能为空\", trigger: \"blur\" }\r\n        ],\r\n        taskCode: [\r\n          { required: true, message: \"对账周期不能为空\", trigger: \"change\" }\r\n        ],\r\n        merchantType: [\r\n          { required: true, message: \"店铺类型不能为空\", trigger: \"change\" }\r\n        ],\r\n        tagDays: [\r\n          { required: true, message: \"自定义结算日不能为空\", trigger: \"change\" }\r\n        ],\r\n        merchantId: [\r\n          { required: true, message: \"适用门店不能为空\", trigger: \"change\" }\r\n        ]\r\n      },\r\n      //标识店铺类型是否有数据\r\n      storeState:false,\r\n      //标识自定义日期是否显示\r\n      tagDaysState:false,\r\n      //结算日期数组\r\n      dayArr: [],\r\n      //得到对账周期数据\r\n      statementCycleTypeListData:[],\r\n      //店铺类型数据\r\n      storeData:[],\r\n      //得到适用门店数据\r\n      merchantStoreData:[],\r\n      // 选中的日期\r\n      dayArrChecked: '',\r\n      placeholderStr:'请选择',\r\n      //标识是新增还是编辑\r\n      tag:'',\r\n      title:\"新增对账周期配置\"\r\n    };\r\n  },\r\n  filters: {\r\n    //过滤常规结算周期\r\n    filterTaskCode(val){\r\n      switch (val) {\r\n        case '05001':\r\n          return '日结';\r\n          break;\r\n        case '05002':\r\n          return '周结';\r\n          break;\r\n        case '05004':\r\n          return '月结';\r\n          break;\r\n        case '05010':\r\n          return '自定义';\r\n          break;\r\n        default:\r\n          return '--';\r\n          break;\r\n      }\r\n    },\r\n    //过滤店铺类型\r\n    filterMerchantType(val){\r\n      switch (val) {\r\n        case '06002':\r\n          return '网销店铺';\r\n          break;\r\n        case '06001':\r\n          return '零售店铺';          \r\n          break;\r\n        default:\r\n          return '--';\r\n          break;\r\n      }\r\n    }, \r\n  },\r\n  mounted() {\r\n    //得到日期数据\r\n    this.getDataArr();\r\n    //得到组织机构数据\r\n    this.getOrganizationListData();\r\n    //得到对账周期数据\r\n    this.getStatementCycleTypeListData();\r\n    //得到店铺数据\r\n    this.getStoreTypeListData();\r\n  },\r\n  methods: {\r\n    //得到组织机构数据\r\n    async getOrganizationListData() {\r\n      let info = await this.request(this.api.user.get_userinfo, {}, true);\r\n      console.log(info);\r\n      //得到部门Id\r\n      // this.signData.relationDepId = info.departId;\r\n      //得到当前登录人的直属机构id\r\n      this.request(this.api.user.userCompany_getUserOrgByUserId, {\r\n        userId: info.userId,\r\n        type: 0\r\n      }).then(data => {\r\n        console.log(data);\r\n        //得到机构id\r\n        this.cycleFromData.organizationId=data.id;\r\n      });\r\n      //得到关联机构（type-0 机构 type-1 部门）\r\n      this.request(this.api.user.userCompany_getUserAllDepartByUserId, {\r\n        userId: info.userId,\r\n        type: 0\r\n      }).then(data => {\r\n        //得到组织机构数据\r\n        this.organizationListData=data;\r\n        console.log(data);\r\n        this.signData.organizationIds=[]\r\n        data.forEach(item => {\r\n          this.signData.organizationIds.push(item.id);\r\n        });\r\n        //得到列表数据\r\n        this.getCycleListData();\r\n      });\r\n    },\r\n    // 得到code码，用来限制是否显示按钮\r\n    getCodeLimitToBtnStatus(codeId) {\r\n      this.request(this.api.user.crm_userCompany_authList, {\r\n        menuId: codeId\r\n      }).then(res => {\r\n        console.log(res);\r\n        this.codeData = res;\r\n      });\r\n    },\r\n    //结算日期的item的点击事件\r\n    dayArrItemClickEvent(item){\r\n      item.flag = !item.flag\r\n      this.$nextTick(() => {\r\n        this.placeholderStr=''\r\n        this.cycleFromData.tagDays = this.dayArr.filter(item => {\r\n          return item.flag\r\n        })\r\n        this.cycleFromData.tagDays.forEach(item=>{\r\n          item.day=item.id+\"日\"\r\n        })\r\n      })\r\n    },\r\n    //得到自定义结算日数据\r\n    getDataArr(){\r\n      //添加日期数组\r\n      let ary = []\r\n      for (var i = 0; i < 28; i++) {\r\n        var str = null;\r\n        if (i < 9) {\r\n          str = \"0\" + (i + 1);\r\n        } else {\r\n          str = i + 1 + \"\";\r\n        }\r\n        ary[i] = {\r\n          id:str,\r\n          flag: false\r\n        };\r\n      }\r\n      this.dayArr = ary;\r\n    },\r\n    //得到列表数据\r\n    getCycleListData() {\r\n      this.request(this.api.financial.financialConfig_list, this.signData).then(\r\n        data => {\r\n          console.log(data);\r\n          this.totalCount = data.totalCount;\r\n          this.tableData = data.data;\r\n        }\r\n      );\r\n      //得到按钮操作权限数据\r\n      this.getCodeLimitToBtnStatus(this.$route.meta.currentid);\r\n    },\r\n    storeFocus(){\r\n      console.log(\"changStoreNamr........\")\r\n      if(!this.cycleFromData.merchantType){\r\n        this.storeState=true\r\n      }else{\r\n        console.log(\"fale===========\")\r\n        this.storeState=false\r\n      }\r\n    },\r\n    //得到对账周期数据\r\n    getStatementCycleTypeListData(){\r\n      this.request(this.api.financial.financialBase_statementCycleTypeList,{}).then(\r\n        data=>{\r\n          console.log(data)\r\n          this.statementCycleTypeListData=data\r\n        }\r\n      )\r\n    },\r\n    //得到店铺类型数据\r\n    getStoreTypeListData(){\r\n      this.request(this.api.financial.financialBase_merchantTypeList,{}).then(\r\n        data=>{\r\n          console.log(data)\r\n          this.storeData=data\r\n        }\r\n      )\r\n    },\r\n    //得到适用门店数据\r\n    getMerchantStoreListByType(organizationId,merchantType){\r\n      this.request(this.api.financial.financialBase_merchantListByType,{organizationId:organizationId,merchantType:merchantType}).then(\r\n        data=>{\r\n          console.log(data)\r\n          data.forEach(item=>{\r\n            if(item.storeName){\r\n              item.name=item.storeName\r\n            }\r\n          })\r\n          this.merchantStoreData=data\r\n        }\r\n      )\r\n    },\r\n    //switch改变时的事件\r\n    switchChangeState(row){\r\n     console.log(row)\r\n      if(row.valid){\r\n        var time=this.$options.filters.timestampToTimeOfSwitchToStart(new Date())\r\n        this.showMessageBox(\"启用后，账单生成开始时间为\"+time,row.id,row.valid)\r\n      }else{\r\n        var time=this.$options.filters.timestampToTimeOfSwitchToEnd(new Date())\r\n        this.showMessageBox(\"停用后，系统会把之前未对账的交易生成对账单,上次账单生成结束时间\"+time,row.id,row.valid)\r\n      }\r\n    },\r\n    //输入\r\n    nameInputChangeValue(val){\r\n      if (val.length > 20) {\r\n        this.cycleFromData.name = val.substr(0, 20);\r\n      }\r\n    },\r\n    //切换对账周期的事件\r\n    changeTaskCode(val){\r\n      this.placeholderStr='请选择'\r\n      if(val!='05010'){\r\n        this.cycleFromData.tagDays=[]\r\n        this.dayArr.forEach(item => {\r\n        item.flag=false\r\n      });\r\n        this.tagDaysState=false\r\n      }else{\r\n        this.tagDaysState=true\r\n      }\r\n    },\r\n    //切换店铺时的事件\r\n    changeStoreName(val){\r\n     console.log(val)\r\n     this.storeState=false\r\n     this.cycleFromData.merchantId=''\r\n    //  this.cycleFromData.merchant=''\r\n     //清空适用门店数据\r\n     this.getMerchantStoreListByType(this.cycleFromData.organizationId,val) \r\n    },\r\n    //适用门店的选择事件\r\n    changeMarchantName(val){\r\n     console.log(val)\r\n     this.storeState=false\r\n     this.cycleFromData.merchant=this.merchantStoreData.find(item=>item.id==val).name\r\n    },    \r\n    //新增\r\n    addBtnClickEvent() {\r\n      console.log(\"addBtnClickEvent\");\r\n      //标识是新增还是编辑\r\n      this.tag='add'\r\n      this.title='新增对账周期配置'\r\n      this.showCycleFrom = true;\r\n    },\r\n    //表格选择项改变时触发\r\n    selectionChange(val) {\r\n      this.multipleSelectionData = val;\r\n    },\r\n    //编辑Btn的事件\r\n    editorBtnClick(row) {\r\n      //标识是新增还是编辑\r\n      this.tag='editor'\r\n      this.title='编辑对账周期配置'\r\n      console.log(\"editorBtnClick....\");\r\n      this.request(this.api.financial.financialConfig_getByPrimary,{configId:row.id}).then(data=>{\r\n        console.log(data)\r\n        if(data.taskCode=='05010'){\r\n          this.tagDaysState=true\r\n        }\r\n        this.getMerchantStoreListByType(this.cycleFromData.organizationId,data.merchantType)\r\n        var tagDataArr=[]\r\n        if(data.nodeDays){\r\n          var tagDays=data.nodeDays.split(',')\r\n          console.log(tagDays)\r\n          tagDays.forEach((item,index) => {\r\n            tagDataArr.push({\r\n              id:item.substring(0,2),\r\n              day:item,\r\n              flag:false\r\n            })\r\n          });\r\n          this.placeholderStr=''\r\n          tagDataArr.forEach(item=>{\r\n            this.dayArr.forEach(dateItem => {\r\n              if(item.id==dateItem.id){\r\n                dateItem.flag=true\r\n              }\r\n            })\r\n          })\r\n        }\r\n\r\n        this.$set(data,'tagDays',tagDataArr)\r\n        this.cycleFromData=data\r\n        this.showCycleFrom = true;\r\n      })\r\n    },\r\n    //删除Btn的事件\r\n    deleteBtnClick(row) {\r\n      console.log(\"删除Btn的事件\");\r\n      this.$confirm('确认删除吗?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          this.request(this.api.financial.financialConfig_logicDelete,{configId:row.id}).then(data=>{\r\n            console.log(data)\r\n            //更新数据\r\n            this.getCycleListData()\r\n          })\r\n        }).catch(() => {\r\n          console.log(\"取消。。。。。。\")  \r\n        });\r\n    },\r\n    //每页条数改变时 \r\n    handleSizeChange(page) {\r\n      this.signData.pageSize = page;\r\n      this.getCycleListData();\r\n    },\r\n    //当前页改变时\r\n    handleCurrentChange(page) {\r\n      this.signData.pageIndex = page;\r\n      this.getCycleListData();\r\n    },\r\n    //取消\r\n    cancelClickEvent(cycleFromData){\r\n      this.hideDialog()\r\n    },\r\n    //确定新增对账表单\r\n    sureAddFromOfCycle() {\r\n      if(this.cycleFromData.tagDays){\r\n        var nodeDays=''\r\n        this.cycleFromData.tagDays.forEach((item,index)=>{\r\n          if(index!=this.cycleFromData.tagDays.length-1){\r\n            nodeDays+=item.day+','\r\n          }else{\r\n            nodeDays+=item.day\r\n          }\r\n        })\r\n        this.cycleFromData.nodeDays=nodeDays\r\n      }\r\n      this.$refs['cycleFromData'].validate((valid) => {\r\n        if (valid) {\r\n          switch(this.tag){\r\n            case 'add':\r\n              this.request(this.api.financial.financialConfig_insert,this.cycleFromData).then(data=>{\r\n                console.log('新增保存成功。。。')\r\n                this.showCycleFrom=false\r\n                //刷新列表\r\n                this.getCycleListData()\r\n              })\r\n              break;\r\n            case 'editor':\r\n                this.request(this.api.financial.financialConfig_updateByPrimary,this.cycleFromData).then(data=>{\r\n                  console.log('编辑保存成功。。。')\r\n                  this.showCycleFrom=false\r\n                  this.hideDialog()\r\n                  //刷新列表\r\n                  this.getCycleListData()\r\n                })\r\n              break;\r\n          }\r\n        \r\n        } else {\r\n          console.log('error submit!!');\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    //隐藏dialog\r\n    hideDialog(){\r\n      console.log(\"hidePopover\")\r\n      this.$refs.cycleFromData.resetFields();\r\n      this.placeholderStr='请选择'\r\n      this.storeState=false\r\n      this.tagDaysState=false\r\n      this.showCycleFrom=false\r\n      this.tag=\"\"\r\n      this.cycleFromData.nodeDays=''\r\n      this.merchantStoreData=[]\r\n      this.cycleFromData.merchant=''\r\n      //对账周期名称\r\n      this.cycleFromData.name='',\r\n      //对账周期Code\r\n      this.cycleFromData.taskCode='',\r\n      //店铺类型Code\r\n      this.cycleFromData.merchantType= \"\",\r\n      //标识选择的结算日期\r\n      this.cycleFromData.tagDays= [],\r\n      //适用门店Id\r\n      this.cycleFromData.merchantId= '',\r\n      this.dayArr.forEach(item => {\r\n        item.flag=false\r\n      });\r\n    },\r\n    //显示信息提示框\r\n    showMessageBox(msg,configId,valid){\r\n      this.$confirm(msg, '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          this.request(this.api.financial.financialConfig_updateValid,{configId:configId,symbol:valid}).then(data=>{\r\n            console.log(data)\r\n          })\r\n        }).catch(() => {\r\n          console.log(\"取消。。。。。。\")\r\n          this.tableData.forEach(item => {\r\n            if(item.id==configId){\r\n              item.valid=!item.valid\r\n            }\r\n          })      \r\n        });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.check{\r\n  background: #00abee;\r\n}\r\n.table_div {\r\n  margin: 10px;\r\n  background-color: #fff;\r\n  padding-top: 20px;\r\n  padding-left: 10px;\r\n}\r\n.icon{\r\n  height:32px;\r\n  line-height: 32px;\r\n  position: absolute;\r\n  right:150px;\r\n  top:0;\r\n  color:#C0C4CC;\r\n  /* background:#C0C4CC; */\r\n}\r\n.ul_style{\r\n  width: 176px;\r\n  border:1px solid #ccc;\r\n  border-bottom:none;  \r\n  border-right:none;\r\n}\r\n.li_style{\r\n  width: 35px;\r\n  height: 20px;\r\n  float: left;\r\n  text-align: center;\r\n  line-height: 20px;\r\n  cursor: pointer;\r\n  border-right:1px solid #ccc;\r\n  border-bottom:1px solid #ccc;\r\n}\r\n.span_style{\r\n  height:32px;\r\n  position: absolute;\r\n  left:15px;\r\n  top:0;\r\n  color:#C0C4CC;\r\n  line-height: 32px;\r\n}\r\n.tag_date{\r\n  margin-left:1px;\r\n  margin-bottom:3px;\r\n  margin-top:3px;\r\n  height: 19px;\r\n  padding: 0 5px;\r\n  line-height: 19px;\r\n  float:left;\r\n}\r\n.store_type /deep/ .el-input .el-input__inner{\r\n  border: 1px solid red;\r\n}\r\n</style>\r\n\r\n\r\n"]}]}