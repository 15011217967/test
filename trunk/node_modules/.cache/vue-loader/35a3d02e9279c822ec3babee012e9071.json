{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\product\\basic_info\\stock_list.vue?vue&type=style&index=0&id=79b12466&lang=less&scoped=true&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\product\\basic_info\\stock_list.vue","mtime":1577006999749},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\css-loader\\index.js","mtime":1558492728478},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1558492728890},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\postcss-loader\\src\\index.js","mtime":1558492728823},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\less-loader\\dist\\cjs.js","mtime":1566193719488},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.stock-flex {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n",{"version":3,"sources":["stock_list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4TA;AACA;AACA;AACA;AACA","file":"stock_list.vue","sourceRoot":"src/views/product/basic_info","sourcesContent":["<!--\r\n * @Description: 库存列表\r\n * @Author: your name\r\n * @Date: 2019-08-20 08:58:21\r\n * @LastEditTime: 2019-12-18 19:48:49\r\n * @LastEditors: Please set LastEditors\r\n -->\r\n<template>\r\n  <div>\r\n    <div class=\"item-margin\">\r\n      <el-form\r\n        class=\"item-form\"\r\n        :model=\"filtersData\"\r\n        label-width=\"90px\"\r\n        size=\"small\"\r\n        ref=\"filtersForm\"\r\n        inline\r\n      >\r\n        <el-form-item prop=\"cateIdentifier\" label=\"对应分类：\">\r\n          <el-cascader\r\n            class=\"input-w\"\r\n            :options=\"classData\"\r\n            v-model=\"cateArr\"\r\n            @change=\"cascaderGet\"\r\n            :show-all-levels=\"false\"\r\n            :props=\"props\"\r\n            change-on-select\r\n          ></el-cascader>\r\n        </el-form-item>\r\n        <el-form-item prop=\"brandId\" label=\"品牌：\">\r\n          <el-select placeholder=\"请选择\" class=\"input-w\" v-model=\"filtersData.brandId\">\r\n            <el-option v-for=\"item in brandArr\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item prop=\"quantity\" label=\"所属仓库：\">\r\n          <el-select placeholder=\"请选择\" class=\"input-w\" v-model=\"filtersData.warehouseCode\">\r\n            <el-option\r\n              v-for=\"item in warehouseArr\"\r\n              :key=\"item.id\"\r\n              :label=\"item.warehouseName\"\r\n              :value=\"item.warehouseCode\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n         \r\n        <el-form-item prop=\"ownerId\" label=\"货主：\">\r\n          <el-select\r\n            class=\"input-w\"\r\n            placeholder=\"请选择\"\r\n            v-model=\"filtersData.ownerId\"\r\n          >\r\n            <el-option\r\n              v-for=\"(item,index) in ownerOptions\"\r\n              :key=\"index.id\"\r\n              :label=\"item.name\"\r\n              :value=\"item.code\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"库存筛选：\">\r\n          <el-select placeholder=\"请选择\" class=\"input-w\" v-model=\"filtersData.quantityType\">\r\n            <el-option\r\n              v-for=\"item in quantityTypeArr\"\r\n              :key=\"item.id\"\r\n              :label=\"item.value\"\r\n              :value=\"item.id\"\r\n            ></el-option>\r\n          </el-select>\r\n          <el-select placeholder=\"请选择\" class=\"input-w\" v-model=\"filtersData.logicType\">\r\n            <el-option\r\n              v-for=\"item in logicTypeArr\"\r\n              :key=\"item.id\"\r\n              :label=\"item.value\"\r\n              :value=\"item.id\"\r\n            ></el-option>\r\n          </el-select>\r\n          <el-input class=\"input-w\" placeholder=\"具体数量\" v-model=\"filtersData.quantity\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item prop=\"searchWords\" label=\"综合搜索：\">\r\n          <el-input class=\"input-w\" placeholder=\"商品款号/商品货号/商品名称\" v-model=\"filtersData.searchWords\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n          <el-button size=\"small\" v-no-more-click @click=\"handleSearch\" type=\"primary\" plain>搜索</el-button>\r\n          <el-button size=\"small\" @click=\"handleResetFilters('filtersForm')\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n    <!--table  -->\r\n    <div class=\"item-margin\">\r\n      <div class=\"item-table\">\r\n        <el-table\r\n          :data=\"tableListData\"\r\n          stripe\r\n          empty-text=\"暂无数据\"\r\n          header-align=\"center\"\r\n          header-row-class-name=\"item-table-header\"\r\n          :highlight-current-row=\"true\"\r\n        >\r\n          <el-table-column prop=\"code\" align=\"center\" width=\"50\">\r\n            <template slot-scope=\"scope\">\r\n              <i\r\n                @click=\"childrenIsShow(scope.row)\"\r\n                v-if=\"scope.row.isShow\"\r\n                :class=\"scope.row.isType == 1 ?'el-icon-circle-plus-outline i-cursor' : 'el-icon-remove-outline i-cursor'\"\r\n              ></i>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"spu\" align=\"center\" label=\"商品款号\" width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"sku\" align=\"center\" label=\"商品货号\" width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"specifications\" align=\"center\" label=\"规格\" width=\"80\"></el-table-column>\r\n          <el-table-column prop=\"image\" align=\"center\" label=\"图片\" width=\"80\">\r\n            <template slot-scope=\"scope\">\r\n              <img class=\"logo-wh\" :src=\"scope.row.image\" />\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"brandName\" align=\"center\" label=\"品牌\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"fullCateName\" align=\"center\" label=\"商品分类\" width=\"80\"></el-table-column>\r\n          <el-table-column prop=\"name\" align=\"center\" label=\"商品名称\" width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"retailPrice\" align=\"center\" label=\"吊牌价/元\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"quantity\" align=\"center\" label=\"库存总量\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"frozenQuantity\" align=\"center\" label=\"冻结库存\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"availableQuantity\" align=\"center\" label=\"可用库存\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"warehouseName\" align=\"center\" label=\"所属仓库\" min-width=\"100\"></el-table-column>\r\n        </el-table>\r\n        <div class=\"stock-flex pagination mt-10 mb-20\">\r\n          <p>货主：{{statistics.ownerCount}}家&nbsp; 总量库存：{{statistics.stockTotal}}件&nbsp;其中款号数{{statistics.spuCount}}种&nbsp; 货号数{{statistics.skuCount}}个</p>\r\n          <el-pagination\r\n            class=\"mr-20\"\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"filtersData.pageIndex\"\r\n            :page-sizes=\"[10, 20, 30,40,50]\"\r\n            :page-size=\"filtersData.pageSize\"\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=\"total\"\r\n          ></el-pagination>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!--table END  -->\r\n  </div>\r\n</template>\r\n<script>\r\n/**\r\n * 基本管理\r\n */\r\nexport default {\r\n  name:\"stock_list\",\r\n  data() {\r\n    return {\r\n      filtersData: {\r\n        cateIdentifier: null, //产品分类标识码\r\n        brandId: null,\r\n        ownerId:'',\r\n        warehouseCode: null,\r\n        pageIndex: 1, //当前页码\r\n        pageSize: 10, //每页数量\r\n        valid: null, //有效状态\r\n        keyword: \"\", //搜索关键字\r\n        quantityType: null,\r\n        logicType: null,\r\n        quantity: null\r\n      },\r\n      cateArr: [],\r\n      brandArr: [],\r\n      warehouseArr: [],\r\n      logicTypeArr: [\r\n        {\r\n          id: 0,\r\n          value: \"小于\"\r\n        },\r\n        {\r\n          id: 1,\r\n          value: \"等于\"\r\n        },\r\n        {\r\n          id: 2,\r\n          value: \"大于\"\r\n        },\r\n        {\r\n          id: 3,\r\n          value: \"小于等于\"\r\n        },\r\n        {\r\n          id: 4,\r\n          value: \"大于等于\"\r\n        }\r\n      ],\r\n      quantityTypeArr: [\r\n        {\r\n          id: 0,\r\n          value: \"可用数量\"\r\n        },\r\n        {\r\n          id: 1,\r\n          value: \"冻结数量\"\r\n        },\r\n        {\r\n          id: 2,\r\n          value: \"总数量\"\r\n        }\r\n      ],\r\n      props: {\r\n        value: \"id\",\r\n        label: \"name\",\r\n        children: \"children\"\r\n      },\r\n      tableListData: [],\r\n      statistics: {},\r\n      total: null,\r\n      classData: [],\r\n      classList: [],\r\n       ownerOptions: [],//货主\r\n    };\r\n  },\r\n  created() {\r\n    this.getTableList();\r\n    this.getWarehouseList();\r\n    this.getBrandList();\r\n    this.getClassData();\r\n       //获取货主\r\n    this.getOwnerOptions();\r\n  },\r\n    activated () {\r\n    this.getTableList();\r\n  },\r\n  methods: {\r\n    getClassData() {\r\n      this.$common.getClassSelect(this, 1).then(res => {\r\n        this.classData = res.ztree;\r\n        this.classList = res.list;\r\n      });\r\n    },\r\n    getWarehouseList() {\r\n      this.request(this.api.warehouse.warehouseBase_warehouse_list, {isValid: true}).then(data => {\r\n        this.warehouseArr = data.data;\r\n      });\r\n    },\r\n    getBrandList() {\r\n      this.request(this.api.product.productBrand_list, {}).then(data => {\r\n        this.brandArr = data.data;\r\n      });\r\n    },\r\n    //获取货主\r\n    getOwnerOptions(){\r\n       this.request(this.api.warehouse.warehouseBase_goodsOwner_list, {valid: true,orderBy:'create_time'},true).then(\r\n        res => {\r\n          this.ownerOptions = res.data;\r\n        }\r\n      );\r\n    },\r\n    //获取设计商\r\n    cascaderGet(e) {\r\n      let cateId = JSON.parse(JSON.stringify(e)).pop();\r\n      let obj = this.classList.find(item => item.id == cateId);\r\n      this.filtersData.cateIdentifier = obj.identifier;\r\n    },\r\n    getTableList() {\r\n      this.request(this.api.product.listProductStock, this.filtersData).then(\r\n        res => {\r\n          let _data = res.stock.data,\r\n            _dataLen = _data.length;\r\n          for (let i = 0; i < _dataLen; i++) {\r\n            _data[i].isShow = true;\r\n            _data[i].isType = 1;\r\n            _data[i]._cid = \"\";\r\n          }\r\n          this.statistics = res;\r\n          this.tableListData = _data;\r\n          this.total = res.stock.totalCount;\r\n        }\r\n      );\r\n    },\r\n    //搜索\r\n    handleSearch() {\r\n      this.filtersData.pageIndex = 1;\r\n      this.getTableList();\r\n    },\r\n    //清空重置\r\n    handleResetFilters(formName) {\r\n      this.$refs[formName].resetFields();\r\n      this.filtersData.quantityType = null;\r\n      this.cateArr = [];\r\n      this.filtersData.warehouseCode = null;\r\n      this.filtersData.brandId = null;\r\n      this.filtersData.logicType = null;\r\n      // this.getTableList();\r\n    },\r\n    //当前页数修改时发生改变\r\n    handleCurrentChange(val) {\r\n      this.filtersData.pageIndex = val;\r\n      this.getTableList();\r\n    },\r\n    // 每页显示多少条时发生改变\r\n    handleSizeChange(val) {\r\n      this.filtersData.pageSize = val;\r\n      this.getTableList();\r\n    },\r\n    //点击获取子元素插入数组\r\n    childrenIsShow(row) {\r\n      let listData = this.tableListData;\r\n      let _path = this.api.product.listProductGoodsStock;\r\n      let _this = this;\r\n      let _key = \"productId\";\r\n      let _obj = {\r\n        warehouseCode: this.filtersData.warehouseCode\r\n      };\r\n      this.$common.clickGetChildren(_this, row, listData, _path, _key, _obj);\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.stock-flex {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n</style>\r\n"]}]}