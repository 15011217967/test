{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\components\\treePerson.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\components\\treePerson.vue","mtime":1572415127774},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport treeConent from \"@/components/treePersonCon\";\r\nexport default {\r\n  name: \"tree-person\",\r\n  props: {\r\n    placeholder: \"请选择\",\r\n    value: \"\",\r\n    labelmodel:''\r\n  },\r\n  created(){\r\n\r\n  },\r\n  components: { treeConent },\r\n  data() {\r\n    return {\r\n      options: [],\r\n      valueModel: this.value\r\n    };\r\n  },\r\n  watch: {\r\n    value(val) {\r\n      this.valueModel = val;\r\n    },\r\n    valueModel(val) {\r\n      this.$emit(\"input\", val);\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getList();\r\n  },\r\n  methods: {\r\n    async getList() {\r\n      let list = await this.request(this.api.user.DEPART_PERSON_LIST_POST);\r\n      this.options = list;\r\n    },\r\n    change(val, name) {\r\n      this.$emit('upData:labelmodel', name)\r\n      // this.$emit(\"selected\", val, name);\r\n      this.$emit(\"input\", {\r\n        leaderId:val,\r\n        leaderName:name\r\n      });\r\n      this.onCloseTree();\r\n    },\r\n    initLabel(name) {\r\n      this.$emit('upData:labelmodel', name)\r\n    },\r\n    // 隐藏树状菜单\r\n    onCloseTree() {\r\n      this.$refs.popover.showPopper = false;\r\n    },\r\n    // 显示时触发\r\n    onShowPopover() {},\r\n    // 隐藏时触发\r\n    onHidePopover() {\r\n      this.$emit(\"input\", this.valueModel);\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["treePerson.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"treePerson.vue","sourceRoot":"src/components","sourcesContent":["<style>\r\n.el-popover{\r\n    max-height: 400px !important;\r\n    overflow-y: scroll;\r\n    width: 280px;;\r\n  }\r\n\r\n</style>\r\n<template>\r\n  <el-popover\r\n    ref=\"popover\"\r\n    placement=\"bottom-start\"\r\n    trigger=\"click\"\r\n    @show=\"onShowPopover\"\r\n    @hide=\"onHidePopover\"\r\n  >\r\n    <tree-conent\r\n      :options=\"options\"\r\n      v-model=\"valueModel\"\r\n      @selected=\"change\"\r\n      @fn-init-label=\"initLabel\"\r\n    ></tree-conent>\r\n    <el-input\r\n      slot=\"reference\"\r\n      ref=\"input\"\r\n      v-model=\"labelmodel\"\r\n      clearable\r\n      suffix-icon=\"el-icon-arrow-down\"\r\n      @change=\"valueModel=''\"\r\n      :placeholder=\"placeholder\"\r\n    ></el-input>\r\n  </el-popover>\r\n</template>\r\n<script>\r\nimport treeConent from \"@/components/treePersonCon\";\r\nexport default {\r\n  name: \"tree-person\",\r\n  props: {\r\n    placeholder: \"请选择\",\r\n    value: \"\",\r\n    labelmodel:''\r\n  },\r\n  created(){\r\n\r\n  },\r\n  components: { treeConent },\r\n  data() {\r\n    return {\r\n      options: [],\r\n      valueModel: this.value\r\n    };\r\n  },\r\n  watch: {\r\n    value(val) {\r\n      this.valueModel = val;\r\n    },\r\n    valueModel(val) {\r\n      this.$emit(\"input\", val);\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getList();\r\n  },\r\n  methods: {\r\n    async getList() {\r\n      let list = await this.request(this.api.user.DEPART_PERSON_LIST_POST);\r\n      this.options = list;\r\n    },\r\n    change(val, name) {\r\n      this.$emit('upData:labelmodel', name)\r\n      // this.$emit(\"selected\", val, name);\r\n      this.$emit(\"input\", {\r\n        leaderId:val,\r\n        leaderName:name\r\n      });\r\n      this.onCloseTree();\r\n    },\r\n    initLabel(name) {\r\n      this.$emit('upData:labelmodel', name)\r\n    },\r\n    // 隐藏树状菜单\r\n    onCloseTree() {\r\n      this.$refs.popover.showPopper = false;\r\n    },\r\n    // 显示时触发\r\n    onShowPopover() {},\r\n    // 隐藏时触发\r\n    onHidePopover() {\r\n      this.$emit(\"input\", this.valueModel);\r\n    }\r\n  }\r\n};\r\n</script>\r\n"]}]}