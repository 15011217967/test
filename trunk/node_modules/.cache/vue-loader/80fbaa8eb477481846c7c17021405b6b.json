{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\product\\commodity\\sn_prints_list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\product\\commodity\\sn_prints_list.vue","mtime":1577180190317},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport axios from \"axios\";\r\n\r\nimport BatchPrintsDialog from \"@/components/Prints/BatchPrintsDialog\";\r\nimport { getToken, TokenKey } from \"@/utils/auth\";\r\n/**\r\n * sn打印管理\r\n */\r\nlet selectPrintData = [];\r\nexport default {\r\n  components: {\r\n    BatchPrintsDialog\r\n  },\r\n  data() {\r\n    return {\r\n      filtersData: {\r\n        pageIndex: 1, //当前页码\r\n        pageSize: 10, //每页数量\r\n        productCode: \"\",\r\n        relationOrgId: \"\",\r\n        code: \"\",\r\n        name: \"\",\r\n        sn: \"\",\r\n        tagBrandId: \"\" //品牌ID\r\n      },\r\n      tableListData: [],\r\n      total: null,\r\n      //品牌\r\n      brandOptions: [],\r\n      relationDepOptions: [],\r\n      exportExcelData: []\r\n    };\r\n  },\r\n\r\n  created() {\r\n    this.init();\r\n    this.getTableList();\r\n    this.getDepartList();\r\n    this.getBrandOptions();\r\n  },\r\n  methods: {\r\n    init() {\r\n      selectPrintData = [];\r\n      this.exportExcelData = [];\r\n    },\r\n    getDepartList() {\r\n      this.request(this.api.user.userCompany_getUserAllDepartByUserId,{}).then(res => {\r\n        this.relationDepOptions = res;\r\n      });\r\n    },\r\n    getBrandOptions() {\r\n      this.request(this.api.product.productBrand_list, {}).then(data => {\r\n        let _data = data.data;\r\n        this.brandOptions = _data;\r\n      });\r\n    },\r\n    //获取列表\r\n    getTableList() {\r\n      this.request(this.api.product.productGoodsSn_list, this.filtersData).then(\r\n        data => {\r\n          let _data = data.data;\r\n          this.tableListData = _data;\r\n          this.total = data.totalCount;\r\n        }\r\n      );\r\n    },\r\n    //当前选中的数据\r\n    handleSelectionChange(_data) {\r\n      let arr = [];\r\n      for (let i = 0; i < _data.length; i++) {\r\n        arr.push({\r\n          sn: _data[i].sn,\r\n          productGoodsCode: _data[i].code\r\n        });\r\n      }\r\n      selectPrintData = arr;\r\n      this.exportExcelData = _data;\r\n    },\r\n    batchPrints() {\r\n      if (selectPrintData.length > 0) {\r\n        this.$refs.batchPrintsRef.popupInit(selectPrintData);\r\n      } else {\r\n        this.$message.error(\"请选择要重新打印的数据！\");\r\n      }\r\n    },\r\n    //单个打印\r\n    singlePrint(_data) {\r\n      let arr = [{ sn: _data.sn, productGoodsCode: _data.code }];\r\n      this.$refs.batchPrintsRef.popupInit(arr);\r\n    },\r\n    //导出SN\r\n    exportExcel() {\r\n      if (this.exportExcelData.length > 0) {\r\n        require.ensure([], () => {\r\n          let { export_json_to_excel } = require(\"@/vendor/Export2Excel\");\r\n          let tHeader = [\r\n            \"机构名称\",\r\n            \"品牌\",\r\n            \"商品款号\",\r\n            \"商品编码\",\r\n            \"SN码\",\r\n            \"商品名称\"\r\n          ];\r\n          // 上面设置Excel的表格第一行的标题\r\n          let filterVal = [\r\n            \"relationDepName\",\r\n            \"tagBrandName\",\r\n            \"productCode\",\r\n            \"code\",\r\n            \"sn\",\r\n            \"name\"\r\n          ];\r\n          // 上面的index、nickName、name是tableData里对象的属性\r\n          let list = this.exportExcelData; //把data里的multipleSelectionData存到list\r\n          let data = this.formatJson(filterVal, list);\r\n          export_json_to_excel(tHeader, data, \"SN码打印记录\");\r\n        });\r\n      } else {\r\n        this.$message.error(\"请勾选导出的数据\");\r\n        //    let filtersData=this.filtersData;\r\n        //  let  formData ={\r\n        //     productCode:filtersData.productCode,\r\n        //     relationOrgId: filtersData.relationOrgId,\r\n        //     code: filtersData.code,\r\n        //     name: filtersData.name,\r\n        //     sn: filtersData.sn,\r\n        //     tagBrandId:filtersData.tagBrandId //品牌ID\r\n        //   };\r\n        //  let url =`http://11.1.1.143:9001/${this.api.product.productGoodsSn_export.url}`;\r\n        //  console.log(this.api.product.productGoodsSn_export);\r\n         \r\n        // axios({\r\n        //     url:url,\r\n        //     data:formData,\r\n        //     method:'post',\r\n        //     headers:{\r\n        //         \"accessToken\":getToken(),\r\n        //     },\r\n        //     responseType: 'blob', //二进制流\r\n        // }).then(function (res) {\r\n        //     if(!res) return\r\n        //     let blob = new Blob([res.data], {type: 'application/vnd.ms-excel;charset=utf-8'})\r\n        //     let url = window.URL.createObjectURL(blob);\r\n        //     let aLink = document.createElement(\"a\");\r\n        //     aLink.style.display = \"none\";\r\n        //     aLink.href = url;\r\n        //     aLink.setAttribute(\"download\", \"SN码打印记录.xlsx\");\r\n        //     document.body.appendChild(aLink);\r\n        //     aLink.click();\r\n        //     document.body.removeChild(aLink); \r\n        //     window.URL.revokeObjectURL(url); \r\n        // }).catch(function (error) {\r\n        //     console.log(error)\r\n        // });\r\n        \r\n      }\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => v[j]));\r\n    },\r\n    //搜索\r\n    handleSearch() {\r\n      this.filtersData.pageIndex = 1;\r\n      this.getTableList();\r\n    },\r\n    //清空重置\r\n    handleResetFilters(formName) {\r\n      this.$refs[formName].resetFields();\r\n    },\r\n    //当前页数修改时发生改变\r\n    handleCurrentChange(val) {\r\n      this.filtersData.pageIndex = val;\r\n      this.getTableList();\r\n    },\r\n    // 每页显示多少条时发生改变\r\n    handleSizeChange(val) {\r\n      this.filtersData.pageSize = val;\r\n      this.getTableList();\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["sn_prints_list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"sn_prints_list.vue","sourceRoot":"src/views/product/commodity","sourcesContent":["<!--\r\n * @Description: SN码打印记录\r\n * @Author: elephant\r\n * @Date: 2019-09-18 15:20:22\r\n * @LastEditTime : 2019-12-24 11:19:32\r\n * @LastEditors  : Please set LastEditors\r\n -->\r\n<template>\r\n  <div>\r\n    <div class=\"item-margin\">\r\n      <el-form\r\n        class=\"item-form\"\r\n        :model=\"filtersData\"\r\n        label-width=\"90px\"\r\n        size=\"small\"\r\n        ref=\"filtersForm\"\r\n        inline\r\n      >\r\n        <el-form-item  prop=\"relationOrgId\" label=\"隶属机构：\">\r\n          <el-select class=\"input-w\" placeholder=\"请选择\" v-model=\"filtersData.relationOrgId\">\r\n            <el-option\r\n              v-for=\"item in relationDepOptions\"\r\n              :key=\"item.id\"\r\n              :label=\"item.name\"\r\n              :value=\"item.id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item prop=\"tagBrandId\" label=\"品牌：\">\r\n          <el-select class=\"input-w\" placeholder=\"请选择\" v-model=\"filtersData.tagBrandId\">\r\n            <el-option\r\n              v-for=\"item in brandOptions\"\r\n              :key=\"item.id\"\r\n              :label=\"item.name\"\r\n              :value=\"item.id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item prop=\"productCode\" label=\"商品款号：\">\r\n          <el-input class=\"input-w\" placeholder=\"请输入内容\" v-model=\"filtersData.productCode\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"code\" label=\"商品编码：\">\r\n          <el-input class=\"input-w\" placeholder=\"请输入内容\" v-model=\"filtersData.code\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"sn\" label=\"SN码：\">\r\n          <el-input class=\"input-w\" placeholder=\"请输入内容\" v-model=\"filtersData.sn\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"name\" label=\"商品名称：\">\r\n          <el-input class=\"input-w\" placeholder=\"请输入内容\" v-model=\"filtersData.name\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button size=\"small\" @click=\"handleSearch\" type=\"primary\" plain>搜索</el-button>\r\n          <el-button size=\"small\" @click=\"handleResetFilters('filtersForm')\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n    <!--table  -->\r\n    <div class=\"item-margin\">\r\n      <div class=\"item-cont\">\r\n        <el-button size=\"small\" type=\"primary\" @click=\"batchPrints\">批量重打</el-button>\r\n        <el-button plain @click=\"exportExcel\" size=\"small\">导出</el-button>\r\n      </div>\r\n      <div class=\"item-table\">\r\n        <el-table\r\n          :data=\"tableListData\"\r\n          stripe\r\n          empty-text=\"暂无数据\"\r\n          header-align=\"center\"\r\n          header-row-class-name=\"item-table-header\"\r\n          :highlight-current-row=\"true\"\r\n          @selection-change=\"handleSelectionChange\"\r\n        >\r\n          <el-table-column type=\"selection\" width=\"50\"></el-table-column>\r\n          <el-table-column prop=\"ownerName\" align=\"center\" label=\"货主名称\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"relationDepName\" align=\"center\" label=\"机构名称\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"tagBrandName\" align=\"center\" label=\"品牌\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"productCode\" align=\"center\" label=\"商品款号\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"code\" align=\"center\" label=\"商品编码\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"sn\" align=\"center\" label=\"SN码\" min-width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"name\" align=\"center\" label=\"商品名称\" min-width=\"100\"></el-table-column>\r\n          <el-table-column\r\n            fixed=\"right\"\r\n            label-class-name=\"text-center\"\r\n            class-name=\"text-center\"\r\n            align=\"center\"\r\n            label=\"操作\"\r\n            width=\"150\"\r\n          >\r\n            <template slot-scope=\"scope\">\r\n              <el-button @click=\"singlePrint(scope.row)\" type=\"text\" size=\"small\">重新打印</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n        <div class=\"pagination mt-10 mb-20\">\r\n          <el-pagination\r\n            class=\"mr-20\"\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"filtersData.pageIndex\"\r\n            :page-sizes=\"[10, 20, 30,40,50]\"\r\n            :page-size=\"filtersData.pageSize\"\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=\"total\"\r\n          ></el-pagination>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!--table END  -->\r\n    <!-- 打印 -->\r\n    <batch-prints-dialog ref=\"batchPrintsRef\"></batch-prints-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nimport BatchPrintsDialog from \"@/components/Prints/BatchPrintsDialog\";\r\nimport { getToken, TokenKey } from \"@/utils/auth\";\r\n/**\r\n * sn打印管理\r\n */\r\nlet selectPrintData = [];\r\nexport default {\r\n  components: {\r\n    BatchPrintsDialog\r\n  },\r\n  data() {\r\n    return {\r\n      filtersData: {\r\n        pageIndex: 1, //当前页码\r\n        pageSize: 10, //每页数量\r\n        productCode: \"\",\r\n        relationOrgId: \"\",\r\n        code: \"\",\r\n        name: \"\",\r\n        sn: \"\",\r\n        tagBrandId: \"\" //品牌ID\r\n      },\r\n      tableListData: [],\r\n      total: null,\r\n      //品牌\r\n      brandOptions: [],\r\n      relationDepOptions: [],\r\n      exportExcelData: []\r\n    };\r\n  },\r\n\r\n  created() {\r\n    this.init();\r\n    this.getTableList();\r\n    this.getDepartList();\r\n    this.getBrandOptions();\r\n  },\r\n  methods: {\r\n    init() {\r\n      selectPrintData = [];\r\n      this.exportExcelData = [];\r\n    },\r\n    getDepartList() {\r\n      this.request(this.api.user.userCompany_getUserAllDepartByUserId,{}).then(res => {\r\n        this.relationDepOptions = res;\r\n      });\r\n    },\r\n    getBrandOptions() {\r\n      this.request(this.api.product.productBrand_list, {}).then(data => {\r\n        let _data = data.data;\r\n        this.brandOptions = _data;\r\n      });\r\n    },\r\n    //获取列表\r\n    getTableList() {\r\n      this.request(this.api.product.productGoodsSn_list, this.filtersData).then(\r\n        data => {\r\n          let _data = data.data;\r\n          this.tableListData = _data;\r\n          this.total = data.totalCount;\r\n        }\r\n      );\r\n    },\r\n    //当前选中的数据\r\n    handleSelectionChange(_data) {\r\n      let arr = [];\r\n      for (let i = 0; i < _data.length; i++) {\r\n        arr.push({\r\n          sn: _data[i].sn,\r\n          productGoodsCode: _data[i].code\r\n        });\r\n      }\r\n      selectPrintData = arr;\r\n      this.exportExcelData = _data;\r\n    },\r\n    batchPrints() {\r\n      if (selectPrintData.length > 0) {\r\n        this.$refs.batchPrintsRef.popupInit(selectPrintData);\r\n      } else {\r\n        this.$message.error(\"请选择要重新打印的数据！\");\r\n      }\r\n    },\r\n    //单个打印\r\n    singlePrint(_data) {\r\n      let arr = [{ sn: _data.sn, productGoodsCode: _data.code }];\r\n      this.$refs.batchPrintsRef.popupInit(arr);\r\n    },\r\n    //导出SN\r\n    exportExcel() {\r\n      if (this.exportExcelData.length > 0) {\r\n        require.ensure([], () => {\r\n          let { export_json_to_excel } = require(\"@/vendor/Export2Excel\");\r\n          let tHeader = [\r\n            \"机构名称\",\r\n            \"品牌\",\r\n            \"商品款号\",\r\n            \"商品编码\",\r\n            \"SN码\",\r\n            \"商品名称\"\r\n          ];\r\n          // 上面设置Excel的表格第一行的标题\r\n          let filterVal = [\r\n            \"relationDepName\",\r\n            \"tagBrandName\",\r\n            \"productCode\",\r\n            \"code\",\r\n            \"sn\",\r\n            \"name\"\r\n          ];\r\n          // 上面的index、nickName、name是tableData里对象的属性\r\n          let list = this.exportExcelData; //把data里的multipleSelectionData存到list\r\n          let data = this.formatJson(filterVal, list);\r\n          export_json_to_excel(tHeader, data, \"SN码打印记录\");\r\n        });\r\n      } else {\r\n        this.$message.error(\"请勾选导出的数据\");\r\n        //    let filtersData=this.filtersData;\r\n        //  let  formData ={\r\n        //     productCode:filtersData.productCode,\r\n        //     relationOrgId: filtersData.relationOrgId,\r\n        //     code: filtersData.code,\r\n        //     name: filtersData.name,\r\n        //     sn: filtersData.sn,\r\n        //     tagBrandId:filtersData.tagBrandId //品牌ID\r\n        //   };\r\n        //  let url =`http://11.1.1.143:9001/${this.api.product.productGoodsSn_export.url}`;\r\n        //  console.log(this.api.product.productGoodsSn_export);\r\n         \r\n        // axios({\r\n        //     url:url,\r\n        //     data:formData,\r\n        //     method:'post',\r\n        //     headers:{\r\n        //         \"accessToken\":getToken(),\r\n        //     },\r\n        //     responseType: 'blob', //二进制流\r\n        // }).then(function (res) {\r\n        //     if(!res) return\r\n        //     let blob = new Blob([res.data], {type: 'application/vnd.ms-excel;charset=utf-8'})\r\n        //     let url = window.URL.createObjectURL(blob);\r\n        //     let aLink = document.createElement(\"a\");\r\n        //     aLink.style.display = \"none\";\r\n        //     aLink.href = url;\r\n        //     aLink.setAttribute(\"download\", \"SN码打印记录.xlsx\");\r\n        //     document.body.appendChild(aLink);\r\n        //     aLink.click();\r\n        //     document.body.removeChild(aLink); \r\n        //     window.URL.revokeObjectURL(url); \r\n        // }).catch(function (error) {\r\n        //     console.log(error)\r\n        // });\r\n        \r\n      }\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => v[j]));\r\n    },\r\n    //搜索\r\n    handleSearch() {\r\n      this.filtersData.pageIndex = 1;\r\n      this.getTableList();\r\n    },\r\n    //清空重置\r\n    handleResetFilters(formName) {\r\n      this.$refs[formName].resetFields();\r\n    },\r\n    //当前页数修改时发生改变\r\n    handleCurrentChange(val) {\r\n      this.filtersData.pageIndex = val;\r\n      this.getTableList();\r\n    },\r\n    // 每页显示多少条时发生改变\r\n    handleSizeChange(val) {\r\n      this.filtersData.pageSize = val;\r\n      this.getTableList();\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"less\" scoped>\r\n</style>\r\n"]}]}