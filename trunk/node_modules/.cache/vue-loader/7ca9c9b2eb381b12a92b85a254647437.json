{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\orders\\business\\purchase\\purchaseOrder_editor.vue?vue&type=template&id=b9c5f7c4&scoped=true&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\orders\\business\\purchase\\purchaseOrder_editor.vue","mtime":1576844349187},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1558492728890},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"middle\" }, [\n      _c(\"span\", [_vm._v(\"基本信息\")]),\n      _c(\n        \"div\",\n        { staticClass: \"input-div\" },\n        [\n          _c(\n            \"el-form\",\n            {\n              ref: \"formData\",\n              staticClass: \"demo-ruleForm\",\n              attrs: {\n                inline: true,\n                model: _vm.signData,\n                \"label-width\": \"120px\",\n                rules: _vm.rules\n              }\n            },\n            [\n              _c(\"div\", { staticClass: \"data-div\" }, [\n                _c(\n                  \"div\",\n                  [\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"组织机构：\", prop: \"organization\" } },\n                      [\n                        _c(\"el-input\", {\n                          attrs: { disabled: \"\" },\n                          model: {\n                            value: _vm.signData.organization,\n                            callback: function($$v) {\n                              _vm.$set(_vm.signData, \"organization\", $$v)\n                            },\n                            expression: \"signData.organization\"\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                ),\n                _c(\n                  \"div\",\n                  [\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"供应商：\", prop: \"supplier\" } },\n                      [\n                        _c(\n                          \"el-select\",\n                          {\n                            attrs: { disabled: \"\", placeholder: \"请选择\" },\n                            on: { change: _vm.selectSupplierChange },\n                            model: {\n                              value: _vm.signData.supplier,\n                              callback: function($$v) {\n                                _vm.$set(_vm.signData, \"supplier\", $$v)\n                              },\n                              expression: \"signData.supplier\"\n                            }\n                          },\n                          _vm._l(_vm.signData.optionData, function(item) {\n                            return _c(\"el-option\", {\n                              key: item.id,\n                              attrs: { label: item.name, value: item.name }\n                            })\n                          }),\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                ),\n                _c(\n                  \"div\",\n                  [\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"采购合同号：\", prop: \"\" } },\n                      [\n                        _c(\"el-input\", {\n                          attrs: { placeholder: \"请输入内容\" },\n                          model: {\n                            value: _vm.signData.contractSn,\n                            callback: function($$v) {\n                              _vm.$set(_vm.signData, \"contractSn\", $$v)\n                            },\n                            expression: \"signData.contractSn\"\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              ]),\n              _c(\"div\", { staticClass: \"middle-data-div\" }, [\n                _c(\n                  \"div\",\n                  [\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"交货日期：\", prop: \"\" } },\n                      [\n                        _c(\"el-date-picker\", {\n                          attrs: { type: \"date\", placeholder: \"选择日期\" },\n                          model: {\n                            value: _vm.signData.deliveryTime,\n                            callback: function($$v) {\n                              _vm.$set(_vm.signData, \"deliveryTime\", $$v)\n                            },\n                            expression: \"signData.deliveryTime\"\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                ),\n                _c(\n                  \"div\",\n                  [\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"合同签订日期：\", prop: \"\" } },\n                      [\n                        _c(\"el-date-picker\", {\n                          attrs: { type: \"date\", placeholder: \"选择日期\" },\n                          model: {\n                            value: _vm.signData.signTime,\n                            callback: function($$v) {\n                              _vm.$set(_vm.signData, \"signTime\", $$v)\n                            },\n                            expression: \"signData.signTime\"\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              ]),\n              _c(\"div\", { staticClass: \"last-data-div\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"el-form-item\" },\n                  [\n                    _c(\n                      \"el-form-item\",\n                      {\n                        attrs: {\n                          label: \"是否按税点采购：\",\n                          \"label-width\": \"140px\"\n                        }\n                      },\n                      [\n                        _c(\n                          \"el-radio\",\n                          {\n                            attrs: { label: \"1\" },\n                            on: { change: _vm.radioStatusChange },\n                            model: {\n                              value: _vm.signData.radio,\n                              callback: function($$v) {\n                                _vm.$set(_vm.signData, \"radio\", $$v)\n                              },\n                              expression: \"signData.radio\"\n                            }\n                          },\n                          [_vm._v(\"否\")]\n                        ),\n                        _c(\n                          \"el-radio\",\n                          {\n                            attrs: { label: \"2\" },\n                            on: { change: _vm.radioStatusChange },\n                            model: {\n                              value: _vm.signData.radio,\n                              callback: function($$v) {\n                                _vm.$set(_vm.signData, \"radio\", $$v)\n                              },\n                              expression: \"signData.radio\"\n                            }\n                          },\n                          [_vm._v(\"是\")]\n                        ),\n                        _c(\n                          \"span\",\n                          { staticStyle: { \"margin-right\": \"10px\" } },\n                          [_vm._v(\"税点\")]\n                        ),\n                        _c(\n                          \"el-select\",\n                          {\n                            attrs: {\n                              disabled: _vm.signData.radio == 1,\n                              placeholder: \"请选择\"\n                            },\n                            on: { change: _vm.taxPointChange },\n                            model: {\n                              value: _vm.signData.tax,\n                              callback: function($$v) {\n                                _vm.$set(_vm.signData, \"tax\", $$v)\n                              },\n                              expression: \"signData.tax\"\n                            }\n                          },\n                          [\n                            _c(\"el-option\", {\n                              attrs: { label: \"3%\", value: \"3%\" }\n                            }),\n                            _c(\"el-option\", {\n                              attrs: { label: \"13%\", value: \"13%\" }\n                            })\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              ])\n            ]\n          )\n        ],\n        1\n      ),\n      _c(\"div\", { staticClass: \"table-view\" }, [\n        _c(\"div\", { staticClass: \"title-div\" }, [\n          _c(\"span\", [_vm._v(\"商品信息\")]),\n          _c(\"span\", { on: { click: _vm.selectShopClickEvent } }, [\n            _vm._v(\"选择商品\")\n          ])\n        ]),\n        _c(\n          \"div\",\n          { staticClass: \"table-div\" },\n          [\n            _c(\n              \"el-table\",\n              {\n                staticStyle: { width: \"100%\" },\n                attrs: {\n                  data: _vm.signData.channelOrderGoodsVOList,\n                  \"header-row-class-name\": \"item-table-header\"\n                }\n              },\n              [\n                _c(\"el-table-column\", {\n                  attrs: { prop: \"productCode\", label: \"商品款号\", width: \"\" }\n                }),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    prop: \"code\",\n                    label: \"商品货号\",\n                    width: \"\",\n                    align: \"center\"\n                  }\n                }),\n                _c(\"el-table-column\", {\n                  attrs: { label: \"商品图片\", width: \"\", align: \"center\" },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"default\",\n                      fn: function(scope) {\n                        return [\n                          _c(\"img\", {\n                            staticStyle: { width: \"32px\", height: \"32px\" },\n                            attrs: { src: scope.row.image }\n                          })\n                        ]\n                      }\n                    }\n                  ])\n                }),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    prop: \"name\",\n                    label: \"商品名称\",\n                    width: \"\",\n                    align: \"center\"\n                  }\n                }),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    prop: \"type\",\n                    label: \"商品类型\",\n                    width: \"\",\n                    align: \"center\"\n                  },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"default\",\n                      fn: function(scope) {\n                        return [\n                          _c(\"span\", [\n                            _vm._v(\n                              _vm._s(scope.row.type ? scope.row.type : \"--\")\n                            )\n                          ])\n                        ]\n                      }\n                    }\n                  ])\n                }),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    prop: \"brandName\",\n                    label: \"品牌\",\n                    width: \"\",\n                    align: \"center\"\n                  }\n                }),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    prop: \"category\",\n                    label: \"商品品类\",\n                    width: \"\",\n                    align: \"center\"\n                  },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"default\",\n                      fn: function(scope) {\n                        return [\n                          _c(\"span\", [\n                            _vm._v(\n                              _vm._s(\n                                scope.row.category ? scope.row.category : \"--\"\n                              )\n                            )\n                          ])\n                        ]\n                      }\n                    }\n                  ])\n                }),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    prop: \"originalCode\",\n                    label: \"原始款号\",\n                    width: \"\",\n                    align: \"center\"\n                  },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"default\",\n                      fn: function(scope) {\n                        return [\n                          _c(\"span\", [\n                            _vm._v(\n                              _vm._s(\n                                scope.row.originalCode\n                                  ? scope.row.originalCode\n                                  : \"--\"\n                              )\n                            )\n                          ])\n                        ]\n                      }\n                    }\n                  ])\n                }),\n                _c(\"el-table-column\", {\n                  attrs: { label: \"规格属性\", width: \"\", align: \"center\" },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"default\",\n                      fn: function(scope) {\n                        return [\n                          _c(\"span\", [\n                            _vm._v(\n                              \"颜色：\" +\n                                _vm._s(scope.row.color ? scope.row.color : \"--\")\n                            )\n                          ]),\n                          _c(\"br\"),\n                          _c(\"span\", [\n                            _vm._v(\n                              \"尺寸：\" +\n                                _vm._s(scope.row.size ? scope.row.size : \"--\")\n                            )\n                          ])\n                        ]\n                      }\n                    }\n                  ])\n                }),\n                _c(\"el-table-column\", {\n                  attrs: { label: \"采购单价\", width: \"\", align: \"center\" },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"default\",\n                      fn: function(scope) {\n                        return [\n                          _c(\"el-input\", {\n                            attrs: {\n                              placeholder: \"请输入内容\",\n                              type: \"number\"\n                            },\n                            on: { change: _vm.purchasePriceChange },\n                            model: {\n                              value: scope.row.purchasePrice,\n                              callback: function($$v) {\n                                _vm.$set(scope.row, \"purchasePrice\", $$v)\n                              },\n                              expression: \"scope.row.purchasePrice\"\n                            }\n                          })\n                        ]\n                      }\n                    }\n                  ])\n                }),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    prop: \"tax\",\n                    label: \"税点\",\n                    width: \"\",\n                    align: \"center\"\n                  },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"default\",\n                      fn: function(scope) {\n                        return [\n                          _c(\"span\", [\n                            _vm._v(_vm._s(scope.row.tax ? scope.row.tax : \"--\"))\n                          ])\n                        ]\n                      }\n                    }\n                  ])\n                }),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    label: \"采购单价(含税)\",\n                    width: \"\",\n                    align: \"center\"\n                  },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"default\",\n                      fn: function(scope) {\n                        return [\n                          scope.row.actualAmount\n                            ? _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: scope.row.actualAmount,\n                                    expression: \"scope.row.actualAmount\"\n                                  }\n                                ],\n                                staticClass: \"actual-amount-input\",\n                                attrs: {\n                                  type: \"number\",\n                                  placeholder: \"请输入内容\"\n                                },\n                                domProps: { value: scope.row.actualAmount },\n                                on: {\n                                  input: [\n                                    function($event) {\n                                      if ($event.target.composing) {\n                                        return\n                                      }\n                                      _vm.$set(\n                                        scope.row,\n                                        \"actualAmount\",\n                                        $event.target.value\n                                      )\n                                    },\n                                    function($event) {\n                                      return _vm.actualAmountChange(scope.row)\n                                    }\n                                  ]\n                                }\n                              })\n                            : _c(\"span\", [_vm._v(\"--\")])\n                        ]\n                      }\n                    }\n                  ])\n                }),\n                _c(\"el-table-column\", {\n                  attrs: { label: \"数量\", width: \"200\", align: \"center\" },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"default\",\n                      fn: function(scope) {\n                        return [\n                          _c(\"el-input-number\", {\n                            directives: [\n                              {\n                                name: \"enter-number\",\n                                rawName: \"v-enter-number\"\n                              }\n                            ],\n                            attrs: { min: 0 },\n                            on: {\n                              change: function($event) {\n                                return _vm.shopNumberChange($event, scope.row)\n                              }\n                            },\n                            model: {\n                              value: scope.row.num,\n                              callback: function($$v) {\n                                _vm.$set(scope.row, \"num\", $$v)\n                              },\n                              expression: \"scope.row.num\"\n                            }\n                          })\n                        ]\n                      }\n                    }\n                  ])\n                }),\n                _c(\"el-table-column\", {\n                  attrs: { label: \"采购金额\", width: \"\", align: \"center\" },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"default\",\n                      fn: function(scope) {\n                        return [\n                          _c(\"el-input\", {\n                            attrs: { placeholder: \"请输入内容\" },\n                            on: {\n                              input: function($event) {\n                                return _vm.amountChange($event, scope.row)\n                              }\n                            },\n                            model: {\n                              value: scope.row.amount,\n                              callback: function($$v) {\n                                _vm.$set(scope.row, \"amount\", $$v)\n                              },\n                              expression: \"scope.row.amount\"\n                            }\n                          })\n                        ]\n                      }\n                    }\n                  ])\n                }),\n                _c(\"el-table-column\", {\n                  attrs: { label: \"备注\", width: \"\", align: \"center\" },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"default\",\n                      fn: function(scope) {\n                        return [\n                          _c(\"el-input\", {\n                            attrs: { placeholder: \"请输入内容\" },\n                            model: {\n                              value: scope.row.remarks,\n                              callback: function($$v) {\n                                _vm.$set(scope.row, \"remarks\", $$v)\n                              },\n                              expression: \"scope.row.remarks\"\n                            }\n                          })\n                        ]\n                      }\n                    }\n                  ])\n                })\n              ],\n              1\n            )\n          ],\n          1\n        ),\n        _c(\"div\", { staticClass: \"money-div\" }, [\n          _c(\"span\", [\n            _vm._v(\n              \"采购商品总金额：￥\" +\n                _vm._s(_vm.signData.amount ? _vm.signData.amount : \"0.00\")\n            )\n          ]),\n          _c(\"div\", { staticClass: \"money-content\" }, [\n            _c(\"span\", [_vm._v(\"其他扣减项金额：\")]),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.signData.preferentialRemarks,\n                  expression: \"signData.preferentialRemarks\"\n                }\n              ],\n              staticClass: \"input-price\",\n              attrs: { type: \"text\", placeholder: \"填写优惠项\" },\n              domProps: { value: _vm.signData.preferentialRemarks },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.$set(\n                    _vm.signData,\n                    \"preferentialRemarks\",\n                    $event.target.value\n                  )\n                }\n              }\n            }),\n            _c(\"span\", [_vm._v(\"￥\")]),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.signData.preferentialAmount,\n                  expression: \"signData.preferentialAmount\"\n                }\n              ],\n              staticClass: \"input-price\",\n              attrs: {\n                type: \"number\",\n                min: \"0\",\n                max: \"100\",\n                placeholder: \"0.00\"\n              },\n              domProps: { value: _vm.signData.preferentialAmount },\n              on: {\n                change: _vm.priceInputChangeEvent,\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.$set(\n                    _vm.signData,\n                    \"preferentialAmount\",\n                    $event.target.value\n                  )\n                }\n              }\n            })\n          ]),\n          _c(\"span\", [\n            _vm._v(\n              \"采购应付金额：￥\" +\n                _vm._s(\n                  _vm.signData.actualAmount ? _vm.signData.actualAmount : \"0.00\"\n                )\n            )\n          ])\n        ])\n      ]),\n      _c(\n        \"div\",\n        { staticClass: \"price-msg\" },\n        [\n          _c(\"span\", [_vm._v(\"付款信息\")]),\n          _c(\n            \"el-form\",\n            {\n              ref: \"formInlineFrom\",\n              staticClass: \"demo-form-inline\",\n              attrs: { inline: true, model: _vm.signData }\n            },\n            [\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"付款方式：\" } },\n                [\n                  _c(\"code-set\", {\n                    attrs: { code: \"COM003\" },\n                    model: {\n                      value: _vm.signData.paymentCode,\n                      callback: function($$v) {\n                        _vm.$set(_vm.signData, \"paymentCode\", $$v)\n                      },\n                      expression: \"signData.paymentCode\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"支付流水号(支付单据)：\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { placeholder: \"请输入内容\" },\n                    model: {\n                      value: _vm.signData.orderTradeNo,\n                      callback: function($$v) {\n                        _vm.$set(_vm.signData, \"orderTradeNo\", $$v)\n                      },\n                      expression: \"signData.orderTradeNo\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"实付金额：\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { type: \"number\", placeholder: \"请输入内容\" },\n                    on: { input: _vm.validAmountValueChangeEvent },\n                    model: {\n                      value: _vm.signData.validAmount,\n                      callback: function($$v) {\n                        _vm.$set(_vm.signData, \"validAmount\", $$v)\n                      },\n                      expression: \"signData.validAmount\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\"el-form-item\", [\n                _c(\n                  \"div\",\n                  { staticClass: \"block\" },\n                  [\n                    _c(\"span\", { staticClass: \"demonstration\" }, [\n                      _vm._v(\"支付时间:\")\n                    ]),\n                    _c(\"el-date-picker\", {\n                      attrs: { type: \"date\", placeholder: \"选择日期\" },\n                      model: {\n                        value: _vm.signData.createTime,\n                        callback: function($$v) {\n                          _vm.$set(_vm.signData, \"createTime\", $$v)\n                        },\n                        expression: \"signData.createTime\"\n                      }\n                    })\n                  ],\n                  1\n                )\n              ])\n            ],\n            1\n          ),\n          _c(\"span\", { staticClass: \"other-msg\" }, [_vm._v(\"其他信息\")]),\n          _c(\n            \"div\",\n            { staticClass: \"remarks-textarea\" },\n            [\n              _c(\"span\", [_vm._v(\"采购备注：\")]),\n              _c(\"el-input\", {\n                staticClass: \"textarea\",\n                attrs: {\n                  type: \"textarea\",\n                  rows: 2,\n                  placeholder: \"请输入内容\",\n                  resize: \"none\"\n                },\n                model: {\n                  value: _vm.signData.remarks,\n                  callback: function($$v) {\n                    _vm.$set(_vm.signData, \"remarks\", $$v)\n                  },\n                  expression: \"signData.remarks\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            { staticClass: \"btn-div\" },\n            [\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\", size: \"small\" },\n                  on: { click: _vm.primaryBtnClick }\n                },\n                [_vm._v(\"确认\")]\n              ),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { plain: \"\", size: \"small\" },\n                  on: { click: _vm.plainBtnClick }\n                },\n                [_vm._v(\"取消\")]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}