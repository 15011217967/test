{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\store\\store\\store_info_edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\store\\store\\store_info_edit.vue","mtime":1572415124845},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport axios from 'axios'\r\nimport codeSet from '@/components/codeSet'\r\nimport {getToken} from '@/utils/auth'\r\nimport division from \"@/components/division\";\r\nimport treeDept from \"@/components/treeDept\";\r\nimport treePerson from \"@/components/treePerson\";\r\nimport businessTime from \"../components/businessTime\";\r\nimport ElUploadImg from \"@/components/uploadImg/el_upload_img_multi\";\r\nimport { mapGetters } from 'vuex';\r\nimport OrganizationSelect from \"@/views/collocation/components/OrganizationSelect\";\r\nimport * as userTypes from \"@/types/userConfig\";\r\nimport { setTimeout, clearTimeout } from 'timers';\r\nimport Vue from 'vue'\r\nimport VueJsonp from 'vue-jsonp'\r\nVue.use(VueJsonp);\r\nexport default {\r\n  data() {\r\n    return {\r\n      isAddShow:false,\r\n      // 上传图片路径\r\n      imgApi:this.api.content.aLiYun_upload,\r\n      businesstime:false,\r\n      // 是否编辑或查看页\r\n      isEcho:this.$route.query.isEcho,\r\n      // 是否只可读\r\n      isRead:this.$route.query.isRead,\r\n      // 当前选中的菜单\r\n      activeName: \"first\",\r\n      // 门店弹框\r\n      dialogTableVisible:false,\r\n      // 地图\r\n      dialogMap:false,\r\n      // 地图只执行一次\r\n      dialogMapTF:true,\r\n      // 门店负责人列表\r\n      principal_list:[],\r\n      // 搜索地址列表\r\n      searchAddress_list:[],\r\n      // 隶属机构\r\n      organization_list:[{\r\n        id:'01',\r\n        name:'研发部'\r\n      },{\r\n        id:'02',\r\n        name:'商品部'\r\n      },{\r\n        id:'03',\r\n        name:'测试部'\r\n      }],\r\n      // 启用搭配服务列表\r\n      designService_list:[{\r\n        id:1,\r\n        name:'是'\r\n      },{\r\n        id:0,\r\n        name:'否'\r\n      }],\r\n      // 全部字典项\r\n      getAllCode_list:[],\r\n      // 门店类型\r\n      store_list:[],\r\n      // 门店货权归属\r\n      goodsowner_list:[],\r\n\r\n\r\n\r\n      // 上传图片描述\r\n      storeImgs_describe:'请上传门店图片，单张大小不超过2M，数量不超过5张。',\r\n      // 门店logo描述\r\n      logoImage_describe:'请尽量上传1：1比例的图片。',\r\n      // 附件信息描述\r\n      enclosure_describe:'请上传合同及营业执照信息，单张大小不超过2M，数量不超过5张。',\r\n      // 门店图片回显\r\n      storeImgs_EchoDisplayImages:[],\r\n      // 附件信息图片回显\r\n      enclosure_EchoDisplayImages:[],\r\n      // 门店校验\r\n      rules:{\r\n        name: [{ required: true, validator:(rule, value, callback)=>{\r\n          // 检验门店名称\r\n          this.checkStoreName(value, callback);\r\n        }, trigger: 'blur' }],\r\n        organizationId: [{ required: true, message: '请选择隶属机构！', trigger: 'change' }],\r\n        principalName: [{ required: true, message: '请选择门店负责人！', trigger: 'change' }],\r\n        operationBegin: [{ required: true, message: '请选择门店早上开门时间！', trigger: 'change' }],\r\n        operationEnd: [{ required: true, message: '请选择门店晚上闭店时间！', trigger: 'change' }],\r\n        type: [{ required: true, message: '请选择门店类型！', trigger: 'change' }],\r\n        linkman: [{ required: true, message: '请输入联系人！', trigger: 'change' }],\r\n        phone: [{ required: true, validator:(rule, value, callback)=>{\r\n          if(!value) {\r\n            callback(new Error('请输入手机号码！'));\r\n          }else{\r\n            const regPhone = /^1[3-9]\\d{9}$/g;\r\n            if(regPhone.test(value)) {\r\n             callback();\r\n            }else{\r\n              callback(new Error('请输入正确手机号码！'));\r\n            }\r\n          }\r\n        }, trigger: 'blur' }],\r\n        divisionId: [{ required: true, message: '请选择行政区域！', trigger: 'change' }],\r\n        addressInfo: [{ required: true, message: '请输入详细地址！', trigger: 'change' }],\r\n        longitude: [{ required: true, message: '请选择经度！', trigger: 'change' }],\r\n        latitude: [{ required: true, message: '请选择纬度！', trigger: 'change' }],\r\n        goodsOwner: [{ required: true, message: '请选择门店货权归属！', trigger: 'change' }],\r\n        designService: [{ required: true, message: '请选择门店是否启用搭配服务！', trigger: 'change' }],\r\n        pricingPower: [{ required: true, message: '请选择门店是否启用价格管理！', trigger: 'change' }],\r\n        manageType_list: [{ required: true, validator: (rule, arr, callback) => {\r\n          const someItem = arr.some((item, index) => {\r\n            return item.checked;\r\n          });\r\n          if(!someItem) {\r\n            callback(new Error('至少要选择一项业务类型！'));\r\n          }else{\r\n            callback();\r\n          };\r\n        }, trigger: 'change' }],\r\n        paymentType_list: [{ required: true, validator: (rule, arr, callback) => {\r\n          const someItem = arr.some((item, index) => {\r\n            return item.checked;\r\n          });\r\n          if(!someItem) {\r\n            callback(new Error('至少要选择一项收款方式！'));\r\n          }else{\r\n            callback();\r\n          };\r\n        }, trigger: 'change' }],\r\n        manageRange_list: [{ required: true, validator: (rule, arr, callback) => {\r\n          const someItem = arr.some((item, index) => {\r\n            return item.checked;\r\n          });\r\n          if(!someItem) {\r\n            callback(new Error('至少要选择一项经营范围！'));\r\n          }else{\r\n            callback();\r\n          };\r\n        }, trigger: 'change' }],\r\n        storeImgs_list: [{ type: 'array', required: true, message: '至少上传一张门店图片！', trigger: 'blur' }],\r\n        logoImage_list: [{ type: 'array', required: true, message: '至少上传一张门店logo！', trigger: 'blur' }],\r\n        // enclosure_list: [{ type: 'array', required: true, message: '至少上传一张附件图片！', trigger: 'blur' }],\r\n      },\r\n      // 新建门店提交对象\r\n      save_createStore_obj: {\r\n        id:null, // 门店 id\r\n        name: \"\", // 门店名称\r\n        createName: \"\", // 创建人姓名\r\n        organizationId: \"\", // 组织机构 id\r\n        organizationName: \"\", // 组织机构名称\r\n        principalId: \"\", // 门店负责人 id\r\n        principalName: \"\", // 门店负责人名字\r\n        operationBegin: \"\", // 营业早上开门时间\r\n        operationEnd: \"\", // 营业晚上闭店时间\r\n        type: \"\", // 门店类型\r\n        linkman: \"\", // 联系人\r\n        phone: \"\", // 联系电话\r\n        provinceName: \"\", // 省份名称\r\n        provinceCode: \"\", // 省份 code\r\n        divisionId:\"\",// 区 id\r\n        cityName: \"\", // 城市名称\r\n        cityCode: \"\", // 城市 code\r\n        areaName: \"\", // 区域名称\r\n        areaCode: \"\", // 区域 code\r\n        addressInfo: \"\", // 详细地址\r\n        _addressInfo:\"\", // 详细地址临时备份 \r\n        _longitude: \"\", // 经度（暂存）\r\n        _latitude: \"\", // 纬度'（暂存）\r\n        longitude: \"\", // 经度\r\n        latitude: \"\", // 纬度'\r\n        goodsOwner: \"\", // 货权归属\r\n        pricingPower:\"\",// 启用价格管理\r\n        storeArea: \"\", // 店铺面积\r\n        cooperationArea: \"\", // 合作面积\r\n        designService: \"\", // 是否启用搭配服务\r\n        enableAllocation:false, // 启用门店调拨\r\n        enableShowWeChat:true, // 小程序展示\r\n        enableOwnSettlement:false, // 门店自收银\r\n        enableNoMemberBilling:false, // 无会员开单\r\n        enableOrderPrice:false, // 订单改价\r\n        // 经营类型列表\r\n        manageType_list:[],\r\n        // 门店货款方式列表\r\n        paymentType_list:[],\r\n        // 经营范围列表\r\n        manageRange_list:[],\r\n        // 门店标签列表\r\n        storeTag_list:[],\r\n        // 门店图片\r\n        storeImgs_list:[],\r\n        // 门店logo列表\r\n        logoImage_list:[],\r\n        // 门店logo提交对象\r\n        logoImage:[],\r\n        // 附件信息\r\n        enclosure_list:[],\r\n        // 经营信息（经营业务类型 0、门店收款方式 1、经营范围 2、门店标签 3）\r\n        infos: [],\r\n        // 图片信息（门店图片 0、附件图片 1）\r\n        images: []\r\n      },\r\n      // 门店名称备份\r\n      storeName:'',\r\n      filtersData:{\r\n        pageIndex: 1, //当前页码\r\n        pageSize: 10, //每页数量\r\n        used: null, //有效状态\r\n        filter: \"\", //搜索关键字\r\n        name:\"\",\r\n        isStart:\"\",\r\n        startDate: \"\",\r\n        endDate: \"\",\r\n        businessType:\"\",//\r\n        receiveDept:\"\",// 接受部门\r\n      }\r\n    };\r\n  },\r\n  created() {\r\n    const that = this;\r\n    // 获取所有字典内容\r\n    this.getAllCode();\r\n    // 获取用户列表\r\n    this.user_list();\r\n    // 获取隶属机构\r\n    document.onkeydown = function(e) {\r\n        var key = window.event.keyCode;\r\n        if (key == 13) {\r\n          that.handleSearch();\r\n        }\r\n    };\r\n    document.addEventListener('click', function(e) {\r\n      that.isAddShow = false;\r\n      e.stopPropagation();\r\n    }, false)\r\n  },\r\n  mounted() {},\r\n  computed: {\r\n    ...mapGetters({\r\n        userInfo: userTypes.GETTER_USERINFO\r\n    }),\r\n    storeImgs_list() {\r\n      return this.save_createStore_obj.storeImgs_list;\r\n    },\r\n    logoImage_list() {\r\n      return this.save_createStore_obj.logoImage_list;\r\n    },\r\n    enclosure_list() {\r\n      return this.save_createStore_obj.enclosure_list;\r\n    },\r\n    areaCode() {\r\n      return this.save_createStore_obj.areaCode;\r\n    },\r\n  },\r\n  watch:{\r\n    /**\r\n     * 监听门店图片\r\n     */\r\n    storeImgs_list(value) {\r\n      if(value && value.length > 0) {\r\n        this.$refs.formName.clearValidate('storeImgs_list');\r\n      }else{\r\n        this.$refs.formName.validateField('storeImgs_list');\r\n      }\r\n    },\r\n    /**\r\n     * 监听门店logo\r\n     */\r\n    logoImage_list(value) {\r\n      if(value && value.length > 0) {\r\n        this.$refs.formName.clearValidate('logoImage_list');\r\n      }else{\r\n        this.$refs.formName.validateField('logoImage_list');\r\n      }\r\n    },\r\n    /**\r\n     * 监听附件图片\r\n     */\r\n    enclosure_list(value) {\r\n      if(value && value.length > 0) {\r\n        this.$refs.formName.clearValidate('enclosure_list');\r\n      }else{\r\n        this.$refs.formName.validateField('enclosure_list');\r\n      }\r\n    },\r\n    /**\r\n     * 监听区域code，用户是否重新选择了地区\r\n     */\r\n    areaCode(value) {\r\n      this.dialogMapTF = true;\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n     * 选择详细地址\r\n     */\r\n    checkAddress(checkItem) {\r\n      console.log(checkItem)\r\n      Object.assign(this.save_createStore_obj, {\r\n        longitude:checkItem.location.lng,\r\n        _longitude:checkItem.location.lng,\r\n        latitude:checkItem.location.lat,\r\n        _latitude:checkItem.location.lat,\r\n        addressInfo:checkItem.title\r\n      });\r\n      this.isAddShow = false;\r\n      console.log(checkItem)\r\n    },\r\n    /**\r\n     * 选择详细地址失去焦点时\r\n     */\r\n    checkAddblur(value) {\r\n      \r\n    },\r\n    /**\r\n     * 根据关键词模糊搜索地址\r\n     */\r\n    searchAddress() {\r\n      const that = this,\r\n        region = that.save_createStore_obj.cityName,\r\n        address = this.$refs.addressInput.value;\r\n        if(this._address == address) return;\r\n      // 先清\r\n      if(!address) {\r\n        this.searchAddress_list = [];\r\n      }\r\n      clearTimeout(this.searchAddressTime);\r\n      // 节流\r\n      this.searchAddressTime = setTimeout(() => {\r\n        if(!region){\r\n          this.warn('请选择省市区！');\r\n          return;\r\n        };\r\n        if(!address) return;\r\n        let url = 'https://apis.map.qq.com/ws/place/v1/suggestion';\r\n        this.$jsonp(url,{\r\n            key:'DAXBZ-VIQKS-7QAOO-6LPOB-EMQN7-UAFOU',\r\n            callbackName: 'QQmap',\r\n            output:'jsonp',\r\n            keyword:address,\r\n            region\r\n          })\r\n        .then(res => {\r\n          that.searchAddress_list = res.data;\r\n          that._address = this.$refs.addressInput.value;\r\n          that.isAddShow = true;\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n      });\r\n    },\r\n    /**\r\n     * 根据经纬度反查详细地址\r\n     */\r\n    lngAndLatSearchAddress(lng, lat) {\r\n      const that = this;\r\n\r\n      let url = 'https://apis.map.qq.com/ws/geocoder/v1/';\r\n      this.$jsonp(url,{\r\n          key:'DAXBZ-VIQKS-7QAOO-6LPOB-EMQN7-UAFOU',\r\n          callbackName: 'QQmap',\r\n          output:'jsonp',\r\n          location:`${lat},${lng}`\r\n        })\r\n      .then(res => {\r\n        if(res && res.result && res.result.formatted_addresses && res.result.formatted_addresses.recommend) {\r\n          that.save_createStore_obj.addressInfo = res.result.formatted_addresses.recommend;\r\n        }else{\r\n          // 重置地图位置\r\n          Object.assign(that.save_createStore_obj, {\r\n            addressInfo: \"\", // 详细地址\r\n            _longitude: \"\", // 经度（暂存）\r\n            _latitude: \"\", // 纬度'（暂存）\r\n            longitude: \"\", // 经度\r\n            latitude: \"\", // 纬度'\r\n          });\r\n          that.warn('查无地址，请重新选择门店位置！');\r\n        };\r\n        // 清空地址搜索项\r\n        that.searchAddress_list = [];\r\n      })\r\n      .catch(err => {\r\n          console.log(err)\r\n      })\r\n    },\r\n    /**\r\n     * 确认门店地图坐标\r\n     */\r\n    handleDialogMap() {\r\n      // 如果select选择的地址与地图选点的位置一致，那么就不需要重新选点\r\n      if(this.save_createStore_obj.longitude == this.save_createStore_obj._longitude && this.save_createStore_obj.addressInfo) {\r\n        this.dialogMap = false;\r\n        return;\r\n      };\r\n      this.save_createStore_obj.longitude = this.save_createStore_obj._longitude;\r\n      this.save_createStore_obj.latitude = this.save_createStore_obj._latitude;\r\n      this.dialogMap = false;\r\n      this.lngAndLatSearchAddress(this.save_createStore_obj.longitude, this.save_createStore_obj.latitude);\r\n    },\r\n    /**\r\n     * 地图选择门店坐标\r\n     */\r\n    fnMap() {\r\n      const that = this;\r\n      //\r\n      if(!this.save_createStore_obj.areaCode) {\r\n        this.warn('请选择省市区！');\r\n        return;\r\n      };\r\n\r\n      this.dialogMap = true;\r\n\r\n      // 地图只执行一次\r\n      if(this.dialogMapTF) {\r\n        this.TMap('DAXBZ-VIQKS-7QAOO-6LPOB-EMQN7-UAFOU').then(qq => {\r\n          var map = new qq.maps.Map(document.getElementById(\"container\"), {\r\n              // 地图的中心地理坐标。\r\n              center: new qq.maps.LatLng(39.916527, 116.397128),\r\n              // center: center,\r\n              zoom:11\r\n          });\r\n          var citylocation = new qq.maps.CityService({\r\n            complete : function(results){\r\n              map.setCenter(results.detail.latLng);\r\n            }\r\n          });\r\n          // 根据城市名称显示地图区域\r\n          citylocation.searchCityByName(this.save_createStore_obj.cityName);\r\n          var marker = null;\r\n          // 坐标回显\r\n          marker = new qq.maps.Marker({\r\n              position:new qq.maps.LatLng(that.save_createStore_obj.latitude, that.save_createStore_obj.longitude),\r\n              map: map\r\n          });\r\n          // 点击创建门店坐标\r\n          qq.maps.event.addListener(map, 'click', function(event) {\r\n            that.save_createStore_obj._longitude = event.latLng.getLng();\r\n            that.save_createStore_obj._latitude = event.latLng.getLat();\r\n            console.log(that.save_createStore_obj.longitude)\r\n            if(marker) {\r\n              marker.setMap(null);\r\n            };\r\n            marker = new qq.maps.Marker({\r\n                position:new qq.maps.LatLng(event.latLng.getLat(), event.latLng.getLng()),\r\n                map: map\r\n            });\r\n          });\r\n        });\r\n        this.dialogMapTF = false;\r\n      }\r\n    },\r\n    /**\r\n     * 关闭地图时，地图初始化\r\n     */\r\n    handleClose() {\r\n      if (!this.save_createStore_obj.longitude) {\r\n        this.dialogMapTF = true;\r\n      };\r\n    },\r\n    /**\r\n     * 腾讯地图\r\n     * @param { String } key\r\n     */\r\n    TMap(key) {\r\n      return new Promise(function (resolve, reject) {\r\n        window.init = function () {\r\n          resolve(qq);\r\n        }\r\n        var script = document.createElement(\"script\");\r\n        script.type = \"text/javascript\";\r\n        script.src = \"http://map.qq.com/api/js?v=2.exp&callback=init&key=\"+key;\r\n        script.onerror = reject;\r\n        document.head.appendChild(script);\r\n      })\r\n    },\r\n    /**\r\n     * 检验门店名称\r\n     * @param { String } value 门店名称\r\n     * @param { Function } callback 校验的回调函数\r\n     *\r\n     */\r\n     async checkStoreName(value, callback) {\r\n      if (!value){\r\n        callback(new Error('请输入门店名称！'));\r\n        return;\r\n      };\r\n      // 如果编辑原来的名字，则不做请求校验\r\n      if(this.storeName != value) {\r\n        let data = await this.request(\r\n          this.api.store.storeBasic_check,\r\n          {name:value}\r\n        );\r\n        if(!data) {\r\n          callback(new Error('已存在相同的门店名称，请重新输入！'));\r\n        }else{\r\n          callback();\r\n        };\r\n      }else{\r\n          callback();\r\n      };\r\n\r\n    },\r\n    /**\r\n     * 获取门店信息\r\n     * @param { String } id 门店 id\r\n     *\r\n     */\r\n    getStoreInfo(id) {\r\n      const that = this;\r\n      this.request(\r\n        this.api.store.storeBasic_get,\r\n        {id},\r\n        true\r\n      ).then(res => {\r\n        // delete res.organizationId;\r\n        // 不要直接this.save_createStore_obj = res，这样会把初始化的数据替换掉；\r\n        Object.assign(this.save_createStore_obj, res);\r\n        // 赋值经度位置预选\r\n        this.save_createStore_obj._latitude = this.save_createStore_obj.latitude;\r\n        this.save_createStore_obj._longitude = this.save_createStore_obj.longitude;\r\n\r\n        let data = this.save_createStore_obj;\r\n        // 处理门店名称\r\n        this.storeName = JSON.parse(JSON.stringify(data.name));\r\n        // 处理启用门店调拨\r\n        data.enableAllocation = this.save_createStore_obj.enableAllocation ? true : false ;\r\n        // 小程序展示\r\n        data.enableShowWeChat = this.save_createStore_obj.enableShowWeChat ? true : false ;\r\n        // 门店自收银\r\n        data.enableOwnSettlement = this.save_createStore_obj.enableOwnSettlement ? true : false ;\r\n        // 无会员开单\r\n        data.enableNoMemberBilling = this.save_createStore_obj.enableNoMemberBilling ? true : false ;\r\n        // 订单改价\r\n        data.enableOrderPrice  = this.save_createStore_obj.enableOrderPrice  ? true : false ;\r\n        // 处理图片\r\n        data.images.forEach((item, idnex) => {\r\n          switch(item.type) {\r\n            case 0:\r\n              data.storeImgs_list.push({url:item.url});\r\n            break;\r\n            case 1:\r\n              data.enclosure_list.push({url:item.url});\r\n            break;\r\n          }\r\n        });\r\n        // 处理logo\r\n        data.logoImage_list.push({ url:data.logoImage });\r\n        console.log(data.logoImage)\r\n        // 处理经营信息\r\n        let infosMap_arr = [];\r\n\r\n        Object.values(data.infosMap).forEach((item, index) => {\r\n          item.forEach((items, indexs) => {\r\n            infosMap_arr.push(items);\r\n          });\r\n        });\r\n        console.log(infosMap_arr);\r\n\r\n        infosMap_arr.forEach((item, idnex) => {\r\n          switch(item.type) {\r\n            case 0:\r\n              this.findTime(item, data.manageType_list);\r\n            break;\r\n            case 1:\r\n              this.findTime(item, data.paymentType_list);\r\n            break;\r\n            case 2:\r\n              this.findTime(item, data.manageRange_list);\r\n            break;\r\n            case 3:\r\n              this.findTime(item, data.storeTag_list);\r\n            break;\r\n          }\r\n        });\r\n        console.log(data)\r\n      });\r\n    },\r\n    /**\r\n     * 查找经营信息匹配的项\r\n     * @param { Object } item 当前对比的对象；\r\n     * @param { Array } arr 需要查找的数组；\r\n     */\r\n    findTime(item, arr) {\r\n      var findTime = arr.find((items, indexs) => {\r\n        return item.dataName == items.name;\r\n      });\r\n      if(findTime){\r\n        findTime.checked = true;\r\n      };\r\n    },\r\n    /**\r\n     * 选择字典项\r\n     * @param { Object } item 当前项\r\n     */\r\n    selectCheckbox(item) {\r\n      item.checked = !item.checked;\r\n    },\r\n    /**\r\n     * 获取字典项\r\n     */\r\n    getAllCode() {\r\n      this.request(\r\n        this.api.system.ALL_CODESET_POST,\r\n        {},\r\n        true\r\n      ).then(res => {\r\n        res.forEach((item, index) => {\r\n          switch(item.name) {\r\n            case 'STO001':\r\n              // 门店类型列表\r\n              item.codeItemList.forEach((itemk, indexk) => {\r\n                itemk.checked = false;\r\n              });\r\n              this.store_list = item.codeItemList;\r\n              break;\r\n            case 'COM002':\r\n              // 经营类型列表\r\n              item.codeItemList.forEach((itemk, indexk) => {\r\n                itemk.checked = false;\r\n              });\r\n              this.save_createStore_obj.manageType_list = item.codeItemList;\r\n              break;\r\n            case 'STO002':\r\n              // 门店收款方式\r\n              item.codeItemList.forEach((itemk, indexk) => {\r\n                itemk.checked = false;\r\n              });\r\n              this.save_createStore_obj.paymentType_list = item.codeItemList;\r\n            break;\r\n            case 'STO003':\r\n              // 门店货权归属\r\n              item.codeItemList.forEach((itemk, indexk) => {\r\n                itemk.checked = false;\r\n              });\r\n              this.goodsowner_list = item.codeItemList;\r\n            break;\r\n              case 'STO004':\r\n              // 经营范围列表\r\n              item.codeItemList.forEach((itemk, indexk) => {\r\n                itemk.checked = false;\r\n              });\r\n              this.save_createStore_obj.manageRange_list = item.codeItemList;\r\n            break;\r\n              case 'STO005':\r\n              // 门店标签\r\n              item.codeItemList.forEach((itemk, indexk) => {\r\n                itemk.checked = false;\r\n              });\r\n              this.save_createStore_obj.storeTag_list = item.codeItemList;\r\n            break;\r\n          }\r\n        });\r\n        // 获取门店信息\r\n        if(this.isEcho) {\r\n          this.getStoreInfo(this.$route.query.id);\r\n        };\r\n      });\r\n    },\r\n    /**\r\n     * 获取人员列表\r\n     */\r\n    user_list() {\r\n      this.request(\r\n        this.api.store.user_list,\r\n        this.filtersData,\r\n        true\r\n      ).then(res => {\r\n        this.principal_list = res;\r\n      });\r\n    },\r\n    /**\r\n     * 搜索\r\n     */\r\n    handleSearch() {\r\n      this.user_list();\r\n    },\r\n    /**\r\n     * 选择地区回调\r\n     * @param { Object } obj 选择区域返回的回调函数\r\n     */\r\n    setDivision(obj) {\r\n      console.log(obj)\r\n      this.searchAddress_list = [];\r\n\r\n      Object.assign(this.save_createStore_obj, {\r\n        \"provinceName\": obj.province,// 省份名称\r\n        \"provinceCode\": obj.provinceCode,// 省份 code\r\n        \"divisionId\":obj.divisionId,// 区 id\r\n        \"cityName\": obj.municipality,// 城市名称\r\n        \"cityCode\": obj.municipalityCode,// 城市 code\r\n        \"areaName\": obj.area,// 区域名称\r\n        \"areaCode\": obj.areaCode,// 区域 code\r\n      });\r\n    },\r\n    /**\r\n     * 匹配营业时间段\r\n     * @param { Regular } /^\\d+:\\d+/g  开头为数字，匹配n个，然后匹配'：'再然后数字n个\r\n     */\r\n    matchTime(strTime) {\r\n      if(!strTime) return;\r\n      var reg = /\\d+:\\d+/g;\r\n      var regZone = /0800/g;\r\n      var str = strTime && strTime.match(reg)[0];\r\n      var isZone = regZone.test(strTime);\r\n\r\n      str = str.split(':');\r\n      // 此处需加8个小时（时区时间）\r\n      if(!isZone) {\r\n        str = this.replenishZero((parseInt(str[0]) + 8)%24) + ':' + str[1];\r\n      }else{\r\n        str = `${str[0]}:${str[1]}`\r\n      };\r\n      return str;\r\n    },\r\n    /**\r\n     * 补零函数\r\n     * @param { Nunber | String } item 数字或数字字符串 如： 1，'1'\r\n     * @return { String } 如：'01'\r\n     */\r\n    replenishZero(item) {\r\n        item = parseInt(item);\r\n\r\n        return item < 10 ? `0${item}` : item;\r\n    },\r\n    /**\r\n     * 添加门店负责人\r\n     * @param { Object } item 选中的当前项\r\n     */\r\n    add_principal(item) {\r\n      if(!item) return;\r\n      Object.assign(this.save_createStore_obj, {\r\n        principalId:item.id,\r\n        principalName:item.name\r\n      });\r\n      this.dialogTableVisible = false;\r\n    },\r\n    /**\r\n     * 新建或编辑门店\r\n     */\r\n    save_createStore() {\r\n      let that = this,\r\n        data = JSON.parse(JSON.stringify(this.save_createStore_obj));\r\n      if(this.isEcho) {\r\n        Object.assign(data, {\r\n          id:this.$route.query.id\r\n        })\r\n      };\r\n      // 添加创建人姓名\r\n      data.createName = this.userInfo.name;\r\n      // 添加隶属机构名称\r\n      if(!this.isEcho) {\r\n        data.organizationName = this.$refs.organizationName.organizationList[0].name;\r\n        console.log(this.$refs.organizationName)\r\n      };\r\n      // 处理启用门店调拨\r\n      data.enableAllocation = this.save_createStore_obj.enableAllocation ? 1 : 0 ;\r\n      // 处理启用门店调拨\r\n      data.enableShowWeChat = this.save_createStore_obj.enableShowWeChat ? 1 : 0 ;\r\n      // 处理门店自收银\r\n      data.enableOwnSettlement = this.save_createStore_obj.enableOwnSettlement ? 1 : 0 ;\r\n      // 处理无会员开单\r\n      data.enableNoMemberBilling = this.save_createStore_obj.enableNoMemberBilling ? 1 : 0 ;\r\n      // 订单改价\r\n      data.enableOrderPrice  = this.save_createStore_obj.enableOrderPrice  ? 1 : 0 ;\r\n      // 处理经营信息\r\n      data.infos = [];\r\n      this.pushInfos(this.save_createStore_obj.manageType_list, 0, data);\r\n      this.pushInfos(this.save_createStore_obj.paymentType_list, 1, data);\r\n      this.pushInfos(this.save_createStore_obj.manageRange_list, 2, data);\r\n      this.pushInfos(this.save_createStore_obj.storeTag_list, 3, data);\r\n      // 处理图片\r\n      data.images = [];\r\n      this.pushImages(this.save_createStore_obj.storeImgs_list, 0, data);\r\n      this.pushImages(this.save_createStore_obj.enclosure_list, 1, data);\r\n      // 处理门店logo\r\n      if( data.logoImage_list.length > 0){\r\n        data.logoImage = data.logoImage_list[0].url;\r\n      }\r\n      // 删除无用数据\r\n      delete data.enclosure_list;\r\n      delete data.manageRange_list;\r\n      delete data.manageType_list;\r\n      delete data.paymentType_list;\r\n      delete data.storeImgs_list;\r\n      delete data.storeTag_list;\r\n      delete data.logoImage_list;\r\n      delete data.infosMap;\r\n      console.log(data);\r\n      // return;\r\n      this.$refs.formName.validate((valid) => {\r\n        if (valid) {\r\n          let text = this.isEcho ? '零售门店信息修改后将立即生效，是否确认修改？' : '请确认以上内容填写无误，是否确认创建此门店？';\r\n          let textEcho = this.isEcho ? '编辑成功！' : '新建成功！';\r\n\r\n          this.$confirm(text, '提示', {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning'\r\n          }).then(() => {\r\n            // 请求\r\n            this.request(\r\n              this.api.store.storeBasic_save,\r\n              data\r\n            ).then(res => {\r\n              this.warn(textEcho);\r\n              this.href('store_info_list');\r\n            });\r\n          }).catch(() => {\r\n            this.warn('已取消！',{\r\n              type:'info'\r\n            });\r\n\r\n          });\r\n\r\n        } else {\r\n           this.warn('门店信息未填写完整，请填写完整后重试！','warning');\r\n          return;\r\n        }\r\n      });\r\n    },\r\n    /**\r\n     * 添加经营信息\r\n     * @param { Array } arr 父级数组集合\r\n     * @param { Number } type 经营信息类型\r\n     * @param { Object } data 提交对象集合\r\n     */\r\n    pushInfos(arr, type, data) {\r\n      arr.forEach((item, index) => {\r\n        if(item.checked) {\r\n          data.infos.push({\r\n            \"dataName\": item.name,\r\n            \"dataId\": item.codeSetId,\r\n            \"type\": type\r\n          })\r\n        }\r\n      });\r\n    },\r\n    /**\r\n     * 提示\r\n     * @param { String } message 提示文案\r\n     * @param { String } type 提示类型\r\n     */\r\n    warn(message, type) {\r\n      this.$message({\r\n        message: message,\r\n        type: type || 'success'\r\n      });\r\n    },\r\n    /**\r\n     * 跳转\r\n     * @param { String } routeName 路由跳转名字\r\n     */\r\n    href(routeName) {\r\n      this.$router.push({\r\n        path: `/${routeName}`,\r\n        name: routeName\r\n      });\r\n    },\r\n    /**\r\n     * 添加门店图片，附件信息\r\n     * @param { Array } arr 父级数组集合\r\n     * @param { Number } type 经营信息类型\r\n     * @param { Object } data 提交对象集合\r\n     */\r\n    pushImages(arr, type, data) {\r\n\r\n      arr.forEach((item, index) => {\r\n        console.log(arr)\r\n        data.images.push({\r\n          \"type\": type,\r\n          \"url\": item.url\r\n        })\r\n      });\r\n    },\r\n    /**\r\n     * 点击页数\r\n     * @param { Number } pageIndex 当前页\r\n     */\r\n    handleCurrentChange(pageIndex){\r\n        this.filtersData.pageIndex = pageIndex;\r\n        this.user_list();\r\n    },\r\n    /**\r\n     * 改变每页展示条目\r\n     * @param { Number } pageSize 每页展示条目\r\n     */\r\n    handleSizeChange(pageSize){\r\n        this.filtersData.pageSize = pageSize;\r\n        this.user_list();\r\n    },\r\n  },\r\n  components: {\r\n    codeSet,\r\n    division,\r\n    treeDept,\r\n    ElUploadImg,\r\n    OrganizationSelect,\r\n    businessTime\r\n  }\r\n};\r\n",{"version":3,"sources":["store_info_edit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"store_info_edit.vue","sourceRoot":"src/views/store/store","sourcesContent":["<template>\r\n  <div class=\"create-store\">\r\n    <!-- 指派 -->\r\n    <el-dialog title=\"选择门店负责人\" :visible.sync=\"dialogTableVisible\">\r\n      <el-form\r\n        class=\"item-form\"\r\n        size=\"small\"\r\n        :inline=\"true\"\r\n        :model=\"filtersData\">\r\n        <!-- 模糊查询 -->\r\n        <el-form-item label=\"综合搜索：\">\r\n          <el-input v-model=\"filtersData.filter\" style=\"width:310px;\" clearable  placeholder=\"人员姓名/联系电话/商家端账号\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button @click=\"handleSearch\" type=\"primary\" plain size=\"small\">搜索</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n      <el-table :data=\"principal_list.data\">\r\n        <el-table-column  label=\"人员姓名\" align=\"center\">\r\n            <template  slot-scope=\"scope\">{{ scope.row.name }}</template>\r\n        </el-table-column>\r\n        <el-table-column  label=\"联系电话\" align=\"center\">\r\n            <template  slot-scope=\"scope\">{{ scope.row.phone }}</template>\r\n        </el-table-column>\r\n        <el-table-column  label=\"商家端账号\" align=\"center\">\r\n            <template  slot-scope=\"scope\">{{ scope.row.phone }}</template>\r\n        </el-table-column>\r\n        <el-table-column  label=\"下属门店数量\" align=\"center\">\r\n            <template  slot-scope=\"scope\">{{ scope.row.storeCount }}</template>\r\n        </el-table-column>\r\n        <el-table-column  label=\"操作\" align=\"center\">\r\n            <template  slot-scope=\"scope\"><span class=\"add_principal\" @click=\"add_principal(scope.row)\">{{ isEcho ? '确认修改' : '确认添加' }}</span></template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <el-pagination\r\n        class=\"mt-30\"\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page=\"filtersData.pageIndex\"\r\n        :page-sizes=\"[10,20,30,40,50]\"\r\n        :page-size=\"filtersData.pageSize\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"principal_list.totalCount\"\r\n      ></el-pagination>\r\n    </el-dialog>\r\n    <el-dialog title=\"选择门店位置\" :visible.sync=\"dialogMap\" @close=\"handleClose\">\r\n      <div id=\"container\"></div>\r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"dialogMap = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"handleDialogMap\">确 定</el-button>\r\n        </span>\r\n    </el-dialog>\r\n    <!--  -->\r\n    <template>\r\n    <el-form\r\n          :model=\"save_createStore_obj\"\r\n          label-width=\"120px\"\r\n          class=\"form-label\"\r\n          :rules=\"rules\"\r\n          ref=\"formName\"\r\n        >\r\n      <el-tabs v-model=\"activeName\">\r\n        <!-- 1.基本信息 -->\r\n        <el-tab-pane label=\"基本信息\" name=\"first\">\r\n          <section>\r\n            <!-- 门店名称 -->\r\n            <el-form-item label=\"门店名称：\" prop=\"name\">\r\n              <el-input v-model=\"save_createStore_obj.name\" :disabled=\"isRead\" placeholder=\"请输入门店名称\"></el-input>\r\n            </el-form-item>\r\n            <!-- 隶属机构 -->\r\n            <el-form-item label=\"隶属机构：\" prop=\"organizationId\">\r\n              <el-select disabled v-if=\"isEcho\" v-model=\"save_createStore_obj.organizationName\">\r\n              </el-select>\r\n              <organization-select v-else :isDirectly=\"true\" v-model=\"save_createStore_obj.organizationId\" width-class=\"input-w-2\" ref=\"organizationName\"></organization-select>\r\n            </el-form-item>\r\n            <!-- 门店负责人 -->\r\n            <el-form-item label=\"门店负责人：\" prop=\"principalName\">\r\n              <el-input\r\n                class=\"el-input-short\"\r\n                disabled\r\n                v-model=\"save_createStore_obj.principalName\"\r\n                placeholder=\"请选择门店负责人\"\r\n              ></el-input>\r\n              <el-button size=\"mini\" type=\"primary\" class=\"ml-10\" :disabled=\"isRead\" @click=\"dialogTableVisible = true\">点击选择</el-button>\r\n            </el-form-item>\r\n            <!-- 营业时间 -->\r\n            <el-form-item label=\"营业时间：\" required>\r\n              <el-col :span=\"5.5\">\r\n                <el-form-item prop=\"operationBegin\">\r\n                  <business-time :disabled=\"isRead\" :operationbegin=\"save_createStore_obj.operationBegin\" v-model=\"save_createStore_obj.operationBegin\"></business-time>\r\n                </el-form-item>\r\n              </el-col>\r\n              <el-col :span=\"3\">\r\n                <el-form-item prop=\"operationEnd\">\r\n                  <business-time :disabled=\"isRead\" :operationbegin=\"save_createStore_obj.operationEnd\" v-model=\"save_createStore_obj.operationEnd\"></business-time>\r\n                </el-form-item>\r\n              </el-col>\r\n            </el-form-item>\r\n            <!-- 门店类型 -->\r\n            <el-form-item label=\"门店类型：\" prop=\"type\">\r\n              <el-select v-model=\"save_createStore_obj.type\" :disabled=\"isRead\" placeholder=\"请选择门店类型\">\r\n                <el-option :label=\"item.name\" :value=\"item.code\" :key=\"index\" v-for=\"(item, index) in store_list\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <!-- 联系人 -->\r\n            <el-form-item label=\"联系人：\" prop=\"linkman\">\r\n              <el-input v-model=\"save_createStore_obj.linkman\" :disabled=\"isRead\" placeholder=\"请输入联系人\"></el-input>\r\n            </el-form-item>\r\n            <!-- 联系电话 -->\r\n            <el-form-item label=\"联系电话：\" prop=\"phone\">\r\n              <el-input maxlength=\"11\" v-model=\"save_createStore_obj.phone\" :disabled=\"isRead\" placeholder=\"请输入联系电话\"></el-input>\r\n            </el-form-item>\r\n            <!-- 门店地址 -->\r\n            <el-form-item label=\"门店地址：\" prop=\"divisionId\">\r\n              <div style=\"width:700px;\">\r\n                <division @set-division=\"setDivision\" :isDisabled=\"isRead\" v-model=\"save_createStore_obj.divisionId\"></division>\r\n              </div>\r\n            </el-form-item>\r\n            <el-form-item prop=\"addressInfo\">\r\n              <div class=\"add\" @click.stop=\"\">\r\n                <input \r\n                type=\"text\" \r\n                @input=\"searchAddress\"\r\n                class=\"address\" \r\n                :class=\"{'address2':isRead}\"\r\n                :disabled=\"isRead\"\r\n                placeholder=\"请选择\"\r\n                v-model=\"save_createStore_obj.addressInfo\"\r\n                ref=\"addressInput\">\r\n                <div class=\"address-box\"  :class=\"{addOv : searchAddress_list && searchAddress_list.length > 6}\" v-if=\"isAddShow\">\r\n                  <div class=\"li\" v-if=\"searchAddress_list && searchAddress_list.length > 0\" v-for=\"(item, index) in searchAddress_list\" @click.stop=\"checkAddress(item)\" :key=\"index\">{{ item.title }}</div>\r\n                  <div class=\"li\"  v-if=\"searchAddress_list && searchAddress_list.length == 0\">暂无数据</div>\r\n                </div>\r\n                <el-button size=\"mini\" :disabled=\"isRead\" @click=\"fnMap\"  type=\"primary\" class=\"ml-10\">地图选点</el-button>\r\n              </div>\r\n            </el-form-item>\r\n            <!-- 经度、纬度 -->\r\n            <div class=\"display-flex\">\r\n              <el-form-item label=\"经度：\" prop=\"longitude\">\r\n                <el-input\r\n                  v-model=\"save_createStore_obj.longitude\"\r\n                  disabled\r\n                  class=\"el-input-short\"\r\n                  placeholder=\"经度纬度\"\r\n                ></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"纬度：\" prop=\"latitude\" label-width=\"65px\" class=\"ml-15\">\r\n                <el-input\r\n                  v-model=\"save_createStore_obj.latitude\"\r\n                  disabled\r\n                  class=\"el-input-short\"\r\n                  placeholder=\"纬度坐标\"\r\n                ></el-input>\r\n              </el-form-item>\r\n            </div>\r\n          </section>\r\n        </el-tab-pane>\r\n        <!-- 2.经营信息 -->\r\n        <el-tab-pane label=\"经营信息\" name=\"second\">\r\n          <section>\r\n            <!-- 经营业务类型 -->\r\n            <el-form-item label=\"经营业务类型：\" prop=\"manageType_list\">\r\n              <div class=\"el-checkbox-group\">\r\n                <el-checkbox :label=\"item.name\" :disabled=\"isRead\" v-model=\"item.checked\" v-for=\"(item, index) in save_createStore_obj.manageType_list\" :key=\"index\"></el-checkbox>\r\n              </div>\r\n            </el-form-item>\r\n            <!-- 门店收款方式 -->\r\n            <el-form-item label=\"门店收款方式：\" prop=\"paymentType_list\">\r\n              <div class=\"el-checkbox-group\">\r\n                <el-checkbox :label=\"item.name\" :disabled=\"isRead\" v-model=\"item.checked\" v-for=\"(item, index) in save_createStore_obj.paymentType_list\" :key=\"index\"></el-checkbox>\r\n              </div>\r\n            </el-form-item>\r\n            <!-- 门店货权归属 -->\r\n            <el-form-item label=\"门店货权归属：\" prop=\"goodsOwner\">\r\n              <el-select v-model=\"save_createStore_obj.goodsOwner\" :disabled=\"isRead\" placeholder=\"请选择门店是否启用搭配服务\">\r\n                <el-option :label=\"item.name\" :value=\"item.code\" :key=\"index\" v-for=\"(item, index) in goodsowner_list\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <!-- 启用搭配服务 -->\r\n            <el-form-item label=\"启用搭配服务：\" prop=\"designService\">\r\n              <el-select v-model=\"save_createStore_obj.designService\" :disabled=\"isRead\" placeholder=\"请选择门店是否启用搭配服务\">\r\n                <el-option :label=\"item.name\" :value=\"item.id\" :key=\"index\" v-for=\"(item, index) in designService_list\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <!-- 经营范围 -->\r\n            <el-form-item label=\"经营范围：\" prop=\"manageRange_list\">\r\n              <div class=\"el-checkbox-group\">\r\n                <el-checkbox :label=\"item.name\" :disabled=\"isRead\" v-model=\"item.checked\" v-for=\"(item, index) in save_createStore_obj.manageRange_list\" :key=\"index\"></el-checkbox>\r\n              </div>\r\n            </el-form-item>\r\n            <!-- 启用价格管理 -->\r\n            <el-form-item label=\"启用价格管理：\" prop=\"pricingPower\">\r\n              <el-select v-model=\"save_createStore_obj.pricingPower\" :disabled=\"isRead\" placeholder=\"请选择门店是否启用价格管理\">\r\n                <el-option :label=\"item.name\" :value=\"item.id\" :key=\"index\" v-for=\"(item, index) in designService_list\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <!-- 店铺面积 -->\r\n            <el-form-item label=\"店铺面积：\" prop=\"storeArea\">\r\n              <el-input v-model=\"save_createStore_obj.storeArea\" :disabled=\"isRead\" placeholder=\"请输入店铺面积\"></el-input>\r\n            </el-form-item>\r\n            <!-- 合作面积 -->\r\n            <el-form-item label=\"合作面积：\" prop=\"cooperationArea\">\r\n              <el-input v-model=\"save_createStore_obj.cooperationArea\" :disabled=\"isRead\" placeholder=\"请输入合作面积\"></el-input>\r\n            </el-form-item>\r\n            <!-- 门店标签 -->\r\n            <el-form-item label=\"门店标签：\">\r\n              <div class=\"el-checkbox-group\">\r\n                <el-checkbox :label=\"item.name\" :disabled=\"isRead\" v-model=\"item.checked\" v-for=\"(item, index) in save_createStore_obj.storeTag_list\" :key=\"index\"></el-checkbox>\r\n              </div>\r\n            </el-form-item>\r\n            <!-- 启用门店调拨 -->\r\n            <el-form-item label=\"启用店间调拨：\">\r\n              <div class=\"el-checkbox-group\">\r\n                <el-switch\r\n                  :disabled=\"isRead\"\r\n                  v-model=\"save_createStore_obj.enableAllocation\"\r\n                  active-color=\"#13ce66\"\r\n                  inactive-color=\"#9d9d9d\"\r\n                ></el-switch>\r\n              </div>\r\n            </el-form-item>\r\n            <!-- 小程序展示 -->\r\n            <el-form-item label=\"小程序展示：\">\r\n              <div class=\"el-checkbox-group\">\r\n                <el-switch\r\n                  :disabled=\"isRead\"\r\n                  v-model=\"save_createStore_obj.enableShowWeChat\"\r\n                  active-color=\"#13ce66\"\r\n                  inactive-color=\"#9d9d9d\"\r\n                ></el-switch>\r\n              </div>\r\n            </el-form-item>\r\n            <!-- 门店自收银 -->\r\n            <el-form-item label=\"门店自收银：\">\r\n              <div class=\"el-checkbox-group\">\r\n                <el-switch\r\n                  :disabled=\"isRead\"\r\n                  v-model=\"save_createStore_obj.enableOwnSettlement\"\r\n                  active-color=\"#13ce66\"\r\n                  inactive-color=\"#9d9d9d\"\r\n                ></el-switch>\r\n              </div>\r\n            </el-form-item>\r\n            <!-- 无会员开单 -->\r\n            <el-form-item label=\"无会员开单：\">\r\n              <div class=\"el-checkbox-group\">\r\n                <el-switch\r\n                  :disabled=\"isRead\"\r\n                  v-model=\"save_createStore_obj.enableNoMemberBilling\"\r\n                  active-color=\"#13ce66\"\r\n                  inactive-color=\"#9d9d9d\"\r\n                ></el-switch>\r\n              </div>\r\n            </el-form-item>\r\n            <!-- 订单改价 -->\r\n            <el-form-item label=\"订单改价：\">\r\n              <div class=\"el-checkbox-group\">\r\n                <el-switch\r\n                  :disabled=\"isRead\"\r\n                  v-model=\"save_createStore_obj.enableOrderPrice\"\r\n                  active-color=\"#13ce66\"\r\n                  inactive-color=\"#9d9d9d\"\r\n                ></el-switch>\r\n              </div>\r\n            </el-form-item>\r\n          </section>\r\n        </el-tab-pane>\r\n        <!-- 3.门店图片 -->\r\n        <el-tab-pane label=\"门店图片\" name=\"third\">\r\n          <section>\r\n            <!-- 图片上传 -->\r\n            <el-form-item label=\"图片上传：\" prop=\"storeImgs_list\" res=\"uploadElement\">\r\n              <el-upload-img\r\n              :disabled=\"isRead\"\r\n              v-model=\"save_createStore_obj.storeImgs_list\"\r\n              :EchoDisplayImages=\"save_createStore_obj.storeImgs_list\"\r\n              CatalogName=\"store\"\r\n              :imgApi=\"imgApi\"\r\n              :describe=\"storeImgs_describe\"\r\n              :LssUpimgLimit=\"isRead ? 1 : 5\"\r\n              ></el-upload-img>\r\n            </el-form-item>\r\n            <!-- 图片上传 -->\r\n            <el-form-item label=\"门店logo：\" prop=\"logoImage_list\">\r\n              <el-upload-img\r\n              :disabled=\"isRead\"\r\n              :imgApi=\"imgApi\"\r\n              v-model=\"save_createStore_obj.logoImage_list\"\r\n              :EchoDisplayImages=\"save_createStore_obj.logoImage_list\"\r\n              CatalogName=\"store\"\r\n              :describe=\"logoImage_describe\"\r\n              :LssUpimgLimit=\"1\"\r\n              ></el-upload-img>\r\n            </el-form-item>\r\n          </section>\r\n        </el-tab-pane>\r\n        <!-- 4.附件信息 -->\r\n        <el-tab-pane label=\"附件信息\" name=\"fourth\">\r\n          <section>\r\n            <!-- 文件上传 -->\r\n            <el-form-item label=\"附件上传：\" prop=\"enclosure_list\">\r\n              <el-upload-img\r\n              :disabled=\"isRead\"\r\n              :imgApi=\"imgApi\"\r\n              v-model=\"save_createStore_obj.enclosure_list\"\r\n              :EchoDisplayImages=\"save_createStore_obj.enclosure_list\"\r\n              CatalogName=\"store\"\r\n              :describe=\"enclosure_describe\"\r\n              :LssUpimgLimit=\"isRead ? 1 : 5\"\r\n              ></el-upload-img>\r\n            </el-form-item>\r\n          </section>\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n      </el-form>\r\n    </template>\r\n    <div class=\"save\"  v-if=\"!isRead\">\r\n      <el-button type=\"primary\" @click=\"save_createStore\">{{ isEcho ? '确认修改' : '确认创建' }}</el-button>\r\n      <el-button @click=\"href('store_info_list')\">取消</el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport codeSet from '@/components/codeSet'\r\nimport {getToken} from '@/utils/auth'\r\nimport division from \"@/components/division\";\r\nimport treeDept from \"@/components/treeDept\";\r\nimport treePerson from \"@/components/treePerson\";\r\nimport businessTime from \"../components/businessTime\";\r\nimport ElUploadImg from \"@/components/uploadImg/el_upload_img_multi\";\r\nimport { mapGetters } from 'vuex';\r\nimport OrganizationSelect from \"@/views/collocation/components/OrganizationSelect\";\r\nimport * as userTypes from \"@/types/userConfig\";\r\nimport { setTimeout, clearTimeout } from 'timers';\r\nimport Vue from 'vue'\r\nimport VueJsonp from 'vue-jsonp'\r\nVue.use(VueJsonp);\r\nexport default {\r\n  data() {\r\n    return {\r\n      isAddShow:false,\r\n      // 上传图片路径\r\n      imgApi:this.api.content.aLiYun_upload,\r\n      businesstime:false,\r\n      // 是否编辑或查看页\r\n      isEcho:this.$route.query.isEcho,\r\n      // 是否只可读\r\n      isRead:this.$route.query.isRead,\r\n      // 当前选中的菜单\r\n      activeName: \"first\",\r\n      // 门店弹框\r\n      dialogTableVisible:false,\r\n      // 地图\r\n      dialogMap:false,\r\n      // 地图只执行一次\r\n      dialogMapTF:true,\r\n      // 门店负责人列表\r\n      principal_list:[],\r\n      // 搜索地址列表\r\n      searchAddress_list:[],\r\n      // 隶属机构\r\n      organization_list:[{\r\n        id:'01',\r\n        name:'研发部'\r\n      },{\r\n        id:'02',\r\n        name:'商品部'\r\n      },{\r\n        id:'03',\r\n        name:'测试部'\r\n      }],\r\n      // 启用搭配服务列表\r\n      designService_list:[{\r\n        id:1,\r\n        name:'是'\r\n      },{\r\n        id:0,\r\n        name:'否'\r\n      }],\r\n      // 全部字典项\r\n      getAllCode_list:[],\r\n      // 门店类型\r\n      store_list:[],\r\n      // 门店货权归属\r\n      goodsowner_list:[],\r\n\r\n\r\n\r\n      // 上传图片描述\r\n      storeImgs_describe:'请上传门店图片，单张大小不超过2M，数量不超过5张。',\r\n      // 门店logo描述\r\n      logoImage_describe:'请尽量上传1：1比例的图片。',\r\n      // 附件信息描述\r\n      enclosure_describe:'请上传合同及营业执照信息，单张大小不超过2M，数量不超过5张。',\r\n      // 门店图片回显\r\n      storeImgs_EchoDisplayImages:[],\r\n      // 附件信息图片回显\r\n      enclosure_EchoDisplayImages:[],\r\n      // 门店校验\r\n      rules:{\r\n        name: [{ required: true, validator:(rule, value, callback)=>{\r\n          // 检验门店名称\r\n          this.checkStoreName(value, callback);\r\n        }, trigger: 'blur' }],\r\n        organizationId: [{ required: true, message: '请选择隶属机构！', trigger: 'change' }],\r\n        principalName: [{ required: true, message: '请选择门店负责人！', trigger: 'change' }],\r\n        operationBegin: [{ required: true, message: '请选择门店早上开门时间！', trigger: 'change' }],\r\n        operationEnd: [{ required: true, message: '请选择门店晚上闭店时间！', trigger: 'change' }],\r\n        type: [{ required: true, message: '请选择门店类型！', trigger: 'change' }],\r\n        linkman: [{ required: true, message: '请输入联系人！', trigger: 'change' }],\r\n        phone: [{ required: true, validator:(rule, value, callback)=>{\r\n          if(!value) {\r\n            callback(new Error('请输入手机号码！'));\r\n          }else{\r\n            const regPhone = /^1[3-9]\\d{9}$/g;\r\n            if(regPhone.test(value)) {\r\n             callback();\r\n            }else{\r\n              callback(new Error('请输入正确手机号码！'));\r\n            }\r\n          }\r\n        }, trigger: 'blur' }],\r\n        divisionId: [{ required: true, message: '请选择行政区域！', trigger: 'change' }],\r\n        addressInfo: [{ required: true, message: '请输入详细地址！', trigger: 'change' }],\r\n        longitude: [{ required: true, message: '请选择经度！', trigger: 'change' }],\r\n        latitude: [{ required: true, message: '请选择纬度！', trigger: 'change' }],\r\n        goodsOwner: [{ required: true, message: '请选择门店货权归属！', trigger: 'change' }],\r\n        designService: [{ required: true, message: '请选择门店是否启用搭配服务！', trigger: 'change' }],\r\n        pricingPower: [{ required: true, message: '请选择门店是否启用价格管理！', trigger: 'change' }],\r\n        manageType_list: [{ required: true, validator: (rule, arr, callback) => {\r\n          const someItem = arr.some((item, index) => {\r\n            return item.checked;\r\n          });\r\n          if(!someItem) {\r\n            callback(new Error('至少要选择一项业务类型！'));\r\n          }else{\r\n            callback();\r\n          };\r\n        }, trigger: 'change' }],\r\n        paymentType_list: [{ required: true, validator: (rule, arr, callback) => {\r\n          const someItem = arr.some((item, index) => {\r\n            return item.checked;\r\n          });\r\n          if(!someItem) {\r\n            callback(new Error('至少要选择一项收款方式！'));\r\n          }else{\r\n            callback();\r\n          };\r\n        }, trigger: 'change' }],\r\n        manageRange_list: [{ required: true, validator: (rule, arr, callback) => {\r\n          const someItem = arr.some((item, index) => {\r\n            return item.checked;\r\n          });\r\n          if(!someItem) {\r\n            callback(new Error('至少要选择一项经营范围！'));\r\n          }else{\r\n            callback();\r\n          };\r\n        }, trigger: 'change' }],\r\n        storeImgs_list: [{ type: 'array', required: true, message: '至少上传一张门店图片！', trigger: 'blur' }],\r\n        logoImage_list: [{ type: 'array', required: true, message: '至少上传一张门店logo！', trigger: 'blur' }],\r\n        // enclosure_list: [{ type: 'array', required: true, message: '至少上传一张附件图片！', trigger: 'blur' }],\r\n      },\r\n      // 新建门店提交对象\r\n      save_createStore_obj: {\r\n        id:null, // 门店 id\r\n        name: \"\", // 门店名称\r\n        createName: \"\", // 创建人姓名\r\n        organizationId: \"\", // 组织机构 id\r\n        organizationName: \"\", // 组织机构名称\r\n        principalId: \"\", // 门店负责人 id\r\n        principalName: \"\", // 门店负责人名字\r\n        operationBegin: \"\", // 营业早上开门时间\r\n        operationEnd: \"\", // 营业晚上闭店时间\r\n        type: \"\", // 门店类型\r\n        linkman: \"\", // 联系人\r\n        phone: \"\", // 联系电话\r\n        provinceName: \"\", // 省份名称\r\n        provinceCode: \"\", // 省份 code\r\n        divisionId:\"\",// 区 id\r\n        cityName: \"\", // 城市名称\r\n        cityCode: \"\", // 城市 code\r\n        areaName: \"\", // 区域名称\r\n        areaCode: \"\", // 区域 code\r\n        addressInfo: \"\", // 详细地址\r\n        _addressInfo:\"\", // 详细地址临时备份 \r\n        _longitude: \"\", // 经度（暂存）\r\n        _latitude: \"\", // 纬度'（暂存）\r\n        longitude: \"\", // 经度\r\n        latitude: \"\", // 纬度'\r\n        goodsOwner: \"\", // 货权归属\r\n        pricingPower:\"\",// 启用价格管理\r\n        storeArea: \"\", // 店铺面积\r\n        cooperationArea: \"\", // 合作面积\r\n        designService: \"\", // 是否启用搭配服务\r\n        enableAllocation:false, // 启用门店调拨\r\n        enableShowWeChat:true, // 小程序展示\r\n        enableOwnSettlement:false, // 门店自收银\r\n        enableNoMemberBilling:false, // 无会员开单\r\n        enableOrderPrice:false, // 订单改价\r\n        // 经营类型列表\r\n        manageType_list:[],\r\n        // 门店货款方式列表\r\n        paymentType_list:[],\r\n        // 经营范围列表\r\n        manageRange_list:[],\r\n        // 门店标签列表\r\n        storeTag_list:[],\r\n        // 门店图片\r\n        storeImgs_list:[],\r\n        // 门店logo列表\r\n        logoImage_list:[],\r\n        // 门店logo提交对象\r\n        logoImage:[],\r\n        // 附件信息\r\n        enclosure_list:[],\r\n        // 经营信息（经营业务类型 0、门店收款方式 1、经营范围 2、门店标签 3）\r\n        infos: [],\r\n        // 图片信息（门店图片 0、附件图片 1）\r\n        images: []\r\n      },\r\n      // 门店名称备份\r\n      storeName:'',\r\n      filtersData:{\r\n        pageIndex: 1, //当前页码\r\n        pageSize: 10, //每页数量\r\n        used: null, //有效状态\r\n        filter: \"\", //搜索关键字\r\n        name:\"\",\r\n        isStart:\"\",\r\n        startDate: \"\",\r\n        endDate: \"\",\r\n        businessType:\"\",//\r\n        receiveDept:\"\",// 接受部门\r\n      }\r\n    };\r\n  },\r\n  created() {\r\n    const that = this;\r\n    // 获取所有字典内容\r\n    this.getAllCode();\r\n    // 获取用户列表\r\n    this.user_list();\r\n    // 获取隶属机构\r\n    document.onkeydown = function(e) {\r\n        var key = window.event.keyCode;\r\n        if (key == 13) {\r\n          that.handleSearch();\r\n        }\r\n    };\r\n    document.addEventListener('click', function(e) {\r\n      that.isAddShow = false;\r\n      e.stopPropagation();\r\n    }, false)\r\n  },\r\n  mounted() {},\r\n  computed: {\r\n    ...mapGetters({\r\n        userInfo: userTypes.GETTER_USERINFO\r\n    }),\r\n    storeImgs_list() {\r\n      return this.save_createStore_obj.storeImgs_list;\r\n    },\r\n    logoImage_list() {\r\n      return this.save_createStore_obj.logoImage_list;\r\n    },\r\n    enclosure_list() {\r\n      return this.save_createStore_obj.enclosure_list;\r\n    },\r\n    areaCode() {\r\n      return this.save_createStore_obj.areaCode;\r\n    },\r\n  },\r\n  watch:{\r\n    /**\r\n     * 监听门店图片\r\n     */\r\n    storeImgs_list(value) {\r\n      if(value && value.length > 0) {\r\n        this.$refs.formName.clearValidate('storeImgs_list');\r\n      }else{\r\n        this.$refs.formName.validateField('storeImgs_list');\r\n      }\r\n    },\r\n    /**\r\n     * 监听门店logo\r\n     */\r\n    logoImage_list(value) {\r\n      if(value && value.length > 0) {\r\n        this.$refs.formName.clearValidate('logoImage_list');\r\n      }else{\r\n        this.$refs.formName.validateField('logoImage_list');\r\n      }\r\n    },\r\n    /**\r\n     * 监听附件图片\r\n     */\r\n    enclosure_list(value) {\r\n      if(value && value.length > 0) {\r\n        this.$refs.formName.clearValidate('enclosure_list');\r\n      }else{\r\n        this.$refs.formName.validateField('enclosure_list');\r\n      }\r\n    },\r\n    /**\r\n     * 监听区域code，用户是否重新选择了地区\r\n     */\r\n    areaCode(value) {\r\n      this.dialogMapTF = true;\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n     * 选择详细地址\r\n     */\r\n    checkAddress(checkItem) {\r\n      console.log(checkItem)\r\n      Object.assign(this.save_createStore_obj, {\r\n        longitude:checkItem.location.lng,\r\n        _longitude:checkItem.location.lng,\r\n        latitude:checkItem.location.lat,\r\n        _latitude:checkItem.location.lat,\r\n        addressInfo:checkItem.title\r\n      });\r\n      this.isAddShow = false;\r\n      console.log(checkItem)\r\n    },\r\n    /**\r\n     * 选择详细地址失去焦点时\r\n     */\r\n    checkAddblur(value) {\r\n      \r\n    },\r\n    /**\r\n     * 根据关键词模糊搜索地址\r\n     */\r\n    searchAddress() {\r\n      const that = this,\r\n        region = that.save_createStore_obj.cityName,\r\n        address = this.$refs.addressInput.value;\r\n        if(this._address == address) return;\r\n      // 先清\r\n      if(!address) {\r\n        this.searchAddress_list = [];\r\n      }\r\n      clearTimeout(this.searchAddressTime);\r\n      // 节流\r\n      this.searchAddressTime = setTimeout(() => {\r\n        if(!region){\r\n          this.warn('请选择省市区！');\r\n          return;\r\n        };\r\n        if(!address) return;\r\n        let url = 'https://apis.map.qq.com/ws/place/v1/suggestion';\r\n        this.$jsonp(url,{\r\n            key:'DAXBZ-VIQKS-7QAOO-6LPOB-EMQN7-UAFOU',\r\n            callbackName: 'QQmap',\r\n            output:'jsonp',\r\n            keyword:address,\r\n            region\r\n          })\r\n        .then(res => {\r\n          that.searchAddress_list = res.data;\r\n          that._address = this.$refs.addressInput.value;\r\n          that.isAddShow = true;\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n      });\r\n    },\r\n    /**\r\n     * 根据经纬度反查详细地址\r\n     */\r\n    lngAndLatSearchAddress(lng, lat) {\r\n      const that = this;\r\n\r\n      let url = 'https://apis.map.qq.com/ws/geocoder/v1/';\r\n      this.$jsonp(url,{\r\n          key:'DAXBZ-VIQKS-7QAOO-6LPOB-EMQN7-UAFOU',\r\n          callbackName: 'QQmap',\r\n          output:'jsonp',\r\n          location:`${lat},${lng}`\r\n        })\r\n      .then(res => {\r\n        if(res && res.result && res.result.formatted_addresses && res.result.formatted_addresses.recommend) {\r\n          that.save_createStore_obj.addressInfo = res.result.formatted_addresses.recommend;\r\n        }else{\r\n          // 重置地图位置\r\n          Object.assign(that.save_createStore_obj, {\r\n            addressInfo: \"\", // 详细地址\r\n            _longitude: \"\", // 经度（暂存）\r\n            _latitude: \"\", // 纬度'（暂存）\r\n            longitude: \"\", // 经度\r\n            latitude: \"\", // 纬度'\r\n          });\r\n          that.warn('查无地址，请重新选择门店位置！');\r\n        };\r\n        // 清空地址搜索项\r\n        that.searchAddress_list = [];\r\n      })\r\n      .catch(err => {\r\n          console.log(err)\r\n      })\r\n    },\r\n    /**\r\n     * 确认门店地图坐标\r\n     */\r\n    handleDialogMap() {\r\n      // 如果select选择的地址与地图选点的位置一致，那么就不需要重新选点\r\n      if(this.save_createStore_obj.longitude == this.save_createStore_obj._longitude && this.save_createStore_obj.addressInfo) {\r\n        this.dialogMap = false;\r\n        return;\r\n      };\r\n      this.save_createStore_obj.longitude = this.save_createStore_obj._longitude;\r\n      this.save_createStore_obj.latitude = this.save_createStore_obj._latitude;\r\n      this.dialogMap = false;\r\n      this.lngAndLatSearchAddress(this.save_createStore_obj.longitude, this.save_createStore_obj.latitude);\r\n    },\r\n    /**\r\n     * 地图选择门店坐标\r\n     */\r\n    fnMap() {\r\n      const that = this;\r\n      //\r\n      if(!this.save_createStore_obj.areaCode) {\r\n        this.warn('请选择省市区！');\r\n        return;\r\n      };\r\n\r\n      this.dialogMap = true;\r\n\r\n      // 地图只执行一次\r\n      if(this.dialogMapTF) {\r\n        this.TMap('DAXBZ-VIQKS-7QAOO-6LPOB-EMQN7-UAFOU').then(qq => {\r\n          var map = new qq.maps.Map(document.getElementById(\"container\"), {\r\n              // 地图的中心地理坐标。\r\n              center: new qq.maps.LatLng(39.916527, 116.397128),\r\n              // center: center,\r\n              zoom:11\r\n          });\r\n          var citylocation = new qq.maps.CityService({\r\n            complete : function(results){\r\n              map.setCenter(results.detail.latLng);\r\n            }\r\n          });\r\n          // 根据城市名称显示地图区域\r\n          citylocation.searchCityByName(this.save_createStore_obj.cityName);\r\n          var marker = null;\r\n          // 坐标回显\r\n          marker = new qq.maps.Marker({\r\n              position:new qq.maps.LatLng(that.save_createStore_obj.latitude, that.save_createStore_obj.longitude),\r\n              map: map\r\n          });\r\n          // 点击创建门店坐标\r\n          qq.maps.event.addListener(map, 'click', function(event) {\r\n            that.save_createStore_obj._longitude = event.latLng.getLng();\r\n            that.save_createStore_obj._latitude = event.latLng.getLat();\r\n            console.log(that.save_createStore_obj.longitude)\r\n            if(marker) {\r\n              marker.setMap(null);\r\n            };\r\n            marker = new qq.maps.Marker({\r\n                position:new qq.maps.LatLng(event.latLng.getLat(), event.latLng.getLng()),\r\n                map: map\r\n            });\r\n          });\r\n        });\r\n        this.dialogMapTF = false;\r\n      }\r\n    },\r\n    /**\r\n     * 关闭地图时，地图初始化\r\n     */\r\n    handleClose() {\r\n      if (!this.save_createStore_obj.longitude) {\r\n        this.dialogMapTF = true;\r\n      };\r\n    },\r\n    /**\r\n     * 腾讯地图\r\n     * @param { String } key\r\n     */\r\n    TMap(key) {\r\n      return new Promise(function (resolve, reject) {\r\n        window.init = function () {\r\n          resolve(qq);\r\n        }\r\n        var script = document.createElement(\"script\");\r\n        script.type = \"text/javascript\";\r\n        script.src = \"http://map.qq.com/api/js?v=2.exp&callback=init&key=\"+key;\r\n        script.onerror = reject;\r\n        document.head.appendChild(script);\r\n      })\r\n    },\r\n    /**\r\n     * 检验门店名称\r\n     * @param { String } value 门店名称\r\n     * @param { Function } callback 校验的回调函数\r\n     *\r\n     */\r\n     async checkStoreName(value, callback) {\r\n      if (!value){\r\n        callback(new Error('请输入门店名称！'));\r\n        return;\r\n      };\r\n      // 如果编辑原来的名字，则不做请求校验\r\n      if(this.storeName != value) {\r\n        let data = await this.request(\r\n          this.api.store.storeBasic_check,\r\n          {name:value}\r\n        );\r\n        if(!data) {\r\n          callback(new Error('已存在相同的门店名称，请重新输入！'));\r\n        }else{\r\n          callback();\r\n        };\r\n      }else{\r\n          callback();\r\n      };\r\n\r\n    },\r\n    /**\r\n     * 获取门店信息\r\n     * @param { String } id 门店 id\r\n     *\r\n     */\r\n    getStoreInfo(id) {\r\n      const that = this;\r\n      this.request(\r\n        this.api.store.storeBasic_get,\r\n        {id},\r\n        true\r\n      ).then(res => {\r\n        // delete res.organizationId;\r\n        // 不要直接this.save_createStore_obj = res，这样会把初始化的数据替换掉；\r\n        Object.assign(this.save_createStore_obj, res);\r\n        // 赋值经度位置预选\r\n        this.save_createStore_obj._latitude = this.save_createStore_obj.latitude;\r\n        this.save_createStore_obj._longitude = this.save_createStore_obj.longitude;\r\n\r\n        let data = this.save_createStore_obj;\r\n        // 处理门店名称\r\n        this.storeName = JSON.parse(JSON.stringify(data.name));\r\n        // 处理启用门店调拨\r\n        data.enableAllocation = this.save_createStore_obj.enableAllocation ? true : false ;\r\n        // 小程序展示\r\n        data.enableShowWeChat = this.save_createStore_obj.enableShowWeChat ? true : false ;\r\n        // 门店自收银\r\n        data.enableOwnSettlement = this.save_createStore_obj.enableOwnSettlement ? true : false ;\r\n        // 无会员开单\r\n        data.enableNoMemberBilling = this.save_createStore_obj.enableNoMemberBilling ? true : false ;\r\n        // 订单改价\r\n        data.enableOrderPrice  = this.save_createStore_obj.enableOrderPrice  ? true : false ;\r\n        // 处理图片\r\n        data.images.forEach((item, idnex) => {\r\n          switch(item.type) {\r\n            case 0:\r\n              data.storeImgs_list.push({url:item.url});\r\n            break;\r\n            case 1:\r\n              data.enclosure_list.push({url:item.url});\r\n            break;\r\n          }\r\n        });\r\n        // 处理logo\r\n        data.logoImage_list.push({ url:data.logoImage });\r\n        console.log(data.logoImage)\r\n        // 处理经营信息\r\n        let infosMap_arr = [];\r\n\r\n        Object.values(data.infosMap).forEach((item, index) => {\r\n          item.forEach((items, indexs) => {\r\n            infosMap_arr.push(items);\r\n          });\r\n        });\r\n        console.log(infosMap_arr);\r\n\r\n        infosMap_arr.forEach((item, idnex) => {\r\n          switch(item.type) {\r\n            case 0:\r\n              this.findTime(item, data.manageType_list);\r\n            break;\r\n            case 1:\r\n              this.findTime(item, data.paymentType_list);\r\n            break;\r\n            case 2:\r\n              this.findTime(item, data.manageRange_list);\r\n            break;\r\n            case 3:\r\n              this.findTime(item, data.storeTag_list);\r\n            break;\r\n          }\r\n        });\r\n        console.log(data)\r\n      });\r\n    },\r\n    /**\r\n     * 查找经营信息匹配的项\r\n     * @param { Object } item 当前对比的对象；\r\n     * @param { Array } arr 需要查找的数组；\r\n     */\r\n    findTime(item, arr) {\r\n      var findTime = arr.find((items, indexs) => {\r\n        return item.dataName == items.name;\r\n      });\r\n      if(findTime){\r\n        findTime.checked = true;\r\n      };\r\n    },\r\n    /**\r\n     * 选择字典项\r\n     * @param { Object } item 当前项\r\n     */\r\n    selectCheckbox(item) {\r\n      item.checked = !item.checked;\r\n    },\r\n    /**\r\n     * 获取字典项\r\n     */\r\n    getAllCode() {\r\n      this.request(\r\n        this.api.system.ALL_CODESET_POST,\r\n        {},\r\n        true\r\n      ).then(res => {\r\n        res.forEach((item, index) => {\r\n          switch(item.name) {\r\n            case 'STO001':\r\n              // 门店类型列表\r\n              item.codeItemList.forEach((itemk, indexk) => {\r\n                itemk.checked = false;\r\n              });\r\n              this.store_list = item.codeItemList;\r\n              break;\r\n            case 'COM002':\r\n              // 经营类型列表\r\n              item.codeItemList.forEach((itemk, indexk) => {\r\n                itemk.checked = false;\r\n              });\r\n              this.save_createStore_obj.manageType_list = item.codeItemList;\r\n              break;\r\n            case 'STO002':\r\n              // 门店收款方式\r\n              item.codeItemList.forEach((itemk, indexk) => {\r\n                itemk.checked = false;\r\n              });\r\n              this.save_createStore_obj.paymentType_list = item.codeItemList;\r\n            break;\r\n            case 'STO003':\r\n              // 门店货权归属\r\n              item.codeItemList.forEach((itemk, indexk) => {\r\n                itemk.checked = false;\r\n              });\r\n              this.goodsowner_list = item.codeItemList;\r\n            break;\r\n              case 'STO004':\r\n              // 经营范围列表\r\n              item.codeItemList.forEach((itemk, indexk) => {\r\n                itemk.checked = false;\r\n              });\r\n              this.save_createStore_obj.manageRange_list = item.codeItemList;\r\n            break;\r\n              case 'STO005':\r\n              // 门店标签\r\n              item.codeItemList.forEach((itemk, indexk) => {\r\n                itemk.checked = false;\r\n              });\r\n              this.save_createStore_obj.storeTag_list = item.codeItemList;\r\n            break;\r\n          }\r\n        });\r\n        // 获取门店信息\r\n        if(this.isEcho) {\r\n          this.getStoreInfo(this.$route.query.id);\r\n        };\r\n      });\r\n    },\r\n    /**\r\n     * 获取人员列表\r\n     */\r\n    user_list() {\r\n      this.request(\r\n        this.api.store.user_list,\r\n        this.filtersData,\r\n        true\r\n      ).then(res => {\r\n        this.principal_list = res;\r\n      });\r\n    },\r\n    /**\r\n     * 搜索\r\n     */\r\n    handleSearch() {\r\n      this.user_list();\r\n    },\r\n    /**\r\n     * 选择地区回调\r\n     * @param { Object } obj 选择区域返回的回调函数\r\n     */\r\n    setDivision(obj) {\r\n      console.log(obj)\r\n      this.searchAddress_list = [];\r\n\r\n      Object.assign(this.save_createStore_obj, {\r\n        \"provinceName\": obj.province,// 省份名称\r\n        \"provinceCode\": obj.provinceCode,// 省份 code\r\n        \"divisionId\":obj.divisionId,// 区 id\r\n        \"cityName\": obj.municipality,// 城市名称\r\n        \"cityCode\": obj.municipalityCode,// 城市 code\r\n        \"areaName\": obj.area,// 区域名称\r\n        \"areaCode\": obj.areaCode,// 区域 code\r\n      });\r\n    },\r\n    /**\r\n     * 匹配营业时间段\r\n     * @param { Regular } /^\\d+:\\d+/g  开头为数字，匹配n个，然后匹配'：'再然后数字n个\r\n     */\r\n    matchTime(strTime) {\r\n      if(!strTime) return;\r\n      var reg = /\\d+:\\d+/g;\r\n      var regZone = /0800/g;\r\n      var str = strTime && strTime.match(reg)[0];\r\n      var isZone = regZone.test(strTime);\r\n\r\n      str = str.split(':');\r\n      // 此处需加8个小时（时区时间）\r\n      if(!isZone) {\r\n        str = this.replenishZero((parseInt(str[0]) + 8)%24) + ':' + str[1];\r\n      }else{\r\n        str = `${str[0]}:${str[1]}`\r\n      };\r\n      return str;\r\n    },\r\n    /**\r\n     * 补零函数\r\n     * @param { Nunber | String } item 数字或数字字符串 如： 1，'1'\r\n     * @return { String } 如：'01'\r\n     */\r\n    replenishZero(item) {\r\n        item = parseInt(item);\r\n\r\n        return item < 10 ? `0${item}` : item;\r\n    },\r\n    /**\r\n     * 添加门店负责人\r\n     * @param { Object } item 选中的当前项\r\n     */\r\n    add_principal(item) {\r\n      if(!item) return;\r\n      Object.assign(this.save_createStore_obj, {\r\n        principalId:item.id,\r\n        principalName:item.name\r\n      });\r\n      this.dialogTableVisible = false;\r\n    },\r\n    /**\r\n     * 新建或编辑门店\r\n     */\r\n    save_createStore() {\r\n      let that = this,\r\n        data = JSON.parse(JSON.stringify(this.save_createStore_obj));\r\n      if(this.isEcho) {\r\n        Object.assign(data, {\r\n          id:this.$route.query.id\r\n        })\r\n      };\r\n      // 添加创建人姓名\r\n      data.createName = this.userInfo.name;\r\n      // 添加隶属机构名称\r\n      if(!this.isEcho) {\r\n        data.organizationName = this.$refs.organizationName.organizationList[0].name;\r\n        console.log(this.$refs.organizationName)\r\n      };\r\n      // 处理启用门店调拨\r\n      data.enableAllocation = this.save_createStore_obj.enableAllocation ? 1 : 0 ;\r\n      // 处理启用门店调拨\r\n      data.enableShowWeChat = this.save_createStore_obj.enableShowWeChat ? 1 : 0 ;\r\n      // 处理门店自收银\r\n      data.enableOwnSettlement = this.save_createStore_obj.enableOwnSettlement ? 1 : 0 ;\r\n      // 处理无会员开单\r\n      data.enableNoMemberBilling = this.save_createStore_obj.enableNoMemberBilling ? 1 : 0 ;\r\n      // 订单改价\r\n      data.enableOrderPrice  = this.save_createStore_obj.enableOrderPrice  ? 1 : 0 ;\r\n      // 处理经营信息\r\n      data.infos = [];\r\n      this.pushInfos(this.save_createStore_obj.manageType_list, 0, data);\r\n      this.pushInfos(this.save_createStore_obj.paymentType_list, 1, data);\r\n      this.pushInfos(this.save_createStore_obj.manageRange_list, 2, data);\r\n      this.pushInfos(this.save_createStore_obj.storeTag_list, 3, data);\r\n      // 处理图片\r\n      data.images = [];\r\n      this.pushImages(this.save_createStore_obj.storeImgs_list, 0, data);\r\n      this.pushImages(this.save_createStore_obj.enclosure_list, 1, data);\r\n      // 处理门店logo\r\n      if( data.logoImage_list.length > 0){\r\n        data.logoImage = data.logoImage_list[0].url;\r\n      }\r\n      // 删除无用数据\r\n      delete data.enclosure_list;\r\n      delete data.manageRange_list;\r\n      delete data.manageType_list;\r\n      delete data.paymentType_list;\r\n      delete data.storeImgs_list;\r\n      delete data.storeTag_list;\r\n      delete data.logoImage_list;\r\n      delete data.infosMap;\r\n      console.log(data);\r\n      // return;\r\n      this.$refs.formName.validate((valid) => {\r\n        if (valid) {\r\n          let text = this.isEcho ? '零售门店信息修改后将立即生效，是否确认修改？' : '请确认以上内容填写无误，是否确认创建此门店？';\r\n          let textEcho = this.isEcho ? '编辑成功！' : '新建成功！';\r\n\r\n          this.$confirm(text, '提示', {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning'\r\n          }).then(() => {\r\n            // 请求\r\n            this.request(\r\n              this.api.store.storeBasic_save,\r\n              data\r\n            ).then(res => {\r\n              this.warn(textEcho);\r\n              this.href('store_info_list');\r\n            });\r\n          }).catch(() => {\r\n            this.warn('已取消！',{\r\n              type:'info'\r\n            });\r\n\r\n          });\r\n\r\n        } else {\r\n           this.warn('门店信息未填写完整，请填写完整后重试！','warning');\r\n          return;\r\n        }\r\n      });\r\n    },\r\n    /**\r\n     * 添加经营信息\r\n     * @param { Array } arr 父级数组集合\r\n     * @param { Number } type 经营信息类型\r\n     * @param { Object } data 提交对象集合\r\n     */\r\n    pushInfos(arr, type, data) {\r\n      arr.forEach((item, index) => {\r\n        if(item.checked) {\r\n          data.infos.push({\r\n            \"dataName\": item.name,\r\n            \"dataId\": item.codeSetId,\r\n            \"type\": type\r\n          })\r\n        }\r\n      });\r\n    },\r\n    /**\r\n     * 提示\r\n     * @param { String } message 提示文案\r\n     * @param { String } type 提示类型\r\n     */\r\n    warn(message, type) {\r\n      this.$message({\r\n        message: message,\r\n        type: type || 'success'\r\n      });\r\n    },\r\n    /**\r\n     * 跳转\r\n     * @param { String } routeName 路由跳转名字\r\n     */\r\n    href(routeName) {\r\n      this.$router.push({\r\n        path: `/${routeName}`,\r\n        name: routeName\r\n      });\r\n    },\r\n    /**\r\n     * 添加门店图片，附件信息\r\n     * @param { Array } arr 父级数组集合\r\n     * @param { Number } type 经营信息类型\r\n     * @param { Object } data 提交对象集合\r\n     */\r\n    pushImages(arr, type, data) {\r\n\r\n      arr.forEach((item, index) => {\r\n        console.log(arr)\r\n        data.images.push({\r\n          \"type\": type,\r\n          \"url\": item.url\r\n        })\r\n      });\r\n    },\r\n    /**\r\n     * 点击页数\r\n     * @param { Number } pageIndex 当前页\r\n     */\r\n    handleCurrentChange(pageIndex){\r\n        this.filtersData.pageIndex = pageIndex;\r\n        this.user_list();\r\n    },\r\n    /**\r\n     * 改变每页展示条目\r\n     * @param { Number } pageSize 每页展示条目\r\n     */\r\n    handleSizeChange(pageSize){\r\n        this.filtersData.pageSize = pageSize;\r\n        this.user_list();\r\n    },\r\n  },\r\n  components: {\r\n    codeSet,\r\n    division,\r\n    treeDept,\r\n    ElUploadImg,\r\n    OrganizationSelect,\r\n    businessTime\r\n  }\r\n};\r\n</script>\r\n<style  lang=\"less\" scoped>\r\n.add{\r\n  position: relative;\r\n}\r\n.address{\r\n  width: 370px;\r\n  padding: 0 15px;\r\n  background-color: #FFF;\r\n  background-image: none;\r\n  border-radius: 4px;\r\n  border: 1px solid #DCDFE6;\r\n  box-sizing: border-box;\r\n  color: #606266;\r\n  display: inline-block;\r\n  font-size: inherit;\r\n  height: 32px;\r\n}\r\n.addOv{\r\n  height: 240px;\r\n}\r\n.address::-webkit-input-placeholder {\r\n    color: #C0C4CC;\r\n}\r\n.address2{\r\n    background: #F5F7FA;\r\n    color: #C0C4CC;\r\n  }\r\n.address-box{\r\n  position: absolute;\r\n  bottom:50px;\r\n  overflow-y: scroll;\r\n  left:0px;                            \r\n  background: #fff;\r\n  width: 370px;\r\n  border-radius: 5px;\r\n  border: 1px solid #e4e7ed;\r\n  box-shadow: 0 2px 12px 0 rgba(0,0,0,.1);\r\n  position: absolute;\r\n  font-size: 12px;\r\n  color: #606266;\r\n  z-index: 9999;\r\n}\r\n.address-box .li{\r\n  text-indent: 30px;\r\n  width: 360px;\r\n  overflow: hidden;\r\n  text-overflow:ellipsis;\r\n  white-space: nowrap;\r\n}\r\n.address-box .li:hover{\r\n  background: #f5f7fa;\r\n}\r\n.address-box:after{\r\n  // position: absolute;\r\n  // display: block;\r\n  // width: 0;\r\n  // height: 0;\r\n  // border-color: transparent;\r\n  // border-style: solid;\r\n  // bottom: 12px;\r\n  // left: 48px;\r\n  // margin-left: -6px;\r\n  // border-top-width: 0;\r\n  // border-bottom-color: #fff;\r\n  // content: \" \";\r\n  // border-width: 6px;\r\n}\r\n#container{\r\n  width: 100%;\r\n  height: 500px;\r\n  border: 1px solid #666;\r\n}\r\n.add_principal{\r\n  color: #2290E8;\r\n  cursor: pointer;\r\n}\r\n\r\n.create-store {\r\n  margin: 8px;\r\n  background: #fff;\r\n  position: relative;\r\n  padding: 20px 20px 60px 20px;\r\n  .save {\r\n    position: absolute;\r\n    left: 140px;\r\n  }\r\n  .form-label {\r\n    margin-top: 20px;\r\n    .el-input,\r\n    .el-select {\r\n      width: 370px;\r\n    }\r\n    .el-checkbox-group {\r\n      width: 650px;\r\n    }\r\n    .el-checkbox-group /deep/ .el-checkbox{\r\n      width: 100px;\r\n    }\r\n    .el-input-short {\r\n      width: 180px;\r\n    }\r\n    .video-upload {\r\n      border: 1px dashed #d9d9d9;\r\n      border-radius: 6px;\r\n      cursor: pointer;\r\n      position: relative;\r\n      overflow: hidden;\r\n      width: 80px;\r\n      height: 80px;\r\n      text-align: center;\r\n      line-height: 80px;\r\n      span {\r\n        font-size: 35px;\r\n        color: #d9d9d9;\r\n      }\r\n    }\r\n    .video-upload-p {\r\n      color: #666;\r\n      font-size: 12px;\r\n    }\r\n    .video-upload:hover {\r\n      border: 1px dashed #409eff;\r\n    }\r\n  }\r\n}\r\n.display-flex {\r\n  display: flex;\r\n}\r\n</style>\r\n\r\n"]}]}