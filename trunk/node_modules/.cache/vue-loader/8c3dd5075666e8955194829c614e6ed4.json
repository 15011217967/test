{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\components\\editor\\Editor.vue?vue&type=style&index=0&id=20f8bd0f&lang=less&scoped=true&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\components\\editor\\Editor.vue","mtime":1572415127786},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\css-loader\\index.js","mtime":1558492728478},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1558492728890},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\postcss-loader\\src\\index.js","mtime":1558492728823},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\less-loader\\dist\\cjs.js","mtime":1566193719488},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["\n.editor{\n  .editor-info{position: relative;\n    span{font-size: 20px;z-index: 101;cursor: pointer;position: absolute;top: 7px;color: #999;}\n    span:hover{color: #666;}\n    .el-icon-picture{left: 487px;}\n    .el-icon-video-camera-solid{left: 517px;}\n  }\n  .upload-list{height: 230px;\n    .auto-list{height: 200px;overflow: auto;}\n  }\n}\n",{"version":3,"sources":["Editor.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Editor.vue","sourceRoot":"src/components/editor","sourcesContent":["<style lang=\"less\" scoped>\r\n  .editor{\r\n    .editor-info{position: relative;\r\n      span{font-size: 20px;z-index: 101;cursor: pointer;position: absolute;top: 7px;color: #999;}\r\n      span:hover{color: #666;}\r\n      .el-icon-picture{left: 487px;}\r\n      .el-icon-video-camera-solid{left: 517px;}\r\n    }\r\n    .upload-list{height: 230px;\r\n      .auto-list{height: 200px;overflow: auto;}\r\n    }\r\n  }\r\n</style>\r\n<template>\r\n  <div class=\"editor\">\r\n    <div class=\"editor-info\">\r\n      <div id=\"editor\"></div>\r\n      <span class=\"icon el-icon-picture\" @click=\"uploadImg\"></span>\r\n      <span class=\"icon el-icon-video-camera-solid\" @click=\"uploadVideo\"></span>\r\n    </div>\r\n    <!--上传图片-->\r\n    <el-dialog title=\"选择图片\" :visible.sync=\"uploadDialog\" width=\"45%\" :close-on-click-modal=\"false\">\r\n      <div class=\"upload-list\">\r\n        <el-tabs v-model=\"activeName\" @tab-click=\"handleClick\">\r\n          <el-tab-pane label=\"本地上传\" name=\"local\">\r\n            <div class=\"auto-list\">\r\n              <check-list :img-list=\"localImgList\" ref=\"localCheckListDom\" v-if=\"uploadDialog\" :is-default-check=\"true\">\r\n                <upload-img :is-radio=\"false\" :img-list=\"localImgList\" content-txt=\"上传图片\"></upload-img>\r\n              </check-list>\r\n            </div>\r\n          </el-tab-pane>\r\n          <el-tab-pane label=\"素材库\" name=\"material\">\r\n            <div class=\"auto-list\">\r\n              <check-list :img-list=\"materialImgList\" v-if=\"uploadDialog\" ref=\"materialCheckListDom\"></check-list>\r\n              <el-button type=\"primary\" @click=\"getMaterialImgData(true)\" size=\"small\">加载更多</el-button>\r\n            </div>\r\n          </el-tab-pane>\r\n        </el-tabs>\r\n      </div>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"uploadDialog = false\" size=\"small\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"uploadDialogSub\" size=\"small\">确 定</el-button>\r\n        </span>\r\n    </el-dialog>\r\n    <!--上传视频-->\r\n    <el-dialog title=\"选择视频\" :visible.sync=\"uploadVideoDialog\" width=\"45%\" :close-on-click-modal=\"false\">\r\n      <div class=\"upload-list\">\r\n        <el-tabs v-model=\"activeVideoName\" @tab-click=\"handleVideoClick\">\r\n          <el-tab-pane label=\"本地上传\" name=\"localVideo\">\r\n            <div class=\"auto-list\">\r\n              <video-check-list :video-list=\"localVideoList\" v-if=\"uploadVideoDialog\" ref=\"localVideoCheckListDom\">\r\n                <upload-video ref=\"uploadVideo\" v-if=\"uploadVideoDialog\" :is-radio=\"false\" :video-list=\"localVideoList\"></upload-video>\r\n              </video-check-list>\r\n            </div>\r\n          </el-tab-pane>\r\n          <el-tab-pane label=\"素材库\" name=\"materialVideo\">\r\n            <div class=\"auto-list\">\r\n              <video-check-list :video-list=\"materialVideoList\" v-if=\"uploadVideoDialog\" ref=\"materialVideoCheckListDom\">\r\n              </video-check-list>\r\n              <el-button type=\"primary\" @click=\"getMaterialVideoData(true)\" size=\"small\">加载更多</el-button>\r\n            </div>\r\n          </el-tab-pane>\r\n        </el-tabs>\r\n      </div>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"uploadVideoDialog = false\" size=\"small\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"uploadVideoDialogSub\" size=\"small\">确 定</el-button>\r\n        </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\n  import UploadImg from '@/components/editor/UploadImg'\r\n  import UploadVideo from '@/components/editor/UploadVideo'\r\n  import CheckList from '@/components/editor/CheckList'\r\n  import VideoCheckList from '@/components/editor/VideoCheckList'\r\n\r\n  import WangEditor  from 'wangeditor'\r\n  export default {\r\n    name: 'editor',\r\n    props: {\r\n\r\n    },\r\n    // 数据\r\n    data() {\r\n      return {\r\n        // 富文本\r\n        editor:null,\r\n        // 图片\r\n        // 上传弹窗\r\n        uploadDialog: false,\r\n        //默认本地\r\n        activeName: 'local',\r\n        // 本地上传列表\r\n        localImgList:[],\r\n        // 本地上传列表 选中的\r\n        localCheckList: [],\r\n        // 素材列表\r\n        materialImgFrom:{\r\n          pageIndex: 1,\r\n          pageSize: 12,\r\n          type: 2  // 1 -- 视频  2 -- 图片\r\n        },\r\n        materialImgList:[],\r\n        // 素材列表 选中的\r\n        materialCheckList:[],\r\n\r\n        // 视频\r\n        // 上传弹窗\r\n        uploadVideoDialog: false,\r\n        //默认本地\r\n        activeVideoName: 'localVideo',\r\n        // 本地上传列表\r\n        localVideoList:[],\r\n        // 本地上传列表 选中的\r\n        localVideoCheckList: [],\r\n        // 素材列表\r\n        materialVideoFrom:{\r\n          pageIndex: 1,\r\n          pageSize: 12,\r\n          type: 1  // 1 -- 视频  2 -- 图片\r\n        },\r\n        materialVideoList:[],\r\n        // 素材列表 选中的\r\n        materialVideoCheckList:[],\r\n\r\n\r\n      }\r\n    },\r\n    // 组件\r\n    components: {\r\n      UploadImg,\r\n      UploadVideo,\r\n      CheckList,\r\n      VideoCheckList\r\n    },\r\n    // 初始化数据\r\n    mounted() {\r\n      this.$nextTick(() => {\r\n        this.createEditor()\r\n      })\r\n    },\r\n    // 方法\r\n    methods: {\r\n      // 富文本\r\n      // 光标插入\r\n      insertEditor(str){\r\n        this.editor.cmd.do('insertHtml', str)\r\n      },\r\n      // 创建编辑器\r\n      createEditor(){\r\n        this.editor = new WangEditor(document.getElementById('editor'))\r\n        // 初始化编辑器配置，在create之前\r\n        this.initEditorConfig()\r\n        // 生成编辑器\r\n        this.editor.create()\r\n      },\r\n      // 初始化编辑器配置\r\n      initEditorConfig() {\r\n        // 自定义菜单配置\r\n        this.editor.customConfig.zIndex = 100\r\n        this.editor.customConfig.menus = [\r\n          'head',  // 标题\r\n          'bold',  // 粗体\r\n          'fontSize',  // 字号\r\n          // 'fontName',  // 字体\r\n          'italic',  // 斜体\r\n          'underline',  // 下划线\r\n          'strikeThrough',  // 删除线\r\n          'foreColor',  // 文字颜色\r\n          // 'link',  // 插入链接\r\n          'list',  // 列表\r\n          'justify',  // 对齐方式\r\n          'quote',  // 引用\r\n          'table',  // 表格\r\n          'code',  // 插入代码\r\n          'undo',  // 撤销\r\n          'redo'  // 重复\r\n        ]\r\n        // 关闭粘贴样式的过滤\r\n        this.editor.customConfig.pasteFilterStyle = false\r\n        // 忽略粘贴内容中的图片\r\n        this.editor.customConfig.pasteIgnoreImg = true\r\n        // 自定义处理粘贴的文本内容\r\n        this.editor.customConfig.pasteTextHandle = function (content) {\r\n          // content 即粘贴过来的内容（html 或 纯文本），可进行自定义处理然后返回\r\n          if (content == '' && !content) return ''\r\n          let str = content\r\n          str = str.replace(/<xml>[\\s\\S]*?<\\/xml>/ig, '')\r\n          str = str.replace(/<style>[\\s\\S]*?<\\/style>/ig, '')\r\n          str = str.replace(/<\\/?[^>]*>/g, '')\r\n          str = str.replace(/[ | ]*\\n/g, '\\n')\r\n          str = str.replace(/&nbsp;/ig, '')\r\n          return str\r\n        }\r\n      },\r\n      // 获取数据\r\n      getEditorHtml(){\r\n        return this.editor.txt.html()\r\n      },\r\n      // 设置数据\r\n      getEditorText(){\r\n        return this.editor.txt.text()\r\n      },\r\n      // 初始数据\r\n      setEditorHtml(str){\r\n        this.editor.txt.html(str)\r\n      },\r\n\r\n      // 上传图片\r\n      uploadImg(){\r\n        // 初始数据\r\n        this.materialImgFrom.pageIndex = 1\r\n        this.activeName = 'local'\r\n        this.localImgList = []\r\n        this.localCheckList = []\r\n        this.materialImgList = []\r\n        this.materialCheckList = []\r\n        this.uploadDialog = true\r\n      },\r\n      // 图片转dom\r\n      checkImgInit(ary){\r\n        let str =  ``\r\n        if(ary && ary.length){\r\n          ary.forEach((item)=> {\r\n            str += `<img src=\"${item}\" alt=\"\" style=\"width: 400px;\"><br/>`\r\n          })\r\n        }\r\n        return str\r\n      },\r\n      //图片 素材 本地 切换\r\n      handleClick(node){\r\n        if(node.name === 'material'){\r\n          this.getMaterialImgData()\r\n        }\r\n      },\r\n      // 获取素材库图片\r\n      getMaterialImgData(flag){\r\n        if(flag){\r\n          this.materialImgFrom.pageIndex++\r\n        }\r\n        this.request(this.api.contentCore.library_list, this.materialImgFrom).then(data => {\r\n          if(flag){\r\n            this.materialImgList = this.materialImgList.concat(data.data)\r\n          }else {\r\n            this.materialImgList =  data.data\r\n          }\r\n        });\r\n      },\r\n      // 确认选中图片\r\n      uploadDialogSub(){\r\n        if(this.activeName === 'local'){\r\n          const urlList = this.$refs.localCheckListDom.getCheckList()\r\n          this.localCheckList = urlList\r\n          const dom = this.checkImgInit(urlList)\r\n          this.insertEditor(dom)\r\n          this.uploadDialog = false\r\n        }\r\n        if(this.activeName === 'material'){\r\n          const urlList = this.$refs.materialCheckListDom.getCheckList()\r\n          this.materialCheckList = urlList\r\n          const dom = this.checkImgInit(urlList)\r\n          this.insertEditor(dom)\r\n          this.uploadDialog = false\r\n        }\r\n      },\r\n\r\n      // 上传视频\r\n      uploadVideo(){\r\n        // 初始数据\r\n        this.materialVideoFrom.pageIndex = 1\r\n        this.localVideoList = []\r\n        this.localVideoCheckList = []\r\n        this.materialVideoList = []\r\n        this.materialVideoCheckList = []\r\n        this.activeVideoName = 'localVideo'\r\n        this.uploadVideoDialog = true\r\n      },\r\n      //视频 素材 本地 切换\r\n      handleVideoClick(node){\r\n        if(node.name === 'materialVideo'){\r\n          this.getMaterialVideoData()\r\n        }\r\n      },\r\n      // 获取素材库视频\r\n      getMaterialVideoData(flag){\r\n        if(flag){\r\n          this.materialVideoFrom.pageIndex++\r\n        }\r\n        this.request(this.api.contentCore.library_list, this.materialVideoFrom).then(data => {\r\n          if(flag){\r\n            this.materialVideoList = this.materialVideoList.concat(data.data)\r\n          }else {\r\n            this.materialVideoList =  data.data\r\n          }\r\n        });\r\n      },\r\n      // 确认选中视频\r\n      uploadVideoDialogSub(){\r\n        if(this.activeVideoName === 'localVideo'){\r\n          const urlList = this.$refs.localVideoCheckListDom.getCheckList()\r\n          this.localVideoCheckList = urlList\r\n          const dom = this.checkVideoInit(urlList)\r\n          this.insertEditor(dom)\r\n          this.uploadVideoDialog = false\r\n        }\r\n        if(this.activeVideoName === 'materialVideo'){\r\n          const urlList = this.$refs.materialVideoCheckListDom.getCheckList()\r\n          this.materialVideoCheckList = urlList\r\n          const dom = this.checkVideoInit(urlList)\r\n          this.insertEditor(dom)\r\n          this.uploadVideoDialog = false\r\n        }\r\n      },\r\n      // 视频转dom\r\n      checkVideoInit(ary){\r\n        if (!ary.length) return\r\n        let str =  ``\r\n        if(ary && ary.length){\r\n          ary.forEach((item)=> {\r\n            str += `<video controls=\"controls\" src=\"${item.url}\" width=\"400px\"></video><br/>`\r\n          })\r\n        }\r\n        return str\r\n      }\r\n    },\r\n    // 计算属性\r\n    computed: {},\r\n    // 监听数据变化\r\n    watch: {\r\n\r\n    }\r\n  }\r\n</script>\r\n"]}]}