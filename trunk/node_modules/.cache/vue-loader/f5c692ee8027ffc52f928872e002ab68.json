{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\components\\el-cascader-multi\\multi-cascader\\multi-cascader.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\components\\el-cascader-multi\\multi-cascader\\multi-cascader.vue","mtime":1572415127847},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\css-loader\\index.js","mtime":1558492728478},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1558492728890},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\postcss-loader\\src\\index.js","mtime":1558492728823},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\less-loader\\dist\\cjs.js","mtime":1566193719488},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.el-select-dropdown.el-popper.is-multiple.multi-cascader {\r\n  .el-select-dropdown__item.selected::after {\r\n    top: 0;\r\n  }\r\n}\r\n.el-select-dropdown.el-popper.is-multiple.multi-cascader-style{\r\n  min-width: 160px!important;\r\n  .el-select-dropdown__list {\r\n    padding: 0;\r\n    position: relative;\r\n  }\r\n  .el-select-dropdown__item {\r\n    padding: 0;\r\n    height: 216px;\r\n    &.hover {\r\n      background-color: #fff;\r\n    }\r\n  }\r\n  .li-style {\r\n    height: 34px;\r\n    padding: 0px 20px;\r\n    box-sizing: border-box;\r\n    list-style: none;\r\n    width: 160px;\r\n    cursor: pointer;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    line-height: 34px;\r\n    &:hover{\r\n      background-color: rgba(69,200,220,.1);\r\n    }\r\n    &.selected {\r\n      color: #45c8dc;\r\n    }\r\n    &.active-li {\r\n      background-color: rgba(69,200,220,.1);\r\n      color: #45c8dc;\r\n    }\r\n    .li-label-style{\r\n      text-align: left;\r\n      width: 100%;\r\n      box-sizing: border-box;\r\n      padding-right: 15px;\r\n      position: relative;\r\n      text-overflow: ellipsis;\r\n      white-space: nowrap;\r\n      overflow: hidden;\r\n      .li-label-icon {\r\n        position: absolute;\r\n        right: 0px;\r\n        top: 50%;\r\n        transform: translate(0, -50%);\r\n      }\r\n      .el-checkbox {\r\n        margin-right: 10px;\r\n      }\r\n    }\r\n  }\r\n  .ground {\r\n    width: 100%;\r\n    height: 204px;\r\n    padding: 6px 0;\r\n  }\r\n  .floor-item {\r\n    width: 160px;\r\n    padding: 6px 0;\r\n    border-left: 1px solid #eee;\r\n    position: absolute;\r\n    top: 0;\r\n    height: 204px;\r\n    overflow-y: auto;\r\n    overflow-x: hidden;\r\n  }\r\n\r\n}\r\n.multi-cascader-style {\r\n  p {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  ol, ul {\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n}\r\n\r\n/*$width: 160px;\r\n@each $i in [1,2,3,4,5,6,7,8,9,10] {\r\n  .multi-cascader-style.floor-width-#{$i} {\r\n    width: $i * $width;\r\n  }\r\n  .multi-cascader-style .floor-position-left-#{$i} {\r\n    left: ($i - 1) * $width;\r\n  }\r\n}*/\r\n@width: 160px;\r\n@idList: 1,2,3,4,5,6,7,8,9,10;\r\n\r\neach(@idList, {\r\n  .multi-cascader-style.floor-width-@{value} {\r\n    width: @value * @width;\r\n  }\r\n  .multi-cascader-style .floor-position-left-@{value} {\r\n    left: (@value - 1) * @width;\r\n  }\r\n});\r\n",{"version":3,"sources":["multi-cascader.vue"],"names":[],"mappingsfile":"multi-cascader.vue","sourceRoot":"src/components/el-cascader-multi/multi-cascader","sourcesContent":["<template>\r\n  <div style=\"width:100%;height:100%;\">\r\n    <el-select\r\n      style=\"width:100%;height:100%;\"\r\n      v-model=\"selectedLabels\"\r\n      multiple\r\n      :popper-class=\"innerPopperClass\"\r\n      @remove-tag=\"removeOne\"\r\n      :filterable=\"filterable\"\r\n      :filter-method=\"innerFilterMethod\"\r\n      :reserve-keyword=\"reserveKeyword\"\r\n      @change=\"changeLabel\"\r\n      v-bind=\"$attrs\"\r\n      @blur=\"handleBlur\"\r\n      @visible-change=\"visibleChange\"\r\n      @focus=\"handleFocus\"\r\n      @clear=\"handleClear\"\r\n      :allow-create=\"false\"\r\n    >\r\n      <span slot=\"prefix\" v-if=\"$slots.prefix\">\r\n        <slot name=\"prefix\"></slot>\r\n      </span>\r\n      <template v-if=\"!isSearching\">\r\n        <el-option value=\"__root\">\r\n          <div class=\"ground\" @click.stop>\r\n            <render-list\r\n              :only-last=\"onlyLast\"\r\n              :list=\"root.childNodes\"\r\n              :level=\"1\"\r\n              :active-list=\"activeList\"\r\n              @handle-click=\"handleClick\"\r\n              @handle-check=\"handleCheck\"\r\n              :label-key=\"labelKey\"\r\n              :expand-trigger=\"expandTrigger\"\r\n            ></render-list>\r\n            <template v-for=\"item in maxLevellist\">\r\n              <div\r\n                :class=\"`floor-item floor-position-left-${item.id + 1}`\"\r\n                :key=\"item.id\"\r\n                v-if=\"item.rendered\"\r\n                v-show=\"activeList.length >= item.id\"\r\n              >\r\n                <render-list\r\n                  :only-last=\"onlyLast\"\r\n                  :list=\"showData[item.id]\"\r\n                  :level=\"item.id + 1\"\r\n                  :active-list=\"activeList\"\r\n                  @handle-click=\"handleClick\"\r\n                  @handle-check=\"handleCheck\"\r\n                  :label-key=\"labelKey\"\r\n                  :expand-trigger=\"expandTrigger\"\r\n                ></render-list>\r\n              </div>\r\n            </template>\r\n          </div>\r\n        </el-option>\r\n      </template>\r\n      <template v-if=\"isSearching\">\r\n        <el-option\r\n          v-for=\"item in searchResult\"\r\n          :value=\"item.showLabel\"\r\n          :key=\"getKey(item)\"\r\n        >\r\n          <div style=\"width:100%;height:100%\" @click.stop=\"selectOne(item)\">\r\n            {{item.totalLabel}}\r\n          </div>\r\n        </el-option>\r\n      </template>\r\n    </el-select>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport TreeStore from './lib/Tree.js'\r\nimport renderList from './render-list.vue'\r\nimport { _findByObj } from './tool/unit'\r\nexport default {\r\n  name: 'el-cascader-multi',\r\n  components: {\r\n    renderList\r\n  },\r\n  props: {\r\n    data: {\r\n      type: Array,\r\n      default: () => [],\r\n      required: true\r\n    },\r\n    value: {\r\n      type: Array,\r\n      default: () => [],\r\n      required: true\r\n    },\r\n    separator: {\r\n      type: String,\r\n      default: '-'\r\n    },\r\n    filterable: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    filterMethod: {\r\n      type: Function\r\n    },\r\n    popperClass: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    reserveKeyword: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    valueKey: {\r\n      type: String,\r\n      default: 'value'\r\n    },\r\n    labelKey: {\r\n      type: String,\r\n      default: 'label'\r\n    },\r\n    childrenKey: {\r\n      type: String,\r\n      default: 'children'\r\n    },\r\n    expandTrigger: {\r\n      type: String,\r\n      default: 'click'\r\n    },\r\n    onlyLast: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    isTwoDimensionValue: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    showLeafLabel: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      selectedLabels: [],\r\n      selectedIds: [],\r\n      selectedNodes: [],\r\n      activeClass: 'floor-width-1',\r\n      store: {},\r\n      root: [],\r\n      maxLevellist: [],\r\n      showData: {},\r\n      activeList: [],\r\n      searchText: '',\r\n      searchResult: []\r\n    }\r\n  },\r\n  computed: {\r\n    isSearching () {\r\n      return !(this.searchText.trim() === '')\r\n    },\r\n    innerPopperClass () {\r\n      return `${this.popperClass} multi-cascader ${this.isSearching ? '' : 'multi-cascader-style'} ${this.activeClass}`\r\n    }\r\n  },\r\n  watch: {\r\n    data: {\r\n      deep: true,\r\n      handler () {\r\n        this.init()\r\n      }\r\n    },\r\n    value: {\r\n      deep: true,\r\n      handler () {\r\n        // this.init()\r\n        this.updateSelect(this.value, true, true)\r\n      }\r\n    },\r\n    selectedNodes () {\r\n      this.$emit('change', this.selectedNodes.map(o => o[this.isTwoDimensionValue ? '_idArr' : this.valueKey]))\r\n    }\r\n  },\r\n  methods: {\r\n    visibleChange (v) {\r\n      this.activeList = []\r\n      this.activeClass = 'floor-width-1'\r\n      if (!v) {\r\n        this.searchText = ''\r\n      }\r\n      this.$emit('visible-change', v)\r\n    },\r\n    handleBlur (e) {\r\n      this.searchText = ''\r\n      this.$emit('blur', e)\r\n    },\r\n    handleFocus (e) {\r\n      this.$emit('focus', e)\r\n    },\r\n    handleClear () {\r\n      this.selectedNodes.forEach(node => {\r\n        node.check(false)\r\n      })\r\n      this.$emit('input', [])\r\n      this.$emit('clear')\r\n    },\r\n    selectOne (item) {\r\n      item.checked = !item.checked\r\n      this.handleCheck(item)\r\n    },\r\n    changeLabel (v) {\r\n      this.store.nodeList.forEach(node => {\r\n        node.check(v.includes(node.showLabel))\r\n      })\r\n    },\r\n    innerFilterMethod (v) {\r\n      this.searchText = v\r\n      let tempResult = this.store.nodeList\r\n      if (v.trim() !== '') {\r\n        this.activeClass = ''\r\n        if (typeof this.filterMethod === 'function') {\r\n          this.searchResult = this.filterMethod(tempResult, v)\r\n        } else {\r\n          tempResult = tempResult.filter(o => o.isLeaf)\r\n          tempResult = tempResult.filter(o => o.showLabel.includes(v))\r\n          this.searchResult = tempResult\r\n        }\r\n      } else {\r\n        this.activeClass = 'floor-width-1'\r\n      }\r\n    },\r\n    getKey () {\r\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\r\n        let r = Math.random() * 16 | 0\r\n        let v = c === 'x' ? r : (r & 0x3 | 0x8)\r\n        return v.toString(16)\r\n      })\r\n    },\r\n    handleClick (node, levelIndex, level) {\r\n      if (this.maxLevellist[level - 1]) {\r\n        this.maxLevellist[level - 1].rendered = true\r\n      }\r\n      this.activeClass = `floor-width-${node.isLeaf ? level : level + 1}`\r\n      let tempList = [...this.activeList]\r\n      if (level < tempList.length) {\r\n        tempList.splice(level)\r\n      }\r\n      tempList[level - 1] = node.id\r\n      this.showData[level] = node.childNodes\r\n      this.activeList = tempList\r\n    },\r\n    handleCheck (node) {\r\n      node.check(node.checked)\r\n      this.selectedIds = this.store.selectedIds\r\n      this.updateSelect(this.store.selectedIds)\r\n      this.$emit('input', this.selectedNodes.map(o => o[this.isTwoDimensionValue ? '_idArr' : this.valueKey]))\r\n    },\r\n    removeOne (v) {\r\n      let targetNode = this.selectedNodes.find(o => o.showLabel === v) || {}\r\n      targetNode.checked = false\r\n      this.handleCheck(targetNode)\r\n      this.$emit('remove-tag', v)\r\n    },\r\n    updateSelect (data = [], needCheckNode = false, setValue = false) {\r\n      let tempSelectedNodes = []\r\n      let tempSelectedLabels = []\r\n      let tempSelectedIds = []\r\n      this.store.nodeList.forEach(node => {\r\n        node.checked && node.check(false)\r\n      })\r\n      data.forEach(o => {\r\n        let targetNode\r\n        if (setValue) {\r\n          targetNode = _findByObj(this.store.nodeList, { [this.isTwoDimensionValue ? '_idArr' : this.valueKey]: o }) || {}\r\n          // targetNode = _.find(this.store.nodeList, { [this.isTwoDimensionValue ? '_idArr' : this.valueKey]: o }) || {}\r\n          tempSelectedIds.push(targetNode.id)\r\n        } else {\r\n          targetNode = this.store.nodesMap[o]\r\n          tempSelectedIds.push(o)\r\n        }\r\n        if (targetNode) {\r\n          needCheckNode && targetNode.check(true)\r\n          tempSelectedNodes.push(targetNode)\r\n          tempSelectedLabels.push(targetNode.showLabel)\r\n        }\r\n      })\r\n      this.selectedNodes = tempSelectedNodes\r\n      this.selectedLabels = tempSelectedLabels\r\n      this.selectedIds = tempSelectedIds\r\n    },\r\n    init () {\r\n      this.store = new TreeStore({\r\n        data: this.data,\r\n        separator: this.separator,\r\n        valueKey: this.valueKey,\r\n        labelKey: this.labelKey,\r\n        childrenKey: this.childrenKey,\r\n        showLeafLabel: this.showLeafLabel\r\n      })\r\n      this.root = this.store.root\r\n      this.maxLevellist = Array.from({ length: this.store.maxLevel - 1 }, (v, i) => {\r\n        this.showData[i + 1] = []\r\n        return {\r\n          id: i + 1,\r\n          rendered: false\r\n        }\r\n      })\r\n      this.updateSelect(this.value, true, true)\r\n    }\r\n  },\r\n  mounted () {\r\n    this.init()\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.el-select-dropdown.el-popper.is-multiple.multi-cascader {\r\n  .el-select-dropdown__item.selected::after {\r\n    top: 0;\r\n  }\r\n}\r\n.el-select-dropdown.el-popper.is-multiple.multi-cascader-style{\r\n  min-width: 160px!important;\r\n  .el-select-dropdown__list {\r\n    padding: 0;\r\n    position: relative;\r\n  }\r\n  .el-select-dropdown__item {\r\n    padding: 0;\r\n    height: 216px;\r\n    &.hover {\r\n      background-color: #fff;\r\n    }\r\n  }\r\n  .li-style {\r\n    height: 34px;\r\n    padding: 0px 20px;\r\n    box-sizing: border-box;\r\n    list-style: none;\r\n    width: 160px;\r\n    cursor: pointer;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    line-height: 34px;\r\n    &:hover{\r\n      background-color: rgba(69,200,220,.1);\r\n    }\r\n    &.selected {\r\n      color: #45c8dc;\r\n    }\r\n    &.active-li {\r\n      background-color: rgba(69,200,220,.1);\r\n      color: #45c8dc;\r\n    }\r\n    .li-label-style{\r\n      text-align: left;\r\n      width: 100%;\r\n      box-sizing: border-box;\r\n      padding-right: 15px;\r\n      position: relative;\r\n      text-overflow: ellipsis;\r\n      white-space: nowrap;\r\n      overflow: hidden;\r\n      .li-label-icon {\r\n        position: absolute;\r\n        right: 0px;\r\n        top: 50%;\r\n        transform: translate(0, -50%);\r\n      }\r\n      .el-checkbox {\r\n        margin-right: 10px;\r\n      }\r\n    }\r\n  }\r\n  .ground {\r\n    width: 100%;\r\n    height: 204px;\r\n    padding: 6px 0;\r\n  }\r\n  .floor-item {\r\n    width: 160px;\r\n    padding: 6px 0;\r\n    border-left: 1px solid #eee;\r\n    position: absolute;\r\n    top: 0;\r\n    height: 204px;\r\n    overflow-y: auto;\r\n    overflow-x: hidden;\r\n  }\r\n\r\n}\r\n.multi-cascader-style {\r\n  p {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  ol, ul {\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n}\r\n\r\n/*$width: 160px;\r\n@each $i in [1,2,3,4,5,6,7,8,9,10] {\r\n  .multi-cascader-style.floor-width-#{$i} {\r\n    width: $i * $width;\r\n  }\r\n  .multi-cascader-style .floor-position-left-#{$i} {\r\n    left: ($i - 1) * $width;\r\n  }\r\n}*/\r\n@width: 160px;\r\n@idList: 1,2,3,4,5,6,7,8,9,10;\r\n\r\neach(@idList, {\r\n  .multi-cascader-style.floor-width-@{value} {\r\n    width: @value * @width;\r\n  }\r\n  .multi-cascader-style .floor-position-left-@{value} {\r\n    left: (@value - 1) * @width;\r\n  }\r\n});\r\n</style>\r\n"]}]}