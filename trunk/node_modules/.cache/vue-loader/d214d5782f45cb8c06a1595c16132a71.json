{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\components\\classification\\attr_details.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\components\\classification\\attr_details.vue","mtime":1572415127811},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n    name:'tp-attribute',\r\n    props: {\r\n        itemParam: {\r\n          type:Object,\r\n        },\r\n    },\r\n    data(){\r\n        return{\r\n            attributeDialogVisible:false,\r\n            filtersData:{\r\n                code: \"\", // 新增新增分类编码\r\n                name: \"\", //分类名称\r\n                parentId: null, //父级分类  已有分类选择 如果为1及分类则为NULL\r\n                parentName:null,\r\n                valid: true, // 使用状态\r\n                type:3\r\n            },\r\n            cateArr:[],\r\n            props:{\r\n              value: 'id',\r\n              label:'name',\r\n              children: 'children'\r\n            },\r\n            //验证\r\n            rules:{\r\n              name:[\r\n                { required: true, message: \"请输入分类名称\", trigger: \"blur\" }\r\n              ],\r\n              code:[\r\n                { required: true, message: \"请输入分类编码\", trigger: \"blur\" }\r\n              ]\r\n            },\r\n            editDisabled:true,//可编辑状态  除使用状态其他都不可编辑\r\n            showDisabled:true,//查看时 使用状态不可编辑\r\n             classData:[],\r\n            classList:[],\r\n            itemStatus:''\r\n        }\r\n    },\r\n    created () {\r\n       this.getListData();\r\n    },\r\n    methods:{\r\n       getListData(){\r\n          this.$common.getClassSelect(this,3).then(res =>{\r\n            this.classData=res.ztree;\r\n            this.classList=res.list;\r\n          })\r\n      },\r\n        cascaderGet(e){\r\n          this.filtersData.parentId=JSON.parse(JSON.stringify(e)).pop();\r\n          let obj=this.classList.find((item) => (item.id ==  this.filtersData.parentId))\r\n          this.filtersData.parentName = obj.name;\r\n        },\r\n        //初始化\r\n        attributePopupInit(){\r\n          this.filtersData = {\r\n            code: \"\",\r\n            name: \"\",\r\n            parentId: null,\r\n            parentName: null,\r\n            valid: true,\r\n             type:3\r\n          }\r\n          //对象还需初始化\r\n          this.itemStatus = this.itemParam.type;\r\n          switch (this.itemStatus.toString()) {\r\n            case \"add\": //新增\r\n              this.editDisabled = false;\r\n              this.showDisabled = false;\r\n              break;\r\n            case \"edit\": //修改\r\n              this.editDisabled = true;\r\n              this.showDisabled = false;\r\n              this.getClassData();\r\n              break;\r\n            case \"show\": //查看\r\n              this.editDisabled = true;\r\n              this.showDisabled = true;\r\n              this.getClassData();\r\n              break;\r\n          }\r\n            this.attributeDialogVisible=true;\r\n        },\r\n        //关闭\r\n        closeDialog(formName){\r\n            this.attributeDialogVisible=false;\r\n            this.$refs[formName].resetFields(); //重置选项\r\n        },\r\n        //保存表单\r\n        submitForm(formName){\r\n           this.$refs[formName].validate(valid => {\r\n              if (valid) {\r\n                  this.request(this.api.product.categories_save, this.filtersData).then(data => {\r\n                  this.$message.success('保存成功');\r\n                  this.closeDialog(formName);\r\n                  setTimeout(() => {\r\n                      this.$emit(\"refreshItem\", \"刷新吧兄弟\");\r\n                  }, 2000);\r\n\r\n                });\r\n              } else {\r\n                console.log(\"error submit!!\");\r\n                return false;\r\n              }\r\n            });\r\n        },\r\n        //获取列表数据\r\n        getClassData(){\r\n          this.request(this.api.product.categories_get,{id:this.itemParam.id}).then(data=>{\r\n              this.cateArr=[];\r\n              this.cateArr.push(data.parentId)\r\n              this.filtersData=data;\r\n          })\r\n        },\r\n        //修改表单\r\n        editForm(formName){\r\n          this.submitForm(formName);\r\n        },\r\n    }\r\n}\r\n",{"version":3,"sources":["attr_details.vue"],"names":[],"mappingsfile":"attr_details.vue","sourceRoot":"src/components/classification","sourcesContent":["<template>\r\n    <el-dialog\r\n    :title=\"itemParam.title\"\r\n    :visible.sync=\"attributeDialogVisible\"\r\n    class=\"alarmPopup\"\r\n    width=\"500px\"\r\n    >\r\n    <el-form :model=\"filtersData\" :rules=\"rules\" label-width=\"100px\" size=\"small\" ref=\"filtersForm\" inline>\r\n        <el-form-item  parentId=\"parentId\"  label=\"父级分类：\">\r\n           <el-cascader\r\n           class=\"input-w\"\r\n            v-if=\"itemStatus == 'add'\"\r\n           :disabled=\"editDisabled\"\r\n            :options=\"classData\"\r\n             v-model=\"cateArr\"\r\n             :value=\"cateArr\"\r\n             @change=\"cascaderGet\"\r\n             :show-all-levels=\"false\"\r\n             :props=\"props\"\r\n            change-on-select\r\n          ></el-cascader>\r\n        </el-form-item>\r\n        <el-form-item  prop=\"name\"  label=\"分类名称：\">\r\n         <el-input placeholder=\"请输入内容\" class=\"input-w\" :disabled=\"editDisabled\" v-model=\"filtersData.name\"></el-input>\r\n        </el-form-item>\r\n         <el-form-item v-if=\"itemStatus != 'add'\" prop=\"code\"  label=\"分类编码：\">\r\n         <el-input placeholder=\"请输入内容\" class=\"input-w\" :disabled=\"editDisabled\" v-model=\"filtersData.code\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"valid\" label=\"使用状态：\">\r\n          <el-select  class=\"input-w\" placeholder=\"请选择\" :disabled=\"showDisabled\" v-model=\"filtersData.valid\">\r\n            <el-option\r\n              v-for=\"item in this.$common.getValidOptions()\"\r\n              :key=\"item.status_id\"\r\n              :label=\"item.status_name\"\r\n              :value=\"item.status_id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n    </el-form>\r\n    <div class=\"item-right\">\r\n        <el-button size=\"small\" @click=\"closeDialog('filtersForm')\">取消</el-button>\r\n        <el-button  v-if=\"this.itemParam.type == 'add'\" size=\"small\" @click=\"submitForm('filtersForm')\" type=\"primary\">确定</el-button>\r\n        <el-button  v-else-if=\"this.itemParam.type == 'edit'\" size=\"small\" @click=\"editForm('filtersForm')\" type=\"primary\">修改</el-button>\r\n    </div>\r\n  </el-dialog>\r\n</template>\r\n<script>\r\nexport default {\r\n    name:'tp-attribute',\r\n    props: {\r\n        itemParam: {\r\n          type:Object,\r\n        },\r\n    },\r\n    data(){\r\n        return{\r\n            attributeDialogVisible:false,\r\n            filtersData:{\r\n                code: \"\", // 新增新增分类编码\r\n                name: \"\", //分类名称\r\n                parentId: null, //父级分类  已有分类选择 如果为1及分类则为NULL\r\n                parentName:null,\r\n                valid: true, // 使用状态\r\n                type:3\r\n            },\r\n            cateArr:[],\r\n            props:{\r\n              value: 'id',\r\n              label:'name',\r\n              children: 'children'\r\n            },\r\n            //验证\r\n            rules:{\r\n              name:[\r\n                { required: true, message: \"请输入分类名称\", trigger: \"blur\" }\r\n              ],\r\n              code:[\r\n                { required: true, message: \"请输入分类编码\", trigger: \"blur\" }\r\n              ]\r\n            },\r\n            editDisabled:true,//可编辑状态  除使用状态其他都不可编辑\r\n            showDisabled:true,//查看时 使用状态不可编辑\r\n             classData:[],\r\n            classList:[],\r\n            itemStatus:''\r\n        }\r\n    },\r\n    created () {\r\n       this.getListData();\r\n    },\r\n    methods:{\r\n       getListData(){\r\n          this.$common.getClassSelect(this,3).then(res =>{\r\n            this.classData=res.ztree;\r\n            this.classList=res.list;\r\n          })\r\n      },\r\n        cascaderGet(e){\r\n          this.filtersData.parentId=JSON.parse(JSON.stringify(e)).pop();\r\n          let obj=this.classList.find((item) => (item.id ==  this.filtersData.parentId))\r\n          this.filtersData.parentName = obj.name;\r\n        },\r\n        //初始化\r\n        attributePopupInit(){\r\n          this.filtersData = {\r\n            code: \"\",\r\n            name: \"\",\r\n            parentId: null,\r\n            parentName: null,\r\n            valid: true,\r\n             type:3\r\n          }\r\n          //对象还需初始化\r\n          this.itemStatus = this.itemParam.type;\r\n          switch (this.itemStatus.toString()) {\r\n            case \"add\": //新增\r\n              this.editDisabled = false;\r\n              this.showDisabled = false;\r\n              break;\r\n            case \"edit\": //修改\r\n              this.editDisabled = true;\r\n              this.showDisabled = false;\r\n              this.getClassData();\r\n              break;\r\n            case \"show\": //查看\r\n              this.editDisabled = true;\r\n              this.showDisabled = true;\r\n              this.getClassData();\r\n              break;\r\n          }\r\n            this.attributeDialogVisible=true;\r\n        },\r\n        //关闭\r\n        closeDialog(formName){\r\n            this.attributeDialogVisible=false;\r\n            this.$refs[formName].resetFields(); //重置选项\r\n        },\r\n        //保存表单\r\n        submitForm(formName){\r\n           this.$refs[formName].validate(valid => {\r\n              if (valid) {\r\n                  this.request(this.api.product.categories_save, this.filtersData).then(data => {\r\n                  this.$message.success('保存成功');\r\n                  this.closeDialog(formName);\r\n                  setTimeout(() => {\r\n                      this.$emit(\"refreshItem\", \"刷新吧兄弟\");\r\n                  }, 2000);\r\n\r\n                });\r\n              } else {\r\n                console.log(\"error submit!!\");\r\n                return false;\r\n              }\r\n            });\r\n        },\r\n        //获取列表数据\r\n        getClassData(){\r\n          this.request(this.api.product.categories_get,{id:this.itemParam.id}).then(data=>{\r\n              this.cateArr=[];\r\n              this.cateArr.push(data.parentId)\r\n              this.filtersData=data;\r\n          })\r\n        },\r\n        //修改表单\r\n        editForm(formName){\r\n          this.submitForm(formName);\r\n        },\r\n    }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n\r\n</style>\r\n"]}]}