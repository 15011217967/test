{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\fmis\\fund\\cashPledge.vue?vue&type=style&index=0&id=2c3e1192&lang=less&scoped=true&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\fmis\\fund\\cashPledge.vue","mtime":1576682604154},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\css-loader\\index.js","mtime":1558492728478},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1558492728890},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\postcss-loader\\src\\index.js","mtime":1558492728823},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\less-loader\\dist\\cjs.js","mtime":1566193719488},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.el-dialog__body .el-input /deep/ .el-input__inner{\r\n  width: 198px;\r\n}\r\n.demo-ruleForm{\r\n  width: 750px;\r\n}\r\n.justify-content {\r\n  justify-content: space-between;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n  span {\r\n    margin-right: 15px;\r\n  }\r\n}\r\n.box {\r\n  padding: 20px;\r\n  margin: 8px;\r\n  background: #fff;\r\n}\r\n.blueness {\r\n  color: #1e90ff;\r\n}\r\n.warningType {\r\n  width: 20px;\r\n  height: 20px;\r\n  line-height: 20px;\r\n  display: inline-block;\r\n  background: red;\r\n  color: #fff;\r\n  font-size: 12px;\r\n  border-radius: 4px;\r\n  margin-left: 10px;\r\n  text-align: center;\r\n}\r\n.color {\r\n  background: #ff6347;\r\n}\r\nh5 {\r\n  color: #222;\r\n  margin-left: -15px;\r\n}\r\n.test {\r\n  color: #9d9d9d;\r\n}\r\n",{"version":3,"sources":["cashPledge.vue"],"names":[],"mappingsmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"cashPledge.vue","sourceRoot":"src/views/fmis/fund","sourcesContent":["\r\n<template>\r\n  <div>\r\n    <!-- 新增押金账户 -->\r\n    <el-dialog width=\"750px\" title=\"新增押金账户\" :visible.sync=\"dialogTableVisible\">\r\n      <p>&nbsp;&nbsp;&nbsp;&nbsp;请选择开通渠道商户：</p>\r\n      <el-table :data=\"channelList_data.data\" max-height=\"350\" class=\"mt-10\">\r\n        <el-table-column label=\"单选\" align=\"center\" min-width=\"30\">\r\n          <template slot-scope=\"scope\">\r\n            <el-radio-group v-model=\"checkCashPledgeUser\">\r\n              <el-radio :disabled=\"scope.row.status == 9\" :label=\"scope.row\">&nbsp;</el-radio>\r\n            </el-radio-group>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"渠道名称\" align=\"center\" min-width=\"90\">\r\n          <template slot-scope=\"scope\">{{ scope.row.name }}</template>\r\n        </el-table-column>\r\n        <el-table-column label=\"渠道类型\" align=\"center\" min-width=\"90\">\r\n          <template slot-scope=\"scope\">零售商</template>\r\n        </el-table-column>\r\n        <el-table-column label=\"所在省/直辖市\" align=\"center\" min-width=\"90\">\r\n          <template slot-scope=\"scope\">{{ scope.row.provinceName }}</template>\r\n        </el-table-column>\r\n        <el-table-column label=\"市/区\" align=\"center\" min-width=\"90\">\r\n          <template slot-scope=\"scope\">{{ scope.row.cityName }}</template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogTableVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleDialogMap\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n    <!-- 充值弹框 -->\r\n    <el-dialog title=\"充值\" width=\"600px\" :visible.sync=\"dialogForm\" v-if=\"dialogForm\">\r\n      <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"170px\">\r\n        <el-form-item label=\"充值账户：\" prop=\"accountName\">{{ ruleForm.accountName }}</el-form-item>\r\n        <el-form-item label=\"充值金额：\" prop=\"notAccountEntryCopy\">\r\n          <el-input v-model=\"ruleForm.notAccountEntryCopy\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"付款方式：\" prop=\"paymentMethod\">\r\n          <el-select v-model=\"ruleForm.paymentMethod\">\r\n            <el-option v-for=\"(item, index) in payList\" :key=\"index\" :label=\"item.name\" :value=\"item.code\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"付款账户：\" prop=\"paymentAccount\">\r\n          <el-input v-model=\"ruleForm.paymentAccount\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"上传付款凭证：\" prop=\"storeImgs_list\" res=\"uploadElement\">\r\n          <el-upload-img\r\n            v-model=\"ruleForm.storeImgs_list\"\r\n            :EchoDisplayImages=\"ruleForm.storeImgs_list\"\r\n            CatalogName=\"store\"\r\n            :imgApi=\"imgApi\"\r\n            :describe=\"storeImgs_describe\"\r\n            :LssUpimgLimit=\"LssUpimgLimit\"\r\n          ></el-upload-img>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogForm = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n    <!-- 模糊搜索 -->\r\n    <div class=\"item-margin\">\r\n      <el-form class=\"item-form\" size=\"small\" :inline=\"true\" :model=\"filtersData\">\r\n        <!-- 模糊查询 -->\r\n        <el-form-item label=\"模糊查询：\">\r\n          <el-input\r\n            v-model=\"filtersData.filter\"\r\n            @keyup.enter.native=\"handleSearch\"\r\n            style=\"width:310px;\"\r\n            placeholder=\"账户名称/开户人\"\r\n            clearable\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"渠道类型：\">\r\n          <el-select v-model=\"filtersData.channelTypeStatus\" clearable filterable>\r\n            <el-option\r\n              v-for=\"(item, index) in channelTypeStatusList\"\r\n              :label=\"item\"\r\n              :key=\"index\"\r\n              :value=\"index\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <!-- 新增 -->\r\n        <el-form-item label=\"账户状态：\">\r\n          <el-select v-model=\"filtersData.accountStatus\" clearable filterable>\r\n            <el-option\r\n              v-for=\"(item, index) in accountStatusList\"\r\n              :label=\"item\"\r\n              :key=\"index\"\r\n              :value=\"index\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <!-- 搜索，重置 -->\r\n        <el-form-item>\r\n          <el-button @click=\"handleSearch\" type=\"primary\" plain size=\"small\">搜索</el-button>\r\n          <el-button @click=\"handleResetFilters\" size=\"small\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n    <!-- 模糊搜索 -->\r\n    <!-- 列表 -->\r\n    <div class=\"box\">\r\n      <el-button size=\"small\" type=\"primary\" @click=\"dialogTableVisible = true\">新增押金账户</el-button>\r\n      <el-button size=\"small\" @click=\"exportExcelOrder\">导出</el-button>\r\n      <el-table\r\n        :data=\"getList_data.dataList.data\"\r\n        stripe\r\n        empty-text=\"暂无数据\"\r\n        header-align=\"center\"\r\n        header-row-class-name=\"item-table-header\"\r\n        @selection-change=\"tableCheckChange\"\r\n        :highlight-current-row=\"true\"\r\n        class=\"mt-10\">\r\n        <el-table-column type=\"selection\" width=\"45\"></el-table-column>\r\n        <el-table-column align=\"left\" :show-overflow-tooltip=\"true\" label=\"账户名称\" min-width=\"130\">\r\n          <template slot-scope=\"scope\">{{ scope.row.accountName || '--' }}</template>\r\n        </el-table-column>\r\n        <el-table-column align=\"left\" :show-overflow-tooltip=\"true\" label=\"渠道类型\" min-width=\"60\">\r\n          <template slot-scope=\"scope\">{{ scope.row.channelTypeStatus  }}</template>\r\n        </el-table-column>\r\n        <el-table-column align=\"left\" :show-overflow-tooltip=\"true\" label=\"押金货款\" min-width=\"60\">\r\n          <template slot-scope=\"scope\">{{ scope.row.depositCopy  }}</template>\r\n        </el-table-column>\r\n        <el-table-column :show-overflow-tooltip=\"true\" align=\"left\" label=\"充值未入账金额\" min-width=\"90\">\r\n          <template slot-scope=\"scope\">{{ scope.row.notAccountEntryCopy }}</template>\r\n        </el-table-column>\r\n        <el-table-column align=\"left\" :show-overflow-tooltip=\"true\" label=\"可用货款\" min-width=\"60\">\r\n          <template slot-scope=\"scope\">{{ scope.row.availablePaymentCopy }}</template>\r\n        </el-table-column>\r\n        <el-table-column align=\"left\" :show-overflow-tooltip=\"true\" label=\"冻结货款\" min-width=\"60\">\r\n          <template slot-scope=\"scope\">{{ scope.row.freezePaymentCopy }}</template>\r\n        </el-table-column>\r\n        <el-table-column align=\"left\" :show-overflow-tooltip=\"true\" label=\"开户人\" min-width=\"60\">\r\n          <template slot-scope=\"scope\">{{ scope.row.createByName || '--' }}</template>\r\n        </el-table-column>\r\n        <el-table-column align=\"left\" :show-overflow-tooltip=\"true\" label=\"开户时间\" min-width=\"120\">\r\n          <template slot-scope=\"scope\">{{ scope.row.createTime }}</template>\r\n        </el-table-column>\r\n        <!-- 新增 -->\r\n        <el-table-column align=\"left\" :show-overflow-tooltip=\"true\" label=\"账户状态\" min-width=\"60\">\r\n          <template slot-scope=\"scope\">{{ scope.row._accountStatus }}</template>\r\n        </el-table-column>\r\n        <!-- 操作 -->\r\n        <el-table-column\r\n          fixed=\"right\"\r\n          label-class-name=\"text-left\"\r\n          class-name=\"text-left\"\r\n          align=\"left\"\r\n          label=\"操作\"\r\n          width=\"110\"\r\n        >\r\n          <template slot-scope=\"scope\">\r\n            <el-button\r\n              type=\"text\"\r\n              @click=\"recharge(scope.row)\"\r\n              size=\"small\"\r\n            >充值</el-button>\r\n            <el-button\r\n              type=\"text\"\r\n              @click=\"open(scope.row)\"\r\n              size=\"small\"\r\n            >{{ scope.row.accountStatus ? '停用' : '启用' }}</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <div\r\n        class=\"pagination mt-10\"\r\n        :class=\"{ 'justify-content': getList_data.dataList.data && getList_data.dataList.data.length > 0 }\">\r\n        <div v-if=\"getList_data.dataList.data && getList_data.dataList.data.length > 0\">\r\n          累计渠道数：\r\n          <span>{{ getList_data.info.channelCount }}</span>累计押金金额：\r\n          <span>￥{{ getList_data.info.depositSum }}</span>累计冻结货款：\r\n          <span>￥{{ getList_data.info.freezePaymentSum }}</span>\r\n        </div>\r\n        <!-- 分页 -->\r\n        <el-pagination\r\n          class=\"mr-20\"\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page=\"filtersData.pageIndex\"\r\n          :page-sizes=\"[10,20,30,40,50]\"\r\n          :page-size=\"filtersData.pageSize\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"getList_data.dataList.totalCount\"\r\n        ></el-pagination>\r\n      </div>\r\n    </div>\r\n    <!-- 列表 -->\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\nimport ElUploadImg from \"@/components/uploadImg/el_upload_img_multi\";\r\nimport codeSet from '@/components/codeSet'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 支付方式\r\n      payList:[],\r\n      // 上传图片路径\r\n      imgApi:this.api.content.aLiYun_upload,\r\n      LssUpimgLimit:1,\r\n      // 上传图片描述\r\n      storeImgs_describe:'',\r\n      // 新增押金账号弹框\r\n      dialogTableVisible: false,\r\n      // 新增的押金账户\r\n      checkCashPledgeUser: {},\r\n      // 充值弹框\r\n      dialogForm: false,\r\n      // 充值对象\r\n      recharge_obj:{},\r\n      // 账户状态\r\n      accountStatusList: {\r\n        0: \"已停用\",\r\n        1: \"已启用\"\r\n      },\r\n      // 渠道类型状态\r\n      channelTypeStatusList: {\r\n        1: \"零售商\",\r\n        2: \"经销商\"\r\n      },\r\n      // data数据\r\n      getList_data: {},\r\n      // 渠道商列表\r\n      channelList_data: {},\r\n      // 订单数据统计\r\n      storeRetailOrder_pcListStatistics_data: {},\r\n      // 选中的表格数据\r\n      checkedTableData: [],\r\n      // 获取门店信列表\r\n      getStoreList_data: [],\r\n      formInline: {\r\n        user: \"\",\r\n        region: \"\"\r\n      },\r\n      // 充值\r\n      ruleForm: {\r\n        id:'',\r\n        \"accountStatus\": 1, // 账户状态\r\n        \"channelTypeName\":'零售商', // 渠道类型名称\r\n        \"channelTypeStatus\": 1, // 渠道类型状态\r\n        receiptTypeName:'押金充值',\r\n        receiptTypeStatus:'01',\r\n        channelId:'',// 渠道id\r\n        accountName:'',// 充值账户\r\n        notAccountEntryCopy: '',// 充值金额\r\n        paymentMethod:'',// 付款方式\r\n        paymentAccount:'',// 付款账户\r\n        annex:'',// 上传付款凭证\r\n        storeImgs_list:[]// 上传附件地址\r\n      },\r\n      rules: {\r\n        notAccountEntryCopy: [{ required: true,validator: (rule, value, callback) => {\r\n          if(!value) {\r\n            callback(new Error('请输入付款金额！'));\r\n          }else{    \r\n            const reg = /^\\d+(\\.\\d{1,2})?$/g;\r\n            if(reg.test(value)) {\r\n             callback();\r\n            }else{\r\n              callback(new Error('请输入正确的金额！'));\r\n            }\r\n          }\r\n        }, trigger: 'change' }],\r\n        paymentMethod: [{ required: true, message: '请选择付款方式！', trigger: 'change' }],\r\n        paymentAccount: [{ required: true, message: '请输入付款账户！', trigger: 'change' }],\r\n        storeImgs_list: [{type:'array', required: true, message: '请上传付款凭证！', trigger: 'change' }],\r\n      },\r\n      filtersData: {\r\n        \"filter\": null, // 模糊搜索\r\n       \t\"accountStatus\": null, // 账户状态\r\n\t      \"channelTypeName\": null, // 渠道类型名称\r\n        \"channelTypeStatus\": null, // 渠道类型状态\r\n\t      \"orderBy\": \"\", // 排序\r\n        pageIndex: 1,\r\n        pageSize: 10,\r\n        \"pageStart\": 0\r\n      },\r\n      info:null\r\n    };\r\n  },\r\n  computed:{\r\n    storeImgs_list() {\r\n      return this.ruleForm.storeImgs_list;\r\n    }\r\n  },\r\n  watch:{\r\n    /**\r\n     * 监听上传附件图片\r\n     */\r\n    storeImgs_list(value) {\r\n      if(value && value.length > 0) {\r\n        this.$refs.ruleForm.clearValidate('storeImgs_list');\r\n      }else{\r\n        this.$refs.ruleForm.validateField('storeImgs_list');\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    const that = this;\r\n\r\n    this.getList();\r\n    this.getChannelList_data();\r\n    this.userinfo();\r\n    // 获取所有字典内容\r\n    this.getAllCode();\r\n  },\r\n  methods: {\r\n     /**\r\n     * 获取字典项\r\n     */\r\n    getAllCode() {\r\n      this.request(\r\n        this.api.system.ALL_CODESET_POST,\r\n        {},\r\n        true\r\n      ).then(res => {\r\n        res.forEach((item, index) => {\r\n          switch(item.name) {\r\n            case 'COM003':\r\n              // 门店类型列表\r\n              item.codeItemList.forEach((itemk, indexk) => {\r\n                itemk.checked = false;\r\n              });\r\n              this.payList = item.codeItemList;\r\n              break;\r\n          }\r\n        });\r\n      });\r\n    },\r\n    async userinfo() {\r\n      this.info = await this.request(this.api.user.get_userinfo, {}, true); // 获取用户信息\r\n    },\r\n    /**\r\n     * 新增押金账户\r\n     */\r\n    handleDialogMap() {\r\n      if(JSON.stringify(this.checkCashPledgeUser) != '{}') {\r\n        this.request(\r\n          this.api.financial.channelDepositAccount_save,\r\n        {\r\n          \"accountName\": this.checkCashPledgeUser.name, // 渠道账户名称 \r\n          \"accountStatus\": 1, // 账户状态\r\n          \"channelId\": this.checkCashPledgeUser.id, // 渠道ID\r\n          \"channelTypeName\":'零售商', // 渠道类型名称\r\n          \"channelTypeStatus\": 1, // 渠道类型状态\r\n          \"createByName\": this.info.name, // 开户人名称\r\n        }\r\n      ).then(\r\n        res => {\r\n          this.checkCashPledgeUser = {};\r\n          this.dialogTableVisible = false;\r\n          this.warn('新增押金账号成功！');\r\n          this.getList();\r\n          this.getChannelList_data();\r\n        }\r\n      );\r\n     \r\n      }else{\r\n        this.warn('请选择添加的账户！');\r\n      };\r\n    },\r\n    /** \r\n     * 充值弹框\r\n     */\r\n    recharge(obj) {\r\n      this.dialogForm = true;\r\n      this.ruleForm.accountName = obj.accountName;\r\n      this.ruleForm.channelId = obj.channelId;\r\n      this.ruleForm.id = obj.id;\r\n    },\r\n    // 充值\r\n    submitForm(formName) {\r\n      let data = JSON.parse(JSON.stringify(this.ruleForm)); \r\n      data.annex = data.storeImgs_list[0] && data.storeImgs_list[0].url;\r\n      delete data.storeImgs_list;\r\n      this.$refs.ruleForm.validate((valid) => {\r\n        if (valid) {\r\n          this.request(\r\n            this.api.financial.channelDepositAccount_recharge,\r\n            data\r\n          ).then(res => {\r\n            this.checkCashPledgeUser = {};\r\n            this.dialogForm = false;\r\n            this.warn('充值成功！');\r\n            this.getList();\r\n            Object.assign(this.ruleForm, {\r\n              id:'',\r\n              \"accountStatus\": 1, // 账户状态\r\n              \"channelTypeName\":'零售商', // 渠道类型名称\r\n              \"channelTypeStatus\": 1, // 渠道类型状态\r\n              receiptTypeName:'押金充值',\r\n              receiptTypeStatus:'01',\r\n              channelId:'',// 渠道id\r\n              accountName:'',// 充值账户\r\n              notAccountEntryCopy: '',// 充值金额\r\n              paymentMethod:'',// 付款方式\r\n              paymentAccount:'',// 付款账户\r\n              annex:'',// 上传付款凭证\r\n              storeImgs_list:[]// 上传附件地址\r\n            });\r\n          });\r\n        }\r\n      });\r\n    },\r\n    // 取消充值\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields();\r\n    },\r\n    open(row) {\r\n      const text = row.accountStatus ? '停用押款账户后，渠道商将不可订货，确定停用吗？' : '确定启用吗？';\r\n\r\n      this.$confirm(text, '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.request(\r\n          this.api.financial.channelDepositAccount_save,\r\n        {\r\n          \"id\": row.id, // 渠道账户名称 \r\n          \"accountStatus\": row.accountStatus ? 0 : 1, // 账户状态\r\n        }\r\n      ).then(\r\n        res => {\r\n          this.getList();\r\n          this.$message({\r\n            type: 'success',\r\n            message: row.accountStatus ? '停用成功!' : '启用成功!'\r\n          });\r\n        }\r\n      );\r\n     \r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消!'\r\n        });          \r\n      });\r\n    },\r\n    /**\r\n     * 导出销售订单\r\n     */\r\n    exportExcelOrder() {\r\n      this.exportExcel({\r\n        title: \"押金账号列表\",\r\n        checkedTableData:\r\n          this.checkedTableData.length > 0\r\n            ? this.checkedTableData\r\n            : this.getList_data.dataList.data,\r\n        tHeader: [\r\n          \"账号名称\",\r\n          \"渠道类型\",\r\n          \"押金贷款\",\r\n          \"充值未入账金额\",\r\n          \"可用贷款\",\r\n          \"冻结货款\",\r\n          \"开户人\",\r\n          \"开户时间\",\r\n          \"账户状态\"\r\n        ],\r\n        filterVal: [\r\n          \"accountName\",\r\n          \"channelTypeStatus\",\r\n          \"depositCopy\",\r\n          \"notAccountEntryCopy\",\r\n          \"availablePaymentCopy\",\r\n          \"freezePaymentCopy\",\r\n          \"createByName\",\r\n          \"createTime\",\r\n          \"_accountStatus\"\r\n        ]\r\n      });\r\n    },\r\n    //导出\r\n    exportExcel(obj) {\r\n      require.ensure([], () => {\r\n        let {\r\n          export_json_to_excel,\r\n          export_table_to_excel\r\n        } = require(\"@/vendor/Export2Excel\");\r\n        let tHeader = obj.tHeader;\r\n        // 上面设置Excel的表格第一行的标题\r\n        let filterVal = obj.filterVal;\r\n        // 上面的index、nickName、name是tableData里对象的属性\r\n        let list = obj.checkedTableData; //把data里的tableData存到list\r\n        let data = this.formatJson(filterVal, list);\r\n        export_json_to_excel(tHeader, data, obj.title);\r\n      });\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => v[j]));\r\n    },\r\n    tableCheckChange(val) {\r\n      this.checkedTableData = val;\r\n    },\r\n    /**\r\n     *\r\n     */\r\n    fnDialogTableVisible() {\r\n      console.log(this.ls);\r\n      this.workOrderPoolAssign();\r\n      this.dialogTableVisible = false;\r\n    },\r\n    // 点击页数\r\n    handleCurrentChange(pageIndex) {\r\n      this.filtersData.pageIndex = pageIndex;\r\n      this.getList();\r\n    },\r\n    // 点击每页多少条数\r\n    handleSizeChange(pageSize) {\r\n      this.filtersData.pageSize = pageSize;\r\n      this.getList();\r\n    },\r\n    /**\r\n     * 获取table列表\r\n     */\r\n    getList() {\r\n      const that = this;\r\n\r\n      this.request(\r\n        that.api.financial.channelDepositAccount_list,\r\n        this.filtersData\r\n      ).then(res => {\r\n          that.getList_data = res;\r\n          res.dataList.data.forEach(item => {\r\n            item.channelTypeStatus = this.channelTypeStatusList[item.channelTypeStatus];\r\n            item.createTime = this.$options.filters.timestampToTime(item.createTime);\r\n            item._accountStatus = this.accountStatusList[item.accountStatus];\r\n          });\r\n        }\r\n      );\r\n    },\r\n    /**\r\n     * 获取渠道押金账户管理列表\r\n     */\r\n    getChannelList_data() {\r\n      const that = this;\r\n\r\n      this.request(\r\n        that.api.financial.channelDepositAccount_channelList,\r\n        {\r\n          \"pageIndex\": null,\r\n\t        \"pageSize\": null,\r\n        }\r\n      ).then(\r\n        res => {\r\n          that.channelList_data = res;\r\n        }\r\n      );\r\n    },\r\n    /**\r\n     * 查询门店销售订单列表\r\n     */\r\n    storeRetailOrder_pcListStatistics() {\r\n      const that = this;\r\n\r\n      this.request(\r\n        that.api.store.storeRetailOrder_pcListStatistics,\r\n        this.filtersData\r\n      ).then(res => {\r\n        that.storeRetailOrder_pcListStatistics_data = res;\r\n      });\r\n    },\r\n    /**\r\n     * 跳转工单详情\r\n     */\r\n    href(routeName, param) {\r\n      let module = this.$route.path.split(\"/\")[1];\r\n\r\n      this.$router.push({\r\n        path: \"/\" + module + routeName,\r\n        query: param\r\n      });\r\n    },\r\n    /**\r\n     * 提示\r\n     * @param { String } message 提示文案\r\n     * @param { String } type 提示类型\r\n     */\r\n    warn(message, type) {\r\n      this.$message({\r\n        message: message,\r\n        type: type || 'success'\r\n      });\r\n    },\r\n    /**\r\n     * 模糊搜索\r\n     */\r\n    handleSearch() {\r\n      this.filtersData.pageIndex = 1;\r\n      this.getList();\r\n    },\r\n    /**\r\n     * 搜索重置\r\n     */\r\n    handleResetFilters() {\r\n      Object.assign(this.filtersData, {\r\n        \"filter\": null, // 模糊搜索\r\n       \t\"accountStatus\": null, // 账户状态\r\n\t      \"channelTypeName\": null, // 渠道类型名称\r\n        \"channelTypeStatus\": null, // 渠道类型状态\r\n\t      \"orderBy\": \"\", // 排序\r\n        pageIndex: 1,\r\n        pageSize: 10,\r\n        \"pageStart\": 0\r\n      });\r\n    }\r\n  },\r\n  components: {\r\n    ElUploadImg,\r\n    codeSet\r\n  }\r\n};\r\n</script>\r\n<style  lang=\"less\" scoped>\r\n.el-dialog__body .el-input /deep/ .el-input__inner{\r\n  width: 198px;\r\n}\r\n.demo-ruleForm{\r\n  width: 750px;\r\n}\r\n.justify-content {\r\n  justify-content: space-between;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n  span {\r\n    margin-right: 15px;\r\n  }\r\n}\r\n.box {\r\n  padding: 20px;\r\n  margin: 8px;\r\n  background: #fff;\r\n}\r\n.blueness {\r\n  color: #1e90ff;\r\n}\r\n.warningType {\r\n  width: 20px;\r\n  height: 20px;\r\n  line-height: 20px;\r\n  display: inline-block;\r\n  background: red;\r\n  color: #fff;\r\n  font-size: 12px;\r\n  border-radius: 4px;\r\n  margin-left: 10px;\r\n  text-align: center;\r\n}\r\n.color {\r\n  background: #ff6347;\r\n}\r\nh5 {\r\n  color: #222;\r\n  margin-left: -15px;\r\n}\r\n.test {\r\n  color: #9d9d9d;\r\n}\r\n</style>\r\n"]}]}