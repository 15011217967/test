{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\orders\\business\\purchaseReturn\\purchaseReturn_add.vue?vue&type=template&id=0fdfcf3c&scoped=true&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\orders\\business\\purchaseReturn\\purchaseReturn_add.vue","mtime":1577238390968},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1558492728890},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"content\" }, [\n    _c(\"label\", [_vm._v(\"基本信息\")]),\n    _c(\n      \"div\",\n      { staticClass: \"form_div\" },\n      [\n        _c(\n          \"el-form\",\n          {\n            ref: \"formData\",\n            staticClass: \"demo-form-inline\",\n            attrs: { model: _vm.signData, inline: true, rules: _vm.rules }\n          },\n          [\n            _c(\"div\", { staticClass: \"input-div\" }, [\n              _c(\n                \"div\",\n                [\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"组织机构：\", prop: \"organization\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { disabled: \"\" },\n                        model: {\n                          value: _vm.signData.organization,\n                          callback: function($$v) {\n                            _vm.$set(_vm.signData, \"organization\", $$v)\n                          },\n                          expression: \"signData.organization\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\"br\"),\n                  _c(\n                    \"el-form-item\",\n                    {\n                      staticStyle: { width: \"350px\", \"padding-left\": \"15px\" },\n                      attrs: { label: \"供应商：\", prop: \"supplier\" }\n                    },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          class: _vm.supplierSelect ? \"disableSelect\" : \"\",\n                          attrs: { placeholder: \"请选择\" },\n                          on: { change: _vm.selectSupplierData },\n                          model: {\n                            value: _vm.signData.supplier,\n                            callback: function($$v) {\n                              _vm.$set(_vm.signData, \"supplier\", $$v)\n                            },\n                            expression: \"signData.supplier\"\n                          }\n                        },\n                        _vm._l(_vm.optionData, function(item) {\n                          return _c(\"el-option\", {\n                            key: item.id,\n                            attrs: { label: item.name, value: item.name }\n                          })\n                        }),\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\"br\"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"退货地址：\", prop: \"addressId\" } },\n                    [\n                      _c(\"division\", {\n                        on: { \"set-division\": _vm.setDivision },\n                        model: {\n                          value: _vm.signData.addressId,\n                          callback: function($$v) {\n                            _vm.$set(_vm.signData, \"addressId\", $$v)\n                          },\n                          expression: \"signData.addressId\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\"br\"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"物流公司：\" } },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          attrs: { placeholder: \"请选择物流公司\" },\n                          on: { change: _vm.selectLogisticsData },\n                          model: {\n                            value: _vm.signData.logisticsCompany,\n                            callback: function($$v) {\n                              _vm.$set(_vm.signData, \"logisticsCompany\", $$v)\n                            },\n                            expression: \"signData.logisticsCompany\"\n                          }\n                        },\n                        _vm._l(_vm.logisticsListData, function(item) {\n                          return _c(\"el-option\", {\n                            key: item.id,\n                            attrs: { label: item.name, value: item.name }\n                          })\n                        }),\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"div\",\n                [\n                  _c(\n                    \"el-form-item\",\n                    {\n                      staticStyle: { width: \"350px\", \"padding-left\": \"10px\" },\n                      attrs: { label: \"退货日期：\" }\n                    },\n                    [\n                      _c(\"el-date-picker\", {\n                        attrs: { type: \"date\", placeholder: \"选择日期\" },\n                        model: {\n                          value: _vm.signData.refundTime,\n                          callback: function($$v) {\n                            _vm.$set(_vm.signData, \"refundTime\", $$v)\n                          },\n                          expression: \"signData.refundTime\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\"br\"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"出库仓库：\", prop: \"warehouse\" } },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          class: _vm.warehouseSelect ? \"disableSelect\" : \"\",\n                          attrs: { placeholder: \"请选择仓库\" },\n                          on: { change: _vm.selectwarehouseCodeChange },\n                          model: {\n                            value: _vm.signData.warehouse,\n                            callback: function($$v) {\n                              _vm.$set(_vm.signData, \"warehouse\", $$v)\n                            },\n                            expression: \"signData.warehouse\"\n                          }\n                        },\n                        _vm._l(_vm.WarehouseCodeData, function(item) {\n                          return _c(\"el-option\", {\n                            key: item.id,\n                            attrs: {\n                              label: item.warehouseName,\n                              value: item.warehouseName\n                            }\n                          })\n                        }),\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\"br\"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"详细地址：\", prop: \"addressInfo\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { placeholder: \"请输入内容\" },\n                        model: {\n                          value: _vm.signData.addressInfo,\n                          callback: function($$v) {\n                            _vm.$set(_vm.signData, \"addressInfo\", $$v)\n                          },\n                          expression: \"signData.addressInfo\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\"br\"),\n                  _c(\n                    \"el-form-item\",\n                    {\n                      staticStyle: { width: \"350px\", \"padding-left\": \"10px\" },\n                      attrs: { label: \"物流单号：\" }\n                    },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { placeholder: \"请输入内容\" },\n                        model: {\n                          value: _vm.signData.logisticsOrderSn,\n                          callback: function($$v) {\n                            _vm.$set(_vm.signData, \"logisticsOrderSn\", $$v)\n                          },\n                          expression: \"signData.logisticsOrderSn\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ])\n          ]\n        ),\n        _c(\"div\", { staticClass: \"table_msg\" }, [\n          _c(\"div\", { staticClass: \"title_span\" }, [\n            _c(\"span\", [_vm._v(\"商品信息\")]),\n            _c(\n              \"span\",\n              {\n                staticClass: \"select_shop_title\",\n                on: { click: _vm.selectShopClickEvent }\n              },\n              [_vm._v(\"选择商品\")]\n            )\n          ]),\n          _c(\n            \"div\",\n            { staticClass: \"table_div\" },\n            [\n              _c(\n                \"el-table\",\n                {\n                  staticStyle: { width: \"100%\" },\n                  attrs: {\n                    data: _vm.signData.channelOrderGoodsVOList,\n                    stripe: \"\",\n                    \"header-row-class-name\": \"item-table-header\",\n                    \"max-height\": \"400\"\n                  }\n                },\n                [\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      prop: \"productCode\",\n                      label: \"商品款号\",\n                      width: \"180\"\n                    }\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: { prop: \"code\", label: \"商品货号\", width: \"180\" }\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: { prop: \"image\", label: \"商品图片\" },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _c(\"img\", {\n                              staticStyle: { width: \"32px\", height: \"32px\" },\n                              attrs: { src: scope.row.image }\n                            })\n                          ]\n                        }\n                      }\n                    ])\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: { prop: \"name\", label: \"商品名称\", width: \"180\" }\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: { prop: \"type\", label: \"商品类型\", width: \"180\" },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _vm._v(\n                              \"\\n              \" +\n                                _vm._s(scope.row.type ? scope.row.type : \"--\") +\n                                \"\\n            \"\n                            )\n                          ]\n                        }\n                      }\n                    ])\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: { prop: \"brandName\", label: \"品牌\" },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _vm._v(\n                              \"\\n              \" +\n                                _vm._s(\n                                  scope.row.brandName\n                                    ? scope.row.brandName\n                                    : \"--\"\n                                ) +\n                                \"\\n            \"\n                            )\n                          ]\n                        }\n                      }\n                    ])\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      prop: \"fullCateName\",\n                      label: \"商品品类\",\n                      width: \"180\"\n                    }\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: { label: \"规格属性\", width: \"180\" },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _c(\"span\", [\n                              _vm._v(\"颜色：\" + _vm._s(scope.row.color))\n                            ]),\n                            _c(\"br\"),\n                            _c(\"span\", [\n                              _vm._v(\"尺寸：\" + _vm._s(scope.row.size))\n                            ])\n                          ]\n                        }\n                      }\n                    ])\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      prop: \"refundAmount\",\n                      label: \"采购退货单价\",\n                      width: \"120\",\n                      align: \"center\"\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _c(\n                              \"div\",\n                              { staticClass: \"tag_div\" },\n                              [\n                                _c(\"span\", [_vm._v(\"￥\")]),\n                                _c(\"el-input\", {\n                                  attrs: {\n                                    min: \"0\",\n                                    max: \"9\",\n                                    type: \"number\",\n                                    placeholder: \"请输入\"\n                                  },\n                                  on: { input: _vm.refundAmountChange },\n                                  model: {\n                                    value: scope.row.refundAmount,\n                                    callback: function($$v) {\n                                      _vm.$set(scope.row, \"refundAmount\", $$v)\n                                    },\n                                    expression: \"scope.row.refundAmount\"\n                                  }\n                                })\n                              ],\n                              1\n                            )\n                          ]\n                        }\n                      }\n                    ])\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      prop: \"returnQuantity\",\n                      label: \"退货数量\",\n                      width: \"180\",\n                      align: \"center\"\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _c(\"el-input-number\", {\n                              directives: [\n                                {\n                                  name: \"enter-number\",\n                                  rawName: \"v-enter-number\"\n                                }\n                              ],\n                              attrs: {\n                                min: 0,\n                                max: scope.row.availableQuantity\n                              },\n                              on: { change: _vm.returnQuantityChange },\n                              model: {\n                                value: scope.row.returnQuantity,\n                                callback: function($$v) {\n                                  _vm.$set(scope.row, \"returnQuantity\", $$v)\n                                },\n                                expression: \"scope.row.returnQuantity\"\n                              }\n                            })\n                          ]\n                        }\n                      }\n                    ])\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\"div\", { staticClass: \"money-div\" }, [\n            _c(\"span\", [\n              _vm._v(\n                \"采退金额：￥\" +\n                  _vm._s(_vm.signData.amount ? _vm.signData.amount : \"0.00\")\n              )\n            ]),\n            _c(\"div\", { staticClass: \"money-content\" }, [\n              _c(\"span\", [_vm._v(\"折损金额：\")]),\n              _c(\"input\", {\n                staticClass: \"input-price\",\n                attrs: { type: \"text\", placeholder: \"描述折损\" }\n              }),\n              _c(\"span\", [_vm._v(\"￥\")]),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.signData.breakageAmount,\n                    expression: \"signData.breakageAmount\"\n                  }\n                ],\n                staticClass: \"input-price\",\n                attrs: {\n                  type: \"number\",\n                  min: \"0\",\n                  max: \"100\",\n                  placeholder: \"0.00\",\n                  disabled: !_vm.signData.amount\n                },\n                domProps: { value: _vm.signData.breakageAmount },\n                on: {\n                  change: _vm.priceInputChangeEvent,\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(\n                      _vm.signData,\n                      \"breakageAmount\",\n                      $event.target.value\n                    )\n                  }\n                }\n              })\n            ]),\n            _c(\"span\", [\n              _vm._v(\n                \"退款应付金额：￥\" +\n                  _vm._s(\n                    _vm.signData.returnAmount\n                      ? _vm.signData.returnAmount\n                      : \"0.00\"\n                  )\n              )\n            ])\n          ]),\n          _c(\n            \"div\",\n            { staticClass: \"remarks-textarea\" },\n            [\n              _c(\"span\", [_vm._v(\"退货备注：\")]),\n              _c(\"el-input\", {\n                staticClass: \"textarea\",\n                attrs: {\n                  type: \"textarea\",\n                  rows: 2,\n                  placeholder: \"请输入内容\",\n                  resize: \"none\"\n                },\n                model: {\n                  value: _vm.signData.remarks,\n                  callback: function($$v) {\n                    _vm.$set(_vm.signData, \"remarks\", $$v)\n                  },\n                  expression: \"signData.remarks\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            { staticClass: \"btn-div\" },\n            [\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\", size: \"small\" },\n                  on: { click: _vm.primaryBtnClick }\n                },\n                [_vm._v(\"确认\")]\n              ),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { plain: \"\", size: \"small\" },\n                  on: { click: _vm.plainBtnClick }\n                },\n                [_vm._v(\"取消\")]\n              )\n            ],\n            1\n          )\n        ])\n      ],\n      1\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}