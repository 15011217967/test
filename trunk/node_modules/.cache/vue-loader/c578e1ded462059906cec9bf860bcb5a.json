{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\warehouse\\stock_center\\stock_manager\\stock_manager_list.vue?vue&type=template&id=e0ea7182&scoped=true&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\warehouse\\stock_center\\stock_manager\\stock_manager_list.vue","mtime":1587347931263},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1558492728890},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\n      \"div\",\n      { staticClass: \"content-from\" },\n      [\n        _c(\n          \"el-form\",\n          {\n            ref: \"ruleForm\",\n            staticClass: \"demo-form-inline\",\n            attrs: {\n              inline: true,\n              model: _vm.signData,\n              size: \"small\",\n              \"label-width\": \"104px\"\n            }\n          },\n          [\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"模糊查询：\", prop: \"searchWords\" } },\n              [\n                _c(\"el-input\", {\n                  staticStyle: { width: \"240px\" },\n                  attrs: { placeholder: \"商品款号/货号/商品名称/原始款号\" },\n                  model: {\n                    value: _vm.signData.searchWords,\n                    callback: function($$v) {\n                      _vm.$set(_vm.signData, \"searchWords\", $$v)\n                    },\n                    expression: \"signData.searchWords\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"商品分类：\" } },\n              [\n                _c(\"el-cascader\", {\n                  staticClass: \"input-w\",\n                  attrs: {\n                    options: _vm.classData,\n                    \"show-all-levels\": false,\n                    props: _vm.props,\n                    \"change-on-select\": \"\",\n                    clearable: \"\"\n                  },\n                  on: { change: _vm.classChange },\n                  model: {\n                    value: _vm.cateArr,\n                    callback: function($$v) {\n                      _vm.cateArr = $$v\n                    },\n                    expression: \"cateArr\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              {\n                attrs: {\n                  label: \"品牌：\",\n                  \"label-width\": \"88px\",\n                  prop: \"brandId\"\n                }\n              },\n              [\n                _c(\n                  \"el-select\",\n                  {\n                    attrs: { placeholder: \"请选择\" },\n                    model: {\n                      value: _vm.signData.brandId,\n                      callback: function($$v) {\n                        _vm.$set(_vm.signData, \"brandId\", $$v)\n                      },\n                      expression: \"signData.brandId\"\n                    }\n                  },\n                  _vm._l(_vm.brandData, function(item) {\n                    return _c(\"el-option\", {\n                      key: item.id,\n                      attrs: { label: item.name, value: item.id }\n                    })\n                  }),\n                  1\n                )\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              {\n                attrs: {\n                  label: \"季节：\",\n                  \"label-width\": \"94px\",\n                  prop: \"appropriateSeasonCode\"\n                }\n              },\n              [\n                _c(\n                  \"el-select\",\n                  {\n                    attrs: { placeholder: \"请选择\" },\n                    model: {\n                      value: _vm.signData.appropriateSeasonCode,\n                      callback: function($$v) {\n                        _vm.$set(_vm.signData, \"appropriateSeasonCode\", $$v)\n                      },\n                      expression: \"signData.appropriateSeasonCode\"\n                    }\n                  },\n                  _vm._l(_vm.seasonalStyleOptions, function(item, index) {\n                    return _c(\"el-option\", {\n                      key: index.code,\n                      attrs: { label: item.name, value: item.code }\n                    })\n                  }),\n                  1\n                )\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"颜色：\", prop: \"colorCode\" } },\n              [\n                _c(\n                  \"el-select\",\n                  {\n                    attrs: { placeholder: \"请选择\" },\n                    model: {\n                      value: _vm.signData.colorCode,\n                      callback: function($$v) {\n                        _vm.$set(_vm.signData, \"colorCode\", $$v)\n                      },\n                      expression: \"signData.colorCode\"\n                    }\n                  },\n                  _vm._l(_vm.colorData, function(item) {\n                    return _c(\"el-option\", {\n                      key: item.id,\n                      attrs: { label: item.name, value: item.code }\n                    })\n                  }),\n                  1\n                )\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"仓库：\", prop: \"warehouseCode\" } },\n              [\n                _c(\n                  \"el-select\",\n                  {\n                    staticStyle: { width: \"240px\" },\n                    attrs: { placeholder: \"请选择\" },\n                    model: {\n                      value: _vm.signData.warehouseCode,\n                      callback: function($$v) {\n                        _vm.$set(_vm.signData, \"warehouseCode\", $$v)\n                      },\n                      expression: \"signData.warehouseCode\"\n                    }\n                  },\n                  _vm._l(_vm.warehouseArr, function(item) {\n                    return _c(\"el-option\", {\n                      key: item.id,\n                      attrs: {\n                        label: item.warehouseName,\n                        value: item.warehouseCode\n                      }\n                    })\n                  }),\n                  1\n                )\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              {\n                attrs: {\n                  label: \"货主：\",\n                  \"label-width\": \"105px\",\n                  prop: \"ownerId\"\n                }\n              },\n              [\n                _c(\n                  \"el-select\",\n                  {\n                    staticStyle: { width: \"160px\" },\n                    attrs: { placeholder: \"请选择\" },\n                    model: {\n                      value: _vm.signData.ownerId,\n                      callback: function($$v) {\n                        _vm.$set(_vm.signData, \"ownerId\", $$v)\n                      },\n                      expression: \"signData.ownerId\"\n                    }\n                  },\n                  _vm._l(_vm.ownerData, function(item) {\n                    return _c(\"el-option\", {\n                      key: item.id,\n                      attrs: { label: item.name, value: item.code }\n                    })\n                  }),\n                  1\n                )\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              {\n                attrs: {\n                  label: \"自定义筛选：\",\n                  \"label-width\": \"126px\",\n                  prop: \"quantityType\"\n                }\n              },\n              [\n                _c(\n                  \"el-select\",\n                  {\n                    attrs: { placeholder: \"请选择\" },\n                    model: {\n                      value: _vm.signData.quantityType,\n                      callback: function($$v) {\n                        _vm.$set(_vm.signData, \"quantityType\", $$v)\n                      },\n                      expression: \"signData.quantityType\"\n                    }\n                  },\n                  _vm._l(_vm.quantityTypeArr, function(item) {\n                    return _c(\"el-option\", {\n                      key: item.id,\n                      attrs: { label: item.value, value: item.id }\n                    })\n                  }),\n                  1\n                )\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              {\n                staticStyle: { margin: \"0px -14px\" },\n                attrs: { label: \"\", prop: \"logicType\" }\n              },\n              [\n                _c(\n                  \"el-select\",\n                  {\n                    staticStyle: { margin: \"0 5px\" },\n                    attrs: { placeholder: \"请选择\" },\n                    model: {\n                      value: _vm.signData.logicType,\n                      callback: function($$v) {\n                        _vm.$set(_vm.signData, \"logicType\", $$v)\n                      },\n                      expression: \"signData.logicType\"\n                    }\n                  },\n                  _vm._l(_vm.logicTypeArr, function(item) {\n                    return _c(\"el-option\", {\n                      key: item.id,\n                      attrs: { label: item.value, value: item.id }\n                    })\n                  }),\n                  1\n                )\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              {\n                staticStyle: { \"margin-left\": \"10px\" },\n                attrs: { label: \"\", prop: \"quantity\" }\n              },\n              [\n                _c(\"el-input\", {\n                  directives: [\n                    { name: \"enter-number\", rawName: \"v-enter-number\" }\n                  ],\n                  staticClass: \"input-w\",\n                  attrs: { placeholder: \"具体数量\" },\n                  model: {\n                    value: _vm.signData.quantity,\n                    callback: function($$v) {\n                      _vm.$set(_vm.signData, \"quantity\", $$v)\n                    },\n                    expression: \"signData.quantity\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              [\n                _c(\n                  \"el-button\",\n                  {\n                    attrs: { type: \"primary\", plain: \"\", size: \"small\" },\n                    on: { click: _vm.onSearchContent }\n                  },\n                  [_vm._v(\"搜索\")]\n                ),\n                _c(\n                  \"el-button\",\n                  {\n                    attrs: { size: \"small\" },\n                    on: {\n                      click: function($event) {\n                        return _vm.resetForm(\"ruleForm\")\n                      }\n                    }\n                  },\n                  [_vm._v(\"重置\")]\n                )\n              ],\n              1\n            )\n          ],\n          1\n        )\n      ],\n      1\n    ),\n    _c(\n      \"div\",\n      { staticClass: \"content-table\" },\n      [\n        _c(\n          \"el-tabs\",\n          {\n            on: { \"tab-click\": _vm.activeTabClickEvent },\n            model: {\n              value: _vm.signData.inventoryStatus,\n              callback: function($$v) {\n                _vm.$set(_vm.signData, \"inventoryStatus\", $$v)\n              },\n              expression: \"signData.inventoryStatus\"\n            }\n          },\n          [\n            _c(\"el-tab-pane\", { attrs: { label: \"合格品\", name: \"1\" } }),\n            _c(\"el-tab-pane\", { attrs: { label: \"残次品\", name: \"2\" } })\n          ],\n          1\n        ),\n        _c(\n          \"el-button\",\n          {\n            attrs: { plain: \"\", size: \"small\" },\n            on: { click: _vm.exportExcel }\n          },\n          [_vm._v(\"导出\")]\n        ),\n        _c(\n          \"el-table\",\n          {\n            ref: \"multipleTable\",\n            staticStyle: { width: \"100%\" },\n            attrs: {\n              data: _vm.tableData,\n              \"tooltip-effect\": \"dark\",\n              \"header-row-class-name\": \"item-table-header\",\n              \"empty-text\": \"暂无数据\"\n            }\n          },\n          [\n            _c(\"el-table-column\", {\n              attrs: { width: \"55\" },\n              scopedSlots: _vm._u([\n                {\n                  key: \"default\",\n                  fn: function(scope) {\n                    return [\n                      scope.row.isShow\n                        ? _c(\"i\", {\n                            class:\n                              scope.row.isType == 1\n                                ? \"el-icon-circle-plus-outline i-cursor\"\n                                : \"el-icon-remove-outline i-cursor\",\n                            attrs: { \"data-id\": scope.row.id },\n                            on: {\n                              click: function($event) {\n                                return _vm.childrenIsShow(scope.row)\n                              }\n                            }\n                          })\n                        : _vm._e()\n                    ]\n                  }\n                }\n              ])\n            }),\n            _c(\"el-table-column\", {\n              attrs: { label: \"商品款号\", width: \"170\" },\n              scopedSlots: _vm._u([\n                {\n                  key: \"default\",\n                  fn: function(scope) {\n                    return [_vm._v(_vm._s(scope.row.spu))]\n                  }\n                }\n              ])\n            }),\n            _c(\"el-table-column\", {\n              attrs: { prop: \"sku\", label: \"货号\", width: \"170\" },\n              scopedSlots: _vm._u([\n                {\n                  key: \"default\",\n                  fn: function(scope) {\n                    return [_vm._v(_vm._s(scope.row.sku))]\n                  }\n                }\n              ])\n            }),\n            _c(\"el-table-column\", {\n              attrs: { prop: \"name\", label: \"商品名称\" },\n              scopedSlots: _vm._u([\n                {\n                  key: \"default\",\n                  fn: function(scope) {\n                    return [_vm._v(_vm._s(scope.row.name))]\n                  }\n                }\n              ])\n            }),\n            _c(\"el-table-column\", {\n              attrs: { prop: \"image\", label: \"商品图片\" },\n              scopedSlots: _vm._u([\n                {\n                  key: \"default\",\n                  fn: function(scope) {\n                    return [\n                      _c(\"img\", {\n                        staticStyle: { width: \"32px\", height: \"32px\" },\n                        attrs: { src: scope.row.image }\n                      })\n                    ]\n                  }\n                }\n              ])\n            }),\n            _c(\"el-table-column\", {\n              attrs: { prop: \"originalCode\", label: \"原始款号\" },\n              scopedSlots: _vm._u([\n                {\n                  key: \"default\",\n                  fn: function(scope) {\n                    return [_vm._v(_vm._s(scope.row.originalCode))]\n                  }\n                }\n              ])\n            }),\n            _c(\"el-table-column\", {\n              attrs: { prop: \"colorName\", label: \"颜色\" },\n              scopedSlots: _vm._u([\n                {\n                  key: \"default\",\n                  fn: function(scope) {\n                    return [_vm._v(_vm._s(scope.row.colorName))]\n                  }\n                }\n              ])\n            }),\n            _c(\"el-table-column\", {\n              attrs: { prop: \"sizeName\", label: \"规格\" },\n              scopedSlots: _vm._u([\n                {\n                  key: \"default\",\n                  fn: function(scope) {\n                    return [_vm._v(_vm._s(scope.row.sizeName))]\n                  }\n                }\n              ])\n            }),\n            _c(\"el-table-column\", {\n              attrs: { prop: \"brandName\", label: \"品牌\" },\n              scopedSlots: _vm._u([\n                {\n                  key: \"default\",\n                  fn: function(scope) {\n                    return [_vm._v(_vm._s(scope.row.brandName))]\n                  }\n                }\n              ])\n            }),\n            _c(\"el-table-column\", {\n              attrs: { prop: \"quantity\", label: \"库存总量\" },\n              scopedSlots: _vm._u([\n                {\n                  key: \"default\",\n                  fn: function(scope) {\n                    return [_vm._v(_vm._s(scope.row.quantity))]\n                  }\n                }\n              ])\n            }),\n            _c(\"el-table-column\", {\n              attrs: { label: \"冻结库存\" },\n              scopedSlots: _vm._u([\n                {\n                  key: \"default\",\n                  fn: function(scope) {\n                    return [_vm._v(_vm._s(scope.row.frozenQuantity))]\n                  }\n                }\n              ])\n            }),\n            _c(\"el-table-column\", {\n              attrs: {\n                prop: \"availableQuantity\",\n                label: \"可用库存\",\n                align: \"center\"\n              },\n              scopedSlots: _vm._u([\n                {\n                  key: \"default\",\n                  fn: function(scope) {\n                    return [_vm._v(_vm._s(scope.row.availableQuantity))]\n                  }\n                }\n              ])\n            }),\n            _c(\"el-table-column\", {\n              attrs: {\n                prop: \"inTransitQuantity\",\n                label: \"在途库存\",\n                align: \"center\"\n              },\n              scopedSlots: _vm._u([\n                {\n                  key: \"default\",\n                  fn: function(scope) {\n                    return [_vm._v(_vm._s(scope.row.inTransitQuantity))]\n                  }\n                }\n              ])\n            })\n          ],\n          1\n        ),\n        _c(\"div\", { class: { page_div: _vm.tableData.length > 0 } }, [\n          _c(\n            \"div\",\n            {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: _vm.tableData.length > 0,\n                  expression: \"tableData.length>0\"\n                }\n              ],\n              staticStyle: {\n                color: \"#222\",\n                flex: \"auto\",\n                \"font-weight\": \"700\",\n                \"font-size\": \"13px\"\n              }\n            },\n            [\n              _c(\"span\", [\n                _vm._v(\"货主：\" + _vm._s(_vm.tableListData.ownerCount) + \"家\")\n              ]),\n              _c(\n                \"span\",\n                {\n                  staticStyle: { \"margin-left\": \"10px\", \"margin-right\": \"10px\" }\n                },\n                [\n                  _vm._v(\n                    \"仓库：\" + _vm._s(_vm.tableListData.warehouseCount) + \"个\"\n                  )\n                ]\n              ),\n              _c(\n                \"span\",\n                {\n                  staticStyle: { \"margin-left\": \"10px\", \"margin-right\": \"10px\" }\n                },\n                [\n                  _vm._v(\n                    \"总库存量：\" +\n                      _vm._s(_vm.tableListData.inventoryCount) +\n                      \"件\"\n                  )\n                ]\n              ),\n              _c(\"span\", [\n                _vm._v(\n                  \"其中款号数\" +\n                    _vm._s(_vm.tableListData.productCodeCount) +\n                    \"种\"\n                )\n              ]),\n              _c(\n                \"span\",\n                {\n                  staticStyle: { \"margin-left\": \"10px\", \"margin-right\": \"10px\" }\n                },\n                [\n                  _vm._v(\n                    \"货号数\" + _vm._s(_vm.tableListData.goodsCodeCount) + \"个\"\n                  )\n                ]\n              ),\n              _c(\n                \"span\",\n                {\n                  staticStyle: { \"margin-left\": \"10px\", \"margin-right\": \"10px\" }\n                },\n                [\n                  _vm._v(\n                    \"累计可用库存：\" + _vm._s(_vm.tableListData.availableCount)\n                  )\n                ]\n              ),\n              _c(\n                \"span\",\n                {\n                  staticStyle: { \"margin-left\": \"10px\", \"margin-right\": \"10px\" }\n                },\n                [\n                  _vm._v(\n                    \"累计冻结库存：\" + _vm._s(_vm.tableListData.blockedCount)\n                  )\n                ]\n              ),\n              _c(\n                \"span\",\n                {\n                  staticStyle: { \"margin-left\": \"10px\", \"margin-right\": \"10px\" }\n                },\n                [\n                  _vm._v(\n                    \"累计在途库存：\" + _vm._s(_vm.tableListData.inTransitCount)\n                  )\n                ]\n              )\n            ]\n          ),\n          _c(\n            \"div\",\n            { class: { pagination: _vm.tableData.length == 0 } },\n            [\n              _c(\"el-pagination\", {\n                attrs: {\n                  \"current-page\": _vm.signData.pageIndex,\n                  \"page-sizes\": [10, 20, 30, 40],\n                  \"page-size\": _vm.signData.pageSize,\n                  layout: \"total, sizes, prev, pager, next, jumper\",\n                  total: _vm.totalCount\n                },\n                on: {\n                  \"size-change\": _vm.handleSizeChange,\n                  \"current-change\": _vm.handleCurrentChange,\n                  \"update:currentPage\": function($event) {\n                    return _vm.$set(_vm.signData, \"pageIndex\", $event)\n                  },\n                  \"update:current-page\": function($event) {\n                    return _vm.$set(_vm.signData, \"pageIndex\", $event)\n                  }\n                }\n              })\n            ],\n            1\n          )\n        ])\n      ],\n      1\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}