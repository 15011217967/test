{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\scb\\order\\sell_order_edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\scb\\order\\sell_order_edit.vue","mtime":1585107118892},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// TODO 临时解决上传文件\nimport division from \"@/components/division\";\nimport axios from 'axios'\nimport { getToken } from \"@/utils/auth\";\nimport PageTable from \"@/views/collocation/components/PageTable\";\nimport CheckTags from \"@/views/collocation/components/CheckTags\";\nimport StoreInfo from \"../components/sellStoreInfo\";\nimport TransferSlipGoodsTable from \"../components/sellTransferSlipGoodsTable\";\nimport ImagePopover from \"@/views/collocation/components/ImagePopover\";\nexport default {\n  // 组件\n  components: {\n    division,\n    PageTable,\n    TransferSlipGoodsTable,\n    CheckTags,\n    StoreInfo,\n    ImagePopover\n  },\n  // 数据\n  data() {\n    return {\n      // 销售单id\n      id:this.$route.query.id,\n      // 弹出框是否显示\n      dialogTableVisible:false,\n      // form提交参数\n      addFormData: {\n        // 发货人\n        allotMan: '',\n        // 发货人直属机构\n        organizationId: '',\n        organizationName: '',\n        // 订单类型\n        // orderType: '0203',\n        // 发货门店\n        outStoreId: '',\n        outStoreName: '',\n        // 收货门店\n        inStoreId: '',\n        inStoreName: '',\n        // 收货人\n        receiveMan: '',\n        // 电话\n        phone: '',\n        // 省市区信息\n        provinceName: '',\n        provinceCode: '',\n        cityName: '',\n        cityCode: '',\n        areaName: '',\n        areaCode: '',\n        divisionId: '',\n        // 地址\n        addressInfo: ''\n      },\n      // 路由参数\n      _orderSn: null,\n      _outStoreId: null,\n\n      // 默认显示门店信息 outStoreInfo: 发货门店     inStoreInfo: 收货门店\n      activeName: 'outStoreInfo',\n      // 发货门店详情\n      outStoreInfo: null,\n      // 收货门店详情\n      inStoreInfo: null,\n      // 导入商品地址\n      uploadGoodsUrl: this.api.FN_ALLPATH(this.api.retailStore.storeProduct_importOrderItem),\n      // 导入是否可点\n      uploadGoodsDisabled: false,\n      // 导入附带参数\n      uploadGoodsParams: {\n        storeId: ''\n      },\n      // 最终保存提交信息\n      transferSlipAddInfo: {\n        purchaseOrderStatus:null,\n        addressInfo:null,\n        allotMan:null,\n        areaCode:null,\n        areaName:null,\n        cityCode:null,\n        cityName:null,\n        divisionId:null,\n        inStoreId:null,\n        inStoreName:null,\n        organizationId:null,\n        organizationName:null,\n        outStoreId:null,\n        outStoreName:null,\n        phone:null,\n        provinceCode:null,\n        provinceName:null,\n        receiveMan:null,\n      },\n      // 选择的商品列表\n      checkedSKUTableData: [],\n\n      // 是否显示选中的\n      checkedGoodsShow: false,\n      // 查询商品参数\n      formData: {\n        // 所属门店\n        storeId: '',\n        // 商品分类\n        cateIdentifier: '',\n        // 价格筛选\n        retailPriceLowerLimit: '',\n        retailPriceUpperLimit: '',\n        // 库存量\n        quantityLowerLimit: '',\n        quantityUpperLimit: '',\n        // 设计商\n        designCompanyId: '',\n        // 品牌\n        brandId: '',\n        // 综合搜索\n        searchWords: '',\n        // 标签\n        collocationTagIdList: [],\n        // 当前页码\n        pageIndex: 1,\n        // 每页数量\n        pageSize: 10\n      },\n      // 商品主表格数据\n      tableData: {},\n      // 表格展开行\n      expandRowIds: [],\n\n      /**\n       * 商品查询辅助数据\n       */\n      // 验证\n      rules: {\n        money: [\n          { required: false, validator: this.moneyRule, trigger: 'blur'}\n        ],\n        count: [\n          { required: false, validator: this.countRule, trigger: 'blur'}\n        ]\n      },\n      // 分类映射\n      props:{\n        value: 'id',\n        label: 'name',\n        children: 'children'\n      },\n      // 分类数据\n      classData:[],\n      classList:[],\n      // 选中的分类\n      cateArr:[],\n      // 品牌\n      brandOptions:[],\n      // 设计商\n      designCompanyOptions:[]\n      /**\n       * 商品查询辅助数据--end\n       */\n    }\n  },\n  created(){\n    \n  },\n  // 初始化数据\n  mounted() {\n    this.$route.meta.title = this.$route.query.id ? '编辑销售订单' : '新增销售订单';\n    // 获取上页面缓存的门店信息\n    let transferSlipAddInfo = sessionStorage.getItem('TRANSFER_SLIP_APP_INFO');\n    if(transferSlipAddInfo){\n      this.transferSlipAddInfo = JSON.parse(transferSlipAddInfo);\n      this.formData.storeId = this.transferSlipAddInfo.outStoreId;\n      this.uploadGoodsParams.storeId = this.transferSlipAddInfo.outStoreId;\n      this.init();\n    }else{\n      this.purchaseOrder_getModifyDTOByOrderId();\n    }\n  },\n  // 方法\n  methods: {\n    /**\n     * 获取进货单详情DTO\n     */\n    purchaseOrder_getModifyDTOByOrderId() {\n      const that = this;\n      this.request(\n        this.api.scb.purchaseOrder_getModifyDTOByOrderId,\n        {\n          orderId:this.id\n        }\n      ).then(res => {\n        let info = res.purchaseOrderDTO;\n        Object.assign(this.transferSlipAddInfo, {\n          purchaseOrderStatus:info.purchaseOrderStatus,\n          addressInfo:info.addressInfo,\n          allotMan:info.allotMan,\n          areaCode:info.areaCode,\n          areaName:info.areaName,\n          cityCode:info.cityCode,\n          cityName:info.cityName,\n          divisionId:info.divisionId,\n          inStoreId:info.purchaseAgentId,\n          inStoreName:info.purchaseAgentName,\n          organizationId:info.organizationId,\n          organizationName:info.organizationName,\n          outStoreId:info.purchaseAgentId,\n          outStoreName:info.purchaseAgentName,\n          phone:info.phone,\n          provinceCode:info.provinceCode,\n          provinceName:info.provinceName,\n          receiveMan:info.receiveMan,\n        });\n        this.formData.storeId = info.purchaseAgentId;\n        this.uploadGoodsParams.storeId = info.purchaseAgentId;\n        this.checkedSKUTableData = res.purchaseOrderProductDTOS;\n        this.init();\n        res.purchaseOrderProductDTOS.forEach((item, index) => {\n          item.quantity = item.skuQuantity;\n          item.retailPrice = item.price;\n          item.code = item.goodsCode;\n        });\n        this.checkedGoodsShow = true;\n      });\n    },\n    /**\n     * 获取返货单已选商品列表（为了获取调入结算单价）\n     */\n    settleQuery_findSettle(){\n      const that = this;\n      const data = {\n        \"infoVOList\": this.checkedSKUTableData,\n        \"sourceMerchantId\": this.transferSlipAddInfo.inStoreId,\n        \"targetMerchantId\": this.transferSlipAddInfo.outStoreId\n      };\n      this.checkedGoodsShow = true;\n    },\n    /**\n     * 修改收货地址\n     */\n    changeAddress() {\n      Object.assign(this.outStoreInfo,this.transferSlipAddInfo);\n      this.outStoreInfo.linkman = this.transferSlipAddInfo.receiveMan;\n      this.dialogTableVisible = false;\n    },\n    // 获取省市信息\n    setDivision(division){\n      this.transferSlipAddInfo.provinceName =  division.province;\n      this.transferSlipAddInfo.provinceCode =  division.provinceCode;\n      this.transferSlipAddInfo.cityName =  division.municipality;\n      this.transferSlipAddInfo.cityCode =  division.municipalityCode;\n      this.transferSlipAddInfo.areaName =  division.area;\n      this.transferSlipAddInfo.areaCode =  division.areaCode;\n      this.transferSlipAddInfo.divisionId =  division.divisionId;\n    },\n    // 初始化\n    init(){\n      // 获取上页面参数\n      this.getQueryParams();\n      // 获取发货门店详情\n      this.getStoreInfo(this.transferSlipAddInfo.outStoreId, 'outStoreInfo');\n      // 获取设计商列表\n      this.getDesignCompanyOptions();\n      // 获取品牌列表\n      this.getBrandOptions();\n      // 获取商品分类列表\n      this.getClassData();\n      // 获取表格数据\n      this.getTableData();\n    },\n    // 获取上页面参数\n    getQueryParams() {\n      this._orderSn = this.$route.query.id;\n      this._outStoreId = this.$route.query.outStoreId;\n      // if(this._orderSn && this._outStoreId){\n      //   this.getStoreAllotOrderProductInfoList(this._orderSn, this._outStoreId)\n      // }\n    },\n    // 获取商品详情\n    getStoreAllotOrderProductInfoList(orderSn, outStoreId){\n      this.request(this.api.order.storeAllotOrderProductInfo_list, {orderSn ,outStoreId}).then(data => {\n        this.checkedSKUTableData = data.data;\n      });\n    },\n    /**\n     * 获取门店详情\n     * @param id {String} 门店id\n     * @param type {String} outStoreInfo: 发货门店 inStoreInfo: 收货门店\n     */\n    getStoreInfo(id, type){\n      if(!this[type]){\n        this.request(this.api.retailStore.storeBasic_get, {id: id}).then(data => {\n          this[type] = data;\n        });\n      }\n    },\n    /**\n     * 导入商品\n     * @param file 上传的文件\n     */\n    uploadGoodsChange(file){\n      // 判断类型\n      if (!(/((.xlsx)|(.xls))$/.test(file.name))) {\n        this.$message.error('文件格式只能是 xlsx | xls格式!');\n        return false\n      }\n      let formData = new FormData();\n      let token = getToken();\n      formData.set('file', file.raw );\n      formData.set('merchantId', '');\n      formData.set('purchaseAgentId', this.transferSlipAddInfo.outStoreId);\n      axios({\n        method: \"POST\",\n        url: this.api.FN_ALLPATH(this.api.scb.purchaseOrder_importProductItem),\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n          accessToken: token\n        },\n        data: formData\n      }).then(res => {\n        let data = res.data;\n        // 合并导入的数据和已选择的数据\n        if(data.code && data.code == 200){\n          let goodsData = data.data;\n            goodsData.forEach((item, index) => {\n            item.modifyPrice = item.purchasePrice;\n            item.code = item.goodsCode;\n            item.availableQuantity = item.stockQty;\n          });\n          if(goodsData && goodsData.length > 0){\n            for(let n = 0; n < goodsData.length; n++){\n              let goodsIndex = this.checkedSKUTableData.findIndex(item => {\n                return item.goodsCode === goodsData[n].goodsCode\n              });\n              if(goodsIndex !== -1){\n                this.checkedSKUTableData[goodsIndex].quantity = goodsData[n].quantity;\n              }else {\n                goodsData[n].allotPrice = goodsData[n].retailPrice;\n                this.checkedSKUTableData.push(goodsData[n])\n              }\n            }\n          }\n          this.checkedGoodsShow = true;\n          this.$nextTick(() => {\n            this.$refs.transferSlipGoodsTable.init();\n          })\n        }else {\n          this.$notify.error({ title: '错误',message: data.message});\n        }\n      })\n\n    },\n    /**\n     * 左侧门店类型切换\n     * @param activeName {String} 选择的门店类型名称\n     */\n    handleBeforeClick(activeName) {\n      this.getStoreInfo(this.transferSlipAddInfo.outStoreId, activeName);\n    },\n    // 点击搜索\n    searchTableData(){\n      // 置空展开行\n      this.expandRowIds = [];\n      this.formData.pageIndex = 1;\n      this.getTableData();\n    },\n    /**\n     * 重置查询条件\n     * @param formName {String} 表单的节点ref的值\n     */\n    initFormData(formName){\n      this.$refs[formName].resetFields();\n      this.cateArr = [];\n      this.formData.cateIdentifier = '';\n      this.formData.retailPriceLowerLimit = '';\n      this.formData.retailPriceUpperLimit = '';\n      this.formData.quantityLowerLimit = '';\n      this.formData.quantityUpperLimit = '';\n    },\n    // 获取spu商品数据\n    getTableData() {\n      this.$nextTick(() => {\n        setTimeout(()=> {\n          this.$refs.searchForm.validate((valid) => {\n            if (valid) {\n              let params = JSON.parse(JSON.stringify(this.formData));\n              if(params.collocationTagIdList.length === 0){\n                params.collocationTagIdList = null\n              }\n              this.request(this.api.scb.purchaseOrder_allocateCargoProductList, params).then(data => {\n                if(data.data && data.data.length){\n                  data.data.forEach(item => {\n                    item._skuList = [];\n                  });\n                  this.tableData = data;\n                }else {\n                  this.tableData = {};\n                }\n              });\n            } else {\n              return false;\n            }\n          });\n        },0)\n      })\n    },\n    /**\n     * 点击左侧三角 获取sku商品\n     * @param row {Object} 表格行数据\n     * @param expandedRows {Array} 表格行数据\n     */\n    tableDataExpandChange(row, expandedRows){\n      if(row._skuList.length) return;\n      let params = {\n        productCode: row.code,\n        purchaseAgentId: this.transferSlipAddInfo.outStoreId\n      };\n      this.request(this.api.scb.purchaseOrder_allocateCargoProductGoodsList, params).then(data => {\n        if(data && data.length){\n          data.forEach(item => {\n            // 新增提交需要的字段\n            item.quantity = 0;\n            item.designCompanyCode = row.designCompanyCode;\n            item.designCompanyName = row.designCompanyName;\n            // 由于导入商品字段和查询字段不同  重新赋值\n            item.allotPrice = item.retailPrice;\n            item.stockQty = item.stock;\n            item.productType = item.fullCateName;\n            item.goodsName = item.name;\n            item.modifyPrice = item.purchasePrice;\n            item.brandName = item.productBrandName;\n            item.brandCode = item.productBrandCode;\n            if(this.checkedSKUTableData.length > 0){\n              for(let i = 0; i < this.checkedSKUTableData.length; i++){\n                if(this.checkedSKUTableData[i].code === item.code){\n                  item.quantity = this.checkedSKUTableData[i].quantity;\n                }\n              }\n            }\n          });\n          row._skuList = data;\n        }\n      });\n    },\n    /**\n     * 输入修改商品数量\n     * @param $event {Object} event\n     * @param row {Object} 表格行数据\n     */\n    goodsQuantityInput($event, row){\n      this.$nextTick(()=>{\n        let val = $event.target.value;\n        row.planBackQuantity = $event.target.value = val.replace(/[^\\d.]/g,'');\n        this.goodsQuantityChange(row);\n      })\n    },\n    /**\n     * + -修改商品数量\n     * @param row {Object} 表格行数据\n     */\n    goodsQuantityChange(row){\n      let index = this.checkedSKUTableData.findIndex(item => {\n        return item.code === row.code;\n      });\n      if(index !== -1){\n        if(row.quantity == 0){\n          this.checkedSKUTableData.splice(index, 1);\n        }else{\n          this.checkedSKUTableData[index].quantity = row.quantity;\n        }\n      }else {\n        this.checkedSKUTableData.push(row);\n      }\n    },\n\n\n    /**\n     * 搜索商品参数下拉数据及验证\n     */\n    // 验证价格区间\n    moneyRule(rule, value,callback) {\n      const reg = /^[0-9]*$/;\n      if(!reg.test(this.formData.retailPriceLowerLimit) || !reg.test(this.formData.retailPriceUpperLimit)){\n        callback(new Error('价格区间必须是数字'));\n        return\n      }\n      if(this.formData.retailPriceLowerLimit && this.formData.retailPriceUpperLimit && this.formData.retailPriceLowerLimit >= this.formData.retailPriceUpperLimit){\n        callback(new Error('价格区间下限应小于上限'));\n      }else {\n        callback();\n      }\n    },\n    // 验证数量区间\n    countRule(rule, value,callback) {\n      const reg = /^[0-9]*$/;\n      if(!reg.test(this.formData.quantityLowerLimit) || !reg.test(this.formData.quantityUpperLimit)){\n        callback(new Error('库存量区间必须是数字'));\n        return\n      }\n      if(this.formData.quantityLowerLimit && this.formData.quantityUpperLimit && this.formData.quantityLowerLimit >= this.formData.quantityUpperLimit){\n        callback(new Error('库存量区间下限应小于上限'));\n      }else {\n        callback();\n      }\n    },\n    // 获取商品分类数据\n    getClassData(){\n      //分类类型（1：标准分类，2：定制分类，3：原料分类或者称为属性分类）\n      this.$common.getClassSelect(this,1).then(res =>{\n        this.classData=res.ztree;\n        this.classList=res.list;\n      })\n    },\n    // 商品分类Change\n    classChange(e){\n      if(e.length === 0){\n        this.formData.cateIdentifier = '';\n        return;\n      }\n      let cateId  = JSON.parse(JSON.stringify(e)).pop();\n      let obj = this.classList.find((item)=>(item.id == cateId));\n      this.formData.cateIdentifier = obj.identifier;\n    },\n    // 获取设计商\n    getDesignCompanyOptions(){\n      this.request(this.api.product.designCompany_list, {}).then(data => {\n        this.designCompanyOptions=data.data;\n      });\n    },\n    // 获取品牌\n    getBrandOptions(){\n      this.request(this.api.product.productBrand_list,{}).then(data => {\n        this.brandOptions= data.data;\n      });\n    }\n    /**\n     * 搜索商品参数下拉数据--end\n     */\n  },\n  // 计算属性\n  computed: {},\n  // 监听数据变化\n  watch: {}\n}\n",{"version":3,"sources":["sell_order_edit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"sell_order_edit.vue","sourceRoot":"src/views/scb/order","sourcesContent":["<style lang=\"less\" scoped>\r\n  .transfer-slip-add-goods{display: flex;\r\n    .upload-goods-btn{display: inline-block;margin-left: 15px;}\r\n    .side{width: 320px;background: #fff;margin-left: 8px;line-height: 24px;\r\n      .tabs{margin-top: 10px;}\r\n\r\n    }\r\n    .table-list{flex: 1;background: #fff;margin-top: 0;\r\n      .goods-list{\r\n        .type-list{padding-top: 0;padding-bottom: 0;}\r\n      }\r\n      .check-goods-list{\r\n\r\n      }\r\n    }\r\n    .page-more{border-top: 1px solid #e6e8ed;margin-top: 10px;\r\n      div.btn{\r\n        width: 120px;border: 1px solid #e6e8ed;border-top: 1px solid #fff;margin: -1px auto 0;text-align: center;font-size: 12px;cursor: pointer;line-height: 30px;\r\n      }\r\n    }\r\n    .index-goods-table{padding-top: 0;}\r\n  }\r\n  .transfer-slip-add-goods /deep/ .el-table__expanded-cell[class*=cell]{padding: 0;}\r\n  .transfer-slip-add-goods .txt-red /deep/ .el-input__inner{color: red;}\r\n</style>\r\n<template>\r\n  <div class=\"transfer-slip-add-goods\">\r\n    <el-dialog width=\"835px\" title=\"修改收货信息\" v-if=\"dialogTableVisible\" :visible.sync=\"dialogTableVisible\">\r\n      <el-form ref=\"addFormData\" :model=\"transferSlipAddInfo\" label-width=\"120px\" :rules=\"rules\" class=\"item-form\" size=\"small\">\r\n        <el-form-item label=\"收货人：\" prop=\"receiveMan\">\r\n          <el-input v-model=\"transferSlipAddInfo.receiveMan\" placeholder=\"请输入内容\" class=\"input-w-2\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"联系电话：\" prop=\"phone\">\r\n          <el-input v-model=\"transferSlipAddInfo.phone\" placeholder=\"请输入内容\" class=\"input-w-2\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"所在地区：\" prop=\"divisionId\">\r\n          <division v-model=\"transferSlipAddInfo.divisionId\" @set-division=\"setDivision\" width-class=\"input-w\"></division>\r\n        </el-form-item>\r\n        <el-form-item label=\"\" prop=\"addressInfo\">\r\n          <el-input v-model=\"transferSlipAddInfo.addressInfo\" placeholder=\"请输入详细地址\" class=\"input-w-2\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"\">\r\n          <el-button @click=\"dialogTableVisible = false\" size=\"small\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"changeAddress\" size=\"small\">确认</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-dialog>\r\n    <!--左侧-->\r\n    <div class=\"side\">\r\n      <div class=\"item-cont\">\r\n        <el-button size=\"small\" type=\"primary\" @click=\"settleQuery_findSettle\">已选商品</el-button>\r\n        <el-upload class=\"upload-goods-btn\" :action=\"uploadGoodsUrl\" :show-file-list=\"false\" :auto-upload=\"false\" :on-change=\"uploadGoodsChange\">\r\n          <el-button size=\"small\" type=\"primary\" plain>导入商品</el-button>\r\n        </el-upload>\r\n        <el-tabs v-model=\"activeName\" class=\"tabs\" :before-leave=\"handleBeforeClick\" type=\"card\">\r\n          <el-tab-pane label=\"客户资料\" name=\"outStoreInfo\">\r\n            <store-info :storeType=\"false\" :store-info=\"outStoreInfo\" :transferSlipAddInfo=\"transferSlipAddInfo\"></store-info>\r\n            <el-button type=\"primary\" @click=\"dialogTableVisible = true\">修改收货信息</el-button>\r\n          </el-tab-pane>\r\n        </el-tabs>\r\n      </div>\r\n    </div>\r\n    <!--右侧-->\r\n    <div class=\"table-list item-margin\">\r\n      <!--商品主列表-->\r\n      <div class=\"goods-list\" v-show=\"!checkedGoodsShow\">\r\n        <!--商品主列表查询条件-->\r\n        <div>\r\n          <el-form class=\"item-form\" :model=\"formData\" label-width=\"90px\" size=\"small\" ref=\"searchForm\" inline :rules=\"rules\">\r\n            <el-form-item label=\"商品分类：\">\r\n              <el-cascader class=\"input-w\" :options=\"classData\" v-model=\"cateArr\" @change=\"classChange\" :show-all-levels=\"false\" :props=\"props\" change-on-select clearable></el-cascader>\r\n            </el-form-item>\r\n            <el-form-item label=\"价格筛选：\" prop=\"money\">\r\n              <el-input class=\"input-w\" placeholder=\"请输入区间下限\" v-model.number=\"formData.retailPriceLowerLimit\"></el-input>\r\n              &nbsp;\r\n              <el-input class=\"input-w\" placeholder=\"请输入区间上限\" v-model.number=\"formData.retailPriceUpperLimit\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"库存量：\" prop=\"count\">\r\n              <el-input class=\"input-w\" placeholder=\"请输入区间下限\" v-model.number=\"formData.quantityLowerLimit\"></el-input>\r\n              &nbsp;\r\n              <el-input class=\"input-w\" placeholder=\"请输入区间上限\" v-model.number=\"formData.quantityUpperLimit\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"设计商：\" prop=\"designCompanyId\">\r\n              <el-select class=\"input-w\" placeholder=\"请选择\" v-model=\"formData.designCompanyId\" clearable filterable>\r\n                <el-option v-for=\"item in designCompanyOptions\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"品牌：\" prop=\"brandId\">\r\n              <el-select class=\"input-w\" placeholder=\"请选择\" v-model=\"formData.brandId\" clearable filterable>\r\n                <el-option v-for=\"item in brandOptions\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"综合搜索：\" prop=\"searchWords\">\r\n              <el-input class=\"input-w\" placeholder=\"款号、货号、名称\" v-model=\"formData.searchWords\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button @click=\"searchTableData\" type=\"primary\" plain>搜索</el-button>\r\n              <el-button @click=\"initFormData('searchForm')\" plain>重置</el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n          <div class=\"type-list item-cont\">\r\n            <check-tags :checked-data=\"formData.collocationTagIdList\"></check-tags>\r\n          </div>\r\n        </div>\r\n        <div class=\"item-cont index-goods-table\">\r\n          <page-table :form-data=\"formData\" :get-data=\"getTableData\" :table-data=\"tableData\">\r\n            <el-table :data=\"tableData.data\" row-key=\"id\" style=\"width: 100%\" :expand-row-keys=\"expandRowIds\" @expand-change=\"tableDataExpandChange\">\r\n              <el-table-column type=\"expand\" width=\"50\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-table :data=\"scope.row._skuList\" style=\"width: 100%\" :show-header=\"false\">\r\n                    <el-table-column label=\"占位\" width=\"50\"></el-table-column>\r\n                    <el-table-column prop=\"code\" label=\"商品款号\" width=\"200\"></el-table-column>\r\n                    <el-table-column prop=\"name\" label=\"名称\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n                    <el-table-column label=\"商品图片\">\r\n                      <template slot-scope=\"scope\">\r\n                        <image-popover :img-src=\"scope.row.image\"></image-popover>\r\n                      </template>\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"color\" label=\"颜色\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n                    <el-table-column prop=\"size\" label=\"规格\"></el-table-column>\r\n                    <el-table-column prop=\"productBrandName\" label=\"品牌\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n                    <el-table-column prop=\"fullCateName\" label=\"品类\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n                    <el-table-column prop=\"retailPrice\" label=\"吊牌价\"></el-table-column>\r\n                    <el-table-column prop=\"purchasePrice\" label=\"结算价\"></el-table-column>\r\n                    <el-table-column prop=\"availableQuantity\" label=\"库存量\"></el-table-column>\r\n                    <el-table-column label=\"操作\" width=\"150\">\r\n                      <template slot-scope=\"scope\">\r\n                        <el-input-number v-model=\"scope.row.quantity\"  @input.native=\"goodsQuantityInput($event, scope.row)\" @change=\"goodsQuantityChange(scope.row)\" :min=\"0\" label=\"选择的数量\" size=\"mini\" :class=\"{'txt-red' : scope.row.availableQuantity < scope.row.quantity}\"></el-input-number>\r\n                      </template>\r\n                    </el-table-column>\r\n                  </el-table>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"code\" label=\"商品款号\"  width=\"200\"></el-table-column>\r\n              <el-table-column prop=\"name\" label=\"名称\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n              <el-table-column label=\"商品图片\">\r\n                <template slot-scope=\"scope\">\r\n                  <image-popover :img-src=\"scope.row.image\"></image-popover>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column label=\"颜色\"></el-table-column>\r\n              <el-table-column label=\"规格\"></el-table-column>\r\n              <el-table-column prop=\"brandName\" label=\"品牌\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n              <el-table-column prop=\"fullCateName\" label=\"品类\" :show-overflow-tooltip=\"true\"></el-table-column>\r\n              <el-table-column prop=\"defaultPrice\" label=\"吊牌价\"></el-table-column>\r\n              <el-table-column prop=\"purchasePrice\" label=\"结算价\"></el-table-column>\r\n              <el-table-column prop=\"stock\" label=\"库存量\"></el-table-column>\r\n              <el-table-column label=\"操作\" width=\"150\">\r\n\r\n              </el-table-column>\r\n            </el-table>\r\n          </page-table>\r\n        </div>\r\n      </div>\r\n      <!--选中的商品-->\r\n      <div class=\"check-goods-list\" v-if=\"checkedGoodsShow\">\r\n        <transfer-slip-goods-table :checked-goods-show.sync=\"checkedGoodsShow\" :table-data=\"checkedSKUTableData\" :transfer-slip-add-info=\"transferSlipAddInfo\" ref=\"transferSlipGoodsTable\"></transfer-slip-goods-table>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n<script>\r\n  // TODO 临时解决上传文件\r\n  import division from \"@/components/division\";\r\n  import axios from 'axios'\r\n  import { getToken } from \"@/utils/auth\";\r\n  import PageTable from \"@/views/collocation/components/PageTable\";\r\n  import CheckTags from \"@/views/collocation/components/CheckTags\";\r\n  import StoreInfo from \"../components/sellStoreInfo\";\r\n  import TransferSlipGoodsTable from \"../components/sellTransferSlipGoodsTable\";\r\n  import ImagePopover from \"@/views/collocation/components/ImagePopover\";\r\n  export default {\r\n    // 组件\r\n    components: {\r\n      division,\r\n      PageTable,\r\n      TransferSlipGoodsTable,\r\n      CheckTags,\r\n      StoreInfo,\r\n      ImagePopover\r\n    },\r\n    // 数据\r\n    data() {\r\n      return {\r\n        // 销售单id\r\n        id:this.$route.query.id,\r\n        // 弹出框是否显示\r\n        dialogTableVisible:false,\r\n        // form提交参数\r\n        addFormData: {\r\n          // 发货人\r\n          allotMan: '',\r\n          // 发货人直属机构\r\n          organizationId: '',\r\n          organizationName: '',\r\n          // 订单类型\r\n          // orderType: '0203',\r\n          // 发货门店\r\n          outStoreId: '',\r\n          outStoreName: '',\r\n          // 收货门店\r\n          inStoreId: '',\r\n          inStoreName: '',\r\n          // 收货人\r\n          receiveMan: '',\r\n          // 电话\r\n          phone: '',\r\n          // 省市区信息\r\n          provinceName: '',\r\n          provinceCode: '',\r\n          cityName: '',\r\n          cityCode: '',\r\n          areaName: '',\r\n          areaCode: '',\r\n          divisionId: '',\r\n          // 地址\r\n          addressInfo: ''\r\n        },\r\n        // 路由参数\r\n        _orderSn: null,\r\n        _outStoreId: null,\r\n\r\n        // 默认显示门店信息 outStoreInfo: 发货门店     inStoreInfo: 收货门店\r\n        activeName: 'outStoreInfo',\r\n        // 发货门店详情\r\n        outStoreInfo: null,\r\n        // 收货门店详情\r\n        inStoreInfo: null,\r\n        // 导入商品地址\r\n        uploadGoodsUrl: this.api.FN_ALLPATH(this.api.retailStore.storeProduct_importOrderItem),\r\n        // 导入是否可点\r\n        uploadGoodsDisabled: false,\r\n        // 导入附带参数\r\n        uploadGoodsParams: {\r\n          storeId: ''\r\n        },\r\n        // 最终保存提交信息\r\n        transferSlipAddInfo: {\r\n          purchaseOrderStatus:null,\r\n          addressInfo:null,\r\n          allotMan:null,\r\n          areaCode:null,\r\n          areaName:null,\r\n          cityCode:null,\r\n          cityName:null,\r\n          divisionId:null,\r\n          inStoreId:null,\r\n          inStoreName:null,\r\n          organizationId:null,\r\n          organizationName:null,\r\n          outStoreId:null,\r\n          outStoreName:null,\r\n          phone:null,\r\n          provinceCode:null,\r\n          provinceName:null,\r\n          receiveMan:null,\r\n        },\r\n        // 选择的商品列表\r\n        checkedSKUTableData: [],\r\n\r\n        // 是否显示选中的\r\n        checkedGoodsShow: false,\r\n        // 查询商品参数\r\n        formData: {\r\n          // 所属门店\r\n          storeId: '',\r\n          // 商品分类\r\n          cateIdentifier: '',\r\n          // 价格筛选\r\n          retailPriceLowerLimit: '',\r\n          retailPriceUpperLimit: '',\r\n          // 库存量\r\n          quantityLowerLimit: '',\r\n          quantityUpperLimit: '',\r\n          // 设计商\r\n          designCompanyId: '',\r\n          // 品牌\r\n          brandId: '',\r\n          // 综合搜索\r\n          searchWords: '',\r\n          // 标签\r\n          collocationTagIdList: [],\r\n          // 当前页码\r\n          pageIndex: 1,\r\n          // 每页数量\r\n          pageSize: 10\r\n        },\r\n        // 商品主表格数据\r\n        tableData: {},\r\n        // 表格展开行\r\n        expandRowIds: [],\r\n\r\n        /**\r\n         * 商品查询辅助数据\r\n         */\r\n        // 验证\r\n        rules: {\r\n          money: [\r\n            { required: false, validator: this.moneyRule, trigger: 'blur'}\r\n          ],\r\n          count: [\r\n            { required: false, validator: this.countRule, trigger: 'blur'}\r\n          ]\r\n        },\r\n        // 分类映射\r\n        props:{\r\n          value: 'id',\r\n          label: 'name',\r\n          children: 'children'\r\n        },\r\n        // 分类数据\r\n        classData:[],\r\n        classList:[],\r\n        // 选中的分类\r\n        cateArr:[],\r\n        // 品牌\r\n        brandOptions:[],\r\n        // 设计商\r\n        designCompanyOptions:[]\r\n        /**\r\n         * 商品查询辅助数据--end\r\n         */\r\n      }\r\n    },\r\n    created(){\r\n      \r\n    },\r\n    // 初始化数据\r\n    mounted() {\r\n      this.$route.meta.title = this.$route.query.id ? '编辑销售订单' : '新增销售订单';\r\n      // 获取上页面缓存的门店信息\r\n      let transferSlipAddInfo = sessionStorage.getItem('TRANSFER_SLIP_APP_INFO');\r\n      if(transferSlipAddInfo){\r\n        this.transferSlipAddInfo = JSON.parse(transferSlipAddInfo);\r\n        this.formData.storeId = this.transferSlipAddInfo.outStoreId;\r\n        this.uploadGoodsParams.storeId = this.transferSlipAddInfo.outStoreId;\r\n        this.init();\r\n      }else{\r\n        this.purchaseOrder_getModifyDTOByOrderId();\r\n      }\r\n    },\r\n    // 方法\r\n    methods: {\r\n      /**\r\n       * 获取进货单详情DTO\r\n       */\r\n      purchaseOrder_getModifyDTOByOrderId() {\r\n        const that = this;\r\n        this.request(\r\n          this.api.scb.purchaseOrder_getModifyDTOByOrderId,\r\n          {\r\n            orderId:this.id\r\n          }\r\n        ).then(res => {\r\n          let info = res.purchaseOrderDTO;\r\n          Object.assign(this.transferSlipAddInfo, {\r\n            purchaseOrderStatus:info.purchaseOrderStatus,\r\n            addressInfo:info.addressInfo,\r\n            allotMan:info.allotMan,\r\n            areaCode:info.areaCode,\r\n            areaName:info.areaName,\r\n            cityCode:info.cityCode,\r\n            cityName:info.cityName,\r\n            divisionId:info.divisionId,\r\n            inStoreId:info.purchaseAgentId,\r\n            inStoreName:info.purchaseAgentName,\r\n            organizationId:info.organizationId,\r\n            organizationName:info.organizationName,\r\n            outStoreId:info.purchaseAgentId,\r\n            outStoreName:info.purchaseAgentName,\r\n            phone:info.phone,\r\n            provinceCode:info.provinceCode,\r\n            provinceName:info.provinceName,\r\n            receiveMan:info.receiveMan,\r\n          });\r\n          this.formData.storeId = info.purchaseAgentId;\r\n          this.uploadGoodsParams.storeId = info.purchaseAgentId;\r\n          this.checkedSKUTableData = res.purchaseOrderProductDTOS;\r\n          this.init();\r\n          res.purchaseOrderProductDTOS.forEach((item, index) => {\r\n            item.quantity = item.skuQuantity;\r\n            item.retailPrice = item.price;\r\n            item.code = item.goodsCode;\r\n          });\r\n          this.checkedGoodsShow = true;\r\n        });\r\n      },\r\n      /**\r\n       * 获取返货单已选商品列表（为了获取调入结算单价）\r\n       */\r\n      settleQuery_findSettle(){\r\n        const that = this;\r\n        const data = {\r\n          \"infoVOList\": this.checkedSKUTableData,\r\n          \"sourceMerchantId\": this.transferSlipAddInfo.inStoreId,\r\n          \"targetMerchantId\": this.transferSlipAddInfo.outStoreId\r\n        };\r\n        this.checkedGoodsShow = true;\r\n      },\r\n      /**\r\n       * 修改收货地址\r\n       */\r\n      changeAddress() {\r\n        Object.assign(this.outStoreInfo,this.transferSlipAddInfo);\r\n        this.outStoreInfo.linkman = this.transferSlipAddInfo.receiveMan;\r\n        this.dialogTableVisible = false;\r\n      },\r\n      // 获取省市信息\r\n      setDivision(division){\r\n        this.transferSlipAddInfo.provinceName =  division.province;\r\n        this.transferSlipAddInfo.provinceCode =  division.provinceCode;\r\n        this.transferSlipAddInfo.cityName =  division.municipality;\r\n        this.transferSlipAddInfo.cityCode =  division.municipalityCode;\r\n        this.transferSlipAddInfo.areaName =  division.area;\r\n        this.transferSlipAddInfo.areaCode =  division.areaCode;\r\n        this.transferSlipAddInfo.divisionId =  division.divisionId;\r\n      },\r\n      // 初始化\r\n      init(){\r\n        // 获取上页面参数\r\n        this.getQueryParams();\r\n        // 获取发货门店详情\r\n        this.getStoreInfo(this.transferSlipAddInfo.outStoreId, 'outStoreInfo');\r\n        // 获取设计商列表\r\n        this.getDesignCompanyOptions();\r\n        // 获取品牌列表\r\n        this.getBrandOptions();\r\n        // 获取商品分类列表\r\n        this.getClassData();\r\n        // 获取表格数据\r\n        this.getTableData();\r\n      },\r\n      // 获取上页面参数\r\n      getQueryParams() {\r\n        this._orderSn = this.$route.query.id;\r\n        this._outStoreId = this.$route.query.outStoreId;\r\n        // if(this._orderSn && this._outStoreId){\r\n        //   this.getStoreAllotOrderProductInfoList(this._orderSn, this._outStoreId)\r\n        // }\r\n      },\r\n      // 获取商品详情\r\n      getStoreAllotOrderProductInfoList(orderSn, outStoreId){\r\n        this.request(this.api.order.storeAllotOrderProductInfo_list, {orderSn ,outStoreId}).then(data => {\r\n          this.checkedSKUTableData = data.data;\r\n        });\r\n      },\r\n      /**\r\n       * 获取门店详情\r\n       * @param id {String} 门店id\r\n       * @param type {String} outStoreInfo: 发货门店 inStoreInfo: 收货门店\r\n       */\r\n      getStoreInfo(id, type){\r\n        if(!this[type]){\r\n          this.request(this.api.retailStore.storeBasic_get, {id: id}).then(data => {\r\n            this[type] = data;\r\n          });\r\n        }\r\n      },\r\n      /**\r\n       * 导入商品\r\n       * @param file 上传的文件\r\n       */\r\n      uploadGoodsChange(file){\r\n        // 判断类型\r\n        if (!(/((.xlsx)|(.xls))$/.test(file.name))) {\r\n          this.$message.error('文件格式只能是 xlsx | xls格式!');\r\n          return false\r\n        }\r\n        let formData = new FormData();\r\n        let token = getToken();\r\n        formData.set('file', file.raw );\r\n        formData.set('merchantId', '');\r\n        formData.set('purchaseAgentId', this.transferSlipAddInfo.outStoreId);\r\n        axios({\r\n          method: \"POST\",\r\n          url: this.api.FN_ALLPATH(this.api.scb.purchaseOrder_importProductItem),\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n            accessToken: token\r\n          },\r\n          data: formData\r\n        }).then(res => {\r\n          let data = res.data;\r\n          // 合并导入的数据和已选择的数据\r\n          if(data.code && data.code == 200){\r\n            let goodsData = data.data;\r\n              goodsData.forEach((item, index) => {\r\n              item.modifyPrice = item.purchasePrice;\r\n              item.code = item.goodsCode;\r\n              item.availableQuantity = item.stockQty;\r\n            });\r\n            if(goodsData && goodsData.length > 0){\r\n              for(let n = 0; n < goodsData.length; n++){\r\n                let goodsIndex = this.checkedSKUTableData.findIndex(item => {\r\n                  return item.goodsCode === goodsData[n].goodsCode\r\n                });\r\n                if(goodsIndex !== -1){\r\n                  this.checkedSKUTableData[goodsIndex].quantity = goodsData[n].quantity;\r\n                }else {\r\n                  goodsData[n].allotPrice = goodsData[n].retailPrice;\r\n                  this.checkedSKUTableData.push(goodsData[n])\r\n                }\r\n              }\r\n            }\r\n            this.checkedGoodsShow = true;\r\n            this.$nextTick(() => {\r\n              this.$refs.transferSlipGoodsTable.init();\r\n            })\r\n          }else {\r\n            this.$notify.error({ title: '错误',message: data.message});\r\n          }\r\n        })\r\n\r\n      },\r\n      /**\r\n       * 左侧门店类型切换\r\n       * @param activeName {String} 选择的门店类型名称\r\n       */\r\n      handleBeforeClick(activeName) {\r\n        this.getStoreInfo(this.transferSlipAddInfo.outStoreId, activeName);\r\n      },\r\n      // 点击搜索\r\n      searchTableData(){\r\n        // 置空展开行\r\n        this.expandRowIds = [];\r\n        this.formData.pageIndex = 1;\r\n        this.getTableData();\r\n      },\r\n      /**\r\n       * 重置查询条件\r\n       * @param formName {String} 表单的节点ref的值\r\n       */\r\n      initFormData(formName){\r\n        this.$refs[formName].resetFields();\r\n        this.cateArr = [];\r\n        this.formData.cateIdentifier = '';\r\n        this.formData.retailPriceLowerLimit = '';\r\n        this.formData.retailPriceUpperLimit = '';\r\n        this.formData.quantityLowerLimit = '';\r\n        this.formData.quantityUpperLimit = '';\r\n      },\r\n      // 获取spu商品数据\r\n      getTableData() {\r\n        this.$nextTick(() => {\r\n          setTimeout(()=> {\r\n            this.$refs.searchForm.validate((valid) => {\r\n              if (valid) {\r\n                let params = JSON.parse(JSON.stringify(this.formData));\r\n                if(params.collocationTagIdList.length === 0){\r\n                  params.collocationTagIdList = null\r\n                }\r\n                this.request(this.api.scb.purchaseOrder_allocateCargoProductList, params).then(data => {\r\n                  if(data.data && data.data.length){\r\n                    data.data.forEach(item => {\r\n                      item._skuList = [];\r\n                    });\r\n                    this.tableData = data;\r\n                  }else {\r\n                    this.tableData = {};\r\n                  }\r\n                });\r\n              } else {\r\n                return false;\r\n              }\r\n            });\r\n          },0)\r\n        })\r\n      },\r\n      /**\r\n       * 点击左侧三角 获取sku商品\r\n       * @param row {Object} 表格行数据\r\n       * @param expandedRows {Array} 表格行数据\r\n       */\r\n      tableDataExpandChange(row, expandedRows){\r\n        if(row._skuList.length) return;\r\n        let params = {\r\n          productCode: row.code,\r\n          purchaseAgentId: this.transferSlipAddInfo.outStoreId\r\n        };\r\n        this.request(this.api.scb.purchaseOrder_allocateCargoProductGoodsList, params).then(data => {\r\n          if(data && data.length){\r\n            data.forEach(item => {\r\n              // 新增提交需要的字段\r\n              item.quantity = 0;\r\n              item.designCompanyCode = row.designCompanyCode;\r\n              item.designCompanyName = row.designCompanyName;\r\n              // 由于导入商品字段和查询字段不同  重新赋值\r\n              item.allotPrice = item.retailPrice;\r\n              item.stockQty = item.stock;\r\n              item.productType = item.fullCateName;\r\n              item.goodsName = item.name;\r\n              item.modifyPrice = item.purchasePrice;\r\n              item.brandName = item.productBrandName;\r\n              item.brandCode = item.productBrandCode;\r\n              if(this.checkedSKUTableData.length > 0){\r\n                for(let i = 0; i < this.checkedSKUTableData.length; i++){\r\n                  if(this.checkedSKUTableData[i].code === item.code){\r\n                    item.quantity = this.checkedSKUTableData[i].quantity;\r\n                  }\r\n                }\r\n              }\r\n            });\r\n            row._skuList = data;\r\n          }\r\n        });\r\n      },\r\n      /**\r\n       * 输入修改商品数量\r\n       * @param $event {Object} event\r\n       * @param row {Object} 表格行数据\r\n       */\r\n      goodsQuantityInput($event, row){\r\n        this.$nextTick(()=>{\r\n          let val = $event.target.value;\r\n          row.planBackQuantity = $event.target.value = val.replace(/[^\\d.]/g,'');\r\n          this.goodsQuantityChange(row);\r\n        })\r\n      },\r\n      /**\r\n       * + -修改商品数量\r\n       * @param row {Object} 表格行数据\r\n       */\r\n      goodsQuantityChange(row){\r\n        let index = this.checkedSKUTableData.findIndex(item => {\r\n          return item.code === row.code;\r\n        });\r\n        if(index !== -1){\r\n          if(row.quantity == 0){\r\n            this.checkedSKUTableData.splice(index, 1);\r\n          }else{\r\n            this.checkedSKUTableData[index].quantity = row.quantity;\r\n          }\r\n        }else {\r\n          this.checkedSKUTableData.push(row);\r\n        }\r\n      },\r\n\r\n\r\n      /**\r\n       * 搜索商品参数下拉数据及验证\r\n       */\r\n      // 验证价格区间\r\n      moneyRule(rule, value,callback) {\r\n        const reg = /^[0-9]*$/;\r\n        if(!reg.test(this.formData.retailPriceLowerLimit) || !reg.test(this.formData.retailPriceUpperLimit)){\r\n          callback(new Error('价格区间必须是数字'));\r\n          return\r\n        }\r\n        if(this.formData.retailPriceLowerLimit && this.formData.retailPriceUpperLimit && this.formData.retailPriceLowerLimit >= this.formData.retailPriceUpperLimit){\r\n          callback(new Error('价格区间下限应小于上限'));\r\n        }else {\r\n          callback();\r\n        }\r\n      },\r\n      // 验证数量区间\r\n      countRule(rule, value,callback) {\r\n        const reg = /^[0-9]*$/;\r\n        if(!reg.test(this.formData.quantityLowerLimit) || !reg.test(this.formData.quantityUpperLimit)){\r\n          callback(new Error('库存量区间必须是数字'));\r\n          return\r\n        }\r\n        if(this.formData.quantityLowerLimit && this.formData.quantityUpperLimit && this.formData.quantityLowerLimit >= this.formData.quantityUpperLimit){\r\n          callback(new Error('库存量区间下限应小于上限'));\r\n        }else {\r\n          callback();\r\n        }\r\n      },\r\n      // 获取商品分类数据\r\n      getClassData(){\r\n        //分类类型（1：标准分类，2：定制分类，3：原料分类或者称为属性分类）\r\n        this.$common.getClassSelect(this,1).then(res =>{\r\n          this.classData=res.ztree;\r\n          this.classList=res.list;\r\n        })\r\n      },\r\n      // 商品分类Change\r\n      classChange(e){\r\n        if(e.length === 0){\r\n          this.formData.cateIdentifier = '';\r\n          return;\r\n        }\r\n        let cateId  = JSON.parse(JSON.stringify(e)).pop();\r\n        let obj = this.classList.find((item)=>(item.id == cateId));\r\n        this.formData.cateIdentifier = obj.identifier;\r\n      },\r\n      // 获取设计商\r\n      getDesignCompanyOptions(){\r\n        this.request(this.api.product.designCompany_list, {}).then(data => {\r\n          this.designCompanyOptions=data.data;\r\n        });\r\n      },\r\n      // 获取品牌\r\n      getBrandOptions(){\r\n        this.request(this.api.product.productBrand_list,{}).then(data => {\r\n          this.brandOptions= data.data;\r\n        });\r\n      }\r\n      /**\r\n       * 搜索商品参数下拉数据--end\r\n       */\r\n    },\r\n    // 计算属性\r\n    computed: {},\r\n    // 监听数据变化\r\n    watch: {}\r\n  }\r\n</script>\r\n"]}]}