{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\scb\\goods\\goods_list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\scb\\goods\\goods_list.vue","mtime":1576824875497},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      onSaleStatusList:{\r\n        'ONSALE':'上架',\r\n        'OFFSALE':'下架'\r\n      },\r\n      categories_getPullDownCategoriesList_data:[],// 创建分类所用-分类下拉（一二级）\r\n      // 季节列表\r\n      codeItem_list_get:[],\r\n      // 快速创建保留门店id\r\n      fastCreateStoreId:null,\r\n      // 快速创建剔除已有门店\r\n      fastCreateTF:true,\r\n      // 是否编辑\r\n      isEdit:this.$route.query.isEdit,\r\n      // 是否快速创建\r\n      isFastCreate:this.$route.query.isFastCreate,\r\n      // 单品商品信息是否存在\r\n      isGoods:false,\r\n      // 折扣id\r\n      discountId:this.$route.query.discountId,\r\n      // 弹框\r\n      dialogTableVisible:false,\r\n      // 全部商品\r\n      goodsList:{},\r\n      // 已添加\r\n      goodsCheckList:{},\r\n      // 检索全部商品\r\n      goodsFiltersData:{\r\n        // 当前页码\r\n        pageIndex: 1,\r\n        // 每页数量\r\n        pageSize: 10,\r\n        // 品类id\r\n        cateIdentifier:null,\r\n        // 品牌id\r\n        brandId:null,\r\n        // 售价最小值\r\n        retailPriceLowerLimit:null, \r\n        // 售价最大值\r\n        retailPriceUpperLimit:null, \r\n        // 库存最小值\r\n        quantityLowerLimit:null, \r\n        // 库存最大值\r\n        quantityUpperLimit:null, \r\n        // 季节\r\n        seasonalStyleCode:null,\r\n        // 关键词\r\n        searchWords:null \r\n      },\r\n      // 全部品牌\r\n      brandOptions:[],\r\n      // 检索已选商品\r\n      goodsFiltersDataCheck:{\r\n        // 当前页码\r\n        pageIndex: 1,\r\n        // 每页数量\r\n        pageSize: 10,\r\n        // 分类id\r\n        scbCateId:null,\r\n        // 品类id\r\n        cateIdentifier:null,\r\n        // 售价最小值\r\n        retailPriceLowerLimit:null, \r\n        // 售价最大值\r\n        retailPriceUpperLimit:null, \r\n        // 品牌id\r\n        brandId:null,\r\n        // 上下架状态\r\n        onSaleStatus:null,\r\n        // 库存最小值\r\n        quantityLowerLimit:null, \r\n        // 库存最大值\r\n        quantityUpperLimit:null, \r\n        // 季节\r\n        seasonalStyleCode:null,\r\n        // 关键词 \r\n        searchWords:null \r\n      },\r\n      // 单品折扣列表\r\n      itemDiscountData:{\r\n        data:[]\r\n      },\r\n      // 门店列表\r\n      storeList:{},\r\n      classData: [],\r\n      classList: [],\r\n      cateArr: [],\r\n      cateArrs: [],\r\n      props: {\r\n        value: \"id\",\r\n        label: \"name\",\r\n        children: \"children\"\r\n      },\r\n      // 检索\r\n      filtersData: {\r\n        pageIndex: 1, // 当前页码\r\n        pageSize: 10, // 每页数量\r\n        \"orderBy\": \"\",\r\n      },\r\n      // 商品列表\r\n      merchantProduct_scbServiceList_data:{}\r\n    };\r\n  },\r\n  created() {\r\n    var that = this;\r\n    this.getClassData(); // 获取商品\r\n    this.codeItem_list(); // 获取季节列表\r\n    this.getStoreList(); // 获取门店列表\r\n    this.getBrandOptions(); // 获取品牌\r\n    this.merchantProduct_scbServiceList();// 获取商品列表\r\n    if(this.$route.query.id) {\r\n      Object.assign(this.goodsFiltersDataCheck, {\r\n        scbCateId:this.$route.query.id\r\n      })\r\n    };\r\n    document.onkeydown = function(e) {\r\n         var key = window.event.keyCode;\r\n         if (key == 13) {\r\n            if(that.dialogTableVisible) {\r\n              that.handleSearch();\r\n            }else{\r\n              that.handleSearchCheck();\r\n            }\r\n         }\r\n      };\r\n  },\r\n  mounted() {\r\n    this.$nextTick(()=>{\r\n      this.marketingMiddleground_listProduct();// 查询全部商品\r\n      this.categories_getPullDownCategoriesList();// 获取分类所用-分类下拉（一二级）\r\n    })\r\n  },\r\n  methods: {\r\n    /**\r\n     * 获取分类所用-分类下拉（一二级）\r\n     */\r\n    categories_getPullDownCategoriesList() {\r\n      const that = this;\r\n\r\n      this.request(\r\n        this.api.scb.categories_getPullDownCategoriesList,\r\n        {\r\n          \"merchantId\": \"\"\r\n        },\r\n        true\r\n      ).then(res => {\r\n        that.categories_getPullDownCategoriesList_data = res;\r\n      });\r\n    },\r\n    /**\r\n     * 修改（跳转到商品详情）\r\n     */\r\n    hrefDetails(obj) {\r\n      this.href('scb/goods/goods_details', {\r\n        \"merchantId\": obj.id,\r\n        \"productCode\": obj.code\r\n      });\r\n    },\r\n    /**\r\n     * （获取商品列表）\r\n     */\r\n    merchantProduct_scbServiceList() {\r\n      const that = this;\r\n      \r\n      this.request(\r\n        this.api.scb.merchantProduct_scbServiceList,\r\n        this.goodsFiltersDataCheck,\r\n        true\r\n      ).then(res => {\r\n        this.merchantProduct_scbServiceList_data = res;\r\n        res.data.forEach((item, index) => {\r\n          // item.productCateNameList = ['分类1','分类2','分类3','分类4'];\r\n          item._productCateNameList = item.productCateNameList.join('、');  \r\n        });\r\n      });\r\n    },\r\n    /**\r\n     * （获取季节）\r\n     */\r\n    codeItem_list(item) {\r\n      const that = this;\r\n\r\n      this.request(\r\n        this.api.market.codeItem_list,\r\n        {\r\n          codeSetId:'06b11574-ef82-4ae4-a8a9-a25f903083df'\r\n        },\r\n        true\r\n      ).then(res => {\r\n        that.codeItem_list_get = res;\r\n      });\r\n    },\r\n    /**\r\n     * 获取品牌\r\n     */\r\n    getBrandOptions() {\r\n      this.request(\r\n        this.api.product.productBrand_list,\r\n        {},\r\n        true\r\n        ).then(data => {\r\n          let _data = data.data;\r\n          this.brandOptions = _data;\r\n      });\r\n    },\r\n    /**\r\n     * 获取分类\r\n     */\r\n    getClassData() {\r\n      //分类类型（1：标准分类，2：定制分类，3：原料分类或者称为属性分类）\r\n      this.$common.getClassSelect(this, 1).then(res => {\r\n        this.classData = res.ztree;\r\n        this.classList = res.list;\r\n      });\r\n    },\r\n    /**\r\n     * \r\n     */\r\n    cascaderGet(e) {\r\n      let cateId = JSON.parse(JSON.stringify(e)).pop();\r\n      let obj = this.classList.find(item => item.id == cateId);\r\n      this.goodsFiltersData.cateIdentifier = obj.identifier;\r\n    },\r\n    /**\r\n     * \r\n     */\r\n    cascaderGets(e) {\r\n      let cateId = JSON.parse(JSON.stringify(e)).pop();\r\n      let obj = this.classList.find(item => item.id == cateId);\r\n      this.goodsFiltersDataCheck.cateIdentifier = obj.identifier;\r\n    },\r\n    /**\r\n     * （单品全部添加）\r\n     */\r\n    marketingMiddleground_addPageSingleProduct() {\r\n      const that = this;\r\n      const producCodeList = [];\r\n      this.goodsList.data.forEach((item, index) => {\r\n        if(item.currentMerchant === 0 || item.currentMerchant === null) {\r\n          producCodeList.push(item.code);\r\n        }\r\n      });\r\n      this.request(\r\n        this.api.scb.merchantProduct_addPageProductToMerchant,\r\n        {\r\n          producCodeList\r\n        },\r\n        true\r\n      ).then(res => {\r\n        this.warn('本页全部商品添加成功！');\r\n        that.marketingMiddleground_listProduct();\r\n        this.merchantProduct_scbServiceList();\r\n      });\r\n    },\r\n    /**\r\n     * （添加商品）\r\n     */\r\n    merchantProduct_addProductToMerchant(item) {\r\n      const that = this;\r\n      const discountData = this.discountData;\r\n\r\n      this.request(\r\n        this.api.scb.merchantProduct_addProductToMerchant,\r\n        {\r\n          productCode:item.code\r\n        },\r\n        true\r\n      ).then(res => {\r\n        this.warn('商品添加成功！');\r\n        that.marketingMiddleground_listProduct();\r\n        this.merchantProduct_scbServiceList();\r\n      });\r\n    },\r\n    /**\r\n     * （上下架）\r\n     */\r\n    merchantProduct_onSaleOrOffSaleSPU(item) {\r\n      const that = this;\r\n      const text = item.onSaleStatus == 'ONSALE' ? '下架后客户无法下单，是否继续？' : '确定上架吗？';\r\n      this.$confirm(text, '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.request(\r\n          this.api.scb.merchantProduct_onSaleOrOffSaleSPU,\r\n          {\r\n            \"merchantId\": item.id,\r\n            \"productCode\": item.code\r\n          },\r\n          true\r\n        ).then(res => {\r\n          this.merchantProduct_scbServiceList();\r\n          this.warn('操作成功！');\r\n        });\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消'\r\n        });          \r\n      });\r\n    },\r\n    /**\r\n     * （单品从列表内剔除）\r\n     */\r\n    merchantProduct_deleteProductFromMerchant(item) {\r\n      const that = this;\r\n      const discountData = this.discountData;\r\n      this.$confirm('剔除后该商品在商城不可见，是否继续？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.request(\r\n          this.api.scb.merchantProduct_deleteProductFromMerchant,\r\n          {\r\n            productCode:item.code\r\n          },\r\n          true\r\n        ).then(res => {\r\n          this.warn('剔除成功！');\r\n          that.marketingMiddleground_listProduct();\r\n          this.merchantProduct_scbServiceList();\r\n        });\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消'\r\n        });          \r\n      });\r\n    },\r\n    /**\r\n     * （全部商品）\r\n     */\r\n    marketingMiddleground_listProduct() {\r\n      const that = this;\r\n      // const discountData = this.discountData;\r\n\r\n      // Object.assign(this.goodsFiltersData, {\r\n      //   storeId:discountData.storeId,\r\n      //   type:discountData.itemDiscountType,\r\n      //   discount:discountData.itemDiscountEd\r\n      // }); \r\n      this.request(\r\n        this.api.scb.merchantProduct_productServiceList,\r\n        this.goodsFiltersData,\r\n        true\r\n      ).then(res => {\r\n        that.goodsList = res;\r\n      });\r\n    },\r\n    /**\r\n     * 查询门店列表\r\n     */\r\n    getStoreList() {\r\n        const that = this;\r\n\r\n        this.request(\r\n        that.api.store.storeBasic_list,\r\n        {\r\n          pricingPower:0\r\n        },\r\n        true\r\n        ).then(res => {\r\n          that.storeList = res;\r\n        });\r\n    },\r\n    /**\r\n     * 提示\r\n     * @param { String } message 提示文案\r\n     * @param { String } type 提示类型\r\n     */\r\n    warn(message, type) {\r\n      this.$message({\r\n        message: message,\r\n        type: type || 'success'\r\n      });\r\n    },\r\n    /**\r\n     * 跳转\r\n     * @param { String } routeName 路由跳转名字\r\n     */\r\n    href(routeName, param) {\r\n      this.$router.push({\r\n        path: `/${routeName}`,\r\n        query:param\r\n      });\r\n    },\r\n    /**\r\n     *  选择每页多少条数（全部）\r\n     *  @param { Number } pageSize 每页条数\r\n     */\r\n    handleSizeChange(pageSize){\r\n        this.goodsFiltersData.pageSize = pageSize;  \r\n        this.marketingMiddleground_listProduct();\r\n    },\r\n     /**\r\n     * 点击页数（全部）\r\n     * @param { Number } pageIndex 当前页\r\n     */\r\n    handleCurrentChange(pageIndex){\r\n        this.goodsFiltersData.pageIndex = pageIndex;\r\n        this.marketingMiddleground_listProduct();\r\n    },\r\n   /**\r\n     * 模糊搜索（全部）\r\n     */\r\n    handleSearch() {\r\n        this.goodsFiltersData.pageIndex = 1;\r\n        this.marketingMiddleground_listProduct();\r\n    },\r\n    /**\r\n     * 搜索重置（全部）\r\n     */\r\n    handleResetFilters() {\r\n      Object.assign(this.goodsFiltersData,{\r\n        // 当前页码\r\n        pageIndex: 1,\r\n        // 每页数量\r\n        pageSize: 10,\r\n        // 品类id\r\n        cateIdentifier:null,\r\n        // 品牌id\r\n        brandId:null,\r\n        // 售价最小值\r\n        retailPriceLowerLimit:null, \r\n        // 售价最大值\r\n        retailPriceUpperLimit:null, \r\n        // 库存最小值\r\n        quantityLowerLimit:null, \r\n        // 库存最大值\r\n        quantityUpperLimit:null, \r\n        // 季节\r\n        seasonalStyleCode:null,\r\n        // 关键词\r\n        searchWords:null \r\n      });\r\n      this.cateArr = [];\r\n    },\r\n\r\n    /** ---------------\r\n     * 点击页数（已添加）\r\n     * @param { Number } pageIndex 当前页\r\n     */\r\n    handleCurrentChangeCheck(pageIndex){\r\n      this.goodsFiltersDataCheck.pageIndex = pageIndex;\r\n      this.merchantProduct_scbServiceList();\r\n    },\r\n    /**\r\n     *  选择每页多少条数（已添加）\r\n     *  @param { Number } pageSize 每页条数\r\n     */\r\n    handleSizeChangeCheck(pageSize){\r\n      this.goodsFiltersDataCheck.pageSize = pageSize;  \r\n      this.merchantProduct_scbServiceList();\r\n    },\r\n     /**\r\n     * 模糊搜索（已添加）\r\n     */\r\n    handleSearchCheck() {\r\n        this.goodsFiltersDataCheck.pageIndex = 1;\r\n        this.merchantProduct_scbServiceList();\r\n    },\r\n    /**\r\n     * 搜索重置（已添加）\r\n     */\r\n    handleResetFiltersCheck() {\r\n      Object.assign(this.goodsFiltersDataCheck,{\r\n        // 当前页码\r\n        pageIndex: 1,\r\n        // 每页数量\r\n        pageSize: 10,\r\n        // 分类id\r\n        scbCateId:null,\r\n        // 品类id\r\n        cateIdentifier:null,\r\n        // 售价最小值\r\n        retailPriceLowerLimit:null, \r\n        // 售价最大值\r\n        retailPriceUpperLimit:null, \r\n        // 品牌id\r\n        brandId:null,\r\n        // 上下架状态\r\n        onSaleStatus:null,\r\n        // 库存最小值\r\n        quantityLowerLimit:null, \r\n        // 库存最大值\r\n        quantityUpperLimit:null, \r\n        // 季节\r\n        seasonalStyleCode:null,\r\n        // 关键词 \r\n        searchWords:null \r\n      });\r\n      this.cateArrs = [];\r\n    },\r\n  },\r\n  components: {}\r\n};\r\n",{"version":3,"sources":["goods_list.vue"],"names":[],"mappingsfile":"goods_list.vue","sourceRoot":"src/views/scb/goods","sourcesContent":["<template>\r\n   <div>\r\n      <el-dialog title=\"选择商品\" :visible.sync=\"dialogTableVisible\">\r\n        <div>\r\n          <el-form\r\n            class=\"item-form\"\r\n            size=\"small\"\r\n            :inline=\"true\"\r\n            :model=\"goodsFiltersData\">\r\n            <!-- 模糊查询 -->\r\n            <el-form-item prop=\"cateIdentifier\" clearable label=\"品类：\">\r\n              <el-cascader\r\n                class=\"input-w\"\r\n                :options=\"classData\"\r\n                v-model=\"cateArr\"\r\n                :value=\"cateArr\"\r\n                @change=\"cascaderGet\"\r\n                :show-all-levels=\"false\"\r\n                :props=\"props\"\r\n                change-on-select\r\n              ></el-cascader>\r\n            </el-form-item>\r\n            <el-form-item label=\"品牌：\">\r\n              <el-select class=\"input-w\" filterable clearable placeholder=\"请选择\" v-model=\"goodsFiltersData.brandId\">\r\n                <el-option\r\n                  v-for=\"item in brandOptions\"\r\n                  :key=\"item.id\"\r\n                  :label=\"item.name\"\r\n                  :value=\"item.id\"\r\n                ></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"售价：\">\r\n              <el-input placeholder=\"请输入售价最小值\" clearable  v-model.number=\"goodsFiltersData.retailPriceLowerLimit\" class=\"el-input-width155\"></el-input>\r\n              <el-input placeholder=\"请输入售价最大值\" clearable  v-model.number=\"goodsFiltersData.retailPriceUpperLimit\" class=\"el-input-width155 ml-10\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"季节：\">\r\n              <el-select v-model=\"goodsFiltersData.seasonalStyleCode\" clearable placeholder=\"请选择\">\r\n                <el-option v-for=\"(item, index) in codeItem_list_get.data\" :key=\"index\" :label=\"item.name\" :value=\"item.code\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"关键词：\">\r\n              <el-input placeholder=\"请输入关键词，如：货号、款号、商品名称\" clearable  v-model=\"goodsFiltersData.searchWords\" class=\"el-input-width355\"></el-input>\r\n            </el-form-item>\r\n            <!-- 搜索，重置 -->\r\n            <el-form-item>\r\n              <el-button size=\"small\" @click=\"handleSearch\" type=\"primary\" plain>搜索</el-button>\r\n              <el-button size=\"small\" @click=\"handleResetFilters\">重置</el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n        </div>\r\n        <div>\r\n          <!-- 全部商品 -->\r\n          <div class=\"item-table\">\r\n            <el-button size=\"small\" type=\"primary\" class=\"ml-20 mt-24\" @click=\"marketingMiddleground_addPageSingleProduct\">本页全部添加</el-button>\r\n            <el-table\r\n                class=\"mt-20\"\r\n              :data=\"goodsList.data\"  \r\n              stripe\r\n              empty-text=\"暂无数据\"\r\n              header-align=\"center\"\r\n              header-row-class-name=\"item-table-header\"\r\n              :highlight-current-row=\"true\">\r\n              <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"商品款号\" min-width=\"100\">\r\n                <template  slot-scope=\"scope\">{{ scope.row.code|| '--' }}</template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"品牌\" min-width=\"100\">\r\n                <template  slot-scope=\"scope\">{{ scope.row.brandName || '--' }}</template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"品类\" min-width=\"100\">\r\n                <template  slot-scope=\"scope\">{{ scope.row.fullCateName || '--' }}</template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"商品名称\" min-width=\"100\">\r\n                <template  slot-scope=\"scope\">{{ scope.row.name || '--' }}</template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"商品图片\" min-width=\"100\">\r\n                <template  slot-scope=\"scope\"><img class=\"discountImg\" :src=\"scope.row.image\" alt=\"\"></template>\r\n              </el-table-column>\r\n              <!-- 操作 -->\r\n              <el-table-column\r\n                  fixed=\"right\"\r\n                  label-class-name=\"text-center\"\r\n                  class-name=\"text-center\"\r\n                  align=\"center\"\r\n                  label=\"操作\"\r\n                  width=\"180\">\r\n                  <template slot-scope=\"scope\">\r\n                    <el-button type=\"text\" v-if=\"scope.row.currentMerchant === 0 || scope.row.currentMerchant === null\" size=\"small\" @click=\"merchantProduct_addProductToMerchant(scope.row)\">添加</el-button>\r\n                    <el-button type=\"text\" v-if=\"scope.row.currentMerchant === 1\" size=\"small\" @click=\"merchantProduct_deleteProductFromMerchant(scope.row)\">从列表内剔除</el-button>\r\n                  </template>\r\n              </el-table-column>\r\n            </el-table>\r\n            <div class=\"pagination mt-10 mb-20\">\r\n              <!-- 分页 -->\r\n              <el-pagination\r\n                  class=\"mr-20\"\r\n                  @size-change=\"handleSizeChange\"\r\n                  @current-change=\"handleCurrentChange\"\r\n                  :current-page=\"goodsFiltersData.pageIndex\"\r\n                  :page-sizes=\"[10,20,30,40,50]\"\r\n                  :page-size=\"goodsFiltersData.pageSize\"\r\n                  layout=\"total, sizes, prev, pager, next, jumper\"\r\n                  :total=\"goodsList.totalCount\"\r\n              ></el-pagination>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </el-dialog>\r\n      <!--  -->\r\n      <div class=\"box\">\r\n        <el-form\r\n          class=\"item-form\"\r\n          size=\"small\"\r\n          :inline=\"true\"\r\n          :model=\"goodsFiltersDataCheck\">\r\n          <!-- 新增1 -->\r\n          <el-form-item label=\"所属分类：\" prop=\"name\">\r\n            <el-cascader ref=\"cascader\" v-model=\"goodsFiltersDataCheck.scbCateId\" :options=\"categories_getPullDownCategoriesList_data\" :props=\"{ checkStrictly: true, label: 'name', value: 'id', emitPath: false }\" clearable></el-cascader>\r\n          </el-form-item>\r\n          <!-- 新增1 -->\r\n          <el-form-item prop=\"cateIdentifier\" clearable label=\"品类：\">\r\n            <el-cascader\r\n              class=\"input-w\"\r\n              clearable\r\n              :options=\"classData\"\r\n              v-model=\"cateArrs\"\r\n              :value=\"cateArrs\"\r\n              @change=\"cascaderGets\"\r\n              :show-all-levels=\"false\"\r\n              :props=\"props\"\r\n              change-on-select\r\n            ></el-cascader>\r\n          </el-form-item>\r\n          <el-form-item label=\"售价：\">\r\n            <el-input placeholder=\"请输入售价最小值\" clearable  v-model=\"goodsFiltersDataCheck.retailPriceLowerLimit\" class=\"el-input-width155\"></el-input>\r\n            <el-input placeholder=\"请输入售价最大值\" clearable  v-model=\"goodsFiltersDataCheck.retailPriceUpperLimit\" class=\"el-input-width155 ml-10\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"品牌：\">\r\n            <el-select class=\"input-w\" filterable clearable placeholder=\"请选择\" v-model=\"goodsFiltersDataCheck.brandId\">\r\n              <el-option\r\n                v-for=\"item in brandOptions\"\r\n                :key=\"item.id\"\r\n                :label=\"item.name\"\r\n                :value=\"item.id\"\r\n              ></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"上下架：\">\r\n            <el-select v-model=\"goodsFiltersDataCheck.onSaleStatus\" clearable placeholder=\"请选择\">\r\n              <el-option v-for=\"(item, index) in onSaleStatusList\" :key=\"index\" :label=\"item\" :value=\"index\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"库存：\">\r\n            <el-input placeholder=\"请输入库存最小值\" clearable  v-model=\"goodsFiltersDataCheck.quantityLowerLimit\" class=\"el-input-width155\"></el-input>\r\n            <el-input placeholder=\"请输入库存最大值\" clearable  v-model=\"goodsFiltersDataCheck.quantityUpperLimit\" class=\"el-input-width155 ml-10\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"关键词：\">\r\n            <el-input placeholder=\"请输入关键词，如：货号、款号、商品名称\" clearable  v-model=\"goodsFiltersDataCheck.searchWords\" class=\"el-input-width355\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"季节：\">\r\n            <el-select v-model=\"goodsFiltersDataCheck.seasonalStyleCode\" clearable placeholder=\"请选择\">\r\n              <el-option v-for=\"(item, index) in codeItem_list_get.data\" :key=\"index\" :label=\"item.name\" :value=\"item.code\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <!-- 搜索，重置 -->\r\n          <el-form-item>\r\n            <el-button size=\"small\" @click=\"handleSearchCheck\" type=\"primary\" plain>搜索</el-button>\r\n            <el-button size=\"small\" @click=\"handleResetFiltersCheck\">重置</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n      <div class=\"box\">\r\n        <div class=\"item-table\">\r\n          <el-button size=\"small\" type=\"primary\" class=\"ml-20 mt-24\" @click=\"dialogTableVisible = true\">从商品中心导入商品</el-button>\r\n          <el-table\r\n              class=\"mt-20\"\r\n            :data=\"merchantProduct_scbServiceList_data.data\"\r\n            stripe\r\n            empty-text=\"暂无数据\"\r\n            header-align=\"center\"\r\n            header-row-class-name=\"item-table-header\"\r\n            :highlight-current-row=\"true\">\r\n            <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"商品款号\" min-width=\"100\">\r\n              <template  slot-scope=\"scope\">{{ scope.row.code|| '--' }}</template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"所属分类\" min-width=\"100\">\r\n              <template  slot-scope=\"scope\">{{ scope.row._productCateNameList|| '--' }}</template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"品牌\" min-width=\"100\">\r\n              <template  slot-scope=\"scope\">{{ scope.row.brandName || '--' }}</template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"品类\" min-width=\"100\">\r\n              <template  slot-scope=\"scope\">{{ scope.row.fullCateName || '--' }}</template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"商品名称\" min-width=\"100\">\r\n              <template  slot-scope=\"scope\">{{ scope.row.name || '--' }}</template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"\" align=\"center\" :show-overflow-tooltip=\"true\" label=\"商品图片\" min-width=\"100\">\r\n              <template  slot-scope=\"scope\"><img class=\"discountImg\" :src=\"scope.row.image\" alt=\"\"></template>\r\n            </el-table-column>\r\n            <!-- 操作 -->\r\n            <el-table-column\r\n                fixed=\"right\"\r\n                label-class-name=\"text-center\"\r\n                class-name=\"text-center\"\r\n                align=\"center\"\r\n                label=\"操作\"\r\n                width=\"180\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-button type=\"text\" size=\"small\" @click=\"hrefDetails(scope.row)\">修改</el-button>\r\n                  <el-button type=\"text\" size=\"small\" @click=\"merchantProduct_onSaleOrOffSaleSPU(scope.row)\">{{ scope.row.onSaleStatus == 'ONSALE' ? '下架' : '上架' }}</el-button>\r\n                  <el-button type=\"text\" size=\"small\" @click=\"merchantProduct_deleteProductFromMerchant(scope.row)\">剔除</el-button>\r\n                </template>\r\n            </el-table-column>\r\n          </el-table>\r\n          <div class=\"pagination mt-20 mb-20\">\r\n            <!-- 分页 -->\r\n            <el-pagination\r\n                class=\"mr-20\"\r\n                @size-change=\"handleSizeChangeCheck\"\r\n                @current-change=\"handleCurrentChangeCheck\"\r\n                :current-page=\"goodsFiltersDataCheck.pageIndex\"\r\n                :page-sizes=\"[10,20,30,40,50]\"\r\n                :page-size=\"goodsFiltersDataCheck.pageSize\"\r\n                layout=\"total, sizes, prev, pager, next, jumper\"\r\n                :total=\"merchantProduct_scbServiceList_data.totalCount\"\r\n            ></el-pagination>\r\n          </div>\r\n        </div>\r\n      </div>\r\n   </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      onSaleStatusList:{\r\n        'ONSALE':'上架',\r\n        'OFFSALE':'下架'\r\n      },\r\n      categories_getPullDownCategoriesList_data:[],// 创建分类所用-分类下拉（一二级）\r\n      // 季节列表\r\n      codeItem_list_get:[],\r\n      // 快速创建保留门店id\r\n      fastCreateStoreId:null,\r\n      // 快速创建剔除已有门店\r\n      fastCreateTF:true,\r\n      // 是否编辑\r\n      isEdit:this.$route.query.isEdit,\r\n      // 是否快速创建\r\n      isFastCreate:this.$route.query.isFastCreate,\r\n      // 单品商品信息是否存在\r\n      isGoods:false,\r\n      // 折扣id\r\n      discountId:this.$route.query.discountId,\r\n      // 弹框\r\n      dialogTableVisible:false,\r\n      // 全部商品\r\n      goodsList:{},\r\n      // 已添加\r\n      goodsCheckList:{},\r\n      // 检索全部商品\r\n      goodsFiltersData:{\r\n        // 当前页码\r\n        pageIndex: 1,\r\n        // 每页数量\r\n        pageSize: 10,\r\n        // 品类id\r\n        cateIdentifier:null,\r\n        // 品牌id\r\n        brandId:null,\r\n        // 售价最小值\r\n        retailPriceLowerLimit:null, \r\n        // 售价最大值\r\n        retailPriceUpperLimit:null, \r\n        // 库存最小值\r\n        quantityLowerLimit:null, \r\n        // 库存最大值\r\n        quantityUpperLimit:null, \r\n        // 季节\r\n        seasonalStyleCode:null,\r\n        // 关键词\r\n        searchWords:null \r\n      },\r\n      // 全部品牌\r\n      brandOptions:[],\r\n      // 检索已选商品\r\n      goodsFiltersDataCheck:{\r\n        // 当前页码\r\n        pageIndex: 1,\r\n        // 每页数量\r\n        pageSize: 10,\r\n        // 分类id\r\n        scbCateId:null,\r\n        // 品类id\r\n        cateIdentifier:null,\r\n        // 售价最小值\r\n        retailPriceLowerLimit:null, \r\n        // 售价最大值\r\n        retailPriceUpperLimit:null, \r\n        // 品牌id\r\n        brandId:null,\r\n        // 上下架状态\r\n        onSaleStatus:null,\r\n        // 库存最小值\r\n        quantityLowerLimit:null, \r\n        // 库存最大值\r\n        quantityUpperLimit:null, \r\n        // 季节\r\n        seasonalStyleCode:null,\r\n        // 关键词 \r\n        searchWords:null \r\n      },\r\n      // 单品折扣列表\r\n      itemDiscountData:{\r\n        data:[]\r\n      },\r\n      // 门店列表\r\n      storeList:{},\r\n      classData: [],\r\n      classList: [],\r\n      cateArr: [],\r\n      cateArrs: [],\r\n      props: {\r\n        value: \"id\",\r\n        label: \"name\",\r\n        children: \"children\"\r\n      },\r\n      // 检索\r\n      filtersData: {\r\n        pageIndex: 1, // 当前页码\r\n        pageSize: 10, // 每页数量\r\n        \"orderBy\": \"\",\r\n      },\r\n      // 商品列表\r\n      merchantProduct_scbServiceList_data:{}\r\n    };\r\n  },\r\n  created() {\r\n    var that = this;\r\n    this.getClassData(); // 获取商品\r\n    this.codeItem_list(); // 获取季节列表\r\n    this.getStoreList(); // 获取门店列表\r\n    this.getBrandOptions(); // 获取品牌\r\n    this.merchantProduct_scbServiceList();// 获取商品列表\r\n    if(this.$route.query.id) {\r\n      Object.assign(this.goodsFiltersDataCheck, {\r\n        scbCateId:this.$route.query.id\r\n      })\r\n    };\r\n    document.onkeydown = function(e) {\r\n         var key = window.event.keyCode;\r\n         if (key == 13) {\r\n            if(that.dialogTableVisible) {\r\n              that.handleSearch();\r\n            }else{\r\n              that.handleSearchCheck();\r\n            }\r\n         }\r\n      };\r\n  },\r\n  mounted() {\r\n    this.$nextTick(()=>{\r\n      this.marketingMiddleground_listProduct();// 查询全部商品\r\n      this.categories_getPullDownCategoriesList();// 获取分类所用-分类下拉（一二级）\r\n    })\r\n  },\r\n  methods: {\r\n    /**\r\n     * 获取分类所用-分类下拉（一二级）\r\n     */\r\n    categories_getPullDownCategoriesList() {\r\n      const that = this;\r\n\r\n      this.request(\r\n        this.api.scb.categories_getPullDownCategoriesList,\r\n        {\r\n          \"merchantId\": \"\"\r\n        },\r\n        true\r\n      ).then(res => {\r\n        that.categories_getPullDownCategoriesList_data = res;\r\n      });\r\n    },\r\n    /**\r\n     * 修改（跳转到商品详情）\r\n     */\r\n    hrefDetails(obj) {\r\n      this.href('scb/goods/goods_details', {\r\n        \"merchantId\": obj.id,\r\n        \"productCode\": obj.code\r\n      });\r\n    },\r\n    /**\r\n     * （获取商品列表）\r\n     */\r\n    merchantProduct_scbServiceList() {\r\n      const that = this;\r\n      \r\n      this.request(\r\n        this.api.scb.merchantProduct_scbServiceList,\r\n        this.goodsFiltersDataCheck,\r\n        true\r\n      ).then(res => {\r\n        this.merchantProduct_scbServiceList_data = res;\r\n        res.data.forEach((item, index) => {\r\n          // item.productCateNameList = ['分类1','分类2','分类3','分类4'];\r\n          item._productCateNameList = item.productCateNameList.join('、');  \r\n        });\r\n      });\r\n    },\r\n    /**\r\n     * （获取季节）\r\n     */\r\n    codeItem_list(item) {\r\n      const that = this;\r\n\r\n      this.request(\r\n        this.api.market.codeItem_list,\r\n        {\r\n          codeSetId:'06b11574-ef82-4ae4-a8a9-a25f903083df'\r\n        },\r\n        true\r\n      ).then(res => {\r\n        that.codeItem_list_get = res;\r\n      });\r\n    },\r\n    /**\r\n     * 获取品牌\r\n     */\r\n    getBrandOptions() {\r\n      this.request(\r\n        this.api.product.productBrand_list,\r\n        {},\r\n        true\r\n        ).then(data => {\r\n          let _data = data.data;\r\n          this.brandOptions = _data;\r\n      });\r\n    },\r\n    /**\r\n     * 获取分类\r\n     */\r\n    getClassData() {\r\n      //分类类型（1：标准分类，2：定制分类，3：原料分类或者称为属性分类）\r\n      this.$common.getClassSelect(this, 1).then(res => {\r\n        this.classData = res.ztree;\r\n        this.classList = res.list;\r\n      });\r\n    },\r\n    /**\r\n     * \r\n     */\r\n    cascaderGet(e) {\r\n      let cateId = JSON.parse(JSON.stringify(e)).pop();\r\n      let obj = this.classList.find(item => item.id == cateId);\r\n      this.goodsFiltersData.cateIdentifier = obj.identifier;\r\n    },\r\n    /**\r\n     * \r\n     */\r\n    cascaderGets(e) {\r\n      let cateId = JSON.parse(JSON.stringify(e)).pop();\r\n      let obj = this.classList.find(item => item.id == cateId);\r\n      this.goodsFiltersDataCheck.cateIdentifier = obj.identifier;\r\n    },\r\n    /**\r\n     * （单品全部添加）\r\n     */\r\n    marketingMiddleground_addPageSingleProduct() {\r\n      const that = this;\r\n      const producCodeList = [];\r\n      this.goodsList.data.forEach((item, index) => {\r\n        if(item.currentMerchant === 0 || item.currentMerchant === null) {\r\n          producCodeList.push(item.code);\r\n        }\r\n      });\r\n      this.request(\r\n        this.api.scb.merchantProduct_addPageProductToMerchant,\r\n        {\r\n          producCodeList\r\n        },\r\n        true\r\n      ).then(res => {\r\n        this.warn('本页全部商品添加成功！');\r\n        that.marketingMiddleground_listProduct();\r\n        this.merchantProduct_scbServiceList();\r\n      });\r\n    },\r\n    /**\r\n     * （添加商品）\r\n     */\r\n    merchantProduct_addProductToMerchant(item) {\r\n      const that = this;\r\n      const discountData = this.discountData;\r\n\r\n      this.request(\r\n        this.api.scb.merchantProduct_addProductToMerchant,\r\n        {\r\n          productCode:item.code\r\n        },\r\n        true\r\n      ).then(res => {\r\n        this.warn('商品添加成功！');\r\n        that.marketingMiddleground_listProduct();\r\n        this.merchantProduct_scbServiceList();\r\n      });\r\n    },\r\n    /**\r\n     * （上下架）\r\n     */\r\n    merchantProduct_onSaleOrOffSaleSPU(item) {\r\n      const that = this;\r\n      const text = item.onSaleStatus == 'ONSALE' ? '下架后客户无法下单，是否继续？' : '确定上架吗？';\r\n      this.$confirm(text, '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.request(\r\n          this.api.scb.merchantProduct_onSaleOrOffSaleSPU,\r\n          {\r\n            \"merchantId\": item.id,\r\n            \"productCode\": item.code\r\n          },\r\n          true\r\n        ).then(res => {\r\n          this.merchantProduct_scbServiceList();\r\n          this.warn('操作成功！');\r\n        });\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消'\r\n        });          \r\n      });\r\n    },\r\n    /**\r\n     * （单品从列表内剔除）\r\n     */\r\n    merchantProduct_deleteProductFromMerchant(item) {\r\n      const that = this;\r\n      const discountData = this.discountData;\r\n      this.$confirm('剔除后该商品在商城不可见，是否继续？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.request(\r\n          this.api.scb.merchantProduct_deleteProductFromMerchant,\r\n          {\r\n            productCode:item.code\r\n          },\r\n          true\r\n        ).then(res => {\r\n          this.warn('剔除成功！');\r\n          that.marketingMiddleground_listProduct();\r\n          this.merchantProduct_scbServiceList();\r\n        });\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消'\r\n        });          \r\n      });\r\n    },\r\n    /**\r\n     * （全部商品）\r\n     */\r\n    marketingMiddleground_listProduct() {\r\n      const that = this;\r\n      // const discountData = this.discountData;\r\n\r\n      // Object.assign(this.goodsFiltersData, {\r\n      //   storeId:discountData.storeId,\r\n      //   type:discountData.itemDiscountType,\r\n      //   discount:discountData.itemDiscountEd\r\n      // }); \r\n      this.request(\r\n        this.api.scb.merchantProduct_productServiceList,\r\n        this.goodsFiltersData,\r\n        true\r\n      ).then(res => {\r\n        that.goodsList = res;\r\n      });\r\n    },\r\n    /**\r\n     * 查询门店列表\r\n     */\r\n    getStoreList() {\r\n        const that = this;\r\n\r\n        this.request(\r\n        that.api.store.storeBasic_list,\r\n        {\r\n          pricingPower:0\r\n        },\r\n        true\r\n        ).then(res => {\r\n          that.storeList = res;\r\n        });\r\n    },\r\n    /**\r\n     * 提示\r\n     * @param { String } message 提示文案\r\n     * @param { String } type 提示类型\r\n     */\r\n    warn(message, type) {\r\n      this.$message({\r\n        message: message,\r\n        type: type || 'success'\r\n      });\r\n    },\r\n    /**\r\n     * 跳转\r\n     * @param { String } routeName 路由跳转名字\r\n     */\r\n    href(routeName, param) {\r\n      this.$router.push({\r\n        path: `/${routeName}`,\r\n        query:param\r\n      });\r\n    },\r\n    /**\r\n     *  选择每页多少条数（全部）\r\n     *  @param { Number } pageSize 每页条数\r\n     */\r\n    handleSizeChange(pageSize){\r\n        this.goodsFiltersData.pageSize = pageSize;  \r\n        this.marketingMiddleground_listProduct();\r\n    },\r\n     /**\r\n     * 点击页数（全部）\r\n     * @param { Number } pageIndex 当前页\r\n     */\r\n    handleCurrentChange(pageIndex){\r\n        this.goodsFiltersData.pageIndex = pageIndex;\r\n        this.marketingMiddleground_listProduct();\r\n    },\r\n   /**\r\n     * 模糊搜索（全部）\r\n     */\r\n    handleSearch() {\r\n        this.goodsFiltersData.pageIndex = 1;\r\n        this.marketingMiddleground_listProduct();\r\n    },\r\n    /**\r\n     * 搜索重置（全部）\r\n     */\r\n    handleResetFilters() {\r\n      Object.assign(this.goodsFiltersData,{\r\n        // 当前页码\r\n        pageIndex: 1,\r\n        // 每页数量\r\n        pageSize: 10,\r\n        // 品类id\r\n        cateIdentifier:null,\r\n        // 品牌id\r\n        brandId:null,\r\n        // 售价最小值\r\n        retailPriceLowerLimit:null, \r\n        // 售价最大值\r\n        retailPriceUpperLimit:null, \r\n        // 库存最小值\r\n        quantityLowerLimit:null, \r\n        // 库存最大值\r\n        quantityUpperLimit:null, \r\n        // 季节\r\n        seasonalStyleCode:null,\r\n        // 关键词\r\n        searchWords:null \r\n      });\r\n      this.cateArr = [];\r\n    },\r\n\r\n    /** ---------------\r\n     * 点击页数（已添加）\r\n     * @param { Number } pageIndex 当前页\r\n     */\r\n    handleCurrentChangeCheck(pageIndex){\r\n      this.goodsFiltersDataCheck.pageIndex = pageIndex;\r\n      this.merchantProduct_scbServiceList();\r\n    },\r\n    /**\r\n     *  选择每页多少条数（已添加）\r\n     *  @param { Number } pageSize 每页条数\r\n     */\r\n    handleSizeChangeCheck(pageSize){\r\n      this.goodsFiltersDataCheck.pageSize = pageSize;  \r\n      this.merchantProduct_scbServiceList();\r\n    },\r\n     /**\r\n     * 模糊搜索（已添加）\r\n     */\r\n    handleSearchCheck() {\r\n        this.goodsFiltersDataCheck.pageIndex = 1;\r\n        this.merchantProduct_scbServiceList();\r\n    },\r\n    /**\r\n     * 搜索重置（已添加）\r\n     */\r\n    handleResetFiltersCheck() {\r\n      Object.assign(this.goodsFiltersDataCheck,{\r\n        // 当前页码\r\n        pageIndex: 1,\r\n        // 每页数量\r\n        pageSize: 10,\r\n        // 分类id\r\n        scbCateId:null,\r\n        // 品类id\r\n        cateIdentifier:null,\r\n        // 售价最小值\r\n        retailPriceLowerLimit:null, \r\n        // 售价最大值\r\n        retailPriceUpperLimit:null, \r\n        // 品牌id\r\n        brandId:null,\r\n        // 上下架状态\r\n        onSaleStatus:null,\r\n        // 库存最小值\r\n        quantityLowerLimit:null, \r\n        // 库存最大值\r\n        quantityUpperLimit:null, \r\n        // 季节\r\n        seasonalStyleCode:null,\r\n        // 关键词 \r\n        searchWords:null \r\n      });\r\n      this.cateArrs = [];\r\n    },\r\n  },\r\n  components: {}\r\n};\r\n</script>\r\n<style  lang=\"less\" scoped>\r\n  .box{\r\n    padding: 20px 20px 20px 20px;\r\n    margin: 8px 8px 0 8px;\r\n    background: #fff;\r\n  }\r\n  .el-input-short{\r\n    width: 300px;\r\n  }\r\n  .el-input-mini{\r\n    width: 90px;\r\n  }\r\n  .mlr10px{\r\n    margin: 0 10px;\r\n  }\r\n  .addRadder{\r\n    border-radius: 4px;\r\n    border: 1px solid #DCDFE6;\r\n    width: 400px;\r\n    padding: 15px;\r\n  }\r\n  .mb-10{\r\n    margin-bottom: 10px;\r\n  }\r\n  .mb-100{\r\n    margin-bottom: 100px;\r\n  }\r\n  .ml-10{\r\n    margin-left: 10px;\r\n  }\r\n  .mt-74{\r\n    margin-top: 74px;\r\n  }\r\n  .el-input-width155{\r\n    width:300px;\r\n  }\r\n  .el-input-width355{\r\n    width: 355px;\r\n  }\r\n  .el-input__inners{\r\n    width: 300px;\r\n  }\r\n  .el-dialog__wrapper /deep/ .el-dialog{\r\n    width: 80%;\r\n  }\r\n  .discountImg{\r\n    width: 40px;\r\n    height: 40px;\r\n  }\r\n</style>\r\n\r\n\r\n"]}]}