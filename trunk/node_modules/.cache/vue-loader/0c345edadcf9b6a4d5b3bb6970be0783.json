{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\components\\editor\\VideoCheckList.vue?vue&type=style&index=0&id=f4a943a6&lang=less&scoped=true&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\components\\editor\\VideoCheckList.vue","mtime":1572415127782},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\css-loader\\index.js","mtime":1558492728478},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1558492728890},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\postcss-loader\\src\\index.js","mtime":1558492728823},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\less-loader\\dist\\cjs.js","mtime":1566193719488},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["\n.check-list /deep/ .el-checkbox__inner{position: absolute;left: 0px;top: -96px;}\n.check-list /deep/ .check-position .el-checkbox__inner{top: -76px;}\n.check-list /deep/ .el-checkbox__label{padding-left: 0;margin-bottom: 20px;}\n.check-img {width: 80px;height: 80px;display: block;}\n.el-checkbox{float: left;}\n",{"version":3,"sources":["VideoCheckList.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA","file":"VideoCheckList.vue","sourceRoot":"src/components/editor","sourcesContent":["<style lang=\"less\" scoped>\r\n  .check-list /deep/ .el-checkbox__inner{position: absolute;left: 0px;top: -96px;}\r\n  .check-list /deep/ .check-position .el-checkbox__inner{top: -76px;}\r\n  .check-list /deep/ .el-checkbox__label{padding-left: 0;margin-bottom: 20px;}\r\n  .check-img {width: 80px;height: 80px;display: block;}\r\n  .el-checkbox{float: left;}\r\n</style>\r\n<template>\r\n  <div class=\"check-list clearfix\">\r\n    <el-checkbox-group v-model=\"checkList\">\r\n      <el-checkbox v-for=\"item in videoList\" :label=\"item\" :key=\"item.url\" :class=\"{'check-position': item.url && !item.videoCoverUrl}\">\r\n        <img :src=\"item.videoCoverUrl\" alt=\"\" class=\"check-img\" v-if=\"item.videoCoverUrl\">\r\n        <video width=\"80\" height=\"80\" v-if=\"item.url && !item.videoCoverUrl\">\r\n          <source :src=\"item.url\" type=\"video/mp4\">\r\n        </video>\r\n      </el-checkbox>\r\n      <slot></slot>\r\n    </el-checkbox-group>\r\n  </div>\r\n</template>\r\n<script>\r\n  export default {\r\n    props: {\r\n      videoList: {\r\n        type: Array,\r\n        default: true\r\n      }\r\n    },\r\n    // 数据\r\n    data() {\r\n      return {\r\n        checkList:[]\r\n      }\r\n    },\r\n    // 组件\r\n    components: {},\r\n    // 初始化数据\r\n    mounted() {\r\n      this.$nextTick(() => {\r\n\r\n      })\r\n    },\r\n    // 方法\r\n    methods: {\r\n      init(){\r\n\r\n      },\r\n      getCheckList(){\r\n        let checkListAllInfo = []\r\n        if(this.checkList.length){\r\n          this.checkList.forEach(item => {\r\n            checkListAllInfo.push({\r\n              url: item.url,\r\n              fileId: item.fileId\r\n            })\r\n          })\r\n\r\n\r\n        }\r\n        return checkListAllInfo\r\n      }\r\n    },\r\n    // 计算属性\r\n    computed: {},\r\n    // 监听数据变化\r\n    watch: {\r\n      /*'imgList':{\r\n        handler: function (val, oldVal) {\r\n\r\n\r\n        },\r\n        deep: true\r\n      },*/\r\n    }\r\n  }\r\n</script>\r\n"]}]}