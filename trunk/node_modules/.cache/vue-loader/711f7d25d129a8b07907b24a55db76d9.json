{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\components\\SKUAssembly\\add_new_sku.vue?vue&type=style&index=0&id=5d12ea74&lang=less&scoped=true&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\components\\SKUAssembly\\add_new_sku.vue","mtime":1572415127952},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\css-loader\\index.js","mtime":1558492728478},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1558492728890},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\postcss-loader\\src\\index.js","mtime":1558492728823},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\less-loader\\dist\\cjs.js","mtime":1566193719488},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.new-sku /deep/ .el-transfer-panel__header .el-checkbox .el-checkbox__input {\r\n  display: none;\r\n}\r\n.transfer-wrap{\r\n  position: relative;\r\n  .transfer-one{\r\n    position: absolute;\r\n    width: 200px;\r\n    height: 40px;\r\n    left: 0;\r\n    top: 0;\r\n  }\r\n   .transfer-two{\r\n    position: absolute;\r\n    width: 200px;\r\n    height: 40px;\r\n    left:295px;\r\n    top: 0;\r\n  }\r\n}\r\n",{"version":3,"sources":["add_new_sku.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2aA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"add_new_sku.vue","sourceRoot":"src/components/SKUAssembly","sourcesContent":["number<template>\r\n  <el-dialog\r\n    v-if=\"SKUDialogVisible\"\r\n    title=\"SKU\"\r\n    :visible.sync=\"SKUDialogVisible\"\r\n    class=\"alarmPopup new-sku\"\r\n    width=\"1000px\"\r\n    append-to-body\r\n    :before-close=\"handleClose\"\r\n  >\r\n    <el-form\r\n      :model=\"filtersData\"\r\n      label-width=\"100px\"\r\n      size=\"small\"\r\n      ref=\"filtersForm\"\r\n      inline\r\n      :rules=\"rules\"\r\n    >\r\n      <el-row>\r\n        <el-col :span=\"10\">\r\n          <el-form-item prop=\"name\" label=\"SKU名称：\">\r\n            <el-input :disabled=\"showDisabled\" class=\"input-w\" placeholder=\"请输入内容\" v-model=\"filtersData.name\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item prop=\"image\" label=\"SKU图片：\">\r\n            <el-upload-img\r\n             :disabled=\"showDisabled\"\r\n              v-model=\"filtersData.image\"\r\n              :EchoDisplayImages=\"productImages\"\r\n              CatalogName=\"product\"\r\n            ></el-upload-img>\r\n          </el-form-item>\r\n          <el-form-item prop=\"valid\" label=\"使用状态：\">\r\n            <el-select :disabled=\"showDisabled\" class=\"input-w\" placeholder=\"请选择\" v-model=\"filtersData.valid\">\r\n              <el-option\r\n                v-for=\"item in this.$common.getValidLowerOptions()\"\r\n                :key=\"item.status_id\"\r\n                :label=\"item.status_name\"\r\n                :value=\"item.status_id\"\r\n              ></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n        </el-col>\r\n        <el-col class=\"transfer-wrap\" :span=\"14\">\r\n          <el-transfer\r\n            v-model=\"selectedSKUData\"\r\n            :data=\"skuListData\"\r\n            :props=\"skuProps\"\r\n            :titles=\"['可选', '已选']\"\r\n            @change=\"skuHandleChange\"\r\n            @left-check-change=\"skuLeftChange\"\r\n            @right-check-change=\"skuRightChange\"\r\n            filterable\r\n            :filter-method=\"filterMethod\"\r\n            filter-placeholder=\"请输入\"\r\n          ></el-transfer>\r\n\r\n          <!-- 不要删除空DIV  :render-content=\"renderFunc\" -->\r\n          <div class=\"transfer-one\"></div><div class=\"transfer-two\"></div>\r\n        </el-col>\r\n      </el-row>\r\n    </el-form>\r\n    <div class=\"item-right\">\r\n      <el-button size=\"small\" @click=\"closeDialog('filtersForm')\">取消</el-button>\r\n      <el-button\r\n        v-if=\"skuType == 'add'\"\r\n        size=\"small\"\r\n        @click=\"submitForm('filtersForm')\"\r\n        type=\"primary\"\r\n      >确定</el-button>\r\n      <el-button\r\n        v-else-if=\"skuType == 'edit'\"\r\n        size=\"small\"\r\n        @click=\"editForm('filtersForm')\"\r\n        type=\"primary\"\r\n      >修改</el-button>\r\n    </div>\r\n  </el-dialog>\r\n</template>\r\n<script>\r\nimport ElUploadImg from \"@/components/uploadImg/el_upload_img\";\r\nexport default {\r\n  name: \"tp-new-sku\",\r\n  props: {\r\n    placeholder: \"请选择\",\r\n    value: \"\"\r\n  },\r\n  data() {\r\n    return {\r\n      SKUDialogVisible: false,\r\n      filtersData: {\r\n        image: \"\",\r\n        name: \"\",\r\n        valid: null,\r\n         price:0,\r\n         productGoodsMaterials:[]\r\n      },\r\n      skuType: \"\",\r\n      skuIndex: null,\r\n      skuProps: {\r\n        key: \"materialId\",\r\n        label:'_label'\r\n      },\r\n      showDisabled:false,\r\n      //验证\r\n      rules: {\r\n        name: [{ required: true, message: \"请输入SKU名称\", trigger: \"blur\" }],\r\n        image: [{ required: true, message: \"请上传图片\", trigger: \"blur\" }],\r\n        valid: [{ required: true, message: \"请选择状态\", trigger: \"change\" }]\r\n      },\r\n      skuListData: [], //数据是[{},{}]\r\n      //已选SKU数据\r\n      selectedSKUData: [], //存的是IDS\r\n      productImages: []\r\n    };\r\n  },\r\n  created () {\r\n  },\r\n  methods: {\r\n    /*\r\n    * @params: type 增加还是修改等类型 String\r\n                    default null\r\n              list  原料工艺数据 Array\r\n                    default null\r\n    */\r\n    popupInit(type, mtList) {\r\n      this.skuType = type;\r\n      //感觉此处最好带过来参数\r\n      //this.init();\r\n      for (let i = 0; i < mtList.length; i++) {\r\n        mtList[i].disabled=false;\r\n        mtList[i]._label=`${mtList[i].name}/${mtList[i].code}`;\r\n\r\n      }\r\n      this.skuListData = mtList;\r\n      this.resetMTList();\r\n      this.SKUDialogVisible = true;\r\n    },\r\n    //修改时初始化\r\n    editPopupInit(type, mtList, skuItem, skuIndex,isEchoDisplay) {\r\n      this.skuType = type;\r\n      //初始化禁选状态\r\n      for (let i = 0; i < mtList.length; i++) {\r\n        mtList[i].disabled=false;\r\n        mtList[i]._label=`${mtList[i].name}/${mtList[i].code}`;\r\n      }\r\n      this.skuListData = mtList;\r\n      this.resetMTList(isEchoDisplay);\r\n      let item = JSON.parse(JSON.stringify(skuItem));\r\n      this.filtersData = item;\r\n      let itemMaterials = item.productGoodsMaterials;\r\n      let arr = [];\r\n      for (let i = 0; i < itemMaterials.length; i++) {\r\n        arr.push(itemMaterials[i].materialId);\r\n      }\r\n      this.selectedSKUData = [...arr];\r\n      this.skuIndex = skuIndex;\r\n      if (!!item.image) {\r\n        this.productImages = [{ url: item.image }];\r\n      }\r\n      //相同属性分类互斥\r\n      this.skuHandleMaterialCateMutex([]);\r\n      //调取接口获取互斥\r\n      this.getRequestMutex([]);\r\n      if(isEchoDisplay == 'show'){\r\n        this.showDisabled = true;\r\n      }else{\r\n        this.showDisabled = false;\r\n      }\r\n      this.SKUDialogVisible = true;\r\n    },\r\n    getParentParams() {\r\n      //对象还需初始化\r\n      // switch (this._skuType.toString()) {\r\n      //   case \"add\": //新增\r\n      //     break;\r\n      //   case \"edit\": //修改\r\n      //     break;\r\n      //   case \"show\": //查看\r\n      //     break;\r\n      // }\r\n    },\r\n    /**\r\n     * 数据发生变动\r\n     * value 右侧全部数据   direction 向左或向右移动\r\n     * movedkeys 移动的数据\r\n     */\r\n    skuHandleChange(value, direction, movedkeys) {\r\n      //数据向左侧传输\r\n      if (direction == \"left\") {\r\n        //初始化disabled\r\n        this.resetMTList();\r\n        //相同属性分类互斥\r\n        this.skuHandleMaterialCateMutex(value);\r\n        //调取接口获取互斥\r\n        this.getRequestMutex(value);\r\n        //修改时改变使用状态\r\n        if(this.skuType == 'edit'){\r\n          this.$message({\r\n            message: '已选数据发生改变将改变使用状态',\r\n            type: 'warning'\r\n          });\r\n          this.filtersData.valid=false;\r\n        }\r\n      } else {\r\n        //数据向右边传输\r\n      }\r\n    },\r\n    /**\r\n     * 右侧勾选的时候 不做处理\r\n     * 因为发生互斥变化的时候 只取左侧勾选数据 和右侧已有数据\r\n     *\r\n     */\r\n    skuRightChange(itemAll, item) {\r\n      // console.log(itemAll);\r\n      // console.log(item);\r\n    },\r\n    /**\r\n     * 左侧被勾选触发，\r\n     * 1、当被勾选时 拿到右侧的数据和当前的数据先进行属性分类互斥 ，\r\n     * 2、再进行调用接口互斥；\r\n     */\r\n    skuLeftChange(itemAll, item) {\r\n      this.resetMTList();\r\n      //相同属性分类互斥\r\n      // for (let i = 0; i < this.skuListData.length; i++) {\r\n      //   console.log(this.skuListData[i].id +'------'+this.skuListData[i].materialId);\r\n\r\n\r\n      // }\r\n      // console.log(itemAll);\r\n      this.skuHandleMaterialCateMutex(itemAll);\r\n      //调取接口获取互斥\r\n      this.getRequestMutex(itemAll);\r\n    },\r\n    //处理属性分类互斥\r\n    skuHandleMaterialCateMutex(itemAll) {\r\n      //数据集合\r\n      let listAll = [...itemAll, ...this.selectedSKUData];\r\n      let skuList = this.skuListData;\r\n      //处理数据集合\r\n      let itemData = this.getIdsListData(listAll);\r\n      if (listAll.length > 0) {\r\n        //对数据对象进行循环 判别出属性分类互斥\r\n        for (let i = 0; i < itemData.length; i++) {\r\n          let itemCateId = itemData[i].materialCateId;\r\n          let itemMaterialId = itemData[i].materialId;\r\n          for (let k = 0; k < skuList.length; k++) {\r\n            let skuCateId = skuList[k].materialCateId;\r\n            let skuMaterialId = skuList[k].materialId;\r\n            if (itemCateId == skuCateId && itemMaterialId != skuMaterialId) {\r\n              skuList[k].disabled = true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    //调用互斥接口 获取互斥ID\r\n    getRequestMutex(itemAll) {\r\n      console.log(itemAll);\r\n      let listAll = [...itemAll, ...this.selectedSKUData];\r\n      if (listAll.length > 0) {\r\n        this.request(\r\n          this.api.product.customizedProductMaterial_listExclusionMaterial,\r\n          { selectedMaterialIds: listAll }\r\n        ).then(res => {\r\n          //互斥ID数组\r\n          let _data = res.data,\r\n            _dataLen = _data.length;\r\n          let skuList = this.skuListData,\r\n            skuListLen = skuList.length;\r\n          for (let i = 0; i < skuListLen; i++) {\r\n            for (let k = 0; k < _dataLen; k++) {\r\n              if (skuList[i].materialId == _data[k]) {\r\n                skuList[i].disabled = true;\r\n\r\n              }\r\n            }\r\n          }\r\n\r\n        });\r\n      }\r\n    },\r\n    //点击加号重置左侧分类 增加type 判断是否右侧清空\r\n    resetMTList(isEchoDisplay) {\r\n      let skuList = this.skuListData;\r\n      if(isEchoDisplay != 'show'){\r\n        for (let k = 0; k < skuList.length; k++) {\r\n          skuList[k].disabled = false;\r\n        }\r\n      }else{\r\n        for (let k = 0; k < skuList.length; k++) {\r\n          skuList[k].disabled = true;\r\n        }\r\n      }\r\n    },\r\n    //保存时判断\r\n    submitForm(formName) {\r\n      this.addAndEditForm(formName)\r\n    },\r\n    //修改保存 和新增数据不一样  还有 当在回显修改时 数据还要做判断\r\n    editForm(formName){\r\n      if(this.skuType == 'edit'){\r\n        this.addAndEditForm(formName,'edit')\r\n      }\r\n    },\r\n    //新增和保存   回显还单独做处理\r\n    addAndEditForm(formName,addType){\r\n       let skuData = this.selectedSKUData;\r\n      if (skuData <= 0) {\r\n        this.$message({\r\n          message: \"请勾选分类\",\r\n          type: \"error\"\r\n        });\r\n        return false;\r\n      }\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          let selectedIdsData = this.getIdsListData(skuData);\r\n          let zType = false,\r\n            mType = false;\r\n          for (let i = 0; i < selectedIdsData.length; i++) {\r\n            if (selectedIdsData[i].type == 1) {\r\n              zType = true;\r\n            } else if (selectedIdsData[i].type == 2) {\r\n              mType = true;\r\n            }\r\n            if (zType && mType) {\r\n              break;\r\n            }\r\n          }\r\n          if (!zType || !mType) {\r\n            this.$message({\r\n              message: \"已选必须含有一条原料及一条工艺\",\r\n              type: \"error\"\r\n            });\r\n            return false;\r\n          }\r\n          //处理数据 productGoodsId 问题\r\n          let csPGS= this.filtersData.productGoodsMaterials;\r\n          for (let i = 0; i < csPGS.length; i++) {\r\n            for (let k = 0; k < selectedIdsData.length; k++) {\r\n             if(csPGS[i].materialId == selectedIdsData[k].materialId){\r\n                selectedIdsData[k]=csPGS[i]\r\n             }\r\n            }\r\n          }\r\n          //计算价格\r\n          let ptGsMs=selectedIdsData;\r\n          for (let k = 0; k < ptGsMs.length; k++) {\r\n              this.filtersData.price += ptGsMs[k].usageAmount * ptGsMs[k].unitPrice\r\n          }\r\n          if(addType == 'edit'){\r\n            for (let i = 0; i < selectedIdsData.length; i++) {\r\n              if(!selectedIdsData[i].productGoodsId){\r\n                 selectedIdsData[i].id=null;\r\n              }\r\n            }\r\n            this.filtersData.productGoodsMaterials = selectedIdsData;\r\n            this.$emit(\"setParentEditSKUData\", JSON.parse(JSON.stringify(this.filtersData)),addType,this.skuIndex);\r\n          }else{\r\n            this.filtersData.productGoodsMaterials = selectedIdsData;\r\n            this.$emit(\"setParentSKUData\", this.filtersData);\r\n          }\r\n\r\n          this.closeDialog();\r\n        } else {\r\n          console.log(\"error submit!!\");\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    //根据已选ID 获取原数据\r\n    getIdsListData(_ids) {\r\n      let skuList = this.skuListData;\r\n      let ids = _ids;\r\n      let idsArr = [];\r\n      for (let i = 0; i < ids.length; i++) {\r\n        for (let k = 0; k < skuList.length; k++) {\r\n          if (ids[i] == skuList[k].materialId) {\r\n            idsArr.push(skuList[k]);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      return idsArr;\r\n    },\r\n    closeDialog() {\r\n      this.init();\r\n      this.SKUDialogVisible = false;\r\n    },\r\n    handleClose(done) {\r\n      this.init();\r\n      done();\r\n      this.SKUDialogVisible = false;\r\n    },\r\n    init() {\r\n      this.filtersData = {\r\n        image: \"\",\r\n        name: \"\",\r\n        valid: null,\r\n        price:0,\r\n        productGoodsMaterials:[]\r\n      };\r\n      this.skuType = \"\";\r\n      this.skuIndex = null;\r\n      this.skuListData = []; //数据是[{},{}]\r\n      this.selectedSKUData = []; //存的是IDS\r\n      this.productImages = [];\r\n    },\r\n    filterMethod(query, item) {\r\n      return item._label.toUpperCase().indexOf(query.toUpperCase()) > -1;\r\n    },\r\n    //处理数据\r\n    renderFunc(h, option) {\r\n      return (\r\n        <span>\r\n          {option.name} / {option.code}\r\n        </span>\r\n      );\r\n    }\r\n  },\r\n  components: {\r\n    ElUploadImg\r\n  }\r\n};\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.new-sku /deep/ .el-transfer-panel__header .el-checkbox .el-checkbox__input {\r\n  display: none;\r\n}\r\n.transfer-wrap{\r\n  position: relative;\r\n  .transfer-one{\r\n    position: absolute;\r\n    width: 200px;\r\n    height: 40px;\r\n    left: 0;\r\n    top: 0;\r\n  }\r\n   .transfer-two{\r\n    position: absolute;\r\n    width: 200px;\r\n    height: 40px;\r\n    left:295px;\r\n    top: 0;\r\n  }\r\n}\r\n</style>\r\n"]}]}