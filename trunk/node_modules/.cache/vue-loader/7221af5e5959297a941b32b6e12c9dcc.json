{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\store\\data\\store_run_list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\store\\data\\store_run_list.vue","mtime":1572415124723},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {getToken} from '@/utils/auth'\nimport codeSet from '@/components/codeSet'\nimport treeDept from '@/components/treeDept'\nimport selectDate from '../components/selectDate'\n// echarts/lib/chart/line\nimport echarts from 'echarts';\n\nlet token = getToken()\n\nexport default {\n\n  data() {\n    return {\n      colorList:  ['#2eddc1','#FCCE10','#E87C25','#277bbb','#E87fff','#277aaa','#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n      myChart: null,\n      myChart2: null,\n      dataStartEnd: null,\n      // 维度列表\n      dimensionality_list: [{\n        name: '销售收入',\n        id: 0\n      }, {\n        name: '退货率',\n        id: 1\n      }, {\n        name: '客单价',\n        id: 2\n      }, {\n        name: '件单价',\n        id: 3\n      }, {\n        name: '连带率',\n        id: 4\n      }],\n      // data数据\n      getChartData_list: {},\n      chartType: 0,\n      dataList: [],\n      // 获取门店信列表\n      getStoreList_data: [],\n      filtersData: {\n        \"dimension\": 0,\n        \"storeIdList\": [],\n        \"beginTime\": \"\",\n        \"endTime\": \"\",\n      },\n      // 门店列表请求参数\n      filtersDataStore: {\n        pageIndex: '',// 当前页码\n        pageSize: '',// 每页数量\n        name: '',// 门店名称\n        organizationId: '',// 隶属机构\n        businessStatus: '',// 营业状态\n        type: '',// 门店类型\n        createBegin: '',// 创建时间开始\n        createEnd: ''// 创建时间结束\n      }\n    }\n  },\n  mounted() {\n\n  },\n  created() {\n    const that = this;\n\n    this.getStoreList(); // 获取门店列表\n  },\n  methods: {\n    // 表格过滤\n    tableFormatter(row, column) {\n      let val = row[column.property];\n      if (this.filtersData.dimension == 1) {\n        return val + '%'\n      } else if(this.filtersData.dimension == 4) {\n        return val\n      }else {\n        return '￥' + val\n      }\n    },\n    // 图表hover显示数据初始\n    chartTooltipInit(params){\n      let html = '';\n      if(params && params.length){\n        html += params[0].axisValueLabel + '<br>';\n        params.forEach(item => {\n          html += \"<span style=\\\"display:inline-block;width:10px;height: 10px;border-radius: 5px;margin-right: 10px;background:\" + item.color + \"\\\"></span>\" + item.seriesName + \" ：\"\n          if (this.filtersData.dimension == 1) {\n            html += item.value + '%'\n          } else if(this.filtersData.dimension == 4) {\n            html += item.value\n          }else {\n            html += '￥' + item.value\n          }\n          html += '<br>'\n        })\n      }\n      return html\n    },\n    /**\n     * 获取表格数据\n     */\n    getChartData() {\n      let that = this;\n      // 基于准备好的dom，初始化echarts实例\n      this.$nextTick(() => {\n        this.myChart = echarts.init(document.getElementById('chart_example'));\n        this.request(\n                that.api.store.storeDataStatistics_getStoreManageDataAnalysis,\n                this.filtersData\n        ).then(res => {\n          // 指定图表的配置项和数据 ------------------\n          var option = {\n            color: this.colorList,\n            tooltip: {\n              trigger: 'axis',\n              axisPointer: {            // 坐标轴指示器，坐标轴触发有效\n                type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\n              },\n              formatter: (params) => {\n                return this.chartTooltipInit(params)\n              }\n            },\n            legend: {\n              data: []\n            },\n            dataZoom: [\n              {\n                type: 'slider',\n                show: true,\n                xAxisIndex: [0],\n                start: 0,\n                end: 100\n              },\n              {\n                type: 'inside',\n                xAxisIndex: [0],\n                start: 0,\n                end: 100\n              }\n            ],\n            title: {\n              textStyle: {\n                color: '#409EFF',\n              },\n              left: '45%'\n            },\n            xAxis: {\n              data: []\n            },\n            yAxis: {\n            },\n            series: [{\n              type: 'line',\n              name: '全部门店',\n              data: []\n            }]\n          };\n          res.storeVOList.forEach((item, index) => {\n            let dimensionItem = this.dimensionality_list.find(item => {\n              return item.id == this.filtersData.dimension\n            });\n            item.dimension = dimensionItem.name;\n            item.dataList.forEach((items, indexs) => {\n              item['v' + indexs] = items.amount;\n            })\n          });\n          if (res.storeVOList.length) {\n            this.dataList = res.storeVOList[0].dataList;\n          }\n          if (res.allStoreData && res.allStoreData.length) {\n            this.dataStartEnd = res.allStoreData[0].date + '-' + res.allStoreData[res.allStoreData.length - 1].date;\n          }\n          // 添加chart数据\n          if (this.filtersData.storeIdList && this.filtersData.storeIdList.length) {\n            var series = [];\n            res.storeVOList.forEach((item, index) => {\n              var data_list = [];\n              option.legend.data.push(item.storeName);\n              item.dataList.forEach((items, indexs) => {\n                data_list.push(items.amount)\n              });\n              series.push({\n                type: 'line',\n                name: item.storeName,\n                data: data_list\n              });\n            });\n            if (res.storeVOList && res.storeVOList.length) {\n              res.storeVOList[0].dataList.forEach((item, index) => {\n                option.xAxis.data.push(item.date);\n              });\n            }\n            option.series = series;\n          } else {\n            res.allStoreData.forEach((item, index) => {\n              option.xAxis.data.push(item.date);\n              option.series[0].data.push(item.amount);\n            });\n          }\n          // 添加汇总数据\n          res.storeVOListAll = [{\n            storeName: '全部门店',\n            dimension: this.$refs.dimension.selectedLabel,\n            sumData:res.allStoreSumAmount\n          }]\n          this.getChartData_list = res;\n          // 使用刚指定的配置项和数据显示图表。\n          this.myChart.clear();\n          this.myChart.setOption(option);\n          if (this.chartType == 1) {\n            this.myChart2 = echarts.init(document.getElementById('chart_example2'));\n            // 汇总图图表配置项，数据 ----------------------\n            var option2 = {\n              color: this.colorList,\n              tooltip: {\n                trigger: 'axis',\n                axisPointer: {            // 坐标轴指示器，坐标轴触发有效\n                  type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\n                },\n                formatter: (params) => {\n                  return this.chartTooltipInit(params)\n                }\n              },\n              dataZoom: [\n                {\n                  type: 'slider',\n                  show: true,\n                  xAxisIndex: [0],\n                  start: 0,\n                  end: 50\n                },\n                {\n                  type: 'inside',\n                  xAxisIndex: [0],\n                  start: 0,\n                  end: 50\n                }\n              ],\n              xAxis: [\n                {\n                  type: 'category',\n                  data: [],\n                  axisTick: {\n                    alignWithLabel: true\n                  }\n                }\n              ],\n              yAxis: [\n                {\n                  type: 'value'\n                }\n              ],\n              series: [\n                {\n                  name: '汇总',\n                  type: 'bar',\n                  barMaxWidth: 30,\n                  data: []\n                }\n              ]\n            };\n            this.getChartData_list.storeVOList.forEach((item, index) => {\n              option2.xAxis[0].data.push(item.storeName)\n              option2.series[0].data.push(item.sumData)\n            });\n            this.myChart2.clear();\n            this.myChart2.setOption(option2);\n          }\n        });\n      });\n    },\n    /**\n     * 改变日期\n     */\n    changeDate(chartUpDateArr) {\n      this.filtersData.beginTime = chartUpDateArr[0];\n      this.filtersData.endTime = chartUpDateArr[1];\n      this.getChartData(); // 获取表格数据\n      console.log(chartUpDateArr + '请求数据')\n\n    },\n    /**\n     * 选择图表\n     */\n    selectChart(type) {\n      this.chartType = type;\n      console.log(type)\n      this.$nextTick(() => {\n        this.myChart2 = echarts.init(document.getElementById('chart_example2'));\n        // 汇总图图表配置项，数据 ----------------------\n        var option2 = {\n          color: this.colorList,\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {            // 坐标轴指示器，坐标轴触发有效\n              type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\n            },\n            formatter: (params) => {\n              return this.chartTooltipInit(params)\n            }\n          },\n          dataZoom: [\n            {\n              type: 'slider',\n              show: true,\n              xAxisIndex: [0],\n              start: 0,\n              end: 50\n            },\n            {\n              type: 'inside',\n              xAxisIndex: [0],\n              start: 0,\n              end: 50\n            }\n          ],\n          xAxis: [\n            {\n              type: 'category',\n              data: [],\n              axisTick: {\n                alignWithLabel: true\n              }\n            }\n          ],\n          yAxis: [\n            {\n              type: 'value'\n            }\n          ],\n          series: [\n            {\n              name: '汇总',\n              type: 'bar',\n              barMaxWidth: 30,\n              data: []\n            }\n          ]\n        };\n        this.getChartData_list.storeVOList.forEach((item, index) => {\n          option2.xAxis[0].data.push(item.storeName)\n          option2.series[0].data.push(item.sumData)\n        });\n        this.myChart2.clear();\n        this.myChart2.setOption(option2);\n\n      })\n    },\n    // 点击页数\n    handleCurrentChange(pageIndex) {\n      this.filtersData.pageIndex = pageIndex;\n      this.getList();\n    },\n    // 点击每页多少条数\n    handleSizeChange(pageSize) {\n      this.filtersData.pageSize = pageSize;\n    },\n    //导出\n    exportExcel() {\n      require.ensure([], () => {\n        let {export_json_to_excel, export_table_to_excel} = require(\"@/vendor/Export2Excel\");\n        let tHeader = [\"门店名称\", \"指标\"];\n        // 上面设置Excel的表格第一行的标题\n        let filterVal = [\"storeName\", \"dimension\"];\n        // 把data里的tableData存到list\n        let list;\n        if(this.chartType == 0){\n          list = this.getChartData_list.storeVOList;\n          this.dataList.forEach((item, index) => {\n            tHeader.push(item.date);\n            filterVal.push('v' + index)\n          })\n        }\n        if(this.chartType == 1){\n          list = this.getChartData_list.storeVOListAll;\n          tHeader.push(this.dataStartEnd);\n          filterVal.push(\"sumData\")\n        }\n        let data = this.formatJson(filterVal, list);\n        export_json_to_excel(tHeader, data, \"门店经营数据分析\");\n      });\n    },\n    formatJson(filterVal, jsonData) {\n      console.log(jsonData)\n      return jsonData.map(v => filterVal.map(j => v[j]));\n    },\n    /**\n     * 查询门店列表\n     */\n    getStoreList() {\n      const that = this;\n\n      this.request(\n              that.api.store.storeBasic_list,\n              this.filtersDataStore\n      ).then(res => {\n        that.getStoreList_data = res;\n      });\n    },\n    /**\n     * 跳转工单详情\n     */\n    href(routeName, param) {\n      this.$router.push({\n        path: '/' + routeName,\n        name: routeName,\n        query: param\n      })\n    },\n    /**\n     * 模糊搜索\n     */\n    handleSearch() {\n      this.filtersData.pageIndex = 1;\n      this.getChartData();\n    },\n    /**\n     * 搜索重置\n     */\n    handleResetFilters() {\n      Object.assign(this.filtersData, {\n        \"dimension\": 0,\n        \"storeIdList\": [],\n        \"beginTime\": \"\",\n        \"endTime\": \"\",\n      });\n    },\n  },\n  components: {\n    codeSet,\n    treeDept,\n    selectDate\n  }\n}\n",{"version":3,"sources":["store_run_list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsFA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"store_run_list.vue","sourceRoot":"src/views/store/data","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 模糊搜索 -->\r\n    <div class=\"item-margin\">\r\n      <el-form\r\n              class=\"item-form\"\r\n              size=\"small\"\r\n              :inline=\"true\"\r\n              :model=\"filtersData\">\r\n        <el-form-item label=\"指标：\">\r\n          <el-select v-model=\"filtersData.dimension\" filterable @change=\"getChartData\" ref=\"dimension\">\r\n            <el-option v-for=\"(item, index) in dimensionality_list\" :label=\"item.name\" :key=\"index\"\r\n                       :value=\"item.id\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"筛选门店：\">\r\n          <el-select\r\n                  v-model=\"filtersData.storeIdList\"\r\n                  clearable\r\n                  filterable\r\n                  :multiple-limit=\"3\"\r\n                  class=\"input-w-5\"\r\n                  @change=\"getChartData\"\r\n                  placeholder=\"请选择门店，最多可选择3个门店\"\r\n                  multiple>\r\n            <el-option v-for=\"(item, index) in getStoreList_data.data\" :label=\"item.name\" :key=\"index\"\r\n                       :value=\"item.id\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n\r\n      </el-form>\r\n    </div>\r\n    <!-- 模糊搜索 -->\r\n    <!-- 门店会员 -->\r\n    <div class=\"box\">\r\n      <!-- 图表筛选条件 -->\r\n      <select-date @changeDate=\"changeDate\" @selectChart=\"selectChart\" :isMonthSelect=\"false\"></select-date>\r\n      <!-- echarts图表 -->\r\n      <div v-show=\"chartType == 0\">\r\n        <div id=\"chart_example\" class=\"mt-30\"></div>\r\n        <el-button size=\"small\" type=\"primary\" @click=\"exportExcel\">导出</el-button>\r\n        <el-table\r\n                style=\"width: 100%\"\r\n                :data=\"getChartData_list.storeVOList\"\r\n                stripe\r\n                empty-text=\"暂无数据\"\r\n                header-row-class-name=\"item-table-header\"\r\n                :highlight-current-row=\"true\">\r\n          <el-table-column fixed=\"left\" :show-overflow-tooltip=\"true\" width=\"150\" label=\"门店名称\">\r\n            <template slot-scope=\"scope\">{{ scope.row.storeName|| '--' }}</template>\r\n          </el-table-column>\r\n          <el-table-column :show-overflow-tooltip=\"true\" fixed=\"left\" label=\"指标\" prop=\"dimension\"></el-table-column>\r\n          <el-table-column\r\n                  :prop=\"'v'+index\"\r\n                  :label=\"item.date\"\r\n                  :show-overflow-tooltip=\"true\"\r\n                  :key=\"index\"\r\n                  v-for=\"(item, index) in dataList\"\r\n                  :formatter=\"tableFormatter\"\r\n          ></el-table-column>\r\n        </el-table>\r\n      </div>\r\n      <div v-show=\"chartType == 1\">\r\n        <div id=\"chart_example2\" class=\"mt-30\"></div>\r\n        <el-button size=\"small\" type=\"primary\" @click=\"exportExcel\">导出</el-button>\r\n        <el-table\r\n                style=\"width: 100%\"\r\n                :data=\"getChartData_list.storeVOListAll\"\r\n                stripe\r\n                empty-text=\"暂无数据\"\r\n                header-row-class-name=\"item-table-header\"\r\n                :highlight-current-row=\"true\">\r\n          <el-table-column fixed=\"left\" :show-overflow-tooltip=\"true\" width=\"150\" label=\"门店名称\">\r\n            <template slot-scope=\"scope\">{{ scope.row.storeName|| '--' }}</template>\r\n          </el-table-column>\r\n          <el-table-column :show-overflow-tooltip=\"true\" label=\"指标\" prop=\"dimension\"></el-table-column>\r\n          <el-table-column :show-overflow-tooltip=\"true\" :label=\"dataStartEnd\" prop=\"sumData\"\r\n                           :formatter=\"tableFormatter\"></el-table-column>\r\n        </el-table>\r\n      </div>\r\n    </div>\r\n    <!-- 工单列表 -->\r\n  </div>\r\n</template>\r\n<!-- 工单池 -->\r\n<script>\r\n  import {getToken} from '@/utils/auth'\r\n  import codeSet from '@/components/codeSet'\r\n  import treeDept from '@/components/treeDept'\r\n  import selectDate from '../components/selectDate'\r\n  // echarts/lib/chart/line\r\n  import echarts from 'echarts';\r\n\r\n  let token = getToken()\r\n\r\n  export default {\r\n\r\n    data() {\r\n      return {\r\n        colorList:  ['#2eddc1','#FCCE10','#E87C25','#277bbb','#E87fff','#277aaa','#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\r\n        myChart: null,\r\n        myChart2: null,\r\n        dataStartEnd: null,\r\n        // 维度列表\r\n        dimensionality_list: [{\r\n          name: '销售收入',\r\n          id: 0\r\n        }, {\r\n          name: '退货率',\r\n          id: 1\r\n        }, {\r\n          name: '客单价',\r\n          id: 2\r\n        }, {\r\n          name: '件单价',\r\n          id: 3\r\n        }, {\r\n          name: '连带率',\r\n          id: 4\r\n        }],\r\n        // data数据\r\n        getChartData_list: {},\r\n        chartType: 0,\r\n        dataList: [],\r\n        // 获取门店信列表\r\n        getStoreList_data: [],\r\n        filtersData: {\r\n          \"dimension\": 0,\r\n          \"storeIdList\": [],\r\n          \"beginTime\": \"\",\r\n          \"endTime\": \"\",\r\n        },\r\n        // 门店列表请求参数\r\n        filtersDataStore: {\r\n          pageIndex: '',// 当前页码\r\n          pageSize: '',// 每页数量\r\n          name: '',// 门店名称\r\n          organizationId: '',// 隶属机构\r\n          businessStatus: '',// 营业状态\r\n          type: '',// 门店类型\r\n          createBegin: '',// 创建时间开始\r\n          createEnd: ''// 创建时间结束\r\n        }\r\n      }\r\n    },\r\n    mounted() {\r\n\r\n    },\r\n    created() {\r\n      const that = this;\r\n\r\n      this.getStoreList(); // 获取门店列表\r\n    },\r\n    methods: {\r\n      // 表格过滤\r\n      tableFormatter(row, column) {\r\n        let val = row[column.property];\r\n        if (this.filtersData.dimension == 1) {\r\n          return val + '%'\r\n        } else if(this.filtersData.dimension == 4) {\r\n          return val\r\n        }else {\r\n          return '￥' + val\r\n        }\r\n      },\r\n      // 图表hover显示数据初始\r\n      chartTooltipInit(params){\r\n        let html = '';\r\n        if(params && params.length){\r\n          html += params[0].axisValueLabel + '<br>';\r\n          params.forEach(item => {\r\n            html += \"<span style=\\\"display:inline-block;width:10px;height: 10px;border-radius: 5px;margin-right: 10px;background:\" + item.color + \"\\\"></span>\" + item.seriesName + \" ：\"\r\n            if (this.filtersData.dimension == 1) {\r\n              html += item.value + '%'\r\n            } else if(this.filtersData.dimension == 4) {\r\n              html += item.value\r\n            }else {\r\n              html += '￥' + item.value\r\n            }\r\n            html += '<br>'\r\n          })\r\n        }\r\n        return html\r\n      },\r\n      /**\r\n       * 获取表格数据\r\n       */\r\n      getChartData() {\r\n        let that = this;\r\n        // 基于准备好的dom，初始化echarts实例\r\n        this.$nextTick(() => {\r\n          this.myChart = echarts.init(document.getElementById('chart_example'));\r\n          this.request(\r\n                  that.api.store.storeDataStatistics_getStoreManageDataAnalysis,\r\n                  this.filtersData\r\n          ).then(res => {\r\n            // 指定图表的配置项和数据 ------------------\r\n            var option = {\r\n              color: this.colorList,\r\n              tooltip: {\r\n                trigger: 'axis',\r\n                axisPointer: {            // 坐标轴指示器，坐标轴触发有效\r\n                  type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n                },\r\n                formatter: (params) => {\r\n                  return this.chartTooltipInit(params)\r\n                }\r\n              },\r\n              legend: {\r\n                data: []\r\n              },\r\n              dataZoom: [\r\n                {\r\n                  type: 'slider',\r\n                  show: true,\r\n                  xAxisIndex: [0],\r\n                  start: 0,\r\n                  end: 100\r\n                },\r\n                {\r\n                  type: 'inside',\r\n                  xAxisIndex: [0],\r\n                  start: 0,\r\n                  end: 100\r\n                }\r\n              ],\r\n              title: {\r\n                textStyle: {\r\n                  color: '#409EFF',\r\n                },\r\n                left: '45%'\r\n              },\r\n              xAxis: {\r\n                data: []\r\n              },\r\n              yAxis: {\r\n              },\r\n              series: [{\r\n                type: 'line',\r\n                name: '全部门店',\r\n                data: []\r\n              }]\r\n            };\r\n            res.storeVOList.forEach((item, index) => {\r\n              let dimensionItem = this.dimensionality_list.find(item => {\r\n                return item.id == this.filtersData.dimension\r\n              });\r\n              item.dimension = dimensionItem.name;\r\n              item.dataList.forEach((items, indexs) => {\r\n                item['v' + indexs] = items.amount;\r\n              })\r\n            });\r\n            if (res.storeVOList.length) {\r\n              this.dataList = res.storeVOList[0].dataList;\r\n            }\r\n            if (res.allStoreData && res.allStoreData.length) {\r\n              this.dataStartEnd = res.allStoreData[0].date + '-' + res.allStoreData[res.allStoreData.length - 1].date;\r\n            }\r\n            // 添加chart数据\r\n            if (this.filtersData.storeIdList && this.filtersData.storeIdList.length) {\r\n              var series = [];\r\n              res.storeVOList.forEach((item, index) => {\r\n                var data_list = [];\r\n                option.legend.data.push(item.storeName);\r\n                item.dataList.forEach((items, indexs) => {\r\n                  data_list.push(items.amount)\r\n                });\r\n                series.push({\r\n                  type: 'line',\r\n                  name: item.storeName,\r\n                  data: data_list\r\n                });\r\n              });\r\n              if (res.storeVOList && res.storeVOList.length) {\r\n                res.storeVOList[0].dataList.forEach((item, index) => {\r\n                  option.xAxis.data.push(item.date);\r\n                });\r\n              }\r\n              option.series = series;\r\n            } else {\r\n              res.allStoreData.forEach((item, index) => {\r\n                option.xAxis.data.push(item.date);\r\n                option.series[0].data.push(item.amount);\r\n              });\r\n            }\r\n            // 添加汇总数据\r\n            res.storeVOListAll = [{\r\n              storeName: '全部门店',\r\n              dimension: this.$refs.dimension.selectedLabel,\r\n              sumData:res.allStoreSumAmount\r\n            }]\r\n            this.getChartData_list = res;\r\n            // 使用刚指定的配置项和数据显示图表。\r\n            this.myChart.clear();\r\n            this.myChart.setOption(option);\r\n            if (this.chartType == 1) {\r\n              this.myChart2 = echarts.init(document.getElementById('chart_example2'));\r\n              // 汇总图图表配置项，数据 ----------------------\r\n              var option2 = {\r\n                color: this.colorList,\r\n                tooltip: {\r\n                  trigger: 'axis',\r\n                  axisPointer: {            // 坐标轴指示器，坐标轴触发有效\r\n                    type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n                  },\r\n                  formatter: (params) => {\r\n                    return this.chartTooltipInit(params)\r\n                  }\r\n                },\r\n                dataZoom: [\r\n                  {\r\n                    type: 'slider',\r\n                    show: true,\r\n                    xAxisIndex: [0],\r\n                    start: 0,\r\n                    end: 50\r\n                  },\r\n                  {\r\n                    type: 'inside',\r\n                    xAxisIndex: [0],\r\n                    start: 0,\r\n                    end: 50\r\n                  }\r\n                ],\r\n                xAxis: [\r\n                  {\r\n                    type: 'category',\r\n                    data: [],\r\n                    axisTick: {\r\n                      alignWithLabel: true\r\n                    }\r\n                  }\r\n                ],\r\n                yAxis: [\r\n                  {\r\n                    type: 'value'\r\n                  }\r\n                ],\r\n                series: [\r\n                  {\r\n                    name: '汇总',\r\n                    type: 'bar',\r\n                    barMaxWidth: 30,\r\n                    data: []\r\n                  }\r\n                ]\r\n              };\r\n              this.getChartData_list.storeVOList.forEach((item, index) => {\r\n                option2.xAxis[0].data.push(item.storeName)\r\n                option2.series[0].data.push(item.sumData)\r\n              });\r\n              this.myChart2.clear();\r\n              this.myChart2.setOption(option2);\r\n            }\r\n          });\r\n        });\r\n      },\r\n      /**\r\n       * 改变日期\r\n       */\r\n      changeDate(chartUpDateArr) {\r\n        this.filtersData.beginTime = chartUpDateArr[0];\r\n        this.filtersData.endTime = chartUpDateArr[1];\r\n        this.getChartData(); // 获取表格数据\r\n        console.log(chartUpDateArr + '请求数据')\r\n\r\n      },\r\n      /**\r\n       * 选择图表\r\n       */\r\n      selectChart(type) {\r\n        this.chartType = type;\r\n        console.log(type)\r\n        this.$nextTick(() => {\r\n          this.myChart2 = echarts.init(document.getElementById('chart_example2'));\r\n          // 汇总图图表配置项，数据 ----------------------\r\n          var option2 = {\r\n            color: this.colorList,\r\n            tooltip: {\r\n              trigger: 'axis',\r\n              axisPointer: {            // 坐标轴指示器，坐标轴触发有效\r\n                type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n              },\r\n              formatter: (params) => {\r\n                return this.chartTooltipInit(params)\r\n              }\r\n            },\r\n            dataZoom: [\r\n              {\r\n                type: 'slider',\r\n                show: true,\r\n                xAxisIndex: [0],\r\n                start: 0,\r\n                end: 50\r\n              },\r\n              {\r\n                type: 'inside',\r\n                xAxisIndex: [0],\r\n                start: 0,\r\n                end: 50\r\n              }\r\n            ],\r\n            xAxis: [\r\n              {\r\n                type: 'category',\r\n                data: [],\r\n                axisTick: {\r\n                  alignWithLabel: true\r\n                }\r\n              }\r\n            ],\r\n            yAxis: [\r\n              {\r\n                type: 'value'\r\n              }\r\n            ],\r\n            series: [\r\n              {\r\n                name: '汇总',\r\n                type: 'bar',\r\n                barMaxWidth: 30,\r\n                data: []\r\n              }\r\n            ]\r\n          };\r\n          this.getChartData_list.storeVOList.forEach((item, index) => {\r\n            option2.xAxis[0].data.push(item.storeName)\r\n            option2.series[0].data.push(item.sumData)\r\n          });\r\n          this.myChart2.clear();\r\n          this.myChart2.setOption(option2);\r\n\r\n        })\r\n      },\r\n      // 点击页数\r\n      handleCurrentChange(pageIndex) {\r\n        this.filtersData.pageIndex = pageIndex;\r\n        this.getList();\r\n      },\r\n      // 点击每页多少条数\r\n      handleSizeChange(pageSize) {\r\n        this.filtersData.pageSize = pageSize;\r\n      },\r\n      //导出\r\n      exportExcel() {\r\n        require.ensure([], () => {\r\n          let {export_json_to_excel, export_table_to_excel} = require(\"@/vendor/Export2Excel\");\r\n          let tHeader = [\"门店名称\", \"指标\"];\r\n          // 上面设置Excel的表格第一行的标题\r\n          let filterVal = [\"storeName\", \"dimension\"];\r\n          // 把data里的tableData存到list\r\n          let list;\r\n          if(this.chartType == 0){\r\n            list = this.getChartData_list.storeVOList;\r\n            this.dataList.forEach((item, index) => {\r\n              tHeader.push(item.date);\r\n              filterVal.push('v' + index)\r\n            })\r\n          }\r\n          if(this.chartType == 1){\r\n            list = this.getChartData_list.storeVOListAll;\r\n            tHeader.push(this.dataStartEnd);\r\n            filterVal.push(\"sumData\")\r\n          }\r\n          let data = this.formatJson(filterVal, list);\r\n          export_json_to_excel(tHeader, data, \"门店经营数据分析\");\r\n        });\r\n      },\r\n      formatJson(filterVal, jsonData) {\r\n        console.log(jsonData)\r\n        return jsonData.map(v => filterVal.map(j => v[j]));\r\n      },\r\n      /**\r\n       * 查询门店列表\r\n       */\r\n      getStoreList() {\r\n        const that = this;\r\n\r\n        this.request(\r\n                that.api.store.storeBasic_list,\r\n                this.filtersDataStore\r\n        ).then(res => {\r\n          that.getStoreList_data = res;\r\n        });\r\n      },\r\n      /**\r\n       * 跳转工单详情\r\n       */\r\n      href(routeName, param) {\r\n        this.$router.push({\r\n          path: '/' + routeName,\r\n          name: routeName,\r\n          query: param\r\n        })\r\n      },\r\n      /**\r\n       * 模糊搜索\r\n       */\r\n      handleSearch() {\r\n        this.filtersData.pageIndex = 1;\r\n        this.getChartData();\r\n      },\r\n      /**\r\n       * 搜索重置\r\n       */\r\n      handleResetFilters() {\r\n        Object.assign(this.filtersData, {\r\n          \"dimension\": 0,\r\n          \"storeIdList\": [],\r\n          \"beginTime\": \"\",\r\n          \"endTime\": \"\",\r\n        });\r\n      },\r\n    },\r\n    components: {\r\n      codeSet,\r\n      treeDept,\r\n      selectDate\r\n    }\r\n  }\r\n</script>\r\n<style lang=\"less\" scoped>\r\n  #chart_example, #chart_example2 {\r\n    // width: 50%;\r\n    height: 500px;\r\n    margin: 30px auto;\r\n  }\r\n\r\n  .box {\r\n    padding: 20px;\r\n    margin: 8px;\r\n    background: #fff;\r\n  }\r\n\r\n  .blueness {\r\n    color: #1E90FF;\r\n  }\r\n\r\n  .warningType {\r\n    width: 20px;\r\n    height: 20px;\r\n    line-height: 20px;\r\n    display: inline-block;\r\n    background: red;\r\n    color: #fff;\r\n    font-size: 12px;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    text-align: center;\r\n  }\r\n\r\n  .color {\r\n    background: #FF6347;\r\n  }\r\n\r\n  h5 {\r\n    color: #222;\r\n    margin-left: -15px;\r\n  }\r\n\r\n  .test {\r\n    color: #9d9d9d;\r\n  }\r\n</style>\r\n"]}]}