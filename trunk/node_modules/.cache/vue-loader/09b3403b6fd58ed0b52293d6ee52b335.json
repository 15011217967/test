{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\system\\noticeTemplate_details.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\system\\noticeTemplate_details.vue","mtime":1572415124678},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    name: 'tp-class-details',\n    props: {\n        itemParam: {\n            type: Object,\n        },\n\n    },\n    data() {\n        return {\n            classDialogVisible: false,\n            filtersData: {\n                type: \"\", // 新增新增模板编码\n                name: \"\", //模板名称\n                parentId: null, //父级模板  已有模板选择 如果为1及模板则为NULL\n                valid: true // 使用状态\n            },\n            CategoryOptions: [],\n            //验证\n            rules: {\n                name: [\n                    {required: true, message: \"请输入模板名称\", trigger: \"blur\"}\n                ],\n                content: [\n                    {required: true, message: \"请输入模板内容\", trigger: \"blur\"}\n                ],\n                used: [\n                    {required: true, message: \"请输入启停状态\", trigger: \"blur\"}\n                ],\n                type: [\n                    {required: true, message: \"请输入模板类型\", trigger: \"blur\"}\n                ]\n            },\n            editDisabled: true,//可编辑状态  除使用状态其他都不可编辑\n            showDisabled: true,//查看时 使用状态不可编辑\n        }\n    },\n    watch: {\n        // itemJsonParam(newData,oldData){\n        //   this.filtersData=newData;\n        // }\n    },\n    methods: {\n        getValidOptions (){\n            let arr=[{\n                status_id:true,\n                status_name:'使用中'\n            },{\n                status_id:false,\n                status_name:'未使用'\n            }];\n            return  arr\n        },\n        //初始化\n        noticeTemplateDetailsPopupInit() {\n            this.filtersData = {\n                code: \"\",\n                name: \"\",\n                type: \"\",\n                used: true\n            }\n            //对象还需初始化\n            let itemStatus = this.itemParam.type;\n            switch (itemStatus.toString()) {\n                case \"add\": //新增\n                    this.editDisabled = false;\n                    this.showDisabled = false;\n                    break;\n                case \"edit\": //修改\n                    this.editDisabled = true;\n                    this.showDisabled = false;\n                    this.getClassData();\n                    break;\n                case \"show\": //查看\n                    this.editDisabled = true;\n                    this.showDisabled = true;\n                    this.getClassData();\n                    break;\n            }\n            this.classDialogVisible = true;\n        },\n        //关闭\n        closeDialog(formName) {\n            this.classDialogVisible = false;\n            this.$refs[formName].resetFields(); //重置选项\n        },\n        //保存表单\n        submitForm(formName) {\n            this.$refs[formName].validate(valid => {\n                if (valid) {\n                    this.request(this.api.system.noticeTemplate_save,this.filtersData).then(data=>{\n                        this.closeDialog(formName);\n                        this.$emit(\"refreshItem\", \"刷新吧兄弟\");\n\n                    });\n                } else {\n                    console.log(\"error submit!!\");\n                    return false;\n                }\n            });\n        },\n        //获取列表数据\n        getClassData() {\n            this.request(this.api.system.noticeTemplate_get,{id: this.itemParam.id}).then(data=>{\n                this.filtersData = data;\n            })\n        },\n        //修改表单\n        editForm(formName) {\n            this.submitForm(formName);\n        },\n    }\n}\n",{"version":3,"sources":["noticeTemplate_details.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"noticeTemplate_details.vue","sourceRoot":"src/views/system","sourcesContent":["<template>\r\n    <el-dialog\r\n            :title=\"itemParam.title\"\r\n            :visible.sync=\"classDialogVisible\"\r\n            class=\"alarmPopup\"\r\n            width=\"600px\"\r\n    >\r\n        <el-form :model=\"filtersData\" :rules=\"rules\" label-width=\"100px\" size=\"small\" ref=\"filtersForm\" inline>\r\n            <el-form-item prop=\"type\" label=\"消息模板类型：\">\r\n                <el-input placeholder=\"请输入内容\" class=\"input-w\" :disabled=\"showDisabled\"\r\n                          v-model=\"filtersData.type\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item prop=\"name\" label=\"模板名称：\">\r\n                <el-input placeholder=\"请输入内容\" class=\"input-w\" :disabled=\"showDisabled\"\r\n                          v-model=\"filtersData.name\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item prop=\"content\" label=\"模板内容：\">\r\n                <el-input :rows=\"5\" placeholder=\"请输入内容\" type=\"textarea\" class=\"input-w\" :disabled=\"showDisabled\"\r\n                          v-model=\"filtersData.content\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item prop=\"used\" label=\"启停状态：\">\r\n                <el-select class=\"input-w\" placeholder=\"请选择\" :disabled=\"showDisabled\" v-model=\"filtersData.used\">\r\n                    <el-option\r\n                            v-for=\"item in this.getValidOptions()\"\r\n                            :key=\"item.status_id\"\r\n                            :label=\"item.status_name\"\r\n                            :value=\"item.status_id\"\r\n                    ></el-option>\r\n                </el-select>\r\n            </el-form-item>\r\n        </el-form>\r\n        <div class=\"item-right\">\r\n            <el-button size=\"small\" @click=\"closeDialog('filtersForm')\">取消</el-button>\r\n            <el-button v-if=\"this.itemParam.type == 'add'\" size=\"small\" @click=\"submitForm('filtersForm')\"\r\n                       type=\"primary\">确定\r\n            </el-button>\r\n        </div>\r\n    </el-dialog>\r\n</template>\r\n<script>\r\n    export default {\r\n        name: 'tp-class-details',\r\n        props: {\r\n            itemParam: {\r\n                type: Object,\r\n            },\r\n\r\n        },\r\n        data() {\r\n            return {\r\n                classDialogVisible: false,\r\n                filtersData: {\r\n                    type: \"\", // 新增新增模板编码\r\n                    name: \"\", //模板名称\r\n                    parentId: null, //父级模板  已有模板选择 如果为1及模板则为NULL\r\n                    valid: true // 使用状态\r\n                },\r\n                CategoryOptions: [],\r\n                //验证\r\n                rules: {\r\n                    name: [\r\n                        {required: true, message: \"请输入模板名称\", trigger: \"blur\"}\r\n                    ],\r\n                    content: [\r\n                        {required: true, message: \"请输入模板内容\", trigger: \"blur\"}\r\n                    ],\r\n                    used: [\r\n                        {required: true, message: \"请输入启停状态\", trigger: \"blur\"}\r\n                    ],\r\n                    type: [\r\n                        {required: true, message: \"请输入模板类型\", trigger: \"blur\"}\r\n                    ]\r\n                },\r\n                editDisabled: true,//可编辑状态  除使用状态其他都不可编辑\r\n                showDisabled: true,//查看时 使用状态不可编辑\r\n            }\r\n        },\r\n        watch: {\r\n            // itemJsonParam(newData,oldData){\r\n            //   this.filtersData=newData;\r\n            // }\r\n        },\r\n        methods: {\r\n            getValidOptions (){\r\n                let arr=[{\r\n                    status_id:true,\r\n                    status_name:'使用中'\r\n                },{\r\n                    status_id:false,\r\n                    status_name:'未使用'\r\n                }];\r\n                return  arr\r\n            },\r\n            //初始化\r\n            noticeTemplateDetailsPopupInit() {\r\n                this.filtersData = {\r\n                    code: \"\",\r\n                    name: \"\",\r\n                    type: \"\",\r\n                    used: true\r\n                }\r\n                //对象还需初始化\r\n                let itemStatus = this.itemParam.type;\r\n                switch (itemStatus.toString()) {\r\n                    case \"add\": //新增\r\n                        this.editDisabled = false;\r\n                        this.showDisabled = false;\r\n                        break;\r\n                    case \"edit\": //修改\r\n                        this.editDisabled = true;\r\n                        this.showDisabled = false;\r\n                        this.getClassData();\r\n                        break;\r\n                    case \"show\": //查看\r\n                        this.editDisabled = true;\r\n                        this.showDisabled = true;\r\n                        this.getClassData();\r\n                        break;\r\n                }\r\n                this.classDialogVisible = true;\r\n            },\r\n            //关闭\r\n            closeDialog(formName) {\r\n                this.classDialogVisible = false;\r\n                this.$refs[formName].resetFields(); //重置选项\r\n            },\r\n            //保存表单\r\n            submitForm(formName) {\r\n                this.$refs[formName].validate(valid => {\r\n                    if (valid) {\r\n                        this.request(this.api.system.noticeTemplate_save,this.filtersData).then(data=>{\r\n                            this.closeDialog(formName);\r\n                            this.$emit(\"refreshItem\", \"刷新吧兄弟\");\r\n\r\n                        });\r\n                    } else {\r\n                        console.log(\"error submit!!\");\r\n                        return false;\r\n                    }\r\n                });\r\n            },\r\n            //获取列表数据\r\n            getClassData() {\r\n                this.request(this.api.system.noticeTemplate_get,{id: this.itemParam.id}).then(data=>{\r\n                    this.filtersData = data;\r\n                })\r\n            },\r\n            //修改表单\r\n            editForm(formName) {\r\n                this.submitForm(formName);\r\n            },\r\n        }\r\n    }\r\n</script>\r\n<style lang=\"less\" scoped>\r\n\r\n</style>\r\n"]}]}