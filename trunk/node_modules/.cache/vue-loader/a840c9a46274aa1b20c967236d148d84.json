{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\OS\\channelSales\\channelSales_add.vue?vue&type=template&id=38a4b2e0&scoped=true&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\OS\\channelSales\\channelSales_add.vue","mtime":1576295043204},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1558492728890},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"middle\" }, [\n      _c(\"span\", [_vm._v(\"基本信息\")]),\n      _c(\n        \"div\",\n        [\n          _c(\n            \"el-form\",\n            {\n              ref: \"ruleForm\",\n              staticClass: \"demo-ruleForm\",\n              attrs: {\n                inline: true,\n                model: _vm.shop_user,\n                rules: _vm.rules,\n                \"label-width\": \"120px\"\n              }\n            },\n            [\n              _c(\"div\", { staticClass: \"input-div\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"left_div\" },\n                  [\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"组织机构：\", prop: \"organization\" } },\n                      [\n                        _c(\"el-input\", {\n                          attrs: { disabled: \"\" },\n                          model: {\n                            value: _vm.shop_user.organization,\n                            callback: function($$v) {\n                              _vm.$set(_vm.shop_user, \"organization\", $$v)\n                            },\n                            expression: \"shop_user.organization\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\"br\"),\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"收货人：\", prop: \"receiverName\" } },\n                      [\n                        _c(\"el-input\", {\n                          attrs: { placeholder: \"请输入收货人名称\" },\n                          on: { input: _vm.receiverNameValueChange },\n                          model: {\n                            value: _vm.shop_user.receiverName,\n                            callback: function($$v) {\n                              _vm.$set(_vm.shop_user, \"receiverName\", $$v)\n                            },\n                            expression: \"shop_user.receiverName\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\"br\"),\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { prop: \"addressId\", label: \"收货地址：\" } },\n                      [\n                        _c(\"division\", {\n                          on: { \"set-division\": _vm.setDivision },\n                          model: {\n                            value: _vm.shop_user.addressId,\n                            callback: function($$v) {\n                              _vm.$set(_vm.shop_user, \"addressId\", $$v)\n                            },\n                            expression: \"shop_user.addressId\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\"br\"),\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"出库仓库：\", prop: \"warehouse\" } },\n                      [\n                        _c(\n                          \"el-select\",\n                          {\n                            attrs: {\n                              placeholder: \"请选择仓库\",\n                              disabled: _vm.isDisable\n                            },\n                            on: { change: _vm.getWarehouseCode },\n                            model: {\n                              value: _vm.shop_user.warehouse,\n                              callback: function($$v) {\n                                _vm.$set(_vm.shop_user, \"warehouse\", $$v)\n                              },\n                              expression: \"shop_user.warehouse\"\n                            }\n                          },\n                          _vm._l(_vm.WarehouseCodeData, function(item) {\n                            return _c(\"el-option\", {\n                              key: item.id,\n                              attrs: { label: item.name, value: item.name }\n                            })\n                          }),\n                          1\n                        )\n                      ],\n                      1\n                    ),\n                    _c(\"br\"),\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"物流公司：\" } },\n                      [\n                        _c(\n                          \"el-select\",\n                          {\n                            attrs: { placeholder: \"请选择物流公司\" },\n                            on: { change: _vm.selectLogisticsData },\n                            model: {\n                              value: _vm.shop_user.logisticsCompany,\n                              callback: function($$v) {\n                                _vm.$set(_vm.shop_user, \"logisticsCompany\", $$v)\n                              },\n                              expression: \"shop_user.logisticsCompany\"\n                            }\n                          },\n                          _vm._l(_vm.logisticsListData, function(item) {\n                            return _c(\"el-option\", {\n                              key: item.id,\n                              attrs: {\n                                label: item.company,\n                                value: item.company\n                              }\n                            })\n                          }),\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                ),\n                _c(\n                  \"div\",\n                  { staticClass: \"right_div\" },\n                  [\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"购买商户：\", prop: \"storeName\" } },\n                      [\n                        _c(\"el-autocomplete\", {\n                          attrs: {\n                            disabled: _vm.isDisable,\n                            \"fetch-suggestions\": _vm.querySearch,\n                            placeholder: \"请输入内容\",\n                            \"trigger-on-focus\": false\n                          },\n                          on: { select: _vm.handleSelect },\n                          scopedSlots: _vm._u([\n                            {\n                              key: \"default\",\n                              fn: function(ref) {\n                                var item = ref.item\n                                return [\n                                  _c(\"div\", { staticClass: \"name\" }, [\n                                    _vm._v(_vm._s(item.storeName))\n                                  ])\n                                ]\n                              }\n                            }\n                          ]),\n                          model: {\n                            value: _vm.shop_user.storeName,\n                            callback: function($$v) {\n                              _vm.$set(_vm.shop_user, \"storeName\", $$v)\n                            },\n                            expression: \"shop_user.storeName\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\"br\"),\n                    _c(\n                      \"el-form-item\",\n                      {\n                        attrs: { label: \"联系电话：\", prop: \"receiverMobile\" }\n                      },\n                      [\n                        _c(\"el-input\", {\n                          attrs: { placeholder: \"请输入联系电话\" },\n                          model: {\n                            value: _vm.shop_user.receiverMobile,\n                            callback: function($$v) {\n                              _vm.$set(_vm.shop_user, \"receiverMobile\", $$v)\n                            },\n                            expression: \"shop_user.receiverMobile\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\"br\"),\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"详细地址：\", prop: \"addressInfo\" } },\n                      [\n                        _c(\"el-input\", {\n                          attrs: { placeholder: \"请输入详细地址\" },\n                          model: {\n                            value: _vm.shop_user.addressInfo,\n                            callback: function($$v) {\n                              _vm.$set(_vm.shop_user, \"addressInfo\", $$v)\n                            },\n                            expression: \"shop_user.addressInfo\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\"br\"),\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"出货日期：\" } },\n                      [\n                        _c(\"el-date-picker\", {\n                          attrs: { type: \"date\", placeholder: \"选择日期\" },\n                          model: {\n                            value: _vm.shop_user.warehouseTime,\n                            callback: function($$v) {\n                              _vm.$set(_vm.shop_user, \"warehouseTime\", $$v)\n                            },\n                            expression: \"shop_user.warehouseTime\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\"br\"),\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"物流单号：\" } },\n                      [\n                        _c(\"el-input\", {\n                          attrs: { placeholder: \"请输入单号\" },\n                          model: {\n                            value: _vm.shop_user.logisticsOrderSn,\n                            callback: function($$v) {\n                              _vm.$set(_vm.shop_user, \"logisticsOrderSn\", $$v)\n                            },\n                            expression: \"shop_user.logisticsOrderSn\"\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              ])\n            ]\n          )\n        ],\n        1\n      ),\n      _c(\"div\", { staticClass: \"table-view\" }, [\n        _c(\"div\", { staticClass: \"title-div\" }, [\n          _c(\"span\", [_vm._v(\"商品信息\")]),\n          _c(\"span\", { on: { click: _vm.selectShopClickEvent } }, [\n            _vm._v(\"选择商品\")\n          ])\n        ]),\n        _c(\n          \"div\",\n          { staticClass: \"table-div\" },\n          [\n            _c(\n              \"el-table\",\n              {\n                staticStyle: { width: \"100%\" },\n                attrs: {\n                  data: _vm.shop_user.channelSaleOrderGoodsVOList,\n                  \"header-row-class-name\": \"item-table-header\",\n                  \"max-height\": \"400\"\n                }\n              },\n              [\n                _c(\"el-table-column\", {\n                  attrs: {\n                    prop: \"productCode\",\n                    label: \"商品款号\",\n                    width: \"\",\n                    align: \"center\"\n                  }\n                }),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    prop: \"code\",\n                    label: \"商品货号\",\n                    width: \"200\",\n                    align: \"center\"\n                  }\n                }),\n                _c(\"el-table-column\", {\n                  attrs: { prop: \"\", label: \"商品图片\", width: \"\" },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"default\",\n                      fn: function(scope) {\n                        return [\n                          _c(\"img\", {\n                            staticStyle: { width: \"64px\", height: \"64px\" },\n                            attrs: { src: scope.row.image }\n                          })\n                        ]\n                      }\n                    }\n                  ])\n                }),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    prop: \"name\",\n                    label: \"商品名称\",\n                    width: \"\",\n                    align: \"center\"\n                  }\n                }),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    prop: \"\",\n                    label: \"商品类型\",\n                    width: \"\",\n                    align: \"center\"\n                  },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"default\",\n                      fn: function(scope) {\n                        return [\n                          _c(\"span\", [\n                            _vm._v(\n                              _vm._s(\n                                scope.row.type != null ? scope.row.type : \"成品\"\n                              )\n                            )\n                          ])\n                        ]\n                      }\n                    }\n                  ])\n                }),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    prop: \"brandName\",\n                    label: \"品牌\",\n                    width: \"\",\n                    align: \"center\"\n                  }\n                }),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    prop: \"fullCateName\",\n                    label: \"商品品类\",\n                    width: \"120\",\n                    align: \"center\"\n                  }\n                }),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    prop: \"\",\n                    label: \"商品规格\",\n                    width: \"\",\n                    align: \"center\"\n                  },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"default\",\n                      fn: function(scope) {\n                        return [\n                          _c(\"span\", [\n                            _vm._v(\"颜色：\" + _vm._s(scope.row.color))\n                          ]),\n                          _c(\"br\"),\n                          _c(\"span\", [\n                            _vm._v(\"尺寸：\" + _vm._s(scope.row.size))\n                          ])\n                        ]\n                      }\n                    }\n                  ])\n                }),\n                _c(\"el-table-column\", {\n                  attrs: { label: \"销售单价\", width: \"\", align: \"center\" },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"default\",\n                      fn: function(scope) {\n                        return [\n                          _c(\n                            \"div\",\n                            { staticClass: \"tag_div\" },\n                            [\n                              _c(\"span\", [_vm._v(\"￥\")]),\n                              _c(\"el-input\", {\n                                attrs: { placeholder: \"0.00\" },\n                                on: { input: _vm.retailPriceValueChangeEvent },\n                                model: {\n                                  value: scope.row.retailPrice,\n                                  callback: function($$v) {\n                                    _vm.$set(scope.row, \"retailPrice\", $$v)\n                                  },\n                                  expression: \"scope.row.retailPrice\"\n                                }\n                              })\n                            ],\n                            1\n                          )\n                        ]\n                      }\n                    }\n                  ])\n                }),\n                _c(\"el-table-column\", {\n                  attrs: { prop: \"num\", label: \"数量\", align: \"center\" },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"default\",\n                      fn: function(scope) {\n                        return [\n                          _c(\"el-input-number\", {\n                            directives: [\n                              {\n                                name: \"enter-number\",\n                                rawName: \"v-enter-number\"\n                              }\n                            ],\n                            attrs: { min: 0, max: scope.row.availableQuantity },\n                            on: { change: _vm.currentNumberChange },\n                            model: {\n                              value: scope.row.num,\n                              callback: function($$v) {\n                                _vm.$set(scope.row, \"num\", $$v)\n                              },\n                              expression: \"scope.row.num\"\n                            }\n                          })\n                        ]\n                      }\n                    }\n                  ])\n                })\n              ],\n              1\n            )\n          ],\n          1\n        ),\n        _c(\"div\", { staticClass: \"money-div\" }, [\n          _c(\"span\", [\n            _vm._v(\n              \"商品总金额：￥\" +\n                _vm._s(_vm.shop_user.amount ? _vm.shop_user.amount : \"0.00\")\n            )\n          ]),\n          _c(\"div\", { staticClass: \"money-content\" }, [\n            _c(\"span\", [_vm._v(\"优惠金额：\")]),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.shop_user.preferentialRemarks,\n                  expression: \"shop_user.preferentialRemarks\"\n                }\n              ],\n              staticClass: \"input-price\",\n              attrs: { type: \"text\", placeholder: \"填写优惠项\" },\n              domProps: { value: _vm.shop_user.preferentialRemarks },\n              on: {\n                input: [\n                  function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(\n                      _vm.shop_user,\n                      \"preferentialRemarks\",\n                      $event.target.value\n                    )\n                  },\n                  _vm.preferentialRemarksInputChange\n                ]\n              }\n            }),\n            _c(\"span\", [_vm._v(\"￥\")]),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.shop_user.preferentialAmount,\n                  expression: \"shop_user.preferentialAmount\"\n                }\n              ],\n              staticClass: \"input-price\",\n              attrs: {\n                type: \"number\",\n                disabled: !_vm.shop_user.amount,\n                placeholder: \"0.00\"\n              },\n              domProps: { value: _vm.shop_user.preferentialAmount },\n              on: {\n                input: [\n                  function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(\n                      _vm.shop_user,\n                      \"preferentialAmount\",\n                      $event.target.value\n                    )\n                  },\n                  _vm.preferentialAmountInputValueChange\n                ]\n              }\n            })\n          ]),\n          _c(\"span\", [\n            _vm._v(\n              \"订单金额：￥\" +\n                _vm._s(\n                  _vm.shop_user.actualAmount ? _vm.shop_user.actualAmount : \"\"\n                )\n            )\n          ])\n        ])\n      ]),\n      _c(\n        \"div\",\n        { staticClass: \"price-msg\" },\n        [\n          _c(\"span\", [_vm._v(\"付款信息\")]),\n          _c(\n            \"el-form\",\n            {\n              ref: \"formInlineFrom\",\n              staticClass: \"demo-form-inline\",\n              attrs: { inline: true, model: _vm.shop_user }\n            },\n            [\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"实付金额：\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { type: \"number\", placeholder: \"0.00\" },\n                    on: { input: _vm.validAmountValueChangeEvent },\n                    model: {\n                      value: _vm.shop_user.validAmount,\n                      callback: function($$v) {\n                        _vm.$set(_vm.shop_user, \"validAmount\", $$v)\n                      },\n                      expression: \"shop_user.validAmount\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"支付流水号(支付单据)：\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { placeholder: \"请输入内容\" },\n                    model: {\n                      value: _vm.shop_user.orderTradeNo,\n                      callback: function($$v) {\n                        _vm.$set(_vm.shop_user, \"orderTradeNo\", $$v)\n                      },\n                      expression: \"shop_user.orderTradeNo\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"支付方式：\" } },\n                [\n                  _c(\"code-set\", {\n                    attrs: { code: \"COM003\" },\n                    model: {\n                      value: _vm.shop_user.paymentCode,\n                      callback: function($$v) {\n                        _vm.$set(_vm.shop_user, \"paymentCode\", $$v)\n                      },\n                      expression: \"shop_user.paymentCode\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\"el-form-item\", [\n                _c(\n                  \"div\",\n                  { staticClass: \"block\" },\n                  [\n                    _c(\"span\", { staticClass: \"demonstration\" }, [\n                      _vm._v(\"支付时间:\")\n                    ]),\n                    _c(\"el-date-picker\", {\n                      attrs: { type: \"date\", placeholder: \"选择日期\" },\n                      model: {\n                        value: _vm.shop_user.paymentTime,\n                        callback: function($$v) {\n                          _vm.$set(_vm.shop_user, \"paymentTime\", $$v)\n                        },\n                        expression: \"shop_user.paymentTime\"\n                      }\n                    })\n                  ],\n                  1\n                )\n              ])\n            ],\n            1\n          ),\n          _c(\"span\", { staticClass: \"other-msg\" }, [_vm._v(\"其他信息\")]),\n          _c(\n            \"div\",\n            { staticClass: \"recoment-input\" },\n            [\n              _c(\"span\", [_vm._v(\"推荐人：\")]),\n              _c(\"el-input\", {\n                staticClass: \"contentInput\",\n                attrs: { placeholder: \"请输入内容\" },\n                on: { input: _vm.recommendValueChange },\n                model: {\n                  value: _vm.shop_user.recommend,\n                  callback: function($$v) {\n                    _vm.$set(_vm.shop_user, \"recommend\", $$v)\n                  },\n                  expression: \"shop_user.recommend\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            { staticClass: \"remarks-textarea\" },\n            [\n              _c(\"span\", [_vm._v(\"订单备注：\")]),\n              _c(\"el-input\", {\n                staticClass: \"textarea\",\n                attrs: {\n                  type: \"textarea\",\n                  rows: 2,\n                  placeholder: \"请输入内容\",\n                  resize: \"none\"\n                },\n                on: { input: _vm.remarksValueChange },\n                model: {\n                  value: _vm.shop_user.remarks,\n                  callback: function($$v) {\n                    _vm.$set(_vm.shop_user, \"remarks\", $$v)\n                  },\n                  expression: \"shop_user.remarks\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            { staticClass: \"btn-div\" },\n            [\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\", size: \"small\" },\n                  on: { click: _vm.primaryBtnClick }\n                },\n                [_vm._v(\"确认\")]\n              ),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { plain: \"\", size: \"small\" },\n                  on: { click: _vm.plainBtnClick }\n                },\n                [_vm._v(\"取消\")]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}