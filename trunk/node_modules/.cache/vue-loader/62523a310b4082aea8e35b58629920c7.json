{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\components\\codeSet.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\components\\codeSet.vue","mtime":1572415127776},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport * as types from \"@/types/codeset\";\r\nimport { mapGetters, mapActions, mapMutations } from \"vuex\";\r\nexport default {\r\n  props: {\r\n    placeholder: \"请选择\",\r\n    value: {\r\n      default: null,\r\n      type: Number | String\r\n    },\r\n    code: {\r\n      required: true,\r\n      default: null\r\n    },\r\n    multiple: {\r\n      default: false,\r\n      type: Boolean\r\n    },\r\n    // 是否禁用\r\n    disabled: {\r\n      default: false,\r\n      type: Boolean\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      valModel: this.value,\r\n      options: []\r\n    };\r\n  },\r\n  watch: {\r\n    value(val) {\r\n      this.valModel = val;\r\n    },\r\n    valModel(val) {\r\n      this.$emit(\"input\", val);\r\n    }\r\n  },\r\n  created() {\r\n    if (this.code == undefined) console.error(\"param of code is not null\");\r\n    this.getList();\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      getCodes: types.FN_FILTER_DATA\r\n    }),\r\n    async getList() {\r\n      var res = await this.getCodes(this.code);\r\n      var list = res.codeItemList.sort((a, b) => (a.sort > b.sort ? 1 : 0));\r\n      this.options = list;\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["codeSet.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"codeSet.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <el-select\r\n    v-model=\"valModel\"\r\n    class=\"w-100\"\r\n    filterable\r\n    clearable\r\n    :multiple=\"multiple\"\r\n    :default-first-option=\"true\"\r\n    :placeholder=\"placeholder\"\r\n    :disabled=\"disabled\"\r\n  >\r\n    <el-option v-for=\"item in options\" :key=\"item.code\" :label=\"item.name\" :value=\"item.code\"></el-option>\r\n  </el-select>\r\n</template>\r\n<script>\r\nimport * as types from \"@/types/codeset\";\r\nimport { mapGetters, mapActions, mapMutations } from \"vuex\";\r\nexport default {\r\n  props: {\r\n    placeholder: \"请选择\",\r\n    value: {\r\n      default: null,\r\n      type: Number | String\r\n    },\r\n    code: {\r\n      required: true,\r\n      default: null\r\n    },\r\n    multiple: {\r\n      default: false,\r\n      type: Boolean\r\n    },\r\n    // 是否禁用\r\n    disabled: {\r\n      default: false,\r\n      type: Boolean\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      valModel: this.value,\r\n      options: []\r\n    };\r\n  },\r\n  watch: {\r\n    value(val) {\r\n      this.valModel = val;\r\n    },\r\n    valModel(val) {\r\n      this.$emit(\"input\", val);\r\n    }\r\n  },\r\n  created() {\r\n    if (this.code == undefined) console.error(\"param of code is not null\");\r\n    this.getList();\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      getCodes: types.FN_FILTER_DATA\r\n    }),\r\n    async getList() {\r\n      var res = await this.getCodes(this.code);\r\n      var list = res.codeItemList.sort((a, b) => (a.sort > b.sort ? 1 : 0));\r\n      this.options = list;\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.w-100{\r\n  width: 100%\r\n}\r\n</style>\r\n\r\n\r\n"]}]}