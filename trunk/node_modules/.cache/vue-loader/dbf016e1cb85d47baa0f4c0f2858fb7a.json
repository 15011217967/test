{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\components\\el-cascader-multi\\multi-cascader\\render-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\components\\el-cascader-multi\\multi-cascader\\render-list.vue","mtime":1572415127845},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  directives: {\r\n    toolTip: {\r\n      inserted: function (el) {\r\n        el.title = el.scrollWidth > el.offsetWidth ? el.innerText : ''\r\n      }\r\n    }\r\n  },\r\n  props: {\r\n    activeList: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    list: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    level: {\r\n      type: [Number, String]\r\n    },\r\n    labelKey: {\r\n      type: String,\r\n      default: 'label'\r\n    },\r\n    expandTrigger: {\r\n      type: String,\r\n      default: 'click'\r\n    },\r\n    onlyLast: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      oldValue: {\r\n        oldNode: null,\r\n        oldLevelIndex: null,\r\n        oldLevel: null\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    handleMouseOut () {\r\n      this.oldValue = {\r\n        oldNode: null,\r\n        oldLevelIndex: null,\r\n        oldLevel: null\r\n      }\r\n    },\r\n    // mouseEnter会一直触发，然后阻止了click事件，改为mouseMove事件\r\n    handleMouseMove (node, levelIndex, level) {\r\n      if (this.expandTrigger !== 'hover') {\r\n        return false\r\n      }\r\n      let { oldNode, oldLevelIndex, oldLevel } = this.oldValue\r\n      if (\r\n        (node === oldNode) &&\r\n        (oldLevelIndex === levelIndex) &&\r\n        (oldLevel === level)\r\n      ) {\r\n        return false\r\n      } else {\r\n        this.oldValue = {\r\n          oldNode: node,\r\n          oldLevelIndex: levelIndex,\r\n          oldLevel: level\r\n        }\r\n      }\r\n      this.$emit('handle-click', node, levelIndex, level)\r\n    },\r\n    handleClick (node, levelIndex, level) {\r\n      if (this.expandTrigger === 'click') {\r\n        this.$emit('handle-click', node, levelIndex, level)\r\n      }\r\n    },\r\n    handleCheck (v, node) {\r\n      node.checked = v\r\n      this.$emit('handle-check', node)\r\n    },\r\n    guid () {\r\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        let r = Math.random() * 16 | 0\r\n        let v = c === 'x' ? r : (r & 0x3 | 0x8)\r\n        return v.toString(16)\r\n      })\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["render-list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"render-list.vue","sourceRoot":"src/components/el-cascader-multi/multi-cascader","sourcesContent":["<template>\r\n  <ul>\r\n    <li class=\"li-style\"\r\n      v-for=\"(node, nodeIndex) in list\"\r\n      :key=\"guid(node)\"\r\n      @click=\"handleClick(node, nodeIndex, level)\"\r\n      :class=\"{'active-li': activeList[level - 1] === node.id}\"\r\n      @mousemove=\"handleMouseMove(node, nodeIndex, level)\"\r\n      @mouseout=\"handleMouseOut\"\r\n    >\r\n      <p class=\"li-label-style\" v-toolTip>\r\n        <span @click.stop v-show=\"!onlyLast || (onlyLast && node.isLeaf)\">\r\n          <el-checkbox\r\n          @change=\"handleCheck($event, node)\"\r\n          v-model=\"node.checked\"\r\n          :disabled=\"node.disabled\"\r\n          ></el-checkbox>\r\n        </span>\r\n        <span style=\"margin-left:5px\">{{node[labelKey]}}</span>\r\n        <i v-if=\"node.childNodes && node.childNodes.length > 0\" class=\"li-label-icon el-icon-arrow-right\"></i>\r\n      </p>\r\n    </li>\r\n  </ul>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  directives: {\r\n    toolTip: {\r\n      inserted: function (el) {\r\n        el.title = el.scrollWidth > el.offsetWidth ? el.innerText : ''\r\n      }\r\n    }\r\n  },\r\n  props: {\r\n    activeList: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    list: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    level: {\r\n      type: [Number, String]\r\n    },\r\n    labelKey: {\r\n      type: String,\r\n      default: 'label'\r\n    },\r\n    expandTrigger: {\r\n      type: String,\r\n      default: 'click'\r\n    },\r\n    onlyLast: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      oldValue: {\r\n        oldNode: null,\r\n        oldLevelIndex: null,\r\n        oldLevel: null\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    handleMouseOut () {\r\n      this.oldValue = {\r\n        oldNode: null,\r\n        oldLevelIndex: null,\r\n        oldLevel: null\r\n      }\r\n    },\r\n    // mouseEnter会一直触发，然后阻止了click事件，改为mouseMove事件\r\n    handleMouseMove (node, levelIndex, level) {\r\n      if (this.expandTrigger !== 'hover') {\r\n        return false\r\n      }\r\n      let { oldNode, oldLevelIndex, oldLevel } = this.oldValue\r\n      if (\r\n        (node === oldNode) &&\r\n        (oldLevelIndex === levelIndex) &&\r\n        (oldLevel === level)\r\n      ) {\r\n        return false\r\n      } else {\r\n        this.oldValue = {\r\n          oldNode: node,\r\n          oldLevelIndex: levelIndex,\r\n          oldLevel: level\r\n        }\r\n      }\r\n      this.$emit('handle-click', node, levelIndex, level)\r\n    },\r\n    handleClick (node, levelIndex, level) {\r\n      if (this.expandTrigger === 'click') {\r\n        this.$emit('handle-click', node, levelIndex, level)\r\n      }\r\n    },\r\n    handleCheck (v, node) {\r\n      node.checked = v\r\n      this.$emit('handle-check', node)\r\n    },\r\n    guid () {\r\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        let r = Math.random() * 16 | 0\r\n        let v = c === 'x' ? r : (r & 0x3 | 0x8)\r\n        return v.toString(16)\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n"]}]}