{"remainingRequest":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\OC\\user\\userRole_editor.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\src\\views\\OC\\user\\userRole_editor.vue","mtime":1572415125218},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":1558492720858},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558492728398},{"path":"C:\\Users\\EDZ\\Desktop\\研发项目\\vue-project\\trunk\\node_modules\\vue-loader\\lib\\index.js","mtime":1558492728890}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  name: \"user-role-editor\",\r\n  props: {\r\n    itemParam: {\r\n      type: Object\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      classDialogVisible: false,\r\n      data: [],\r\n      value: [],\r\n      renderFunc(h, option) {\r\n        return <span>{option.label}</span>;\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    handleChange(value, direction, movedKeys) {\r\n      //console.log(value, direction, movedKeys);\r\n    },\r\n    save() {\r\n      const requestData = new Object();\r\n      requestData.userId = this.itemParam.id;\r\n      requestData.roleIds = this.value;\r\n      this.request(this.api.user.userRole_saveDatas, requestData)\r\n        .then(data => {\r\n          console.log(\"操作成功\");\r\n          this.closeDialog();\r\n        })\r\n        .catch(msg => {\r\n          console.error(msg);\r\n        });\r\n    },\r\n    userRolePopupInit() {\r\n      this.classDialogVisible = true;\r\n      this.getData();\r\n    },\r\n    //获取列表数据\r\n    getData() {\r\n      var self = this;\r\n      const roleData = [];\r\n      const valueData = [];\r\n      self.request(this.api.user.role_list, { used: true }).then(data => {\r\n        let _data = data.data;\r\n        for (let i = 0; i < _data.length; i++) {\r\n          roleData.push({\r\n            key: _data[i].id,\r\n            label: _data[i].name,\r\n            disabled: false\r\n          });\r\n        }\r\n\r\n        //存在角色数据\r\n        if (_data.length > 0) {\r\n          const filtersData = new Object();\r\n          filtersData.userId = this.itemParam.id;\r\n          self.request(this.api.user.userRole_list, filtersData).then(data => {\r\n            let _data = data.data;\r\n            for (let i = 0; i < _data.length; i++) {\r\n              let roleId = _data[i].roleId;\r\n              roleData.forEach(item => {\r\n                if (item.key == roleId) {\r\n                  valueData.push(roleId);\r\n                }\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n      self.data = roleData;\r\n      self.value = valueData;\r\n    },\r\n    //关闭\r\n    closeDialog() {\r\n      this.classDialogVisible = false;\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["userRole_editor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"userRole_editor.vue","sourceRoot":"src/views/OC/user","sourcesContent":["<template>\r\n  <el-dialog\r\n    :title=\"itemParam.title\"\r\n    :visible.sync=\"classDialogVisible\"\r\n    class=\"alarmPopup\"\r\n    width=\"700px\"\r\n  >\r\n    <div style=\"text-align: center\">\r\n      <el-transfer\r\n        style=\"text-align: left; display: inline-block\"\r\n        v-model=\"value\"\r\n        filterable\r\n        :render-content=\"renderFunc\"\r\n        :titles=\"['角色列表', '已选']\"\r\n        :format=\"{\r\n        noChecked: '${total}',\r\n        hasChecked: '${checked}/${total}'\r\n      }\"\r\n        @change=\"handleChange\"\r\n        :data=\"data\"\r\n      ></el-transfer>\r\n    </div>\r\n    <div class=\"item-right\">\r\n      <el-button size=\"small\" @click=\"closeDialog()\">取消</el-button>\r\n      <el-button size=\"small\" @click=\"save()\" type=\"primary\">确定</el-button>\r\n    </div>\r\n  </el-dialog>\r\n</template>\r\n\r\n<style scoped>\r\n</style>\r\n\r\n<script>\r\nexport default {\r\n  name: \"user-role-editor\",\r\n  props: {\r\n    itemParam: {\r\n      type: Object\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      classDialogVisible: false,\r\n      data: [],\r\n      value: [],\r\n      renderFunc(h, option) {\r\n        return <span>{option.label}</span>;\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    handleChange(value, direction, movedKeys) {\r\n      //console.log(value, direction, movedKeys);\r\n    },\r\n    save() {\r\n      const requestData = new Object();\r\n      requestData.userId = this.itemParam.id;\r\n      requestData.roleIds = this.value;\r\n      this.request(this.api.user.userRole_saveDatas, requestData)\r\n        .then(data => {\r\n          console.log(\"操作成功\");\r\n          this.closeDialog();\r\n        })\r\n        .catch(msg => {\r\n          console.error(msg);\r\n        });\r\n    },\r\n    userRolePopupInit() {\r\n      this.classDialogVisible = true;\r\n      this.getData();\r\n    },\r\n    //获取列表数据\r\n    getData() {\r\n      var self = this;\r\n      const roleData = [];\r\n      const valueData = [];\r\n      self.request(this.api.user.role_list, { used: true }).then(data => {\r\n        let _data = data.data;\r\n        for (let i = 0; i < _data.length; i++) {\r\n          roleData.push({\r\n            key: _data[i].id,\r\n            label: _data[i].name,\r\n            disabled: false\r\n          });\r\n        }\r\n\r\n        //存在角色数据\r\n        if (_data.length > 0) {\r\n          const filtersData = new Object();\r\n          filtersData.userId = this.itemParam.id;\r\n          self.request(this.api.user.userRole_list, filtersData).then(data => {\r\n            let _data = data.data;\r\n            for (let i = 0; i < _data.length; i++) {\r\n              let roleId = _data[i].roleId;\r\n              roleData.forEach(item => {\r\n                if (item.key == roleId) {\r\n                  valueData.push(roleId);\r\n                }\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n      self.data = roleData;\r\n      self.value = valueData;\r\n    },\r\n    //关闭\r\n    closeDialog() {\r\n      this.classDialogVisible = false;\r\n    }\r\n  }\r\n};\r\n</script>"]}]}